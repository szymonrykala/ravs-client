{"version":3,"sources":["components/pages/protected/hooks/useTrigger.ts","components/pages/protected/components/DatesFooter.tsx","components/pages/protected/components/Charts/ChartOptionsBar.tsx","components/pages/protected/components/Charts/ChartsTab.tsx","components/pages/protected/components/Charts/ChartSection.tsx","components/pages/protected/components/Charts/Chart.tsx","services/ChartService.ts","components/pages/protected/components/Charts/ChartsContext/ChartsContextProvider.tsx","components/pages/protected/components/Charts/ChartsContext/useCharts.ts","contexts/QueryParamsContext/QueryParamsContextValue.tsx","contexts/QueryParamsContext/QueryParamsContextProvider.tsx","components/pages/protected/components/ListPagination.tsx","components/pages/protected/components/LazyInput.tsx","services/APIServiceError.ts","shared/path.ts","components/pages/protected/components/SelectButtonGroup.tsx","services/AuthService.ts","shared/components/LoadingView.tsx","auth/sessionProvider.tsx","contexts/NotificationContext/NotificationContextValue.ts","contexts/NotificationContext/NotificationContextProvider.tsx","shared/components/TabHeadLine.tsx","components/pages/protected/components/GenericLogsTab/LogRow.tsx","services/LogService.ts","shared/components/UniqueCodeButton/statusReducer.ts","shared/components/UniqueCodeButton/UniqueCodeButton.tsx","components/pages/public/ChangePassword/FormStep.tsx","components/pages/public/ChangePassword/Form.tsx","contexts/NotificationContext/useNotification.ts","components/pages/protected/hooks/useResolvedAccess.ts","shared/Theme/LinkBehavior.tsx","shared/Theme/theme.ts","shared/Theme/index.tsx","components/pages/protected/AccessPage/index.tsx","services/RoomService.ts","services/AddressService.ts","contexts/ResourceMapContext/ResourceMapContextProvider.tsx","contexts/ResourceMapContext/useResourceMap.ts","components/pages/protected/RoomPage/RoomContext/RoomContextProvider.tsx","components/pages/protected/RoomPage/RoomContext/useRoomContext.ts","components/pages/protected/components/GenericReservationsTab/ReservationsContext/useReservations.ts","components/pages/protected/components/DateTimePicker.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/EditModalForm.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/CopyModalForm.tsx","components/pages/protected/components/RfidForm.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/PingKeyModalForm.tsx","components/pages/protected/components/MoreVertMenu.tsx","components/pages/protected/components/ReservationViewModal/UserItem.tsx","components/pages/protected/components/ReservationViewModal/RoomItem.tsx","components/pages/protected/components/ReservationViewModal/DatesView.tsx","components/pages/protected/components/ReservationViewModal/ReservationViewModal.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ModalContext/ModalContextProvider.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ReservationsContextProvider.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsList/ReservationsListItem.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsList/ReservationsList.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ModalContext/useReservationModalContext.ts","components/pages/protected/components/CreateReservationModal/CreateReservationForm.tsx","components/pages/protected/components/CreateReservationModal/CreateReservationModal.tsx","components/pages/protected/components/GenericReservationsTab/ReservationTabBar.tsx","components/pages/protected/components/GenericReservationsTab/GenericReservationsTab.tsx","components/pages/protected/AddressPage/AddressContext/AddressContextProvider.tsx","components/pages/protected/AddressPage/AddressContext/useAddress.ts","components/pages/protected/AddressPage/components/Map.tsx","components/pages/protected/AddressPage/Forms/AddressEditForm.tsx","components/pages/protected/AddressPage/Forms/CreateBuildingForm.tsx","components/pages/protected/AddressPage/Forms/CreateAddressForm.tsx","components/pages/protected/AddressPage/components/AddressCard.tsx","services/BuildingService.ts","components/pages/protected/components/ScrollableList/ScrollableList.tsx","components/pages/protected/components/ScrollableList/ScrollableListItem.tsx","components/pages/protected/AddressPage/components/BuildingsList.tsx","components/pages/protected/AddressPage/AddressPage.tsx","components/pages/protected/BuildingPage/BuildingContext/BuildingContextProvider.tsx","components/pages/protected/BuildingPage/BuildingContext/useBuilding.ts","components/pages/protected/components/ImageUploadField.tsx","models/Room.ts","components/pages/protected/BuildingPage/Forms/BuildingEditForm.tsx","components/pages/protected/BuildingPage/Forms/CreateRoomForm.tsx","models/Metadata.ts","components/pages/protected/components/FavouriteButton.tsx","components/pages/protected/BuildingPage/components/BuildingCard.tsx","components/pages/protected/BuildingPage/components/RoomsList.tsx","components/pages/protected/BuildingPage/BuildingPage.tsx","components/pages/protected/HomePage/Favourites.tsx","components/pages/protected/HomePage/Notebook.tsx","components/pages/protected/HomePage/HomeReservations.tsx","components/pages/protected/HomePage/HomePage.tsx","components/pages/protected/RoomPage/Forms/RoomEditForm.tsx","components/pages/protected/RoomPage/Forms/RfidModalForm.tsx","components/pages/protected/RoomPage/components/YesNoIcon.tsx","components/pages/protected/RoomPage/components/RoomTableInfo.tsx","components/pages/protected/RoomPage/components/RoomCard.tsx","components/pages/protected/RoomPage/RoomPage.tsx","components/pages/protected/SettingsPage/index.tsx","components/pages/protected/UserPage/UserContext/UserContextProvider.tsx","components/pages/protected/UserPage/UserContext/useUser.tsx","components/pages/protected/UserPage/Forms/PasswordChangeModal.tsx","components/pages/protected/UserPage/Forms/EditUserForm.tsx","components/pages/protected/UserPage/components/UserCard.tsx","components/pages/protected/UserPage/UserPage.tsx","components/pages/protected/UsersPage/UsersContext/UsersContextProvider.tsx","components/pages/protected/UsersPage/components/UsersView/SearchBar.tsx","components/pages/protected/UsersPage/components/UsersView/UsersList/UserListItem.tsx","components/pages/protected/UsersPage/components/UsersView/UsersList/UsersList.tsx","components/pages/protected/UsersPage/UsersContext/useUsers.ts","components/pages/protected/UsersPage/components/UsersView/UsersView.tsx","components/pages/protected/UsersPage/components/UsersCharts.tsx","components/pages/protected/UsersPage/UsersPage.tsx","components/pages/protected/index.tsx","components/pages/public/PublicPages.tsx","components/pages/index.tsx","components/Footer/Copyrights.tsx","components/Footer/Links.tsx","components/Footer/index.tsx","components/Navigation/Drawer/MainDrawerList.tsx","components/Navigation/Drawer/DrawerPanel.tsx","components/Navigation/Drawer/AvatarView.tsx","components/Navigation/Drawer/ResourcesList/CollapseableListItem.tsx","components/Navigation/Drawer/ResourcesList/RoomListItem.tsx","components/Navigation/Drawer/ResourcesList/ResourceList.tsx","components/Navigation/Drawer/CreateAddressButton.tsx","components/Navigation/Drawer/index.tsx","components/Navigation/NavigationBar/AccountMenu.tsx","components/Navigation/NavigationBar/index.tsx","components/Navigation/Navigation.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx","components/pages/protected/components/GenericModal.tsx","shared/utils.ts","auth/useSession.ts","services/ImageService.ts","shared/components/FormGridContainer.tsx","contexts/QueryParamsContext/userQueryParams.ts","services/Service.ts","services/UserService.ts","shared/components/Loading.tsx","services/MetadataService.ts","components/pages/protected/components/SmallCard.tsx","services/ReservationService.ts","services/StorageService.ts","components/pages/protected/components/GenericLogsTab/index.tsx","components/pages/protected/components/SwipeableTabs/SwipeablePanel.tsx","components/pages/protected/components/SwipeableTabs/SwipeableTabs.tsx","components/pages/protected/components/DeleteModal/DeleteModal.tsx"],"names":["useTrigger","timeInterval","React","useState","trigger","setTrigger","useEffect","int","setInterval","old","clearInterval","DatesFooter","props","color","variant","fontSize","displayDate","model","_created","_updated","predefinedButtons","name","value","ChartOptionsBar","useQueryParams","queryParams","setQueryParams","from","Date","to","customDates","setCustomDates","handleButtonChange","useCallback","buttonValue","a","handleSubmitCustomDate","evt","preventDefault","toDateString","Stack","direction","spacing","Box","Typography","SelectButtonGroup","onChange","buttons","component","onSubmit","pb","MobileDatePicker","label","inputFormat","renderInput","params","TextField","size","Button","type","memo","ChartsTab","QueryParamsContext","default","ChartsContext","children","ChartSection","defaultOpen","open","setOpen","sx","display","alignItems","justifyContent","id","title","replace","IconButton","onClick","Collapse","in","timeout","Grid","container","Divider","weekDays","Chart","primaryAxis","useMemo","getValue","item","resolveDay","Number","x","min","secondaryAxes","y","position","elementType","minDomainLength","hardMin","scaleType","showDatumElements","data","obj","map","forEach","index","key","push","xKey","xs","lg","fullWidth","length","maxHeight","height","minHeight","width","options","ChartService","urlParams","endp","url","window","location","toString","Object","keys","entries","path","newPath","includes","addressId","buildingId","roomId","userId","this","get","preparePath","Service","chartsContext","createContext","ChartsContextProvider","notify","useNotification","useParams","refresh","user","useSession","chartsData","setData","load","fetchData","resp","description","Provider","useCharts","useContext","queryParamsContextDefaults","q","param","queryParamsContext","QueryParamsContextProvider","keyName","defaultValue","StorageService","read","save","ListPagination","handlePageChange","event","currentPage","handleCountChange","child","itemsOnPage","target","onPageList","num","flexWrap","flexDirection","alignContent","count","pagesCount","page","maxWidth","labelId","LazyInput","str","setStr","handleSearchFieldChange","clearTimeout","timer","setTimeout","placeholder","p","bgcolor","inputProps","APIServiceError","error","statusCode","Error","paths","PUBLIC","HOME","LOGIN","REGISTER","ACTIVATE","REMIND_PASSWORD","ACCESS","SETTINGS","USERS","USER","MY_PROFILE","INFRASTRUCTURE","ADDRESS","BUILDING","ROOM","dynamicPaths","toAddress","toBuilding","toRoom","toUser","handleChange","renderedButtons","control","row","AuthService","post","email","password","response","localStorage","setItem","_TOKEN_NAME","removeItem","Boolean","getItem","hasToken","LoadingView","Backdrop","zIndex","theme","drawer","backgroundColor","text","CircularProgress","sessionContext","SessionProvider","loading","setLoading","setUser","setUpUser","setIdentity","MetadataService","metadata","ReservationService","LogService","ImageService","UserService","checkIfUserHasSession","hasSession","getMe","sessionUser","WELCOME","login","message","code","logout","NotificationContextDefault","notificationContext","NotificationContextProvider","setMessage","severity","setSeverity","setComponent","closeSnack","reason","setSnack","_severity","componentCallback","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","TabHeadLine","subtitle","mt","LogRow","hover","borderBottom","scope","align","endpoint","Math","fround","time","toPrecision","style","paddingBottom","paddingTop","colSpan","unmountOnExit","margin","RouterLink","method","JSON","stringify","parse","payload","undefined","statusReducer","state","action","success","UniqueCodeButton","useReducer","result","dispatchResult","handleSubmit","generateKey","ml","FormStep","Form","newPassword","e","changePassword","onSuccess","required","autoComplete","autoFocus","mb","Link","href","defaultAccess","useResolvedAccess","access","owner","accessAdmin","premisesAdmin","keysAdmin","reservationsAdmin","reservationsAbility","logsAdmin","statsViewer","LinkBehavior","ref","other","createTheme","palette","primary","indigo","secondary","dark","main","light","background","paper","shape","borderRadius","components","MuiCssBaseline","styleOverrides","body","scrollbar","track","thumb","active","MuiTextField","defaultProps","MuiSelect","MuiButton","MuiLink","MuiButtonBase","LinkComponent","MuiSvgIcon","MuiIconButton","Theme","ThemeProvider","LazyAccessPage","lazy","AccessPage","Suspense","fallback","Loading","RoomService","_path","delete","patch","AddressService","resourceMapContext","ResourceMapContextProvider","resourceMap","setResources","loaded","setLoaded","loadResourceMap","getResourcesMap","getRoomLink","addr","buildings","bld","rooms","flat","find","allRooms","allBuildings","allAddresses","getBuildingLink","reloadMap","useResourceMap","RoomContext","RoomContextProvider","room","setRoom","useLayoutEffect","setPath","getRoom","getView","setOccupied","occupied","updateRoom","update","building","deleteRoom","remove","updateRFIDTag","updateRFID","RFIDTag","deleteRFIDTag","useRoomContext","useReservations","reservationsContext","DateTimePicker","newValue","MobileDateTimePicker","minDate","EditModalForm","updateReservation","closeForm","reservation","handleDateChange","console","log","toLocaleString","plannedStart","GenericModal","FormGridContainer","onCancel","multiline","maxRows","sm","fromLocaleDateTimeString","plannedEnd","FormControl","InputLabel","Select","MenuItem","CopyModalForm","createReservation","dates","setDates","copyDates","setCopyDates","createCalls","date","Promise","all","processed","handleDeleteCopyDate","splice","assign","setDate","dateTime","handleAddDate","border","borderColor","padding","overflow","textAlign","pl","HiddenInput","styled","left","RfidForm","setText","setColor","input","useRef","onScan","handleDecline","current","focus","alignSelf","headline","bodyText","startIcon","PingKeyModalForm","pingKeyForReservation","handleKeyScan","reservationId","MoreVertMenu","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","Menu","MenuListProps","PaperProps","minWidth","opt","ListItemIcon","icon","UserItem","ListItem","button","ListItemAvatar","Avatar","src","getLink","image","alt","surname","ListItemText","RoomItem","roomLink","roomType","DatesView","rowGap","columnGap","Chip","TextSection","ReservationViewModal","myId","deleteReservation","deleteModalOpen","setDeleteModalOpen","editModalOpen","setEditModalOpen","nfcModalOpen","setNFCModalOpen","copyModalOpen","setCopyModalOpen","onDelete","menuOptions","unshift","Edit","DeleteModal","objectName","justifySelf","actualStart","actualEnd","List","ReservationModalViewContext","showReservation","ModalContextProvider","reservations","modalOpen","setModalOpen","setReservationId","ReservationsContextProvider","roomContext","setReservations","pathname","getReservations","pagination","search","triggerReload","pingKey","createOne","filter","field","toUTCString","MemAvatar","img","ReservationListItem","resolveStatus","ReservationsList","renderedList","CreateReservationForm","start","end","now","CreateReservationModal","ReservationTabBar","createReservationModalOpen","setCreateReservationModalOpen","isDate","customDate","setCustomDate","toISOString","md","GenericReservationsTab","addressContext","AddressContextProvider","address","setAddress","getAddress","getCurrentOne","getBuildingsInAddress","getBuildings","updateAddress","deleteAddress","useAddress","StyledIframe","Map","street","number","town","country","base","URL","URLSearchParams","ie","z","iwloc","output","frameBorder","AddressEditForm","close","postalCode","CreateBuildingForm","handleCreateBuilding","openTime","closeTime","String","timeFormat","format","MobileTimePicker","CreateAddressForm","create","AddressCard","Card","elevation","CardHeader","subheader","CardMedia","CardContent","BuildingService","ScrollableList","onAddItem","ScrollableListItem","link","py","BuildingsList","createBuildingModalOpen","setCreateBuildingModalOpen","setBuildings","createBuilding","renderedBuildings","SmallCard","LazyAddressCharts","AddressCharts","AddressPage","pages","arr","GenericLogsTab","SwipeableTabs","tabs","buildingContext","BuildingContextProvider","setBuilding","getBuilding","getRoomsInBuilding","updateBuilding","deleteBuilding","useBuilding","Input","StyledImage","ImageUploadField","useLocation","uploadedImage","setUploadedImage","upload","onUpload","handleImageUpload","files","handleRemoveImgae","createObjectURL","htmlFor","accept","RoomTypes","timeToDate","split","h","m","BuildingEditForm","handleTime","handleSelectChange","CreateRoomForm","handleCreateRoom","LECTURE","seatsCount","floor","values","val","FavType","FavouriteButton","marked","setMarked","isFavourite","addToFavourites","removeFavourite","addFavourite","BuildingView","Building","RoomsList","createRoomModalOpen","setCreateRoomModalOpen","setRooms","createRoom","renderedRooms","LazyRoomOrBuildingChartTab","RoomOrBuildingChartTab","BuildingPage","getCorrectListItem","Room","Favourites","favourites","handleRemoveFavourite","disablePadding","Notebook","notes","err","InputBase","minRows","mr","HomeReservations","HomePage","RoomEditForm","checked","FormControlLabel","labelPlacement","Switch","blocked","RfidModalRorm","YesNoIcon","rest","RoomTableInfo","deleteTag","rfidTagModalOpen","setRfidTagModalOpen","tableRows","rows","RenderedRows","TableRow","TableCell","fontWeight","TableContainer","Table","TableHead","TableBody","RoomCard","RoomPage","LazySettingsPage","SettingsPage","userContext","UserContextProvider","session","deleteUser","updateUser","useUser","PasswordChangeModal","EditUserForm","UserCard","editModal","setEditModal","passModal","setPassModal","deleteModal","setDeleteModal","lastActivity","LazyUserCharts","UserCharts","UserPage","usersContext","UsersContextProvider","users","setUsers","getUsers","deleted","activated","SearchBar","UserListItem","UsersList","UsersView","UsersCharts","Charts","ActualLoader","UsersPage","ProtectedPages","Activation","Login","Register","ChangePassword","Welcome","PublicPages","exact","tabStyle","Tabs","Copyright","LinkItem","Links","linksList","list","links","Container","pt","Footer","navListItems","HomeIcon","AccountIcon","settingsItem","SettingsIcon","accessLinkItem","VerifiedUserIcon","usersLinkItem","PeopleIcon","MainListItem","MainDrawerList","DrawerPanel","toggleOpen","role","onKeyDown","AvatarView","ev","stopPropagation","CollapseableListItem","OPENED_NAME","handleOpen","ListItemButton","ExpandLess","ExpandMore","RoomListItem","ResourcesList","rendered","roomEntry","CreateAddressButton","formOpen","setFormOpen","AppDrawer","Drawer","ModalProps","keepMounted","anchor","AccountMenu","linksComp","i","transformOrigin","NavigationBar","handleMenu","flexGrow","AppBar","Toolbar","toggleDrawer","edge","fontFamily","textDecoration","Navigation","shouldWork","App","LocalizationProvider","dateAdapter","AdapterDateFns","locale","plLocale","CssBaseline","className","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","ReactDOM","render","StrictMode","document","getElementById","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","closeAfterTransition","BackdropComponent","BackdropProps","boxShadow","dateString","Intl","DateTimeFormat","dateStyle","timeStyle","getDate","d","s","formBody","_BASE_URL","cache","mode","authToken","json","debug","ok","slice","formData","FormData","append","sendImage","_userId","fetchObject","query","_fetch","accessId","STORAGE_NAME","sort","b","titleComponent","Colors","mess","localPreparPath","nowTimestamp","now_minus15","now_plus15","emitStatus","warning","info","inert","end_plus15","btoa","encodeURI","codeName","LazyGenericLogsTab","SwipeablePanel","hidden","useTheme","tabIndex","setTabIndex","handleTabChange","handleChangeIndex","renderedTabs","Tab","a11yProps","renderedTabPanels","dir","allowScrollButtonsMobile","indicatorColor","axis","onChangeIndex","setInput","handleConfirm"],"mappings":"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","file":"static/js/main.353035ee.chunk.js","sourcesContent":["import React from \"react\";\n\n\nexport default function useTrigger(timeInterval: number) {\n    const [trigger, setTrigger] = React.useState<boolean>();\n\n\n    React.useEffect(() => {\n        const int = setInterval(() => setTrigger(old => !old), timeInterval);\n\n        return () => clearInterval(int);\n    }, [\n        timeInterval\n    ]);\n\n    return trigger;\n}","import Typography from \"@mui/material/Typography\";\nimport Model from \"../../../../models/Model\";\nimport { displayDate } from \"../../../../shared/utils\";\n\n\n\ninterface DatesFooterProps {\n    model: Model\n}\n\nexport default function DatesFooter(props: DatesFooterProps) {\n    return (\n        <Typography color=\"text.secondary\" variant='body2' fontSize='smaller'>\n            Utworzono: {displayDate(props.model._created)}<br />\n            Ostatnia aktualizacja: {displayDate(props.model._updated)}\n        </Typography>\n    )\n}","import { Box, Button, Stack, TextField, Typography } from \"@mui/material\";\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport React from \"react\";\nimport SelectButtonGroup, { SelectButtonInterface } from \"../../components/SelectButtonGroup\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { ChartsQueryData } from \"../../../../../services/ChartService\";\n\n\nconst predefinedButtons: SelectButtonInterface[] = [\n    { name: \"tydzień\", value: \"1 week ago\" },\n    { name: \"miesiąc\", value: \"1 month ago\" },\n    { name: \"6 miesięcy\", value: \"6 month ago\" },\n    { name: \"rok\", value: \"1 year ago\" },\n];\n\n\n\nfunction ChartOptionsBar() {\n    const { queryParams, setQueryParams } = useQueryParams<ChartsQueryData>();\n\n    const [customDates, setCustomDates] = React.useState<{ from: Date, to: Date }>({\n        from: new Date(),\n        to: new Date()\n    });\n\n    const handleButtonChange = React.useCallback(async (buttonValue: string) => {\n        setQueryParams(old => ({\n            ...old,\n            from: buttonValue,\n            to: \"1 hour\"\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n\n    const handleSubmitCustomDate = React.useCallback(async (evt: any) => {\n        evt.preventDefault();\n\n        setQueryParams({\n            from: customDates.from?.toDateString(),\n            to: customDates.to?.toDateString()\n        });\n    }, [\n        customDates.from,\n        customDates.to,\n        setQueryParams\n    ]);\n\n\n    return (\n        <Stack direction=\"column\" spacing={2}>\n            <Box>\n                <Typography variant=\"subtitle2\">\n                    Zakres czasu:\n                </Typography>\n                <SelectButtonGroup\n                    onChange={handleButtonChange}\n                    buttons={predefinedButtons}\n                    value={queryParams.from}\n                />\n\n            </Box>\n            <Box component=\"form\" onSubmit={handleSubmitCustomDate}>\n                <Typography variant=\"subtitle2\" pb='5px'>\n                    Zakres niestandardowy:\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                    <MobileDatePicker\n                        label=\"od\"\n                        inputFormat=\"yyyy-MM-dd\"\n                        value={customDates.from}\n                        onChange={(value) => setCustomDates({ ...customDates, from: value ?? new Date() })}\n                        renderInput={(params) => <TextField {...params} size='small' />}\n                    />\n                    <MobileDatePicker\n                        label=\"do\"\n                        inputFormat=\"yyyy-MM-dd\"\n                        value={customDates.to}\n                        onChange={(value) => setCustomDates({ ...customDates, to: value ?? new Date() })}\n                        renderInput={(params) => <TextField {...params} size='small' />}\n                    />\n                    <Button\n                        type=\"submit\"\n                        variant={queryParams?.from === customDates.from.toDateString() ? 'contained' : 'outlined'}\n                    >\n                        OK\n                    </Button>\n                </Stack>\n            </Box>\n        </Stack>\n    );\n}\n\nexport default React.memo(ChartOptionsBar);","import Stack from \"@mui/material/Stack\";\nimport React from \"react\";\nimport { QueryParamsContext } from \"../../../../../contexts/QueryParamsContext\";\nimport { ChartsQueryData } from \"../../../../../services/ChartService\";\nimport ChartOptionsBar from \"./ChartOptionsBar\";\nimport { ChartsContext } from \"./ChartsContext\";\n\n\ninterface GenericChartsTabProps {\n    children: React.ReactNode[] | React.ReactNode\n}\n\nfunction ChartsTab(props: GenericChartsTabProps) {\n    return (\n        <QueryParamsContext\n            name=\"charts-query-params\"\n            default={{ from: '1 month ago', to: '1 hour' } as ChartsQueryData}\n        >\n            <ChartsContext>\n                <Stack spacing={4}>\n                    <ChartOptionsBar />\n                    {props.children}\n                </Stack>\n            </ChartsContext>\n        </QueryParamsContext>\n    )\n}\n\nexport default React.memo(ChartsTab);","import Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport IconButton from \"@mui/material/IconButton\";\nimport { Divider } from \"@mui/material\";\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\n\n\ninterface ChartSectionProps {\n    title: string,\n    children: React.ReactNode[] | React.ReactNode,\n    defaultOpen?: boolean,\n    onClick?: () => void\n}\n\n\nexport default function ChartSection(props: ChartSectionProps) {\n    const [open, setOpen] = React.useState<boolean>(props?.defaultOpen ? true : false);\n\n    return (\n        <Box>\n            <Box sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n            }}>\n                <Typography variant='h6' component='h5' id={props.title.replace(' ', '_')}>\n                    {props.title}\n                    <IconButton onClick={() => setOpen(old => !old)}>\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </Typography>\n                <IconButton\n                    onClick={props.onClick}\n                >\n                    <PictureAsPdfIcon />\n                </IconButton>\n            </Box>\n            <Collapse in={open} timeout=\"auto\" >\n                <Grid container spacing={2}>\n                    {props.children}\n                </Grid>\n                <br />\n                <Divider />\n            </Collapse>\n        </Box>\n    );\n}","import Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { AxisOptions } from \"react-charts\";\nimport { Chart as ReactChart } from 'react-charts'\nimport BarChartIcon from '@mui/icons-material/BarChart';\n\n\n\nexport const weekDays = [\n    'Niedziela',\n    'Poniedziałek',\n    'Wtorek',\n    'Środa',\n    'Czwartek',\n    'Piątek',\n    'Sobota',\n];\n\n\ninterface ChartSeries {\n    x: any\n    y: number,\n}\n\n\ninterface ChartProps<T> {\n    data: T[],\n    title: string,\n    fullWidth?: boolean,\n    resolveDay?: boolean\n    xKey: keyof T,\n    y: { label: string, key: keyof T }[]\n}\n\n\nexport default function Chart<DataType>(props: ChartProps<DataType>) {\n\n    const primaryAxis = React.useMemo((): AxisOptions<ChartSeries> => ({\n        getValue: item => props.resolveDay ? weekDays[Number(item.x)] : item.x,\n        min: 0\n    }), [props.resolveDay]);\n\n\n    const secondaryAxes = React.useMemo((): AxisOptions<ChartSeries>[] => [\n        {\n            getValue: item => item.y,\n            position: 'left',\n            elementType: 'bar',\n            minDomainLength: 15,\n            hardMin: 0,\n            scaleType: 'linear',\n            showDatumElements: true\n        }\n    ], []);\n\n\n    const data = React.useMemo(() => {\n        const obj: { label: string, data: ChartSeries[] }[] = props.y.map(({ label }) => ({ label: label, data: [] }))\n\n        props.data.forEach((item) => {\n            props.y.forEach(({ key }, index) => {\n                obj[index].data.push({\n                    x: item[props.xKey],\n                    y: Number(item[key]),\n                });\n            })\n        })\n        return obj;\n    }, [\n        props.y,\n        props.xKey,\n        props.data,\n    ]);\n\n\n    return (\n        <Grid item\n            xs={12}\n            lg={props.fullWidth ? 12 : 6}\n        >\n            <Stack direction='row' spacing={1} alignItems='center'>\n                <Typography variant=\"body2\" component='h4' color='text.secondary'>\n                    {props.title}\n                </Typography>\n                <BarChartIcon color='primary' />\n\n            </Stack>\n            {props.data.length === 0 ?\n                <Typography component='p' color='text.secondary'>\n                    Brak danych do nakreślenia wykresu\n                </Typography>\n                : <Box\n                    sx={{\n                        maxHeight: '400px',\n                        height: '40vh',\n                        minHeight: '300px',\n                        width: '100%',\n                    }}>\n\n                    <ReactChart\n                        options={{\n                            data,\n                            primaryAxis,\n                            secondaryAxes,\n                        }}\n                    />\n                </Box>}\n        </Grid>\n    )\n}","import { BuildingOrRoomChartsData, BuildingsOrRoomsChartsData, LogsChartsData, UserChartsData } from \"../models/Stats\";\nimport { AppURLParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface ChartsQueryData {\n    from: string,\n    to: string\n}\n\n\n\nexport type ChartsData = (\n    BuildingOrRoomChartsData |\n    BuildingsOrRoomsChartsData |\n    LogsChartsData |\n    UserChartsData\n);\n\n\nclass ChartService extends Service {\n\n    protected preparePath(urlParams: AppURLParams): string {\n        let endp = '';\n        let url = window.location.toString();\n\n        const map = {\n            '/settings': '/requests',\n            '/users': '/users'\n        }\n\n        if (Object.keys(urlParams).length === 0) {\n            for (const [path, newPath] of Object.entries(map)) {\n                if (url.includes(path)) {\n                    endp = newPath;\n                }\n            }\n        } else if ('addressId' in urlParams) {\n            endp += `/addresses/${urlParams.addressId}/buildings`;\n\n            if ('buildingId' in urlParams) {\n                endp += `/${urlParams.buildingId}`;\n\n                if ('roomId' in urlParams) endp += `/rooms/${urlParams.roomId}`;\n            }\n        } else if ('userId' in urlParams) {\n            endp += `/users/${urlParams.userId}`\n        }\n        return endp;\n    }\n\n    public fetchData(urlParams: AppURLParams, queryParams: ChartsQueryData) {\n        return this.get(this.preparePath(urlParams) + '/stats', queryParams);\n    }\n\n\n\n}\n\nexport default new ChartService();","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../../auth/useSession\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport ChartService, { ChartsData, ChartsQueryData } from \"../../../../../../services/ChartService\";\nimport { AppURLParams } from \"../../../../../../services/interfaces\";\nimport useTrigger from \"../../../hooks/useTrigger\";\n\n\nexport const chartsContext: any = React.createContext(null);\n\n\n\ninterface ChartsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\n\nexport default function ChartsContextProvider(props: ChartsContextProviderProps) {\n    const notify = useNotification();\n    const urlParams = useParams<AppURLParams>();\n    const refresh = useTrigger(60_000);\n\n    const { user } = useSession();\n    const { queryParams } = useQueryParams<ChartsQueryData>();\n\n    const [chartsData, setData] = React.useState<ChartsData | {}>({});\n\n\n    const load = React.useCallback(async () => {\n        let params = urlParams;\n        if ('userId' in urlParams && urlParams.userId === 'me') {\n            params = { userId: `${user?.id}` }\n        }\n\n        try {\n            const resp = await ChartService.fetchData(params, queryParams);\n            setData(resp.data as ChartsData);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setData({});\n        }\n    }, [\n        notify,\n        queryParams,\n        urlParams,\n        user?.id,\n    ]);\n\n    React.useEffect(() => {\n        load();\n    }, [\n        load,\n        refresh\n    ]);\n\n\n    if (Object.keys(chartsData).length === 0) return null;\n\n    return (\n        <chartsContext.Provider value={{\n            chartsData\n        }}>\n            {props.children}\n        </chartsContext.Provider>\n    );\n}","import React from \"react\";\nimport { chartsContext } from \"./ChartsContextProvider\";\nimport ChartsContextValue from \"./ChartsContextValue\";\n\n\nexport default function useCharts<T>() {\n    return React.useContext(chartsContext) as ChartsContextValue<T>;\n}","\nexport default interface QueryParamsContextValue<T> {\n    setQueryParams: React.Dispatch<React.SetStateAction<T>>\n    queryParams: T,\n}\n\n\nexport const queryParamsContextDefaults = {\n    queryParams: { q: 1 },\n    setQueryParams: (param: { q: number }) => { }\n}","import React from \"react\";\nimport StorageService from \"../../services/StorageService\";\nimport QueryParamsContextValue, { queryParamsContextDefaults } from \"./QueryParamsContextValue\";\n\n\nexport const queryParamsContext = React.createContext<QueryParamsContextValue<any>>(queryParamsContextDefaults);\n\n\nfunction initQueryParams<T>(keyName: string, defaultValue: T): T {\n    const confString = StorageService.read(keyName);\n    if (confString) {\n        return confString;\n    }\n    return defaultValue;\n};\n\n\ninterface QueryParamsContextProviderProps<T> {\n    default: T,\n    name: string,\n    children: React.ReactNode[] | React.ReactNode\n}\n\n\nexport default function QueryParamsContextProvider<T>(props: QueryParamsContextProviderProps<T>) {\n\n    const [queryParams, setQueryParams] = React.useState<T>(\n       ()=> initQueryParams<T>(props.name, props.default)\n    );\n\n    React.useEffect(() => {\n        StorageService.save(props.name, queryParams);\n    }, [queryParams, props.name]);\n\n    if(!queryParams) return null;\n\n    return (\n        <queryParamsContext.Provider value={{ queryParams, setQueryParams }}>\n            {props.children}\n        </queryParamsContext.Provider>\n    );\n}","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent } from '@mui/material';\nimport { useQueryParams } from '../../../../contexts/QueryParamsContext';\nimport { APIPagination } from '../../../../services/interfaces';\n\n\nexport default function ListPagination() {\n    const { queryParams, setQueryParams } = useQueryParams<APIPagination>();\n\n\n    const handlePageChange = React.useCallback((event: React.ChangeEvent<unknown>, value: number) => {\n        setQueryParams(old => ({\n            ...old,\n            currentPage: value\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n    const handleCountChange = React.useCallback((event: SelectChangeEvent<number>, child: React.ReactNode) => {\n        setQueryParams(old => ({\n            ...old,\n            itemsOnPage: Number(event.target.value)\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n    const onPageList = React.useMemo(() =>\n        [5, 10, 15, 20].map(num => <MenuItem key={num} value={num}>{num}</MenuItem>)\n        , []);\n\n    return (\n        <Stack spacing={2} sx={{\n            flexWrap: 'wrap',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center'\n        }}>\n            <Pagination\n                count={queryParams.pagesCount}\n                size='small'\n                page={queryParams.currentPage}\n                onChange={handlePageChange}\n            />\n            <FormControl fullWidth sx={{ maxWidth: '100px' }}>\n                <InputLabel id=\"items-on-page-label\">Na stronie</InputLabel>\n                <Select\n                    size='small'\n                    labelId=\"items-on-page-label\"\n                    id=\"items-on-page\"\n                    label=\"Na stronie\"\n                    value={queryParams.itemsOnPage ?? 5}\n                    onChange={handleCountChange}\n                >\n                    {onPageList}\n                    <MenuItem value={10000}>wszystko</MenuItem>\n                </Select>\n            </FormControl>\n        </Stack>\n    );\n}\n","import InputBase from \"@mui/material/InputBase\";\nimport { SxProps } from \"@mui/system\";\nimport React from \"react\";\n\n\ninterface SimpleInputProps {\n    value: string,\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    label: string,\n    name: string,\n    sx?: SxProps\n}\n\nexport default function LazyInput({\n    value,\n    onChange,\n    label,\n    name,\n    sx,\n}: SimpleInputProps) {\n    const [trigger, setTrigger] = React.useState<any>();\n    const [str, setStr] = React.useState<string>(value);\n\n\n    const handleSearchFieldChange = React.useCallback((evt) => {\n        setStr(evt.target.value);\n        clearTimeout(trigger);\n\n        let timer = setTimeout(() => {\n            onChange(evt);\n        }, 1000);\n        setTrigger(timer);\n    }, [\n        trigger,\n        onChange,\n    ]);\n\n\n    return <InputBase\n        name={name}\n        value={str}\n        onChange={handleSearchFieldChange}\n        placeholder={label}\n        sx={{\n            width: '100%',\n            maxWidth: '600px',\n            p: 1,\n            bgcolor: 'background.default',\n            ...sx\n        }}\n        inputProps={{ 'aria-label': label }}\n    />;\n}","import { ResponseData } from \"./Service\";\n\n\n\n\nexport default class APIServiceError extends Error {\n\n    private data: ResponseData;\n\n    get code() {\n        return this.data.statusCode;\n    }\n\n    get description() {\n        return this.data.error?.description;\n    }\n\n    constructor(data: ResponseData) {\n        super(data.error?.description);\n        this.data = data;\n    }\n}\n","\ninterface AppPathsInterface {\n    readonly [index: string]: string\n    PUBLIC: string,\n    LOGIN: string,\n    REGISTER: string,\n    ACTIVATE: string,\n    REMIND_PASSWORD: string,\n\n    HOME: string,\n    SETTINGS: string,\n    MY_PROFILE: string,\n    INFRASTRUCTURE: string,\n    ADDRESS: string,\n    BUILDING: string,\n    ROOM: string,\n    USERS: string,\n    ACCESS: string,\n};\n\n\ninterface AppDynamicPaths {\n    readonly [indes: string]: (...params: any) => string,\n\n    toRoom: (addressId: number, buildingId: number, roomId: number) => string,\n    toBuilding: (addressId: number, buildingId: number) => string,\n    toAddress: (addressId: number) => string,\n    toUser: (userId: number) => string\n}\n\n\nconst paths: { [index: string]: string } = {\n    PUBLIC: '/public',\n    HOME: '/app',\n}\n\n\npaths.LOGIN = paths.PUBLIC + '/login';\npaths.REGISTER = paths.PUBLIC + '/register';\npaths.ACTIVATE = paths.PUBLIC + '/activate';\npaths.REMIND_PASSWORD = paths.PUBLIC + '/passwd';\n\npaths.ACCESS = paths.HOME + '/accesses'\npaths.SETTINGS = paths.HOME + '/settings';\n\npaths.USERS = paths.HOME + '/users';\npaths.USER = paths.USERS + '/:userId';\npaths.MY_PROFILE = paths.USERS + '/me';\npaths.INFRASTRUCTURE = paths.HOME + '/infrastructure';\npaths.ADDRESS = paths.HOME + '/addresses/:addressId';\npaths.BUILDING = paths.ADDRESS + '/buildings/:buildingId';\npaths.ROOM = paths.BUILDING + '/rooms/:roomId';\n\n\nexport const dynamicPaths: AppDynamicPaths = {\n    toAddress: (addressId: number) => `/app/addresses/${addressId}`,\n    toBuilding: (addressId: number, buildingId: number) => dynamicPaths.toAddress(addressId) + `/buildings/${buildingId}`,\n    toRoom: (addressId: number, buildingId: number, roomId: number) => dynamicPaths.toBuilding(addressId, buildingId) + `/rooms/${roomId}`,\n    toUser: (userId: number) => paths.USERS + `/${userId}`\n}\n\nexport default paths as AppPathsInterface;","import { FormControl, FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\nimport React from \"react\";\n\nexport interface SelectButtonInterface {\n    name: string, value: string\n}\n\nexport interface SelectButtonGroupProps {\n    onChange: (value: string) => void,\n    buttons: SelectButtonInterface[],\n    value: string\n}\n\nexport default function SelectButtonGroup({\n    onChange, buttons, value\n}: SelectButtonGroupProps) {\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).value);\n    }, [onChange]);\n\n\n    const renderedButtons = React.useMemo(() => {\n        return buttons.map(({ value, name }) =>\n            <FormControlLabel\n                key={name}\n                value={value}\n                control={<Radio />}\n                label={name}\n                aria-label={name}\n                title={name}\n            />\n        )\n    }, [buttons]);\n\n\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup\n                row\n                aria-label=\"wybór opcji\"\n                name=\"wybór zdefiniowanej opcji\"\n                value={value}\n                onChange={handleChange}\n            >\n                {renderedButtons}\n            </RadioGroup>\n        </FormControl>\n    );\n}","import { APIResponse } from \"./interfaces\";\nimport Service, { ServiceFormData } from \"./Service\";\n\n\n\nexport interface LoginFormData extends ServiceFormData {\n    email: string,\n    password: string\n}\n\n\n\nclass AuthService extends Service {\n\n    async login(data: LoginFormData): Promise<APIResponse> {\n        const response = await this.post(\n            '/users/auth',\n            {\n                'email': data.email,\n                'password': data.password\n            }\n        );\n\n        // set the token to local storage\n        if (response.data) {\n            localStorage.setItem(this._TOKEN_NAME, response.data.toString());\n        }\n\n        return response;\n    }\n\n    logout(): void {\n        localStorage.removeItem(this._TOKEN_NAME);\n    }\n\n    hasToken(): boolean {\n        return Boolean(localStorage.getItem(this._TOKEN_NAME));\n    }\n\n    async hasSession(): Promise<boolean> {\n        try {\n            if (this.hasToken()) {\n                await this.get('/users/me'); // change to ping\n                return true\n            }\n        } catch (err: any) {\n            // localStorage.removeItem(this._TOKEN_NAME);\n            \n        }\n        return false\n    }\n}\n\nexport default new AuthService();","import Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport { SxProps } from \"@mui/system\";\n\n\ninterface ContextLoaderProps {\n    open: boolean,\n    text?: string,\n    sx?: SxProps\n}\n\nexport default function LoadingView(props: ContextLoaderProps) {\n    return (\n        <Backdrop\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                color: 'primary.main',\n                zIndex: (theme) => theme.zIndex.drawer + 1,\n                backgroundColor:'background.default',\n                ...props.sx\n            }}\n            open={props.open}\n        >\n            <Typography variant=\"h5\" pb={2}>\n                {props.text}\n            </Typography>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    );\n}","import React, { createContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport useNotification from \"../contexts/NotificationContext/useNotification\";\n\nimport { SessionUser } from \"../models/User\";\n\nimport AuthService, { LoginFormData } from \"../services/AuthService\";\nimport ImageService from \"../services/ImageService\";\nimport LogService from \"../services/LogService\";\nimport MetadataService from \"../services/MetadataService\";\nimport ReservationService from \"../services/ReservationService\";\nimport StorageService from \"../services/StorageService\";\nimport UserService from \"../services/UserService\";\nimport LoadingView from \"../shared/components/LoadingView\";\nimport paths from \"../shared/path\";\nimport SessionValue from \"./SessionValue\";\n\n\ninterface SessionProviderProps {\n    children?: React.ReactNode\n}\n\n\nexport const sessionContext: any = createContext(null);\n\n\nexport default function SessionProvider({ children }: SessionProviderProps) {\n    const notify = useNotification();\n    const [loading, setLoading] = React.useState(true);\n    const [user, setUser] = useState<SessionUser | null>(null);\n\n\n    const setUpUser = React.useCallback((user: SessionUser) => {\n        setUser(user);\n\n        // config services which require identity data\n        StorageService.setIdentity(user.id);\n        MetadataService.metadata = user.metadata;\n        MetadataService.userId = user.id;\n        ReservationService.userId = user.id;\n        LogService.userId = user.id;\n        ImageService.userId = user.id;\n        UserService.userId = user.id;\n    }, []);\n\n\n    const checkIfUserHasSession = React.useCallback(async () => {\n        setLoading(true);\n        if (AuthService.hasToken()) {\n            try {\n                if (await AuthService.hasSession()) {\n                    const sessionUser = await UserService.getMe();\n                    setUpUser(sessionUser);\n                    notify(\"Witaj ponownie!\", 'info');\n                } else {\n                    notify('Twoja sesja wygasła', 'info', () => <Redirect to={paths.LOGIN} />);\n                }\n            } catch (err: any) {\n                notify(err.description, 'error', () => <Redirect to={paths.WELCOME} />);\n            }\n        }\n        setLoading(false)\n    }, [\n        notify,\n        setUpUser\n    ]);\n\n\n    React.useEffect(() => {\n        checkIfUserHasSession();\n        return () => { }\n    }, [checkIfUserHasSession]);\n\n\n    const login = React.useCallback(async (data: LoginFormData): Promise<void> => {\n        try {\n            await AuthService.login(data);\n            const sessionUser = await UserService.getMe();\n            setUpUser(sessionUser);\n\n            notify(\"Pomyślnie zalogowano!\", \"success\", () => <Redirect to={paths.HOME} />);\n\n        } catch (err: any) {\n            let message = err.description;\n\n            if (err.code === 404) message = \"Użytkownik nie istnieje\";\n\n            notify(message, \"error\");\n        }\n    }, [\n        notify,\n        setUpUser\n    ]);\n\n\n    const logout = React.useCallback(() => {\n        notify(\"Pomyślnie wylogowano!\", \"success\", () => <Redirect to={paths.PUBLIC} />);\n        setUser(null);\n        AuthService.logout();\n    }, [notify]);\n\n\n    return (\n        <>\n            <LoadingView\n                open={loading}\n                text=\"Ładowanie Sesji...\"\n            />\n            <sessionContext.Provider value={{ user, login, logout } as SessionValue}>\n                {!loading && children}\n            </sessionContext.Provider>\n        </>\n    );\n}\n","import { AlertProps } from \"@mui/material/Alert\";\n\ntype NotificationContextValue = (message: string,\n    _severity: AlertProps[\"severity\"],\n    componentCallback?: () => null | React.ReactNode\n) => void;\n\nexport default NotificationContextValue;\n\n\nexport const NotificationContextDefault = (\n    message: string,\n    _severity: AlertProps[\"severity\"] = \"error\",\n    componentCallback: () => null | React.ReactNode = () => null\n) => { }","import { Alert, AlertProps, Snackbar, SnackbarCloseReason } from \"@mui/material\";\nimport React, { createContext } from \"react\";\nimport NotificationContextValue, { NotificationContextDefault } from \"./NotificationContextValue\";\n\n\n\ninterface NotificationContextProviderProps {\n    children?: React.ReactChild\n}\n\n\nexport const notificationContext: any = createContext<NotificationContextValue>(NotificationContextDefault);\n\n\nexport default function NotificationContextProvider({\n    children\n}: NotificationContextProviderProps) {\n    const [message, setMessage] = React.useState<string | null>();\n    const [open, setOpen] = React.useState<boolean>(false);\n    const [severity, setSeverity] = React.useState<AlertProps[\"severity\"]>(\"error\");\n    const [component, setComponent] = React.useState<React.ReactNode>();\n\n\n    const closeSnack = React.useCallback((\n        event?: Event | React.SyntheticEvent<any, Event>,\n        reason?: SnackbarCloseReason\n    ) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n        setMessage('');\n        setComponent(null);\n    }, []);\n\n\n    const setSnack = React.useCallback((\n        message: string,\n        _severity: AlertProps[\"severity\"] = \"error\",\n        componentCallback: () => null | React.ReactNode = () => null\n    ) => {\n        setSeverity(_severity);\n        setMessage(message);\n        setOpen(true);\n        setComponent(componentCallback());\n    }, []);\n\n\n    return (\n        <notificationContext.Provider value={setSnack}>\n            {children}\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={open} autoHideDuration={6000} onClose={closeSnack}>\n                <Alert onClose={closeSnack} severity={severity} sx={{ width: '100%' }}>\n                    {message}\n                </Alert>\n            </Snackbar>\n\n            {component}\n        </notificationContext.Provider>\n    );\n}","import Typography from \"@mui/material/Typography\";\n\n\n\ninterface TabHeadLineProps {\n    title: string | React.ReactNode,\n    subtitle?: string | React.ReactNode,\n}\n\n\nexport default function TabHeadLine(props: TabHeadLineProps) {\n    return (\n        <span>\n            <Typography variant='h4' component='h2' color='primary.dark'>\n                {props.title}\n            </Typography>\n            {\n                props.subtitle &&\n                <Typography variant=\"body1\" color='text.secondary' mt='5px'>\n                    {props.subtitle}\n                </Typography>\n            }\n        </span>\n    )\n}","import { TableRow, TableCell, IconButton, Collapse, Box } from \"@mui/material\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Link } from \"@mui/material\";\nimport Log from \"../../../../../models/Log\";\nimport { displayDate } from \"../../../../../shared/utils\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\n\ninterface LogRowProps {\n    row: Log\n}\n\nexport default function LogRow(props: LogRowProps) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <>\n            <TableRow hover sx={{ '& > *': { borderBottom: 'unset' } }}>\n                <TableCell>\n                    <IconButton\n                        aria-label=\"szczegóły zapytania\"\n                        size=\"small\"\n                        onClick={() => setOpen(!open)}\n                    >\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">{row.id}</TableCell>\n                {/* <TableCell align=\"left\">{row.method}</TableCell> */}\n                <TableCell align=\"left\">{row.endpoint}</TableCell>\n                <TableCell align=\"left\">{Math.fround(row.time * 1000).toPrecision(6)}</TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box component=\"pre\" sx={{ margin: 1 }}>\n                            <Link component={RouterLink} to={`/users/${row.user}`}>Pokaż użytkownika</Link> <br />\n                            {displayDate(row._created)}&nbsp;|&nbsp;{row.method}&nbsp;{row.endpoint}<br />\n                            czas przetwarzania: {row.time} [s]<br />\n                            Ciało zapytania <br />\n                            {JSON.stringify(\n                                JSON.parse(row.payload),\n                                undefined,\n                                3\n                            )}\n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </>\n    );\n}","import { AppURLParams, PaginationQueryParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface LogsQueryParams extends PaginationQueryParams {\n    method?: \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\",\n    userId?: string | number\n}\n\n\nclass LogService extends Service {\n\n    fetch(urlParams: AppURLParams, queryParams: LogsQueryParams) {\n        return this.get(\n            this.preparePath(urlParams) + '/requests',\n            queryParams\n        );\n    }\n\n    async getStats() {\n        return await this.get(`/requests/stats`);\n    }\n}\n\n\nexport default new LogService();","\n\nexport interface ButtonStatus {\n    success: boolean | null,\n    message: string,\n}\n\ninterface Action {\n    statusCode: number | string,\n    payload?: any\n}\n\nexport const initialResult = {\n    success: null,\n    message: ''\n}\n\nexport function statusReducer(state: ButtonStatus, action: Action): ButtonStatus {\n    switch (action.statusCode) {\n        case 200:\n        case 201:\n            return {\n                success: true,\n                message: \"Kod został wysłany na podany email\"\n            };\n        case 403:\n        case 401:\n        case 400:\n            return {\n                success: false,\n                message: action.payload\n            };\n        case 404:\n            return {\n                success: false,\n                message: \"Taki użytkownik nie istnieje.\"\n            };\n        case 422:\n            return {\n                success: false,\n                message: \"Adres email jest niepoprawny\"\n            };\n        case \"NO_ADDRESS\":\n            return {\n                success: false,\n                message: \"Musisz podać adres email\"\n            };\n        default:\n            return {\n                success: false,\n                message: action.payload\n            };\n            // throw new Error();\n    }\n}","import { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport SyncIcon from '@mui/icons-material/Sync';\nimport React from \"react\";\nimport UserService from \"../../../services/UserService\";\nimport { statusReducer } from \"./statusReducer\";\n\n\ninterface UniqueCodeButtonProps {\n    email: string,\n    text: string\n}\n\n\nfunction resolveColor(value: null | boolean): string {\n    if (value === null) return \"inherit\";\n    if (value === true) return \"green\";\n    return \"error\";\n}\n\n\nexport default function UniqueCodeButton(props: UniqueCodeButtonProps) {\n    const [result, dispatchResult] = React.useReducer(statusReducer, {\n        success: null,\n        message: props.text\n    });\n\n    const handleSubmit = async () => {\n        if (!props.email) {\n            dispatchResult({ statusCode: \"NO_ADDRESS\" });\n        }\n        try {\n            const resp = await UserService.generateKey(props.email);\n            dispatchResult(resp);\n\n        } catch (err: any) {\n            dispatchResult({\n                statusCode: err.code,\n                payload: err.description\n            });\n        }\n    };\n\n    return (\n        <Box\n            component=\"div\"\n            display=\"flex\"\n        >\n            <Button sx={{\n                bgcolor: \"primary.50\",\n                \"&:hover\": {\n                    bgcolor: \"primary.100\",\n                }\n            }}\n                onClick={handleSubmit} >\n                <SyncIcon fontSize=\"large\" />\n            </Button>\n\n            <Box\n                sx={{\n                    display: \"flex\",\n                    alignItems: 'center',\n                    ml: 1\n                }}\n            >\n                <Typography\n                    variant=\"body2\"\n                    component=\"p\"\n                    color={resolveColor(result.success)}\n                >\n                    {result.message}\n                </Typography>\n            </Box>\n\n        </Box>\n    );\n}","import { Typography } from \"@mui/material\";\n\n\ninterface StepProps {\n    title: string,\n    text?:string,\n    children: React.ReactNode | React.ReactNodeArray\n}\n\nexport default function FormStep(props: StepProps) {\n    return (\n        <>\n            <Typography variant=\"h5\" sx={{ mt: 3 }}>\n                {props.title}\n            </Typography>\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                {props.text}\n            </Typography>\n            {props.children}\n        </>\n    );\n}","import { Button, Grid, Link, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport UniqueCodeButton from \"../../../../shared/components/UniqueCodeButton\";\nimport React from \"react\";\nimport FormStep from \"./FormStep\";\nimport UserService, { ChangePasswordData } from \"../../../../services/UserService\";\nimport { Redirect } from 'react-router-dom';\nimport paths from \"../../../../shared/path\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\n\n\ninterface FormProps {\n    onSuccess?: () => void\n}\n\nexport default function Form(props: FormProps) {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<ChangePasswordData>({\n        email: localStorage.getItem('email')?.toString() ?? '',\n        newPassword: '',\n        code: ''\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        try {\n            await UserService.changePassword(data);\n\n            notify(\"Hasło zostało zmienione\", 'success',\n                () => setTimeout(() => {\n                    if (props.onSuccess) props.onSuccess();\n                    return <Redirect to={paths.LOGIN} />\n                }, 2000)\n            );\n        } catch (err: any) {\n            let message = err.description;\n            if (err.code === 404) message = \"Taki użytkownik nie istnieje\";\n\n            notify(message, 'error');\n        }\n    }, [\n        data,\n        notify,\n        props\n    ]);\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <FormStep\n                title=\"1. Wygeneruj Kod\"\n                text=\"Podaj swój aders email i naciśnij przycisk by otrzymać email i kodem.\"\n            >\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Adres email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    value={data.email}\n                    onChange={onChange}\n                />\n                <UniqueCodeButton\n                    text=\"Kliknij przycisk by otrzymać kod.\"\n                    email={data.email}\n                />\n            </FormStep>\n            <FormStep\n                title=\"2. Podaj nowe hasło i kod\"\n                text=\"Podaj nowe hasło i kod który otrzymałeś (jeśli nie, powtórz krok nr 1)\"\n            >\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"newPassword\"\n                    label=\"Hasło\"\n                    type=\"password\"\n                    id=\"password\"\n                    value={data.newPassword}\n                    onChange={onChange}\n                    autoComplete=\"current-password\"\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"code\"\n                    label=\"Kod\"\n                    type=\"text\"\n                    id=\"code\"\n                    value={data.code}\n                    onChange={onChange}\n                    autoComplete=\"email-code\"\n                />\n            </FormStep>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                3. Zmień Hasło\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <Link href={paths.LOGIN}>\n                        Hasło zmienione? Zaloguj się!\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import { useContext } from \"react\";\nimport { notificationContext } from \"./NotificationContextProvider\";\nimport NotificationContextValue from \"./NotificationContextValue\";\n\n\n\nexport default function useNotification() {\n    return useContext(notificationContext) as NotificationContextValue;\n}","import React from \"react\";\nimport useSession from \"../../../../auth/useSession\";\n\n\nconst defaultAccess = {\n    'owner': false,\n    'accessAdmin': false,\n    'premisesAdmin': false,\n    'keysAdmin': false,\n    'reservationsAdmin': false,\n    'reservationsAbility': false,\n    'logsAdmin': false,\n    'statsViewer': false,\n    'myId': (id: number): boolean => false\n}\n\nexport default function useResolvedAccess() {\n    const { user } = useSession();\n\n    const access = React.useMemo(() => {\n        if (!user) return defaultAccess;\n\n        const { owner,\n            accessAdmin,\n            premisesAdmin,\n            keysAdmin,\n            reservationsAdmin,\n            reservationsAbility,\n            logsAdmin,\n            statsViewer\n        } = user.access;\n\n        return {\n            'owner': owner,\n            'accessAdmin': owner || accessAdmin,\n            'premisesAdmin': owner || premisesAdmin,\n            'keysAdmin': owner || keysAdmin,\n            'reservationsAdmin': owner || reservationsAdmin,\n            'reservationsAbility': owner || reservationsAbility,\n            'logsAdmin': owner || logsAdmin,\n            'statsViewer': owner || statsViewer,\n            'myId': (id: number) => owner || (user.id === id)\n        } as typeof defaultAccess;\n    }, [user]);\n\n    return access;\n}\n","import * as React from 'react';\nimport {\n    Link as RouterLink,\n    LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\n\nconst LinkBehavior = React.forwardRef<\n    any,\n    Omit<RouterLinkProps, 'to'> & { href: RouterLinkProps['to'] }\n>((props, ref) => {\n    const { href, ...other } = props;\n    // Map href (MUI) -> to (react-router)\n    return <RouterLink data-testid=\"custom-link\" ref={ref} to={href} {...other} />;\n});\n\n\nexport default LinkBehavior; ","import { indigo } from '@mui/material/colors';\nimport { darkScrollbar as scrollbar } from '@mui/material';\nimport { LinkProps } from '@mui/material/Link';\nimport { createTheme } from '@mui/material/styles';\nimport LinkBehavior from './LinkBehavior';\n\n\nconst light = {\n  track: '#f5f5f5',\n  thumb: '#adadad',\n  active: '#959595'\n};\n\n\n\nconst theme = createTheme({\n  palette: {\n    primary: indigo,\n    secondary: {\n      dark: \"#f5f5f5\",\n      main: \"#304ffe\",\n      light: \"#fff\"\n    },\n    background: {\n      default: '#f5f5f5',\n      paper: '#fff'\n    }\n  },\n  // spacing: 10,\n  shape: {\n    borderRadius: 4\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        body: scrollbar(light),\n      },\n    },\n    MuiTextField: {\n      defaultProps: {\n        size: 'medium',\n        variant: 'outlined',\n      }\n    },\n    MuiSelect: {\n      defaultProps: {\n        size: 'medium'\n      }\n    },\n    MuiButton: {\n      defaultProps: {\n        sx: {\n          borderRadius: ({ shape }) => Number(shape.borderRadius) / 2\n        }\n      },\n    },\n    MuiLink: {\n      defaultProps: {\n        component: LinkBehavior,\n      } as LinkProps,\n    },\n    MuiButtonBase: {\n      defaultProps: {\n        LinkComponent: LinkBehavior,\n      },\n    },\n    MuiSvgIcon: {\n      defaultProps: {\n        color: 'inherit',\n      }\n    },\n    MuiIconButton: {\n      defaultProps: {\n        color: 'primary'\n      }\n    }\n  },\n  // typography:{\n\n  // }\n})\n\nexport default theme;","import React from 'react';\nimport { ThemeProvider } from '@mui/material/styles';\n\n\nimport theme from './theme';\n\n\ninterface ThemeProps {\n    children: React.ReactNode\n}\n\n\nexport default function Theme(props: ThemeProps) {\n    return (\n        <ThemeProvider theme={theme}>\n            {props.children}\n        </ThemeProvider>\n    );\n}","import React from 'react';\nimport Loading from '../../../../shared/components/Loading';\n\nconst LazyAccessPage = React.lazy(() => import('./AccessPage'));\n\n\nexport default function AccessPage() {\n    return <React.Suspense fallback={<Loading />}>\n        <LazyAccessPage />\n    </React.Suspense>\n}\n","import { RoomType } from \"../models/Room\";\nimport { BuildingViewParams } from \"./BuildingService\";\nimport Service from \"./Service\";\n\n\nexport interface RoomViewParams {\n    roomId: string,\n    buildingId: string,\n    addressId: string\n}\n\n\nexport interface RoomUpdateParams {\n    name?: string,\n    roomType?: RoomType,\n    seatsCount?: number,\n    floor?: number,\n    buildingId?: number,\n    blocked?: boolean,\n}\n\n\nexport interface CreateRoomParams {\n    name: string,\n    roomType: RoomType,\n    seatsCount: number,\n    floor:number\n}\n\n\n\nclass RoomService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath({ addressId, buildingId, roomId }: RoomViewParams) {\n        this._path = `/addresses/${addressId}/buildings/${buildingId}/rooms/${roomId}`;\n    }\n\n    public getView() {\n        return this.get(this.path);\n    }\n\n    public create({ addressId, buildingId }: BuildingViewParams, data: CreateRoomParams) {\n        return this.post(`/addresses/${addressId}/buildings/${buildingId}/rooms`, data);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(body: RoomUpdateParams) {\n        return this.patch(this.path, body);\n    }\n\n    public updateRFID(key: string) {\n        return this.patch(`${this.path}/keys`, {\n            \"RFIDTag\": key\n        });\n    }\n\n    public deleteRFIDTag() {\n        return this.delete(`${this.path}/keys`);\n    }\n}\n\nexport default new RoomService()","import Service from \"./Service\";\n\n\nexport interface AddressViewParams {\n    addressId: string,\n}\n\n\nexport interface UpdateAddressParams {\n    [index: string]: string | undefined,\n    country?: string,\n    town?: string,\n    postalCode?: string,\n    street?: string,\n    number?: string\n}\n\n\nexport interface CreateAddressParams {\n    country: string,\n    town: string,\n    postalCode: string,\n    street?: string,\n    number?: string,\n}\n\n\nclass AddressService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath(params: AddressViewParams) {\n        this._path = this.preparePath(params);\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(data: UpdateAddressParams) {\n        return this.patch(this.path, data);\n    }\n\n    public create(data: CreateAddressParams) {\n        return this.post('/addresses', data);\n    }\n\n    public getBuildings() {\n        return this.get(`${this.path}/buildings`);\n    }\n\n    public getResourcesMap() {\n        return this.get('/addresses/resources');\n    }\n}\n\n\nexport default new AddressService();","import React from \"react\";\nimport useSession from \"../../auth/useSession\";\nimport AddressMap from \"../../models/AddressMap\";\nimport useTrigger from \"../../components/pages/protected/hooks/useTrigger\";\nimport AddressService from \"../../services/AddressService\";\nimport useNotification from \"../NotificationContext/useNotification\";\nimport ResourceMapContextValue from \"./ResourceMapContextValue\";\n\n\n\n\nexport const resourceMapContext: any = React.createContext(null);\n\n\ninterface ResourceMapContextProviderProps {\n    children?: React.ReactNode[]\n}\n\n\nexport default function ResourceMapContextProvider(props: ResourceMapContextProviderProps) {\n    const [resourceMap, setResources] = React.useState<AddressMap[]>([]);\n    const [loaded, setLoaded] = React.useState<boolean>(false);\n    const refresh = useTrigger(300_000);\n\n    const { user } = useSession();\n    const notify = useNotification();\n\n    const loadResourceMap = React.useCallback(async (): Promise<void> => {\n        try {\n            const resp = await AddressService.getResourcesMap();\n            resp?.data && setResources(resp.data as any);\n        } catch (err: any) {\n            notify(err.description, \"error\");\n        }\n    }, [notify]);\n\n    const reloadMap = (): void => {\n        loadResourceMap();\n    }\n\n    React.useEffect(() => {\n        user && loadResourceMap();\n        setLoaded(true);\n    }, [\n        user,\n        loadResourceMap,\n        refresh\n    ]);\n\n\n    const getRoomLink = React.useCallback((roomId: number): string => {\n        return '/app' + resourceMap.map(addr => addr.buildings.map(bld => bld.rooms))\n            .flat(2)\n            .find(item => item.id === roomId)\n            ?.href ?? '';\n    }, [resourceMap]);\n\n\n    const allRooms = React.useMemo(() => {\n        return resourceMap.map(addr => addr.buildings.map(bld => bld.rooms)).flat(2)\n    }, [resourceMap]);\n\n\n    const allBuildings = React.useMemo(() => {\n        return resourceMap.map(addr => addr.buildings.map(({ name, href, id }) => ({ name, href, id }))).flat(2);\n    }, [resourceMap]);\n\n\n    const allAddresses = React.useMemo(() => {\n        return resourceMap.map(({ name, href, id }) => ({ name, href, id }));\n    }, [resourceMap]);\n\n\n    const getBuildingLink = React.useCallback((buildingId: number): string => {\n        return '/app' + resourceMap.map(addr => addr.buildings)\n            .flat(2)\n            .find(item => item.id === buildingId)\n            ?.href ?? '';\n    }, [resourceMap]);\n\n\n    if (loaded === false) return null;\n\n    return (\n        <resourceMapContext.Provider value={{\n            resourceMap,\n            reloadMap,\n            allRooms,\n            getRoomLink,\n            getBuildingLink,\n            allAddresses,\n            allBuildings,\n        } as ResourceMapContextValue}>\n            {props.children}\n        </resourceMapContext.Provider>\n    );\n}","import React from \"react\";\nimport { resourceMapContext } from \"./ResourceMapContextProvider\";\nimport ResourceMapContextValue from \"./ResourceMapContextValue\";\n\n\nexport default function useResourceMap() {\n    return React.useContext(resourceMapContext) as ResourceMapContextValue;\n}","import React, { createContext } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { DetailedRoom } from \"../../../../../models/Room\";\nimport RoomService, { RoomUpdateParams, RoomViewParams } from \"../../../../../services/RoomService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport RoomContextValue from \"./RoomContextValue\";\nimport useResourceMap from \"../../../../../contexts/ResourceMapContext/useResourceMap\";\nimport useTrigger from \"../../hooks/useTrigger\";\n\n\ninterface RoomContextProviderProps {\n    children?: React.ReactNode\n}\n\nexport const RoomContext: any = createContext(null);\n\n\nexport default function RoomContextProvider({\n    children\n}: RoomContextProviderProps) {\n    const { getBuildingLink, reloadMap } = useResourceMap();\n    const notify = useNotification();\n    const urlParams = useParams<RoomViewParams>();\n    const [room, setRoom] = React.useState<DetailedRoom>();\n    const refresh = useTrigger(60_000);\n\n    React.useLayoutEffect(() => {\n        RoomService.setPath(urlParams);\n    }, [urlParams]); // set new urlParams to service so it get data for propper room\n\n\n    const getRoom = React.useCallback(async () => {\n        const resp = await RoomService.getView();\n        setRoom(resp.data as DetailedRoom);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        urlParams,\n        refresh\n    ]); // recompute after change of room\n\n\n    const setOccupied = React.useCallback((state: boolean) => {\n        setRoom(old => {\n            if (old)\n                return { ...old, occupied: state };\n        });\n    }, []);\n\n\n    const updateRoom = React.useCallback(async (body: RoomUpdateParams) => {\n        if (!room) return false;\n\n        try {\n            await RoomService.update(body);\n            setRoom(old => {\n                if (old)\n                    return { ...old, ...body };\n            });\n            notify(\"Sala została zaktualizowana\", 'success');\n\n            if (('name' in body && body.name !== room.name)\n                || ('buildingId' in body && body.buildingId !== room?.building.id)\n            ) {\n                reloadMap();\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        room\n    ]);\n\n\n    const deleteRoom = React.useCallback(async () => {\n        if (!room) return;\n\n        try {\n            await RoomService.remove();\n            reloadMap();\n            notify(\"Sala została usunięta\", 'success', () => <Redirect to={getBuildingLink(room.building.id)} />);\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        room,\n        reloadMap,\n        getBuildingLink,\n    ]);\n\n\n    const updateRFIDTag = React.useCallback(async (key: string) => {\n        try {\n            await RoomService.updateRFID(key);\n            setRoom(old => {\n                if (old)\n                    return { ...old, RFIDTag: key };\n            });\n\n            notify(\"Tag został przypisany\", 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n    }, [notify]);\n\n\n    const deleteRFIDTag = React.useCallback(async () => {\n        try {\n            await RoomService.deleteRFIDTag();\n            setRoom(old => {\n                if (old)\n                    return { ...old, RFIDTag: null };\n            });\n            notify(\"Tag został usunięty\", \"success\");\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        getRoom();\n        return () => { }\n    }, [getRoom]);\n\n\n    return (\n        !Boolean(room) ? null : <RoomContext.Provider value={{\n            room,\n            updateRoom,\n            deleteRoom,\n            updateRFIDTag,\n            deleteRFIDTag,\n            setOccupied\n        } as RoomContextValue}>\n            {children}\n        </RoomContext.Provider>\n    );\n}\n","import React from \"react\";\nimport { RoomContext } from \"./RoomContextProvider\";\nimport RoomContextValue from \"./RoomContextValue\";\n\n\nexport default function useRoomContext() {\n    return React.useContext(RoomContext) as RoomContextValue\n}","import React from \"react\";\nimport { reservationsContext } from \"./ReservationsContextProvider\";\nimport ReservationsContextValue from \"./ReservationsContextValue\";\n\nexport default function useReservations() {\n    return React.useContext(reservationsContext) as ReservationsContextValue;\n}","import MobileDateTimePicker from \"@mui/lab/MobileDateTimePicker\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\n\n\ninterface Props {\n    value: Date,\n    label: string,\n    onChange: (value: Date) => void,\n}\n\nexport default function DateTimePicker({\n    value,\n    onChange,\n    label,\n}: Props) {\n\n    const handleChange = React.useCallback((newValue: Date | null) => {\n        if (newValue) {\n            onChange(newValue);\n        }\n    }, [\n        onChange\n    ]);\n\n    return (\n        <MobileDateTimePicker\n            minDate={new Date()}\n            label={label}\n            value={value}\n            onChange={handleChange}\n            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n        />\n    )\n}\n\n","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../../components/GenericModal\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { UpdateReservationData } from \"../../../../../../services/ReservationService\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useResourceMap } from \"../../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\nimport useReservations from \"../../GenericReservationsTab/ReservationsContext/useReservations\";\nimport FormGridContainer from \"../../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../../DateTimePicker\";\nimport { fromLocaleDateTimeString } from \"../../../../../../shared/utils\";\n\n\ninterface EditModalFormProps {\n    open: boolean,\n    onClose: () => void,\n    reservation: Reservation\n}\n\nexport default function EditModalForm(props: EditModalFormProps) {\n    const { updateReservation } = useReservations()\n    const { allRooms } = useResourceMap();\n\n    const [data, setData] = React.useState<UpdateReservationData>({});\n\n\n    const closeForm = React.useCallback(() => {\n        props.onClose();\n        setData({});\n    }, [\n        props\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateReservation(props.reservation.id, data)) {\n            closeForm();\n            setData({});\n        }\n\n    }, [\n        props,\n        data,\n        closeForm,\n        updateReservation,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleDateChange = React.useCallback((name: keyof UpdateReservationData, value: Date) => {\n        console.log(value)\n        value && setData(old => ({\n            ...old,\n            [name]: value.toLocaleString('pl')\n        }));\n    }, []);\n\n    console.log(props.reservation.plannedStart)\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={closeForm}\n            aria-label=\"Okno do edycji rezerwacji\"\n        >\n            <FormGridContainer\n                title='Edycja rezerwacji'\n                subtitle=\"Zmień właściwości pokoju i zatwierdź zmiany.\"\n                onSubmit={handleSubmit}\n                onCancel={props.onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Tytuł\"\n                        multiline\n                        maxRows={4}\n                        name='title'\n                        value={data.title ?? props.reservation.title}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Opis\"\n                        multiline\n                        maxRows={20}\n                        name='description'\n                        value={data.description ?? props.reservation.description}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <DateTimePicker\n                        value={\n                            data.plannedStart ?\n                                fromLocaleDateTimeString(data.plannedStart) :\n                                new Date(props.reservation.plannedStart)\n                        }\n                        label=\"Początek\"\n                        onChange={(value) => handleDateChange('plannedStart', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <DateTimePicker\n                        value={\n                            data.plannedEnd ?\n                                fromLocaleDateTimeString(data.plannedEnd) :\n                                new Date(props.reservation.plannedEnd)\n                        }\n                        label=\"Koniec\"\n                        onChange={(value) => handleDateChange('plannedEnd', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                        <Select\n                            required\n                            labelId=\"wybierz-salę\"\n                            name=\"roomId\"\n                            value={data.roomId ?? props.reservation.room.id}\n                            label=\"Sala\"\n                            onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                        >\n                            {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../../components/GenericModal\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useResourceMap } from \"../../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\nimport useReservations from \"../../GenericReservationsTab/ReservationsContext/useReservations\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { IconButton } from \"@mui/material\";\nimport { CreateReservationData } from \"../../../../../../services/ReservationService\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport FormGridContainer from \"../../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../../DateTimePicker\";\n\n\ninterface CopyModalFormProps {\n    open: boolean,\n    onClose: () => void,\n    reservation: Reservation\n}\n\ninterface DateTimeSlot {\n    color: string | null,\n    from: Date,\n    to: Date,\n}\n\ninterface CopyReservationData {\n    title: string,\n    description: string,\n    roomId?: number\n}\n\n\nexport default function CopyModalForm(props: CopyModalFormProps) {\n    const { createReservation } = useReservations()\n    const { allRooms } = useResourceMap();\n    const notify = useNotification();\n\n    const [dates, setDates] = React.useState<DateTimeSlot>({\n        color: '',\n        from: new Date(props.reservation.plannedStart),\n        to: new Date(props.reservation.plannedEnd),\n    });\n\n    const [copyDates, setCopyDates] = React.useState<DateTimeSlot[]>([]);\n    const [data, setData] = React.useState<CopyReservationData>({\n        title: props.reservation.title,\n        description: props.reservation.description,\n        roomId: props.reservation.room.id ?? 0\n    });\n\n\n    const closeForm = React.useCallback(() => {\n        props.onClose();\n        // setCopyDates([]);\n    }, [props]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n\n        const createCalls = copyDates.map(async (date) => {\n            const success = await createReservation({\n                ...data,\n                plannedStart: date.from.toLocaleString('pl'),\n                plannedEnd: date.to.toLocaleString('pl')\n            } as CreateReservationData);\n            date.color = success ? 'green' : 'red';\n            return date;\n        })\n        const processed = await Promise.all(createCalls);\n        setCopyDates(processed);\n\n    }, [data, copyDates, createReservation]);\n\n\n    const handleDeleteCopyDate = React.useCallback((index: number) => {\n        setCopyDates(old => {\n            old.splice(index, 1);\n            return Object.assign([], old);\n        });\n    }, []);\n\n\n    const setDate = React.useCallback((key: keyof DateTimeSlot, dateTime: Date) => {\n        setDates(old => ({\n            ...old,\n            [key]: dateTime,\n        }));\n    }, []);\n\n\n    const handleAddDate = React.useCallback(() => {\n        if (copyDates.find(({ from, to }) => from === dates.from || to === dates.to)) {\n            notify(\"Daty powinny się różnić\", 'error');\n            return;\n        };\n\n        setCopyDates(old => {\n            old.push({\n                ...dates,\n                color: ''\n            });\n            return Object.assign([], old);\n        });\n    }, [\n        dates,\n        notify,\n        copyDates,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={closeForm}\n            aria-label=\"Okno do kopiowania rezerwacji\"\n        >\n\n            <FormGridContainer\n                title='Kopiowanie rezerwacji'\n                subtitle=\"Skopiuj rezerwację dla wybranych przez siebie nowych dat.\"\n                onSubmit={handleSubmit}\n                onCancel={props.onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Tytuł\"\n                        multiline\n                        maxRows={4}\n                        name='title'\n                        value={data.title ?? props.reservation.title}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Opis\"\n                        multiline\n                        maxRows={20}\n                        name='description'\n                        value={data.description ?? props.reservation.description}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={5}>\n                    <DateTimePicker\n                        label=\"Początek\"\n                        value={dates.from}\n                        onChange={(value) => setDate('from', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={5}>\n                    <DateTimePicker\n                        label=\"Koniec\"\n                        value={dates.to}\n                        onChange={(value) => setDate('to', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={2}>\n                    <Button\n                        size='large'\n                        sx={{\n                            height: '100%',\n                            width: '100%'\n                        }}\n                        variant='outlined'\n                        onClick={handleAddDate}\n                    >\n                        Dodaj\n                    </Button>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Stack\n                        spacing={1}\n                        sx={{\n                            border: '1px solid',\n                            borderColor: 'divider',\n                            borderRadius: 1,\n                            padding: 0.5,\n                            bgcolor: 'background.default',\n                            maxHeight: '200px',\n                            overflow: 'auto',\n                        }}>\n                        {copyDates.length === 0 && <Typography textAlign='center' component='p'>\n                            Brak dat\n                        </Typography>}\n                        {\n                            copyDates.map(({ color, from, to }, index) =>\n                                <Box\n                                    key={index}\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'space-between',\n                                        pl: '3px'\n                                    }}>\n                                    <Typography component='p' sx={{ color: color }}>\n                                        <>\n                                            {from.toLocaleString('pl')}&nbsp;-&nbsp;{to.toLocaleString('pl')}\n                                        </>\n                                    </Typography>\n                                    <IconButton\n                                        onClick={() => handleDeleteCopyDate(index)}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Box>\n                            )\n                        }\n                    </Stack>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                        <Select\n                            required\n                            labelId=\"wybierz-salę\"\n                            name=\"roomId\"\n                            value={data.roomId ?? props.reservation.room.id}\n                            label=\"Sala\"\n                            onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                        >\n                            {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </FormGridContainer>\n\n        </GenericModal >\n    );\n}","import { Box, Button, Stack, Typography } from \"@mui/material\";\nimport NfcIcon from '@mui/icons-material/Nfc';\nimport { styled } from \"@mui/system\";\nimport React from \"react\";\nimport CancelIcon from '@mui/icons-material/Cancel';\n\n\ninterface RfidFormProps {\n    headline: string,\n    bodyText: string,\n    onScan: (keyText: string) => Promise<boolean>,\n    onClose: () => void,\n}\n\nconst HiddenInput = styled('input')({\n    position: \"absolute\",\n    left: \"-1000px\",\n    color: \"transparent\"\n});\n\n\nexport default function RfidForm(props: RfidFormProps) {\n    const [text, setText] = React.useState<string>('');\n    const [color, setColor] = React.useState<string>('primary');\n    const input = React.useRef<HTMLInputElement | null>(null);\n\n    const handleSubmit = async (evt: React.FormEvent) => {\n        evt.preventDefault();\n        const success = await props.onScan(text);\n        if (success) {\n            setColor('success');\n            setTimeout(handleDecline, 2000);\n        } else {\n            setColor('error');\n        }\n        setText('');\n    }\n\n    const handleDecline = () => {\n        props.onClose();\n        setText('');\n        setColor('primary');\n    }\n\n    const focusOnInput = () => {\n        input.current && console.log(input.current.focus())\n    }\n\n    return (\n        <Stack\n            onClick={focusOnInput}\n            component=\"form\"\n            direction=\"column\"\n            spacing={4}\n            onSubmit={handleSubmit}\n        >\n            <NfcIcon\n                sx={{ fontSize: 140, alignSelf: \"center\" }}\n                color={color as any}\n            />\n            <HiddenInput\n                ref={input}\n                autoFocus\n                type=\"text\"\n                value={text}\n                onChange={(evt: any) => setText(evt.target.value)}\n            />\n            <Box component=\"span\" textAlign='center'>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    {props.headline}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" mt='5px'>\n                    {props.bodyText}\n                </Typography>\n            </Box>\n\n            <Button startIcon={<CancelIcon />}\n                onClick={handleDecline}\n                color=\"error\"\n            >\n                Zamknij\n            </Button>\n\n        </Stack>\n    );\n}","import { useReservations } from \"../../GenericReservationsTab/ReservationsContext\";\nimport React from \"react\";\nimport GenericModal from \"../../GenericModal\";\nimport RfidForm from \"../../RfidForm\";\n\n\ninterface PingKeyModalFormProps {\n    reservationId: number,\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport default function PingKeyModalForm(props: PingKeyModalFormProps) {\n    const { pingKeyForReservation } = useReservations();\n\n    const handleKeyScan = React.useCallback(\n        async (key: string) => pingKeyForReservation(props.reservationId, key)\n        , [props, pingKeyForReservation]);\n\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={props.onClose}\n            aria-label=\"Okno do edycji rezerwacji\"\n            sx={{ maxWidth: '400px' }}\n        >\n            <RfidForm\n                headline=\"Wczytaj klucz z tagiem NFC\"\n                bodyText='Przy pomocy czytnika, wczytaj wydawany klucz. Aby opuścić to okno, naciśnij \"Zamknij\"'\n                onScan={handleKeyScan}\n                onClose={props.onClose}\n            />\n        </GenericModal>\n    );\n}","import React from \"react\";\nimport { ListItemIcon, Menu, MenuItem, SxProps, Typography } from \"@mui/material\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport IconButton from '@mui/material/IconButton';\nimport { Box } from \"@mui/system\";\n\n\ninterface MoreVertMenuProps {\n    options: { action: () => void, icon?: React.ReactNode, label: string }[],\n    sx?: SxProps\n}\n\nexport default function MoreVertMenu(props: MoreVertMenuProps) {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n\n    const handleClick = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    }, []);\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <Box sx={props.sx}>\n            <IconButton\n                aria-label='more-options'\n                aria-controls=\"card-menu\"\n                aria-expanded={open ? 'true' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Menu\n                MenuListProps={{\n                    'aria-labelledby': 'more-options',\n                }}\n                anchorEl={anchorEl}\n                id=\"card-menu\"\n                open={open}\n                onClose={handleClose}\n                PaperProps={{\n                    sx: {\n                        minWidth: 200,\n                        maxWidth: '100%'\n                    }\n                }}\n            >\n                {\n                    props.options.map((opt, id) => <MenuItem\n                        key={id}\n                        onClick={() => {\n                            opt.action();\n                            handleClose();\n                        }}\n                    >\n                        <ListItemIcon>\n                            {opt.icon}\n                        </ListItemIcon>\n                        <Typography>{opt.label}</Typography>\n                    </MenuItem>)\n                }\n            </Menu>\n        </Box>\n    );\n}\n\n","import { Avatar, Link, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\nimport User from \"../../../../../models/User\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\n\n\n\ninterface UserItemProps {\n    user: User\n}\n\nexport default function UserItem({\n    user\n}: UserItemProps) {\n    return (\n        <ListItem button component={Link} href={dynamicPaths.toUser(user.id)}>\n            <ListItemAvatar>\n                <Avatar\n                    src={ImageService.getLink(user.image)}\n                    alt={`${user.name} ${user.surname}`}\n                />\n            </ListItemAvatar>\n            <ListItemText\n                primary={`${user.name} ${user.surname}`}\n                secondary={user.email}\n            />\n        </ListItem>\n    );\n}","import { Avatar, Link, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport Room from \"../../../../../models/Room\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\n\ninterface RoomItemProps {\n    room: Room\n}\n\nexport default function RoomItem({\n    room\n}: RoomItemProps) {\n    const { getRoomLink } = useResourceMap();\n\n    const roomLink = React.useMemo(() => getRoomLink(room.id), [\n        room.id,\n        getRoomLink\n    ]);\n\n    return (\n        <ListItem button component={Link} href={roomLink}>\n            <ListItemAvatar>\n                <Avatar\n                    src={ImageService.getLink(room.image)}\n                    alt={`zdjęcie sali ${room.name}`}\n                />\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={`Sala ${room.name}`}\n                secondary={room.roomType}\n            />\n        </ListItem>\n    );\n}","import Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\n\n\n\ninterface Props {\n    title: string | React.ReactNode\n    children: {\n        label: string,\n        value: string | React.ReactNode\n    }[]\n}\n\n\nexport default function DatesView(props: Props) {\n    return (\n        <div>\n            <Typography component=\"h3\" variant=\"subtitle1\">\n                {props.title}\n            </Typography>\n            <Typography\n                variant=\"body1\"\n                color='text.secondary'\n                textAlign='left'\n                component='div'\n            >\n                <Stack\n                    direction='row'\n                    alignItems='center'\n                    flexWrap='wrap'\n                    rowGap={1}\n                    columnGap={1}\n                >\n                    {\n                        props.children.map(({ label, value }) =>\n                            <div key={label} >\n                                {label}:&nbsp;<Chip label={value} />\n                            </div>\n                        )\n                    }\n                </Stack>\n            </Typography>\n        </div>\n    );\n}","import Reservation from '../../../../../models/Reservation';\nimport GenericModal from '../../components/GenericModal';\nimport Stack from '@mui/material/Stack';\nimport { Grid, IconButton, List, Typography } from '@mui/material';\nimport { displayDate } from '../../../../../shared/utils';\nimport React from 'react';\nimport DeleteModal from '../DeleteModal';\nimport { CopyForm, EditForm, PingNFCForm } from './ModalForms';\nimport { useReservations } from '../GenericReservationsTab/ReservationsContext';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CopyIcon from '@mui/icons-material/CopyAll';\nimport NFCIcon from '@mui/icons-material/Nfc';\nimport { Edit } from '@mui/icons-material';\nimport MoreVertMenu from '../../components/MoreVertMenu';\nimport UserItem from './UserItem';\nimport RoomItem from './RoomItem';\nimport useResolvedAccess from '../../hooks/useResolvedAccess';\nimport DatesView from './DatesView';\n\n\n\ninterface ReservationViewModalProps {\n    reservation: Reservation,\n    open: boolean,\n    onClose: () => void\n}\n\n\nfunction TextSection(props: {\n    title: string, children: React.ReactNode | React.ReactNode[]\n}) {\n    return (\n        <span>\n            <Typography component=\"h3\" variant=\"subtitle1\">\n                {props.title}\n            </Typography>\n            <Typography\n                variant=\"body1\"\n                color='text.secondary'\n                textAlign='justify'\n                component='p'\n            >\n                {props.children}\n            </Typography>\n        </span>\n    );\n}\n\n\n\n\n\nexport default function ReservationViewModal(props: ReservationViewModalProps) {\n    const { reservationsAdmin, keysAdmin, myId } = useResolvedAccess();\n    const { deleteReservation } = useReservations();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n    const [nfcModalOpen, setNFCModalOpen] = React.useState<boolean>(false);\n    const [copyModalOpen, setCopyModalOpen] = React.useState<boolean>(false);\n\n\n    const onDelete = React.useCallback(async () => {\n        if (await deleteReservation(props.reservation.id)) {\n            setDeleteModalOpen(false);\n        }\n    }, [\n        props.reservation.id,\n        deleteReservation,\n    ]);\n\n\n    const menuOptions = React.useMemo(() => {\n        const opt = [\n            {\n                icon: <CopyIcon color='primary' />,\n                label: 'Kopiuj',\n                action: () => setCopyModalOpen(true)\n            },\n        ];\n        keysAdmin && opt.unshift({\n            icon: <NFCIcon color='primary' />,\n            label: 'Odbij klucz',\n            action: () => setNFCModalOpen(true)\n        });\n\n        if (myId(props.reservation.user.id) || reservationsAdmin)\n            opt.push({\n                icon: <Edit color='primary' />,\n                label: 'Edytuj',\n                action: () => setEditModalOpen(true)\n            }, {\n                icon: <DeleteIcon color='error' />,\n                label: 'Usuń',\n                action: () => setDeleteModalOpen(true)\n            });\n\n        return opt;\n    }, [\n        myId,\n        keysAdmin,\n        props.reservation.user.id,\n        reservationsAdmin\n    ]);\n\n\n    return (\n        <>\n            {(myId(props.reservation.user.id) || reservationsAdmin) &&\n                <>\n                    <DeleteModal\n                        open={deleteModalOpen}\n                        onClose={() => setDeleteModalOpen(false)}\n                        objectName={props.reservation.title}\n                        onSuccess={onDelete}\n                    />\n\n                    <EditForm\n                        open={editModalOpen}\n                        onClose={() => setEditModalOpen(false)}\n                        reservation={props.reservation}\n                    />\n                </>\n            }\n            <CopyForm\n                open={copyModalOpen}\n                onClose={() => setCopyModalOpen(false)}\n                reservation={props.reservation}\n            />\n\n            {keysAdmin &&\n                <PingNFCForm\n                    open={nfcModalOpen}\n                    onClose={() => setNFCModalOpen(false)}\n                    reservationId={props.reservation.id}\n                />\n            }\n\n            <GenericModal\n                open={props.open}\n                onClose={props.onClose}\n                aria-label=\"Widok Rezerwacji\"\n                sx={{\n                    maxWidth: '800px',\n                    mt: '4vw'\n                }}\n            >\n                <Grid container spacing='15px'>\n\n                    <Grid item xs={10} sm={11}>\n                        <Stack spacing={4} alignItems='stretch'>\n                            <Typography component=\"h2\" variant=\"h4\">\n                                {props.reservation.title}\n                            </Typography>\n\n                            <DatesView title='Planowany czas:'>\n                                {[\n                                    {\n                                        label: 'Od',\n                                        value: displayDate(props.reservation.plannedStart)\n                                    }, {\n                                        label: 'do',\n                                        value: displayDate(props.reservation.plannedEnd)\n                                    },\n                                ]}\n                            </DatesView>\n                        </Stack>\n                    </Grid>\n\n                    <Grid item xs={2} sm={1}>\n                        <Stack\n                            alignItems='flex-end'\n                            direction='column'\n                            spacing={3}\n                        >\n                            <IconButton onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\n                            <MoreVertMenu options={menuOptions} sx={{ justifySelf: \"right\" }} />\n\n                            {keysAdmin &&\n                                <IconButton\n                                    onClick={() => setNFCModalOpen(true)}\n                                    title=\"Odbij klucz\"\n                                    aria-label=\"Odbij klucz\"\n                                    color='success'\n                                >\n                                    <NFCIcon />\n                                </IconButton>\n                            }\n                        </Stack>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Stack spacing={4} alignItems='stretch'>\n                            <DatesView title='Faktyczny czas rezerwacji:'>\n                                {[\n                                    {\n                                        label: 'Początek',\n                                        value: props.reservation.actualStart ?\n                                            displayDate(props.reservation.actualStart)\n                                            : 'Brak'\n                                    }, {\n                                        label: 'Koniec',\n                                        value: props.reservation.actualEnd ?\n                                            displayDate(props.reservation.actualEnd)\n                                            : 'Brak'\n                                    },\n                                ]}\n                            </DatesView>\n\n                            <TextSection title='Opis:'>\n                                {props.reservation.description}\n                            </TextSection>\n\n                            <List component='div'>\n                                <UserItem user={props.reservation.user} />\n                                <RoomItem room={props.reservation.room} />\n                            </List>\n\n                        </Stack>\n                    </Grid>\n\n                </Grid>\n            </GenericModal>\n        </>\n    );\n}\n\n\n","import React from \"react\";\nimport ReservationViewModal from \"../../../ReservationViewModal\";\nimport { useReservations } from \"..\";\nimport ModalContextValue from \"./ModalContextValue\";\n\n\nexport const ReservationModalViewContext = React.createContext<ModalContextValue>({\n    showReservation: (id: number) => { },\n    reservation: null\n});\n\n\ninterface ModalContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\nexport default function ModalContextProvider(props: ModalContextProviderProps) {\n    const { reservations } = useReservations();\n\n    const [modalOpen, setModalOpen] = React.useState<boolean>(true);\n    const [reservationId, setReservationId] = React.useState<number | null>(null);\n\n\n    const reservation = React.useMemo(() => {\n        if (reservationId) {\n            return reservations.find(({ id }) => id === reservationId);\n        }\n    }, [reservations, reservationId]) ?? null;\n\n\n    const showReservation = React.useCallback((id: number) => {\n        setReservationId(id);\n        setModalOpen(true);\n    }, []);\n\n\n    return (\n        <ReservationModalViewContext.Provider value={{ reservation, showReservation }}>\n            {props.children}\n\n            {reservation &&\n                <ReservationViewModal\n                    reservation={reservation}\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                />}\n        </ReservationModalViewContext.Provider>\n    );\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../../auth/useSession\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { AppURLParams } from \"../../../../../../services/interfaces\";\nimport ReservationService, { CreateReservationData, ReservationsQueryParams, UpdateReservationData } from \"../../../../../../services/ReservationService\";\nimport { useRoomContext } from \"../../../RoomPage/RoomContext\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport ReservationModalContext from \"./ModalContext\";\nimport useResourceMap from \"../../../../../../contexts/ResourceMapContext/useResourceMap\";\nimport ReservationsContextValue from \"./ReservationsContextValue\";\nimport paths from \"../../../../../../shared/path\";\nimport { UserViewParams } from \"../../../../../../services/UserService\";\nimport useTrigger from \"../../../hooks/useTrigger\";\nimport { fromLocaleDateTimeString } from \"../../../../../../shared/utils\";\n\n\nexport const reservationsContext: any = React.createContext(null);\n\n\ninterface ReservationsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\n\nexport default function ReservationsContextProvider(props: ReservationsContextProviderProps) {\n    const { queryParams, setQueryParams } = useQueryParams<ReservationsQueryParams>();\n    const notify = useNotification();\n    const { getRoomLink } = useResourceMap();\n    const roomContext = useRoomContext();\n    const { user } = useSession();\n    const urlParams = useParams<AppURLParams>();\n    const refresh = useTrigger(30_000);\n\n    const [reservations, setReservations] = React.useState<Reservation[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            let params = urlParams;\n            if (Object.keys(urlParams).length === 0 && window.location.pathname === paths.HOME) {\n                params = { userId: 'me' } as UserViewParams;\n            }\n            const resp = await ReservationService.getReservations(params, queryParams);\n\n            resp.pagination && setQueryParams((old) => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount,\n            }));\n            setReservations(resp.data as Reservation[]);\n        } catch (err: any) {\n            notify(err.description ?? err.message, 'error');\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        queryParams.currentPage,\n        queryParams.itemsOnPage,\n        queryParams.from,\n        queryParams.search,\n        setQueryParams,\n        urlParams,\n        notify,\n        user\n    ]);\n\n\n    // when loading function is recalculated - trigger the loading\n    React.useEffect(() => {\n        load();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        load,\n        refresh\n    ]);\n\n\n    const triggerReload = React.useCallback(() => setQueryParams(old => Object.assign({}, old)), [\n        setQueryParams\n    ]);\n\n\n    const pingKeyForReservation = React.useCallback(async (id: number, key: string) => {\n        if (!reservations) return;\n        try {\n            const reservation = reservations.find(item => item.id === id);\n            if (!reservation) return false;\n\n            const resp = await ReservationService.pingKey(id, key);\n\n            setReservations(old => {\n                old && old.forEach(item => {\n                    if (item.id !== id) return;\n\n                    if (item.actualStart) {\n                        item.actualEnd = new Date().toString();\n                    } else {\n                        item.actualStart = new Date().toString();\n                    }\n\n                });\n                return Object.assign([], old);\n            });\n\n            roomContext && roomContext.setOccupied(!reservation.room.occupied);\n            resp?.data && notify(resp.data.toString(), 'success');\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [\n        reservations,\n        roomContext,\n        notify,\n    ]);\n\n\n    const createReservation = React.useCallback(async (data: CreateReservationData) => {\n        try {\n            await ReservationService.createOne(data);\n\n            triggerReload();\n            notify(\"Rezerwacja utworzona prawidłowo!\", 'success');\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true\n    }, [\n        notify,\n        triggerReload,\n    ]);\n\n\n    const deleteReservation = React.useCallback(async (reservationId: number) => {\n        try {\n            await ReservationService.remove(reservationId);\n            setReservations(old => old && old.filter(({ id }) => id !== reservationId));\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [notify]);\n\n\n    const updateReservation = React.useCallback(async (id: number, data: UpdateReservationData) => {\n        try {\n            await ReservationService.update(id, data); //call to API\n\n            //update state\n            setReservations((old) => {\n                return old && old.map(item => {\n                    if (item.id === id) {\n                        ['plannedStart', 'plannedEnd']\n                            .forEach(field => {\n                                if (field in data) {\n                                    item[field] = fromLocaleDateTimeString(data[field]).toUTCString();\n                                }\n                            });\n                        ['description', 'title']\n                            .forEach(field => {\n                                if (field in data) {\n                                    item[field] = data[field];\n                                }\n                            });\n                    }\n                    return item;\n                });\n            });\n\n            // when reservation room is changing\n            if ('roomId' in data) {\n                data.roomId && notify(\n                    'Rezerwacja zaktualizowana i przeniesiona!',\n                    'success',\n                    () => <Redirect to={getRoomLink(Number(data.roomId))} />\n                )\n            } else {\n                notify('Rezerwacja zaktualizowana!', 'success');\n            }\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [getRoomLink, notify]);\n\n\n    if (!reservations) return null;\n\n    return (\n        <reservationsContext.Provider value={{\n            reservations,\n            updateReservation,\n            deleteReservation,\n            createReservation,\n            pingKeyForReservation,\n        } as ReservationsContextValue}>\n            <ReservationModalContext>\n                {props.children}\n            </ReservationModalContext>\n        </reservationsContext.Provider>\n    );\n}","import Avatar from \"@mui/material/Avatar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { dynamicPaths } from \"../../../../../../shared/path\";\nimport ImageService from \"../../../../../../services/ImageService\";\nimport { displayDate } from \"../../../../../../shared/utils\";\nimport ReservationService from \"../../../../../../services/ReservationService\";\nimport { Link } from \"@mui/material\";\nimport React from \"react\";\nimport Image from \"../../../../../../models/Image\";\n\n\ninterface ReservationListItemProps {\n    data: Reservation,\n    onClick: () => void\n}\n\n// memoize avatar\nconst MemAvatar = React.memo((props: { img: Image }) => <Avatar alt=\"użytkownik\" src={ImageService.getLink(props.img)} />)\n\n\nexport default function ReservationListItem({\n    data, onClick\n}: ReservationListItemProps) {\n    const { message, color } = ReservationService.resolveStatus(data);\n\n    return (\n        <ListItem\n            component='li'\n            button\n            sx={{\n                mb: '2px',\n                bgcolor: color,\n                '&:hover, &:focus': {\n                    bgcolor: color,\n                    filter: 'brightness(97%)',\n                }\n            }}\n            onClick={onClick}\n        >\n            <ListItemAvatar>\n                <Link href={dynamicPaths.toUser(data.user.id)}>\n                    <MemAvatar img={data.user.image} />\n                </Link>\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={data.title}\n                secondary={displayDate(data.actualStart ?? data.plannedStart) + ' - ' + message}\n            />\n        </ListItem>\n    )\n}","import { List, ListItem, ListItemText } from \"@mui/material\";\nimport useReservationModalContext from \"../ReservationsContext/ModalContext/useReservationModalContext\";\nimport { useReservations } from \"../ReservationsContext\";\nimport ReservationListItem from \"./ReservationsListItem\";\nimport React from \"react\";\n\n\n\nexport default function ReservationsList() {\n    const { showReservation } = useReservationModalContext();\n    const { reservations } = useReservations();\n\n\n    const renderedList = React.useMemo(() =>\n        reservations.map((item) => <ReservationListItem\n            key={item.id}\n            data={item}\n            onClick={() => showReservation(item.id)}\n        />)\n        , [\n            reservations,\n            showReservation\n        ]);\n\n\n    return (\n        <List aria-label='lista rezerwacji'>\n            {reservations.length === 0 ?\n                <ListItem>\n                    <ListItemText primary='Brak rezerwacji spełniających kryteria.' />\n                </ListItem> :\n                renderedList\n            }\n        </List>\n    );\n}\n\n\n","import React from \"react\";\nimport { ReservationModalViewContext } from \"./ModalContextProvider\";\nimport ModalContextValue from \"./ModalContextValue\";\n\n\nexport default function useReservationModalContext() {\n    return React.useContext(ReservationModalViewContext) as ModalContextValue;\n}","import FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport ReservationService, { CreateReservationData, UpdateReservationData } from \"../../../../../services/ReservationService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../DateTimePicker\";\n\n\n\ninterface CreateReservationFormProps {\n    roomId?: number\n    onCancel: () => void\n}\n\n\nexport default function CreateReservationForm(props: CreateReservationFormProps) {\n    const notify = useNotification();\n    const { allRooms } = useResourceMap();\n\n    const [dates, setDates] = React.useState({\n        start: new Date(),\n        end: (new Date(Date.now() + 3600_000))\n    });\n\n    const [data, setData] = React.useState<CreateReservationData>({\n        title: '',\n        description: '',\n        plannedStart: '',\n        plannedEnd: '',\n        roomId: props.roomId ?? 0\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        data.plannedStart = dates.start.toLocaleString('pl');\n        data.plannedEnd = dates.end.toLocaleString('pl');\n\n        try {\n            await ReservationService.createOne(data);\n            notify(\"Rezerwacja utworzona!\", 'success');\n            props.onCancel()\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n        props,\n        dates.start,\n        dates.end\n    ]);\n\n\n    const setDate = React.useCallback((key: keyof UpdateReservationData, dateTime: Date) => {\n        setDates(old => ({\n            ...old,\n            [key]: dateTime,\n        }));\n    }, []);\n\n\n    return (\n        <FormGridContainer\n            title='Tworzenie rezerwacji'\n            subtitle=\"Stwórz rezerwację w wybranym przez siebie pokoju.\"\n            onSubmit={handleSubmit}\n            onCancel={props.onCancel}\n        >\n            <Grid item xs={12}>\n                <TextField\n                    title=\"Tytuł rezerwacji\"\n                    inputProps={{ title: \"Tytuł rezerwacji\" }}\n                    autoFocus\n                    required\n                    fullWidth\n                    // multiline\n                    maxRows={4}\n                    label=\"Tytuł\"\n                    id=\"outlined-multiline-flexible\"\n                    name='title'\n                    value={data.title}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    required\n                    fullWidth\n                    multiline\n                    maxRows={20}\n                    label=\"Opis\"\n                    id=\"outlined-multiline-flexible\"\n                    name='description'\n                    value={data.description}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <DateTimePicker\n                    label=\"Początek\"\n                    value={dates.start}\n                    onChange={(value) => setDate('start', value)}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <DateTimePicker\n                    label=\"Koniec\"\n                    value={dates.end}\n                    onChange={(value) => setDate('end', value)}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                    <Select\n                        required\n                        labelId=\"wybierz-budynek\"\n                        name=\"buildingId\"\n                        value={data.roomId}\n                        label=\"Budynek\"\n                        onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                    >\n                        {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n        </FormGridContainer>\n    );\n}","import React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport CreateReservationForm from \"./CreateReservationForm\";\n\n\ninterface CreateReservationModalProps {\n    open: boolean,\n    onClose: () => void,\n    roomId?: number\n}\n\nfunction CreateReservationModal(props: CreateReservationModalProps) {\n    return (\n        <GenericModal\n            open={props.open}\n            aria-label='Okno do tworzenia rezerwacji'\n            onClose={props.onClose}\n        >\n            <CreateReservationForm\n                roomId={props.roomId}\n                onCancel={props.onClose}\n            />\n\n        </GenericModal>\n    );\n}\n\nexport default React.memo(CreateReservationModal);","import MobileDatePicker from \"@mui/lab/MobileDatePicker\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { ReservationsQueryParams } from \"../../../../../services/ReservationService\";\nimport SelectButtonGroup from \"../../components/SelectButtonGroup\";\nimport LazyInput from \"../../components/LazyInput\";\nimport { isDate } from \"../../../../../shared/utils\";\nimport AddIcon from '@mui/icons-material/Add';\nimport CreateReservationModal from \"../CreateReservationModal\";\nimport { useParams } from \"react-router-dom\";\nimport { RoomViewParams } from \"../../../../../services/RoomService\";\nimport { BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport { AddressViewParams } from \"../../../../../services/AddressService\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\nconst buttons = [\n    { name: 'Dziś', value: 'today' },\n    { name: 'Ten tydzień', value: 'this week' },\n    { name: 'Od wczoraj', value: 'yesterday' },\n];\n\n\nfunction ReservationTabBar() {\n    const { reservationsAbility } = useResolvedAccess();\n    const { setQueryParams, queryParams } = useQueryParams<ReservationsQueryParams>();\n    const urlParams = useParams<RoomViewParams | BuildingViewParams | AddressViewParams>();\n\n    const [createReservationModalOpen, setCreateReservationModalOpen] = React.useState<boolean>(false);\n    const [customDate, setCustomDate] = React.useState(new Date(isDate(queryParams.from) ? queryParams.from ?? 'xxx' : Date.now()));\n\n    const handleButtonChange = React.useCallback((value: string) => {\n        setQueryParams((old: ReservationsQueryParams) => ({ ...old, from: value }));\n    }, [setQueryParams]);\n\n\n    const handleSubmitCustomDate = React.useCallback((evt: React.FormEvent) => {\n        evt.preventDefault();\n        setQueryParams((old: ReservationsQueryParams) => ({ ...old, from: customDate.toISOString() }))\n    }, [customDate, setQueryParams])\n\n\n    const handleSearchFieldChange = React.useCallback((evt) => {\n        setQueryParams(old => ({ ...old, search: evt.target.value }));\n    }, [setQueryParams]);\n\n\n    return (\n        <>\n            {reservationsAbility &&\n                <CreateReservationModal\n                    open={createReservationModalOpen}\n                    onClose={() => setCreateReservationModalOpen(false)}\n                    roomId={'roomId' in urlParams ? Number(urlParams.roomId) : undefined}\n                />\n            }\n\n            <Grid container\n                component='form'\n                onSubmit={handleSubmitCustomDate}\n                spacing={2}\n                alignItems='center'\n            >\n                <Grid item xs={12} md={12}>\n                    <SelectButtonGroup\n                        onChange={handleButtonChange}\n                        buttons={buttons}\n                        value={isDate(queryParams.from) ? '' : queryParams?.from ?? buttons[0].value}\n                    />\n                    <Box display='inline-flex' >\n                        <MobileDatePicker\n                            label=\"Od daty\"\n                            inputFormat=\"yyyy-MM-dd\"\n                            value={customDate}\n                            onChange={(value: Date | null) => value && setCustomDate(value)}\n                            renderInput={(params) => <TextField {...params} size='small' />}\n                        />\n                        <Button\n                            variant={queryParams?.from === customDate.toISOString() ? 'contained' : 'outlined'}\n                            type='submit'\n                            sx={{ ml: 1 }}\n                        >\n                            OK\n                        </Button>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <LazyInput\n                        name=\"search\"\n                        label='wyszukaj'\n                        value={queryParams.search ?? ''}\n                        onChange={handleSearchFieldChange}\n                    />\n                </Grid>\n\n                {reservationsAbility &&\n                    <Grid item xs={12}>\n                        <Button\n                            startIcon={<AddIcon />}\n                            onClick={() => setCreateReservationModalOpen(true)}\n                        >\n                            Stwórz rezerwację\n                        </Button>\n                    </Grid>\n                }\n            </Grid>\n        </>\n    );\n}\n\nexport default React.memo(ReservationTabBar);","import { Stack } from \"@mui/material\";\nimport { QueryParamsContext } from \"../../../../../contexts/QueryParamsContext\";\nimport ReservationsContext from \"./ReservationsContext\";\nimport { ReservationsQueryParams } from \"../../../../../services/ReservationService\";\nimport ListPagination from \"../../components/ListPagination\";\nimport ReservationsList from \"./ReservationsList\";\nimport ReservationTabBar from \"./ReservationTabBar\";\nimport React from \"react\";\n\n\n\nfunction GenericReservationsTab() {\n    return (\n        <QueryParamsContext name='reservations-query-params' default={{\n            itemsOnPage: 5,\n            currentPage: 1,\n            from: 'today'\n        } as ReservationsQueryParams}>\n            <ReservationsContext>\n                <Stack rowGap={3}>\n                    <ReservationTabBar />\n                    <ReservationsList />\n                    <ListPagination />\n                </Stack>\n            </ReservationsContext>\n        </QueryParamsContext>\n    );\n}\n\nexport default React.memo(GenericReservationsTab);","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport paths from \"../../../../../shared/path\";\nimport AddressService, { AddressViewParams, UpdateAddressParams } from \"../../../../../services/AddressService\";\nimport AddressContextValue from \"./AddressContextValue\";\nimport Address from \"../../../../../models/Address\";\nimport Building from \"../../../../../models/Building\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\n\n\n\ninterface AddressContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport const addressContext: any = React.createContext(null);\n\n\nexport default function AddressContextProvider(props: AddressContextProviderProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n\n    const urlParams = useParams<AddressViewParams>();\n\n    const [address, setAddress] = React.useState<Address>();\n\n\n    React.useLayoutEffect(() => {\n        AddressService.setPath(urlParams);\n    }, [urlParams])\n\n\n    const getAddress = React.useCallback(async () => {\n        const resp = await AddressService.getCurrentOne();\n        setAddress(resp.data as Address);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        getAddress();\n    }, [getAddress]);\n\n\n    const getBuildingsInAddress = React.useCallback(async () => {\n        try {\n            const resp = await AddressService.getBuildings();\n            return resp.data as Building[];\n        } catch (err: any) {\n            return [];\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    const updateAddress = React.useCallback(async (data: UpdateAddressParams) => {\n        try {\n            await AddressService.update(data)\n\n            setAddress(old => {\n                return {\n                    ...old,\n                    ...data as Address\n                }\n            });\n\n            reloadMap()\n\n            notify('Adres zaktualizowany', 'success');\n            return true;\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n    ])\n\n\n\n    const deleteAddress = React.useCallback(async () => {\n        try {\n            await AddressService.remove();\n            reloadMap();\n            notify(\"Adres został usunięty\", 'success', () => <Redirect to={paths.HOME} />);\n        } catch (err: any) {\n            address &&\n                notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        address,\n        reloadMap,\n    ]);\n\n\n    if (!Boolean(address)) return null;\n\n    return (\n        <addressContext.Provider value={{\n            address,\n            deleteAddress,\n            getBuildingsInAddress,\n            updateAddress\n        } as AddressContextValue}>\n\n            {props.children}\n\n        </addressContext.Provider>\n    );\n}","import React from \"react\";\nimport { addressContext } from \"./AddressContextProvider\";\nimport AddressContextValue from \"./AddressContextValue\";\n\n\nexport default function useAddress() {\n    return React.useContext(addressContext) as AddressContextValue;\n}","import { styled, SxProps } from \"@mui/system\";\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Address from \"../../../../../models/Address\";\n\n\n\ninterface MapProps {\n    address: Address,\n    sx?: SxProps\n}\n\nconst StyledIframe = styled('iframe')({\n    width: '100%',\n    height: '50vh',\n    maxHeight: '400px',\n    minHeight: '300px'\n});\n\n\nexport default function Map({ address, sx }: MapProps) {\n\n    const url = React.useMemo(() => {\n        const { street, number, town, country } = address;\n\n        const base = new URL('https://maps.google.com/maps');\n        const params = new URLSearchParams({\n            q: `${street + \" \" + number + \" \" + town + \" \" + country}`,\n            ie: 'UTF8',\n            z: '14',\n            iwloc: '',\n            output: 'embed'\n        });\n        base.search = params.toString();\n\n        return base.toString();\n    }, [address]);\n\n    return (\n        <Box>\n            <StyledIframe\n                src={url}\n                frameBorder=\"0\"\n                sx={{ ...sx }}\n            />\n        </Box>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport { useAddress } from \"../AddressContext\";\nimport { UpdateAddressParams } from \"../../../../../services/AddressService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\n\ninterface AddressEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\n\nexport default function AddressEditForm({\n    open,\n    onClose\n}: AddressEditFormProps) {\n    const { address, updateAddress } = useAddress();\n\n    const [data, setData] = React.useState<UpdateAddressParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old: UpdateAddressParams) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateAddress(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateAddress,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do edycji budynku\"\n        >\n            <FormGridContainer\n                title='Edycja adresu'\n                subtitle=\"Zmień właściwości adresu i zatwierdź zmiany.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"country\"\n                        label=\"Kraj\"\n                        name=\"country\"\n                        value={data.country ?? address.country}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        autoFocus\n                        required\n                        fullWidth\n                        id=\"town\"\n                        label=\"Miasto\"\n                        name=\"town\"\n                        value={data.town ?? address.town}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"postalCode\"\n                        label=\"Kod pocztowy\"\n                        name=\"postalCode\"\n                        value={data.postalCode ?? address.postalCode}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={8}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"street\"\n                        label=\"Ulica\"\n                        name=\"street\"\n                        value={data.street ?? address.street}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"number\"\n                        label=\"Number\"\n                        name=\"number\"\n                        value={data.number ?? address.number}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport { BuildingCreateParams } from \"../../../../../services/BuildingService\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport { timeFormat } from \"../../../../../shared/utils\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateBuildingFormProps {\n    open: boolean,\n    onClose: () => void,\n    handleCreateBuilding: (data: BuildingCreateParams) => Promise<boolean>\n}\n\n\nexport default function CreateBuildingForm({\n    open,\n    onClose,\n    handleCreateBuilding,\n}: CreateBuildingFormProps) {\n    const [data, setData] = React.useState<BuildingCreateParams>({\n        name: '',\n        openTime: (new Date(0, 0, 0, 7, 0)).toString(),\n        closeTime: (new Date(0, 0, 0, 21, 0)).toString()\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        const success = await handleCreateBuilding({\n            ...data,\n            closeTime: timeFormat.format(new Date(data.closeTime)),\n            openTime: timeFormat.format(new Date(data.openTime))\n        });\n\n        if (success) {\n            onClose();\n        }\n\n    }, [\n        data,\n        onClose,\n        handleCreateBuilding,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do tworzenia budynku\"\n        >\n            <FormGridContainer\n                title='Dodaj nowy budynek!'\n                subtitle=\"Wypełnij dane nowego budynku i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nazwa\"\n                        name=\"name\"\n                        autoFocus\n                        value={data.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6} >\n                    <MobileTimePicker\n                        label=\"Godzina otwarcia\"\n                        inputFormat=\"HH:mm\"\n                        value={data.openTime}\n                        onChange={(value: any) => setData(old => ({ ...old, openTime: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <MobileTimePicker\n                        label=\"Godzina zamknięcia\"\n                        inputFormat=\"HH:mm\"\n                        value={data.closeTime}\n                        onChange={(value: any) => setData(old => ({ ...old, closeTime: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport AddressService, { CreateAddressParams } from \"../../../../../services/AddressService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateAddressFormProps {\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport default function CreateAddressForm({\n    open,\n    onClose,\n}: CreateAddressFormProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n\n    const [data, setData] = React.useState<CreateAddressParams>({\n        country: 'Polska',\n        town: '',\n        street: '',\n        number: '',\n        postalCode: '',\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old: CreateAddressParams) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        try {\n            await AddressService.create(data);\n            reloadMap();\n            notify('Adres został dodany', 'success');\n            onClose();\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n        onClose,\n        reloadMap,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do tworzenia adresu\"\n        >\n            <FormGridContainer\n                title='Dodaj nowy adres!'\n                subtitle=\"Wypełnij dane nowego adresu i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"country\"\n                        label=\"Kraj\"\n                        name=\"country\"\n                        value={data.country}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"town\"\n                        label=\"Miasto\"\n                        name=\"town\"\n                        autoFocus\n                        value={data.town}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"postalCode\"\n                        label=\"Kod pocztowy\"\n                        name=\"postalCode\"\n                        value={data.postalCode}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={8}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"street\"\n                        label=\"Ulica\"\n                        name=\"street\"\n                        value={data.street}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"number\"\n                        label=\"Number\"\n                        name=\"number\"\n                        value={data.number}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import { Card, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport Map from \"./Map\";\nimport { useAddress } from \"../AddressContext\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { AddressEditForm } from \"../Forms\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\n\n\nexport default function AddressCard() {\n    const { premisesAdmin } = useResolvedAccess();\n    const { address, deleteAddress } = useAddress();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);\n    const [editModalOpen, setEditModalOpen] = React.useState(false);\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n    return (\n        <>\n            {premisesAdmin &&\n                <>\n                    <DeleteModal\n                        objectName={`${address.street} ${address.number}`}\n                        open={deleteModalOpen}\n                        onClose={() => setDeleteModalOpen(false)}\n                        onSuccess={deleteAddress}\n                    />\n\n                    <AddressEditForm\n                        open={editModalOpen}\n                        onClose={() => setEditModalOpen(false)}\n                    />\n                </>\n            }\n            <Card elevation={0}>\n                <CardHeader\n                    action={premisesAdmin && <MoreVertMenu options={options} />}\n                    title={<>{address.country}, {address.town}</>}\n                    subheader={<>{address.street} {address.number}</>}\n                />\n                <CardMedia component=\"div\">\n                    <Map address={address} />\n                </CardMedia>\n                <CardContent>\n                    <Typography component='p'>\n                        ul. {address.street} {address.number}<br />\n                        {address.postalCode} {address.town}, <br />\n                        {address.country}\n                    </Typography>\n                    <br />\n                    <DatesFooter model={address} />\n                </CardContent>\n            </Card>\n        </>\n    )\n}","import Service from \"./Service\";\nimport { AddressViewParams } from \"./AddressService\";\n\n\n\nexport interface BuildingViewParams {\n    addressId: string,\n    buildingId: string,\n}\n\n\nexport interface BuildingUpdateParams {\n    [index: string]: string | number | undefined,\n    name?: string,\n    closeTime?: string,\n    openTime?: string,\n    addressId?: number\n}\n\nexport interface BuildingCreateParams {\n    name: string,\n    closeTime: string,\n    openTime: string,\n}\n\n\nclass BuildingService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath({ addressId, buildingId }: BuildingViewParams) {\n        this._path = `/addresses/${addressId}/buildings/${buildingId}`;\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(data: BuildingUpdateParams) {\n        return this.patch(this.path, data);\n    }\n\n    public create({ addressId }: AddressViewParams, data: BuildingCreateParams) {\n        return this.post(`/addresses/${addressId}/buildings`, data)\n    }\n\n    public getRoomsInBuilding() {\n        return this.get(`${this.path}/rooms`);\n    }\n}\n\nexport default new BuildingService()","import { List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\ninterface ScrollableListProps {\n    onAddItem: () => void,\n    children: React.ReactNode[] | React.ReactNode,\n}\n\n\nexport default function ScrollableList(props: ScrollableListProps) {\n    const { premisesAdmin } = useResolvedAccess();\n\n    return (\n        <Box>\n            <List sx={{\n                minHeight: '160px',\n                maxHeight: '400px'\n            }}>\n                {premisesAdmin &&\n                    <ListItem button onClick={props.onAddItem}>\n                        <ListItemIcon >\n                            <AddCircleIcon color='primary' />\n                        </ListItemIcon>\n                        <ListItemText primary='Dodaj element' />\n                    </ListItem>\n                }\n                {props.children}\n            </List>\n        </Box>\n    )\n}\n\n\n","import { Link, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport LinkIcon from '@mui/icons-material/Link';\nimport React from \"react\";\n\n\ninterface ScrollableListItemProps {\n    primary: string | React.ReactNode,\n    link: string,\n}\n\n\nfunction ScrollableListItem(props: ScrollableListItemProps) {\n    return (\n        <ListItem button\n            component={Link}\n            href={props.link}\n            sx={{ py: '2px' }}\n        >\n            <ListItemIcon>\n                <LinkIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.primary} />\n        </ListItem>\n    );\n}\n\nexport default React.memo(ScrollableListItem);","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport Building from \"../../../../../models/Building\";\nimport { AddressViewParams } from \"../../../../../services/AddressService\";\nimport BuildingService, { BuildingCreateParams } from \"../../../../../services/BuildingService\";\nimport ScrollableList, { ScrollableListItem } from \"../../components/ScrollableList\";\nimport SmallCard from \"../../components/SmallCard\";\nimport { useAddress } from \"../AddressContext\";\nimport { CreateBuildingForm } from \"../Forms\";\n\n\nfunction BuildingsList() {\n    const { getBuildingsInAddress } = useAddress();\n    const { reloadMap } = useResourceMap();\n    const notify = useNotification();\n\n    const urlParams = useParams() as AddressViewParams;\n\n    const [createBuildingModalOpen, setCreateBuildingModalOpen] = React.useState<boolean>(false);\n    const [buildings, setBuildings] = React.useState<Building[]>();\n\n\n    const load = React.useCallback(async () => {\n        const buildings = await getBuildingsInAddress();\n        setBuildings(buildings);\n    }, [getBuildingsInAddress])\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const createBuilding = React.useCallback(async (data: BuildingCreateParams) => {\n        try {\n            await BuildingService.create(urlParams, data);\n            load();\n            reloadMap();\n            notify('Nowa sala utworzona!', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        load,\n        urlParams,\n    ]);\n\n\n    const renderedBuildings = React.useMemo(() => {\n        return buildings?.map(item => <ScrollableListItem key={item.id}\n            primary={`Budynek ${item.name}`}\n            link={`./${item.address}/buildings/${item.id}`}\n        />)\n    }, [buildings]);\n\n\n    return (\n        <>\n            <CreateBuildingForm\n                open={createBuildingModalOpen}\n                onClose={() => setCreateBuildingModalOpen(false)}\n                handleCreateBuilding={createBuilding}\n            />\n\n            <SmallCard title='Budynki pod adresem'>\n                <ScrollableList\n                    onAddItem={() => setCreateBuildingModalOpen(true)}\n                >\n                    {renderedBuildings}\n                </ScrollableList>\n            </SmallCard>\n            <br />\n        </>\n    );\n}\n\nexport default React.memo(BuildingsList);","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport Loading from \"../../../../shared/components/Loading\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport AddressContext from \"./AddressContext\";\nimport AddressCard from \"./components/AddressCard\";\nimport BuildingsList from \"./components/BuildingsList\";\n\nconst LazyAddressCharts = React.lazy(() => import(\"./components/AddressCharts\"));\nconst AddressCharts = () => <React.Suspense fallback={<Loading />}>\n    <LazyAddressCharts />\n</React.Suspense>\n\n\n\nfunction AddressPage() {\n    const { logsAdmin, statsViewer } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <AddressCharts /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        logsAdmin,\n        statsViewer\n    ]);\n\n\n    return (\n        <AddressContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item container spacing={2} alignContent='flex-start' xs={12} md={5} lg={4}>\n                    <Grid item xs={12}>\n                        <AddressCard />\n                    </Grid>\n                    <Grid item xs={12} >\n                        <BuildingsList />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </AddressContext>\n    );\n}\n\nexport default React.memo(AddressPage);","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { DetailedBuilding } from \"../../../../../models/Building\";\nimport BuildingService, { BuildingUpdateParams, BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport BuildingContextValue from \"./BuildingContextValue\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\nimport Room from \"../../../../../models/Room\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\n\n\ninterface BuildingContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport const buildingContext: any = React.createContext(null);\n\n\nexport default function BuildingContextProvider(props: BuildingContextProviderProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n    const urlParams = useParams<BuildingViewParams>();\n\n    const [building, setBuilding] = React.useState<DetailedBuilding>();\n\n\n    React.useLayoutEffect(() => {\n        BuildingService.setPath(urlParams);\n    }, [urlParams])\n\n\n    const getBuilding = React.useCallback(async () => {\n        const resp = await BuildingService.getCurrentOne();\n        setBuilding(resp.data as DetailedBuilding);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        getBuilding();\n    }, [getBuilding]);\n\n\n    const getRoomsInBuilding = React.useCallback(async () => {\n        try {\n            const resp = await BuildingService.getRoomsInBuilding();\n            return resp.data as Room[];\n        } catch (err: any) {\n            return [];\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams])\n\n\n    const updateBuilding = React.useCallback(async (data: BuildingUpdateParams) => {\n        try {\n            if (await BuildingService.update(data)) {\n\n                if (\n                    building &&\n                    (\n                        ('addressId' in data && building.address.id !== data.addressId)\n                        || ('name' in data)\n                    )\n                ) {\n                    reloadMap();\n                }\n\n                setBuilding((old) => {\n                    old && Object.keys(data).forEach((key) => {\n                        switch (key) {\n                            case 'addressId':\n                                old.address.id = Number(data[key]);\n                                break;\n                            default:\n                                old[key] = data[key];\n                                break;\n                        }\n                    });\n                    return Object.assign({}, old);\n                })\n                notify('Bydynek zaktualizowany', 'success');\n                return true;\n            }\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify, building, reloadMap]);\n\n\n    const deleteBuilding = React.useCallback(async () => {\n        try {\n            await BuildingService.remove();\n            building && notify(\"Budynek usunięty\", 'success', () => <Redirect to={dynamicPaths.toAddress(building.address.id)} />);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify, building]);\n\n\n    if (!Boolean(building)) return null;\n\n    return (\n        <buildingContext.Provider value={{\n            building,\n            deleteBuilding,\n            getRoomsInBuilding,\n            updateBuilding,\n        } as BuildingContextValue}>\n\n            {props.children}\n\n        </buildingContext.Provider>\n    );\n}","import React from \"react\";\nimport { buildingContext } from \"./BuildingContextProvider\";\nimport BuildingContextValue from \"./BuildingContextValue\";\n\n\nexport default function useBuilding() {\n    return React.useContext(buildingContext) as BuildingContextValue;\n}","import { Button, Grid } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\nimport React from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { Redirect, useLocation, useParams } from \"react-router-dom\";\nimport Image from \"../../../../models/Image\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport { UserViewParams } from \"../../../../services/UserService\";\nimport { BuildingViewParams } from \"../../../../services/BuildingService\";\nimport { RoomViewParams } from \"../../../../services/RoomService\";\nimport ImageService from \"../../../../services/ImageService\";\n\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst StyledImage = styled('img')({\n    width: \"fill-available\",\n    maxHeight: '350px'\n});\n\ninterface ImageUploadFieldProps {\n    image?: Image,\n    onUpload?: () => void;\n    onDelete?: () => void;\n}\n\nexport default function ImageUploadField(props: ImageUploadFieldProps) {\n    const notify = useNotification();\n    const location = useLocation();\n    const urlParams = useParams<UserViewParams | BuildingViewParams | RoomViewParams>();\n    const [uploadedImage, setUploadedImage] = React.useState<Blob>();\n\n\n    const handleSubmit = React.useCallback(async (evt: React.FormEvent) => {\n        evt.preventDefault();\n        if (!uploadedImage) {\n            notify(\"Najpierw załaduj nowy obraz\", \"warning\");\n            return;\n        }\n        try {\n            await ImageService.upload(urlParams, uploadedImage);\n            props.onUpload && props.onUpload();\n            notify(\"Obraz został zmieniony\", 'success',\n                () => <Redirect to={location.pathname} /> // rerender the current page\n            );\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        uploadedImage,\n        props,\n        notify,\n        location,\n        urlParams,\n    ]);\n\n\n    const handleImageUpload = React.useCallback((evt: any) => {\n        if (evt.target.files && evt.target.files[0]) {\n            const img = evt.target.files[0];\n            setUploadedImage(img);\n        }\n    }, []);\n\n\n    const handleRemoveImgae = React.useCallback(async () => {\n        try {\n            await ImageService.remove(urlParams);\n            props.onDelete && props.onDelete();\n            notify(\"Przywrócono domyślny obraz, załaduj ponownie aby zobaczyć rezultat.\", \"success\",\n                () => <Redirect to={location.pathname} /> // rerender the current page\n            );\n\n        } catch (err: any) {\n            notify(err.description, \"error\");\n        }\n    }, [\n        props,\n        notify,\n        location,\n        urlParams,\n    ]);\n\n\n    return (\n        <Grid container component=\"form\"\n            onSubmit={handleSubmit}\n            direction=\"row\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <Grid item xs={12} sm={9}>\n                <StyledImage\n                    src={uploadedImage ? URL.createObjectURL(uploadedImage) : ImageService.getLink(props.image)}\n                    alt='nowy obraz'\n                />\n            </Grid>\n            <Grid item xs={12} sm={3} sx={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n            }}>\n                <label htmlFor=\"upload-obrazu\">\n                    <Input\n                        accept=\"*.(jpg|png)\"\n                        id=\"upload-obrazu\"\n                        type=\"file\"\n                        onChange={handleImageUpload}\n                    />\n                    <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        component=\"span\">\n                        Wybierz zdjęcie\n                    </Button>\n                </label>\n\n                <Button color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={handleRemoveImgae}\n                >\n                    Usuń\n                </Button>\n\n                <Button\n                    type=\"submit\"\n                    color=\"success\"\n                    startIcon={<SaveIcon />}\n                >\n                    Zapisz\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}","import Model from './Model';\nimport Image from './Image';\nimport Building from './Building';\n\nexport enum RoomTypes {\n    LABORATORY = \"Sala laboratoryjna\",\n    CONFERENCE = \"Sala konferencyjna\",\n    LECTURE = \"Sala wykładowa\"\n}\n\nexport type RoomType = RoomTypes.LABORATORY | RoomTypes.CONFERENCE | RoomTypes.LECTURE;\n\ninterface BaseRoom extends Model {\n    name: string,\n    image: Image,\n    roomType: RoomType,\n    seatsCount: number,\n    floor: number,\n    blocked: boolean,\n    occupied: boolean,\n    RFIDTag: null | string\n}\n\nexport default interface Room extends BaseRoom {\n    building: number\n}\n\nexport interface DetailedRoom extends BaseRoom {\n    building: Building\n}","import Grid from \"@mui/material/Grid\";\nimport { SelectChangeEvent } from \"@mui/material/Select/SelectInput\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { BuildingUpdateParams } from \"../../../../../services/BuildingService\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useBuilding } from \"../BuildingContext\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport { timeFormat } from \"../../../../../shared/utils\";\nimport ImageUploadField from \"../../components/ImageUploadField\";\nimport Divider from \"@mui/material/Divider\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\n\ninterface BuildingEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\n\nfunction timeToDate(value: string) {\n    const [h, m] = value.split(':');\n    return new Date(0, 0, 0, Number(h), Number(m));\n}\n\n\nexport default function BuildingEditForm({\n    open,\n    onClose,\n}: BuildingEditFormProps) {\n    const { allAddresses } = useResourceMap();\n    const { updateBuilding, building } = useBuilding();\n\n    const [data, setData] = React.useState<BuildingUpdateParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n\n        setData((old: BuildingUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleTime = React.useCallback((field: 'closeTime' | 'openTime', value: Date) => {\n        setData(old => {\n            old[field] = timeFormat.format(value);\n            return Object.assign({}, old);\n        });\n    }, [])\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateBuilding(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateBuilding,\n    ]);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<string | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'addressId') value = Number(value);\n\n        event.target && setData((old: BuildingUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno edycji budynku\"\n        >\n            <Stack spacing={3}>\n\n                <ImageUploadField image={building.image} />\n                <Divider />\n\n                <FormGridContainer\n                    title='Edycja budynku'\n                    subtitle=\"Zmień właściwości budynku i zatwierdź zmiany.\"\n                    onSubmit={handleSubmit}\n                    onCancel={onClose}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nazwa\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? building.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6} >\n                        <MobileTimePicker\n                            label=\"Godzina otwarcia\"\n                            inputFormat=\"HH:mm\"\n                            value={timeToDate(data.openTime ?? building.openTime)}\n                            onChange={(value: any) => handleTime('openTime', value)}\n                            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <MobileTimePicker\n                            label=\"Godzina zamknięcia\"\n                            inputFormat=\"HH:mm\"\n                            value={timeToDate(data.closeTime ?? building.closeTime)}\n                            onChange={(value: any) => handleTime('closeTime', value)}\n                            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"wybierz-adres\">Adres</InputLabel>\n                            <Select\n                                labelId=\"wybierz-adres\"\n                                name=\"addressId\"\n                                value={data.addressId ?? building.address.id}\n                                label=\"Adres\"\n                                onChange={handleSelectChange}\n                            >\n                                {allAddresses.map(({ name, id }) => <MenuItem key={name} value={id} >{name} </MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    );\n}","import FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { RoomType, RoomTypes } from \"../../../../../models/Room\";\nimport { CreateRoomParams } from \"../../../../../services/RoomService\";\nimport GenericModal from \"../../components/GenericModal\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateRoomFormProps {\n    open: boolean,\n    onClose: () => void,\n    handleCreateRoom: (data: CreateRoomParams) => Promise<boolean>\n}\n\n\nexport default function CreateRoomForm({\n    open,\n    onClose,\n    handleCreateRoom,\n}: CreateRoomFormProps) {\n\n    const [data, setData] = React.useState<CreateRoomParams>({\n        name: '',\n        roomType: RoomTypes.LECTURE,\n        seatsCount: 50,\n        floor: 0\n    });\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<RoomType | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'buildingId') value = Number(value);\n\n        event.target && setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await handleCreateRoom(data)) {\n            onClose();\n        }\n\n    }, [\n        data,\n        handleCreateRoom,\n        onClose,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno edycji budynku\"\n        >\n            <FormGridContainer\n                title='Dodaj nową salę'\n                subtitle=\"Wypełnij dane nowej sali i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nazwa\"\n                        name=\"name\"\n                        autoFocus\n                        value={data.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"room-type\">Typ Sali</InputLabel>\n                        <Select\n                            required\n                            labelId=\"room-type\"\n                            id=\"roomType\"\n                            value={data.roomType}\n                            name=\"roomType\"\n                            label=\"Typ Sali\"\n                            onChange={handleSelectChange}\n                        >\n                            {Object.values(RoomTypes).map(val => <MenuItem key={val} value={val}>{val}</MenuItem>)}\n\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={6} >\n                    <TextField\n                        required\n                        name=\"seatsCount\"\n                        label=\"Ilość miejsc\"\n                        type=\"number\"\n                        id=\"seatsCount\"\n                        value={data.seatsCount}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        name=\"floor\"\n                        label=\"Piętro\"\n                        type=\"number\"\n                        id=\"floor\"\n                        value={data.floor}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal >\n    );\n}","\n\n\nexport enum FavType {\n    Building = 'building-item',\n    Room = 'room-item'\n}\n\n\ninterface FavouriteItem {\n    id: number,\n    name: string,\n    type: FavType,\n}\n\nexport interface FavouriteBuilding extends FavouriteItem {\n    addressId: number,\n}\n\nexport interface FavouriteRoom extends FavouriteBuilding {\n    buildingId: number,\n}\n\n\nexport default interface Metadata {\n    notes?: string,\n    favourites?: (FavouriteBuilding | FavouriteRoom)[]\n}\n","import StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport IconButton from '@mui/material/IconButton';\nimport React from 'react';\nimport { FavouriteBuilding, FavouriteRoom } from '../../../../models/Metadata';\nimport MetadataService from '../../../../services/MetadataService';\n\n\n\ninterface FavouriteButtonProps {\n    data: FavouriteBuilding | FavouriteRoom\n}\n\n\nexport default function FavouriteButton(props: FavouriteButtonProps) {\n    const [marked, setMarked] = React.useState(false);\n\n    React.useEffect(() => {\n        setMarked(MetadataService.isFavourite(props.data));\n    }, [props.data]);\n\n\n    const addToFavourites = React.useCallback(() => {\n        if (marked) {\n            MetadataService.removeFavourite(props.data);\n        } else {\n            MetadataService.addFavourite(props.data);\n        }\n\n        setMarked(old => !old);\n    }, [\n        marked,\n        props.data,\n    ]);\n\n\n    return (\n        <IconButton sx={{display:'inline'}} onClick={addToFavourites} color='warning'>\n            {marked ? <StarIcon /> : <StarBorderIcon />}\n        </IconButton>\n    );\n}","import { Card, CardContent, CardHeader, CardMedia, Link } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport React from \"react\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport { useBuilding } from \"../BuildingContext\";\nimport { BuildingEditForm } from \"../Forms\";\nimport FavouriteButton from \"../../components/FavouriteButton\";\nimport { FavType } from \"../../../../../models/Metadata\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\n\n\nexport default function BuildingView() {\n    const { premisesAdmin } = useResolvedAccess();\n    const { building, deleteBuilding } = useBuilding();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    if (!Boolean(building)) return null;\n\n    return (\n        <>\n            {premisesAdmin &&\n                <>\n                    <DeleteModal\n                        objectName={building.name}\n                        open={deleteModalOpen}\n                        onClose={() => setDeleteModalOpen(false)}\n                        onSuccess={deleteBuilding}\n                    />\n\n                    <BuildingEditForm\n                        open={editModalOpen}\n                        onClose={() => setEditModalOpen(false)}\n                    />\n                </>\n            }\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={\n                        premisesAdmin &&\n                        <MoreVertMenu options={options} />\n                    }\n                    title={\n                        <>\n                            Budynek {building.name}\n                            <FavouriteButton data={{\n                                id: building.id,\n                                name: building.name,\n                                type: FavType.Building,\n                                addressId: building.address.id,\n                            }} />\n                        </>\n                    }\n                    subheader={<>{building.openTime} - {building.closeTime}</>}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"350\"\n                    image={ImageService.getLink(building.image)}\n                    alt={building.name}\n                />\n                <CardContent>\n                    <Link href={dynamicPaths.toAddress(building.address.id)}>\n                        {building.address.town},&nbsp;{building.address.street}&nbsp;{building.address.number}\n                    </Link>\n                    <br />\n                    <DatesFooter model={building} />\n                </CardContent>\n            </Card>\n        </>\n    );\n}","import React from \"react\";\nimport Room from \"../../../../../models/Room\";\nimport ScrollableList, { ScrollableListItem } from \"../../components/ScrollableList\";\nimport { useBuilding } from \"../BuildingContext\";\nimport { CreateRoomForm } from \"../Forms\";\nimport RoomService, { CreateRoomParams } from \"../../../../../services/RoomService\";\nimport { useParams } from \"react-router-dom\";\nimport { BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport SmallCard from \"../../components/SmallCard\";\n\n\n\nfunction RoomsList() {\n    const { getRoomsInBuilding } = useBuilding();\n    const { reloadMap } = useResourceMap();\n\n    const urlParams = useParams() as BuildingViewParams;\n    const notify = useNotification();\n\n    const [createRoomModalOpen, setCreateRoomModalOpen] = React.useState<boolean>(false);\n    const [rooms, setRooms] = React.useState<Room[]>();\n\n\n    const load = React.useCallback(async () => {\n        const rooms = await getRoomsInBuilding();\n        setRooms(rooms);\n    }, [\n        getRoomsInBuilding\n    ]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const createRoom = React.useCallback(async (data: CreateRoomParams) => {\n        try {\n            await RoomService.create(urlParams, data);\n            notify('Nowa sala utworzona!', 'success');\n            load();\n            reloadMap();\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        load,\n        urlParams,\n    ]);\n\n\n    const renderedRooms = React.useMemo(() => {\n        return rooms?.map(item => <ScrollableListItem\n            key={item.id}\n            primary={`Sala ${item.name}`}\n            link={`./${item.building}/rooms/${item.id}`}\n        />)\n    }, [rooms])\n\n\n    return (\n        <>\n            <CreateRoomForm\n                handleCreateRoom={createRoom}\n                open={createRoomModalOpen}\n                onClose={() => setCreateRoomModalOpen(false)}\n            />\n\n            <SmallCard title=\"Sale w budynku\">\n                <ScrollableList onAddItem={() => setCreateRoomModalOpen(true)}>\n                    {renderedRooms}\n                </ScrollableList>\n            </SmallCard>\n            <br />\n        </>\n    );\n}\n\nexport default React.memo(RoomsList);","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport BuildingContext from \"./BuildingContext\";\nimport BuildingCard from \"./components/BuildingCard\";\nimport RoomsList from \"./components/RoomsList\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport Loading from \"../../../../shared/components/Loading\";\n\n\n\nconst LazyRoomOrBuildingChartTab = React.lazy(() => import(\"../components/RoomOrBuildingChartTab\"));\nconst RoomOrBuildingChartTab = () => <React.Suspense fallback={<Loading />}>\n    <LazyRoomOrBuildingChartTab />\n</React.Suspense>\n\n\nfunction BuildingPage() {\n    const { logsAdmin, statsViewer } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <RoomOrBuildingChartTab /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        logsAdmin,\n        statsViewer\n    ]);\n\n\n    return (\n        <BuildingContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item container spacing={2} alignContent='flex-start' xs={12} md={5} lg={4}>\n                    <Grid item xs={12}>\n                        <BuildingCard />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <RoomsList />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </BuildingContext>\n    );\n};\n\nexport default React.memo(BuildingPage);","import { IconButton, Link, List, ListItem, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport useSession from \"../../../../auth/useSession\";\nimport { FavouriteBuilding, FavouriteRoom, FavType } from \"../../../../models/Metadata\";\nimport MetadataService from \"../../../../services/MetadataService\";\nimport SmallCard from \"../components/SmallCard\";\nimport { dynamicPaths } from \"../../../../shared/path\";\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\n\n\nfunction getCorrectListItem(data: FavouriteBuilding | FavouriteRoom): React.ReactNode {\n    switch (data.type) {\n        case FavType.Building: {\n            const { addressId, id, name } = data as FavouriteBuilding;\n            return <ListItemText key={name + id} primary={<Link href={dynamicPaths.toBuilding(addressId, id)}>Budynek {name}</Link>} />\n        }\n        case FavType.Room: {\n            const { addressId, buildingId, id, name } = data as FavouriteRoom;\n            return <ListItemText key={name + id} primary={<Link href={dynamicPaths.toRoom(addressId, buildingId, id)}>Sala {name}</Link>} />\n        }\n        default: return null;\n    }\n}\n\n\nfunction Favourites() {\n    const { user } = useSession();\n\n    const [data, setData] = React.useState<(FavouriteBuilding | FavouriteRoom)[]>()\n\n\n    React.useEffect(() => {\n        setData(MetadataService.favourites);\n    }, [user])\n\n    const handleRemoveFavourite = React.useCallback((item: FavouriteBuilding | FavouriteRoom) => {\n        MetadataService.removeFavourite(item);\n        setData(MetadataService.favourites);\n    }, []);\n\n    return (\n        <SmallCard title='Ulubione'>\n            <List sx={{ minHeight: '160px' }}>\n                {\n                    data?.map((item) => <ListItem disablePadding key={`${item.name}-${item.id}`}>\n                        {getCorrectListItem(item)}\n                        <IconButton\n                            onClick={() => handleRemoveFavourite(item)}\n                            size='small'>\n                            <RemoveCircleOutlineIcon fontSize=\"small\" />\n                        </IconButton>\n                    </ListItem>\n                    )\n                }\n                {\n                    data?.length === 0 &&\n                    <ListItemText color='text.secondary' primary='Brak ulubionych' />\n                }\n            </List>\n        </SmallCard>\n    )\n}\n\nexport default React.memo(Favourites);\n","import { Button, InputBase } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport SaveIcon from '@mui/icons-material/Save';\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport SmallCard from \"../components/SmallCard\";\nimport MetadataService from \"../../../../services/MetadataService\";\n\n\n\nfunction Notebook() {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<string>();\n\n\n    React.useEffect(() => {\n        setData(MetadataService.notes)\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (!data) return;\n\n        try {\n            MetadataService.notes = data;\n\n            notify('Notatki zostały zapisane', 'success');\n            setData(undefined);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n    ]);\n\n\n    const handleChange = React.useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n        setData(event.target.value)\n    }, []);\n\n\n    return (\n        <SmallCard title='Notatnik'>\n            <Box component='form' onSubmit={handleSubmit} sx={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                flexDirection: 'column',\n            }}>\n                <InputBase\n                    aria-label=\"twoje notatki\"\n                    title='twoje notatki'\n                    multiline\n                    minRows={4}\n                    maxRows={10}\n                    name='search'\n                    value={data ?? MetadataService.notes ?? ''}\n                    onChange={handleChange}\n                    placeholder=\"Twoje notatki\"\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        p: 1,\n                        bgcolor: 'background.default'\n                    }}\n                    inputProps={{\n                        'aria-label': 'Twoje notatki'\n                    }}\n                />\n                <Button\n                    title='Zapisz notatki'\n                    aria-label='Zapisz notatki'\n                    sx={{ mr: '0px', ml: 'auto' }}\n                    startIcon={<SaveIcon />}\n                    type=\"submit\">\n                    Zapisz\n                </Button>\n            </Box>\n        </SmallCard >\n    );\n}\n\nexport default React.memo(Notebook);","import GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SmallCard from \"../components/SmallCard\";\n\n\n\nexport default function HomeReservations() {\n    return (\n        <SmallCard title='Rezerwacje'>\n            <GenericReservationsTab />\n        </SmallCard>\n    );\n}\n","import { Grid } from \"@mui/material\";\nimport Favourites from \"./Favourites\";\nimport Notebook from \"./Notebook\";\nimport HomeReservations from \"./HomeReservations\";\n\n\n\nexport default function HomePage() {\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12} lg={8}>\n                <HomeReservations />\n            </Grid>\n            <Grid item container spacing={2} xs={12} lg={4}\n                alignContent='flex-start'\n            >\n                <Grid item xs={12} sm={6} lg={12}>\n                    <Notebook />\n                </Grid>\n                <Grid item xs={12} sm={6} lg={12}>\n                    <Favourites />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Divider, FormControl, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack } from '@mui/material';\nimport { RoomUpdateParams } from '../../../../../services/RoomService';\nimport { RoomType, RoomTypes } from '../../../../../models/Room';\nimport { useRoomContext } from '../RoomContext';\nimport ImageUploadField from '../../components/ImageUploadField';\nimport { useResourceMap } from '../../../../../contexts/ResourceMapContext';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport GenericModal from '../../components/GenericModal';\nimport FormGridContainer from '../../../../../shared/components/FormGridContainer';\n\n\n\ninterface RoomEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\nexport default function RoomEditForm({\n    open,\n    onClose,\n}: RoomEditFormProps) {\n    const { room, updateRoom } = useRoomContext();\n    const { allBuildings } = useResourceMap();\n\n    const [data, setData] = React.useState<RoomUpdateParams>({});\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number | boolean = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            case \"blocked\":\n                value = !event.target.checked;\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n\n        setData((old: RoomUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<RoomType | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'buildingId') value = Number(value);\n\n        event.target && setData((old: RoomUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateRoom(data)) {\n            onClose();\n        }\n    }, [\n        data,\n        updateRoom,\n        onClose\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno usuwania obiektu\"\n            sx={{\n                maxWidth: \"450px\",\n            }}\n        >\n            <Stack spacing={2}>\n                <ImageUploadField image={room.image} />\n                <Divider />\n\n                <FormGridContainer\n                    title='Edycja sali'\n                    subtitle=\"Zmień właściwości pokoju i zatwierdź zmiany.\"\n                    onSubmit={handleSubmit}\n                    onCancel={onClose}\n                >\n\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nazwa\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? room.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"room-type\">Typ Sali</InputLabel>\n                            <Select\n                                labelId=\"room-type\"\n                                id=\"roomType\"\n                                value={data.roomType ?? room.roomType}\n                                name=\"roomType\"\n                                label=\"Typ Sali\"\n                                onChange={handleSelectChange}\n                            >\n                                {Object.values(RoomTypes).map(val => <MenuItem key={val} value={val}>{val}</MenuItem>)}\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={6} >\n                        <TextField\n                            required\n                            name=\"seatsCount\"\n                            label=\"Ilość miejsc\"\n                            type=\"number\"\n                            id=\"seatsCount\"\n                            value={data.seatsCount ?? room.seatsCount}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <TextField\n                            required\n                            name=\"floor\"\n                            label=\"Piętro\"\n                            type=\"number\"\n                            id=\"floor\"\n                            value={data.floor ?? room.floor}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"wybierz-budynek\">Budynek</InputLabel>\n                            <Select\n                                labelId=\"wybierz-budynek\"\n                                name=\"buildingId\"\n                                value={data.buildingId ?? room.building.id}\n                                label=\"Budynek\"\n                                onChange={handleSelectChange}\n                            >\n                                {allBuildings.map(({ name, id }) => <MenuItem key={name} value={id} >Budynek &nbsp;{name} </MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            labelPlacement=\"start\"\n                            control={<Switch id=\"room-blocked\" name=\"blocked\"\n                                inputProps={{ 'aria-label': 'controlled' }}\n                                onChange={handleChange}\n                                checked={!(data.blocked ?? room.blocked)}\n                            />}\n                            label=\"Dostępność Sali\"\n                        />\n                    </Grid>\n\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    );\n}","import GenericModal from \"../../components/GenericModal\";\nimport RfidForm from \"../../components/RfidForm\";\nimport { useRoomContext } from \"../RoomContext\";\n\n\ninterface RfidModalRormProps {\n    open: boolean,\n    onClose: () => void,\n}\n\nexport default function RfidModalRorm(props: RfidModalRormProps) {\n    const { updateRFIDTag } = useRoomContext();\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={props.onClose}\n            aria-label=\"Okno przypisania tagu RFID\"\n            sx={{\n                maxWidth: \"400px\"\n            }}\n        >\n            <RfidForm\n                headline=\"Użyj czytnika, aby wprowadzić tag.\"\n                bodyText='Jeśli nie chcesz wprowadzać zmian, naciśnij \"Zamknij\"'\n                onScan={updateRFIDTag}\n                onClose={props.onClose}\n            />\n        </GenericModal>\n    );\n}\n","import CancelIcon, { } from '@mui/icons-material/Cancel';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\n\n\ninterface YesNoIconProps {\n    value: boolean,\n    title?: string,\n    fontSize?: 'small' | 'medium' | 'large',\n}\n\n\nexport default function YesNoIcon(props: YesNoIconProps) {\n    const { value, ...rest } = props;\n\n    return (\n        value ?\n            <CheckCircleOutlineIcon color=\"success\" {...rest} />\n            : <CancelIcon sx={{ color: \"red\" }} {...rest} />\n    )\n}","import { Chip, IconButton, Link, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport { DetailedRoom } from \"../../../../../models/Room\";\nimport { RfidForm } from \"../Forms\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport YesNoIcon from \"./YesNoIcon\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\ninterface RoomTableInfoProps {\n    room: DetailedRoom,\n    deleteTag: () => Promise<void>\n}\n\n\nexport default function RoomTableInfo({\n    room, deleteTag\n}: RoomTableInfoProps) {\n    const { keysAdmin } = useResolvedAccess();\n    const { getBuildingLink } = useResourceMap();\n    const [rfidTagModalOpen, setRfidTagModalOpen] = React.useState<boolean>(false);\n\n    const tableRows = React.useMemo(() => {\n        const rows = [\n            {\n                label: \"Ilość miejsc\",\n                value: room.seatsCount\n            }, {\n                label: \"Piętro\",\n                value: room.floor === 0 ? \"parter\" : room.floor\n            }, {\n                label: \"Budynek\",\n                value: <Link href={getBuildingLink(room.building.id)}> {room.building.name} </Link>\n            }, {\n                label: \"Aktualnie wolny\",\n                value: <YesNoIcon value={!room.occupied} />\n            }\n        ];\n        keysAdmin && rows.push({\n            label: \"Tag RFID\",\n            value: room.RFIDTag ?\n                <Chip label={room.RFIDTag} onDelete={deleteTag} sx={{ maxWidth: '120px' }} />\n                : <IconButton size=\"small\"\n                    onClick={() => setRfidTagModalOpen(true)}\n                    sx={{ p: '0px' }}\n                >\n                    <AddCircleIcon />\n                </IconButton>\n        });\n        rows.push({\n            label: \"Dostępny do rezerwacji\",\n            value: <YesNoIcon value={!room.blocked} />\n        });\n\n        return rows;\n    }, [\n        keysAdmin,\n        room,\n        deleteTag,\n        getBuildingLink,\n    ]);\n\n\n    const RenderedRows = React.useMemo(() => {\n        return tableRows.map(({ label, value }) =>\n            <TableRow hover key={label}>\n                <TableCell sx={{ color: \"text.secondary\" }} align=\"left\">{label}</TableCell>\n                <TableCell sx={{ color: \"primary.main\", fontWeight: \"bold\" }} align=\"left\">{value}</TableCell>\n            </TableRow>\n        )\n    }, [tableRows])\n\n\n    return (\n        <>\n            <RfidForm\n                open={rfidTagModalOpen}\n                onClose={() => setRfidTagModalOpen(false)}\n            />\n\n            <TableContainer >\n                <Table aria-label=\"room-info-table\" size=\"small\">\n                    <TableHead sx={{ display: 'none' }}>\n                        <TableRow>\n                            <TableCell align=\"left\">Właściwość</TableCell>\n                            <TableCell align=\"left\">stan</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {RenderedRows}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n}\n","import { Card, CardContent, CardHeader, CardMedia } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport RoomTableInfo from \"./RoomTableInfo\";\nimport React from \"react\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport { useRoomContext } from \"../RoomContext\";\nimport Loading from \"../../../../../shared/components/Loading\";\nimport { RoomEditForm } from \"../Forms\";\nimport FavouriteButton from \"../../components/FavouriteButton\";\nimport { FavType } from \"../../../../../models/Metadata\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\n\nexport default function RoomCard() {\n    const { premisesAdmin} = useResolvedAccess();\n    const { room, deleteRoom, deleteRFIDTag } = useRoomContext();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    return (\n        !Boolean(room) ? <Loading /> :\n            <>\n                {premisesAdmin &&\n                    <>\n                        <DeleteModal\n                            objectName={room.name}\n                            open={deleteModalOpen}\n                            onClose={() => setDeleteModalOpen(false)}\n                            onSuccess={deleteRoom}\n                        />\n\n                        <RoomEditForm\n                            open={editModalOpen}\n                            onClose={() => setEditModalOpen(false)}\n                        />\n                    </>\n                }\n\n                <Card elevation={0}>\n                    <CardHeader\n                        action={\n                            premisesAdmin &&\n                            <MoreVertMenu options={options} />\n                        }\n                        title={\n                            <>\n                                {room.name}\n                                <FavouriteButton data={{\n                                    id: room.id,\n                                    name: room.name,\n                                    type: FavType.Room,\n                                    addressId: room.building.address,\n                                    buildingId: room.building.id\n                                }} />\n                            </>\n                        }\n                        subheader={<>\n                            {room.roomType}\n                        </>}\n                    />\n                    <CardMedia\n                        component=\"img\"\n                        height=\"350\"\n                        image={ImageService.getLink(room.image)}\n                        alt={room.name}\n                    />\n                    <CardContent>\n                        <RoomTableInfo room={room} deleteTag={deleteRFIDTag} />\n                        <br />\n                        <DatesFooter model={room} />\n                    </CardContent>\n                </Card>\n            </>\n    );\n}\n","import { RoomContextProvider } from \"./RoomContext\";\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport RoomCard from \"./components/RoomCard\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport Loading from \"../../../../shared/components/Loading\";\n\n\nconst LazyRoomOrBuildingChartTab = React.lazy(() => import(\"../components/RoomOrBuildingChartTab\"));\nconst RoomOrBuildingChartTab = () => <React.Suspense fallback={<Loading />}>\n    <LazyRoomOrBuildingChartTab />\n</React.Suspense>\n\n\nexport default function RoomPage() {\n    const { logsAdmin, statsViewer } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <RoomOrBuildingChartTab /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        logsAdmin,\n        statsViewer\n    ]);\n\n\n    return (\n        <RoomContextProvider>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item xs={12} md={5} lg={4}>\n                    <RoomCard />\n                </Grid>\n            </Grid>\n        </RoomContextProvider>\n    );\n}\n","import React from 'react';\nimport Loading from '../../../../shared/components/Loading';\n\nconst LazySettingsPage = React.lazy(() => import('./SettingsPage'));\n\n\nexport default function SettingsPage() {\n    return <React.Suspense fallback={<Loading />}>\n        <LazySettingsPage />\n    </React.Suspense>\n};\n\n","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../auth/useSession\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { DetailedUser } from \"../../../../../models/User\";\nimport UserService, { UpdateUserParams, UserViewParams } from \"../../../../../services/UserService\";\nimport paths from \"../../../../../shared/path\";\n\n\n\nexport const userContext: any = React.createContext(null);\n\n\ninterface UserContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function UserContextProvider(props: UserContextProviderProps) {\n    const urlParams = useParams<UserViewParams>();\n    const notify = useNotification();\n    const session = useSession();\n\n    const [user, setUser] = React.useState<DetailedUser>();\n\n\n    React.useLayoutEffect(() => {\n        let params = (urlParams.userId === 'me' && session.user) ? { userId: session.user.id.toString() } : urlParams;\n        UserService.setPath(params);\n    }, [\n        urlParams,\n        session\n    ]);\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await UserService.getCurrentOne();\n            setUser(resp.data as DetailedUser);\n        } catch (err: any) {\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        load()\n    }, [\n        load\n    ]);\n\n\n    const deleteUser = React.useCallback(async () => {\n        try {\n            await UserService.remove();\n\n            let action = (): React.ReactNode => null\n\n            if (session && session.user?.id === user?.id) {\n                session.logout();\n            } else {\n                action = () => <Redirect to={paths.USERS} />\n            }\n\n            notify('Użytkownik został usunięty', 'success', action);\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        session,\n        user?.id,\n    ]);\n\n\n    const updateUser = React.useCallback(async (data: UpdateUserParams) => {\n        try {\n            if (await UserService.update(data)) {\n                setUser(old => {\n                    return { ...old, ...data as DetailedUser };\n                });\n\n                notify('Użytkownik został zaktualizowany', 'success');\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    if (!user) return null;\n\n    return (\n        <userContext.Provider value={{\n            user,\n            deleteUser,\n            updateUser,\n        }}>\n            {props.children}\n        </userContext.Provider>\n    );\n}","import React from \"react\";\nimport { userContext } from \"./UserContextProvider\";\nimport UserContextValue from \"./UserContextValue\";\n\n\n\nexport default function useUser() {\n    return React.useContext(userContext) as UserContextValue;\n}\n","import React from \"react\";\nimport useSession from \"../../../../../auth/useSession\";\nimport GenericModal from \"../../components/GenericModal\";\nimport PasswordChangeForm from '../../../public/ChangePassword/Form';\n\ninterface EditUserFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\nexport default function PasswordChangeModal({\n    open,\n    onClose\n}: EditUserFormProps) {\n    const { logout } = useSession();\n\n    const close = React.useCallback(() => {\n        onClose();\n\n    }, [onClose]);\n\n    const onSuccess = React.useCallback(() => {\n        logout();\n    }, [logout]);\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            sx={{\n                maxWidth: '450px'\n            }}\n        >\n            <PasswordChangeForm onSuccess={onSuccess} />\n        </GenericModal>\n    )\n}","import Divider from \"@mui/material/Divider\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { DetailedUser } from \"../../../../../models/User\";\nimport { UpdateUserParams } from \"../../../../../services/UserService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../components/GenericModal\";\nimport ImageUploadField from \"../../components/ImageUploadField\";\nimport { useUser } from \"../UserContext\";\n\n\n\ninterface EditUserFormProps {\n    open: boolean,\n    onClose: () => void,\n    user: DetailedUser,\n}\n\n\nexport default function EditUserForm({\n    open,\n    onClose,\n    user,\n}: EditUserFormProps) {\n    const { updateUser } = useUser();\n\n    const [data, setData] = React.useState<UpdateUserParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const onSubmit = React.useCallback(async () => {\n        if (await updateUser(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateUser,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            sx={{\n                maxWidth: '450px'\n            }}\n        >\n            <Stack spacing={3}>\n\n                <ImageUploadField image={user.image} />\n\n                <Divider />\n\n                <FormGridContainer\n                    title=\"Edycja użytkownika\"\n                    subtitle=\"Zmień dane użytkownika. Zmiany w całej aplikacji będą widoczne po ponownym przeładowaniu aplikacji.\"\n                    onSubmit={onSubmit}\n                    onCancel={close}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Imię\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? user.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"surname\"\n                            label=\"Nazwisko\"\n                            name=\"surname\"\n                            value={data.surname ?? user.surname}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    )\n}","import React from \"react\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport { useUser } from \"../UserContext\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ChangePasswordForm, UserEditForm } from \"../Forms\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { displayDate } from \"../../../../../shared/utils\";\nimport { Link, Typography } from \"@mui/material\";\nimport paths from \"../../../../../shared/path\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\n\nexport default function UserCard() {\n    const { myId, owner } = useResolvedAccess();\n    const { user, deleteUser } = useUser();\n\n    const [editModal, setEditModal] = React.useState(false);\n    const [passModal, setPassModal] = React.useState(false);\n    const [deleteModal, setDeleteModal] = React.useState(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModal(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Zmień hasło',\n            action: () => setPassModal(true),\n            icon: <PasswordIcon color='warning' />\n        }, {\n            label: 'Usuń konto',\n            action: () => setDeleteModal(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    return (\n        <>\n\n            {(myId(user.id) || owner) && <>\n                <DeleteModal\n                    objectName={`${user.email}`}\n                    open={deleteModal}\n                    onClose={() => setDeleteModal(false)}\n                    onSuccess={deleteUser}\n                />\n\n                <UserEditForm\n                    user={user}\n                    open={editModal}\n                    onClose={() => setEditModal(false)}\n                />\n\n                <ChangePasswordForm\n                    open={passModal}\n                    onClose={() => setPassModal(false)}\n                />\n            </>\n            }\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={(myId(user.id) || owner) && <MoreVertMenu options={options} />}\n                    title={<>{user.name} {user.surname}</>}\n                    subheader={<a href={`mailto:${user.email}`}>\n                        {user.email}\n                    </a>}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"350\"\n                    image={ImageService.getLink(user.image)}\n                    alt={user.email}\n                />\n                <CardContent>\n                    <Typography color='text.secondary' variant=\"subtitle1\">\n                        Ostatnio aktywny: {displayDate(user.lastActivity)}<br />\n                        Klasa dostępu: {<Link href={paths.ACCESS}>{user.access.name}</Link>}\n                    </Typography>\n                    <br />\n                    <DatesFooter model={user} />\n                </CardContent>\n            </Card>\n        </>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport Loading from \"../../../../shared/components/Loading\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport UserCard from \"./components/UserCard\";\nimport { UserContext } from \"./UserContext\";\n\n\n\nconst LazyUserCharts = React.lazy(() => import(\"./components/UserCharts\"));\nconst UserCharts = () => <React.Suspense fallback={<Loading />}>\n    <LazyUserCharts />\n</React.Suspense>\n\n\nexport default function UserPage() {\n    const { statsViewer, logsAdmin } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr: any = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <UserCharts /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        statsViewer,\n        logsAdmin,\n    ]);\n\n\n    return (\n        <UserContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item xs={12} md={5} lg={4}>\n                    <UserCard />\n                </Grid>\n            </Grid>\n        </UserContext>\n    );\n}","import React from \"react\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport User from \"../../../../../models/User\";\nimport UserService, { UserQueryParams } from \"../../../../../services/UserService\";\nimport UsersContextValue from \"./UsersContextValue\";\n\n\n\nexport const usersContext: any = React.createContext(null);\n\n\ninterface UsersContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\nexport default function UsersContextProvider(props: UsersContextProviderProps) {\n    const notify = useNotification();\n    const { queryParams, setQueryParams } = useQueryParams<UserQueryParams>();\n\n    const [users, setUsers] = React.useState<User[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await UserService.getUsers(queryParams);\n            setQueryParams(old => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount\n            }));\n            setUsers(resp.data as User[]);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setUsers([]);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        notify,\n        queryParams.itemsOnPage,\n        queryParams.currentPage,\n        queryParams.search,\n        queryParams.deleted,\n        queryParams.activated\n    ]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    if (!users) return null;\n\n    return (\n        <usersContext.Provider value={{\n            users,\n        } as UsersContextValue}>\n            {props.children}\n        </usersContext.Provider>\n    )\n}","import { FormControlLabel, Grid, Switch } from \"@mui/material\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport { UserQueryParams } from \"../../../../../../services/UserService\";\nimport React from \"react\";\nimport LazyInput from \"../../../components/LazyInput\";\n\n\nfunction SearchBar() {\n    const { setQueryParams, queryParams } = useQueryParams<UserQueryParams>();\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        let value: string | number | boolean = event.target.value;\n\n        switch (event.target.name) {\n            case \"deleted\":\n            case \"activated\":\n                value = Boolean(event.target.checked);\n                break;\n            case 'search':\n                break;\n            default:\n                break;\n        }\n\n        setQueryParams((old: UserQueryParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, [setQueryParams]);\n\n\n    return (\n        <Grid container>\n            <Grid item xs={12} md={8}>\n                <LazyInput\n                    label='wyszukaj'\n                    name='search'\n                    value={queryParams.search ?? ''}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} md={4} display='flex' justifyContent='start' flexWrap='wrap' color='text.secondary'>\n                <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch id=\"aktywni-użytkownicy\" name=\"activated\"\n                        inputProps={{ 'aria-label': 'aktywni-użytkownicy' }}\n                        onChange={handleChange}\n                        checked={queryParams.activated}\n                    />}\n                    label=\"Aktywne konta\"\n                />\n                <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch id=\"unsunięci-użytkownicy\" name=\"deleted\"\n                        inputProps={{ 'aria-label': 'unsunięci-użytkownicy' }}\n                        onChange={handleChange}\n                        checked={queryParams.deleted}\n                    />}\n                    label=\"Usunięte konta\"\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(SearchBar);","import { Link } from \"@mui/material\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport User from \"../../../../../../../models/User\";\nimport ImageService from \"../../../../../../../services/ImageService\";\nimport { dynamicPaths } from \"../../../../../../../shared/path\";\n\n\n\ninterface UserListItemProps {\n    user: User\n}\n\nexport default function UserListItem({ user }: UserListItemProps) {\n    return (\n        <ListItem button\n            component={Link}\n            href={dynamicPaths.toUser(user.id)}\n        >\n            <ListItemAvatar\n                title={user.email}\n                aria-label={user.email}\n            >\n                <Avatar src={ImageService.getLink(user.image)} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={`${user.name} ${user.surname}`}\n                secondary={\n                    <>\n                        {user.email}\n                    </>\n                }\n            />\n        </ListItem>\n    );\n}","import { ListItem, ListItemText } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport { useUsers } from \"../../../UsersContext\";\nimport UserListItem from \"./UserListItem\";\n\n\n\nexport default function UsersList() {\n    const { users } = useUsers();\n\n    return (\n        <List>\n            {\n                users.length === 0 && <ListItem>\n                    <ListItemText primary='Brak użytkowników spełniających kryteria' />\n                </ListItem>\n            }\n            {\n                users.map((item) => <UserListItem key={item.id} user={item} />)\n            }\n        </List>\n    );\n}\n\n","import React from \"react\";\nimport { UsersContextValue } from \".\";\nimport { usersContext } from \"./UsersContextProvider\";\n\n\n\nexport default function useUsers(){\n    return React.useContext(usersContext) as UsersContextValue\n}","import { Stack } from \"@mui/material\";\nimport TabHeadLine from \"../../../../../../shared/components/TabHeadLine\";\nimport ListPagination from \"../../../components/ListPagination\";\nimport SearchBar from \"./SearchBar\";\nimport UsersList from \"./UsersList\";\n\n\n\nexport default function UsersView() {\n    return (\n        <Stack spacing={3}>\n            <TabHeadLine\n                title='Lista użytkowników'\n                subtitle='Wyszukuj użytkowników według podanych kryteriów.'\n            />\n\n            <SearchBar />\n\n            <UsersList />\n\n            <ListPagination />\n        </Stack>\n    );\n}","import { AllUsersChartsData } from \"../../../../../models/Stats\";\nimport { Chart, ChartSection, ChartsTab, useCharts } from \"../../components/Charts\";\n\n\n\nexport default function UsersCharts() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n\nfunction ActualLoader() {\n    const { chartsData } = useCharts<AllUsersChartsData>();\n\n    return (\n        <ChartSection defaultOpen title='Statystyki użytkowników'>\n            <Chart\n                fullWidth={chartsData.users.length >= 6}\n                title='Ilość rezerwacji na użytkownika'\n                data={chartsData.users}\n                xKey='email'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth={chartsData.users.length >= 6}\n                title=\"Czas wszystkich reserwacji w dany dzień\"\n                data={chartsData.users}\n                xKey='email'\n                y={[\n                    { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Średnie czasy rezerwacji\"\n                data={chartsData.users}\n                xKey='email'\n                y={[\n                    { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}","import { QueryParamsContext } from \"../../../../contexts/QueryParamsContext\";\nimport { UserQueryParams } from \"../../../../services/UserService\";\nimport { UsersContext } from \"./UsersContext\";\nimport React from \"react\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport UsersView from \"./components/UsersView\";\nimport UsersCharts from \"./components/UsersCharts\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\n\n\n\nexport default function UsersPage() {\n    const { statsViewer, logsAdmin } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [\n            { name: 'Użytkownicy', component: <UsersView /> }\n        ];\n\n        statsViewer && arr.push({ name: 'Statystyki', component: <UsersCharts /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        logsAdmin,\n        statsViewer\n    ]);\n\n\n    return (\n        <QueryParamsContext\n            name=\"users-query-params\"\n            default={{\n                deleted: false,\n                activated: true,\n                search: '',\n                itemsOnPage: 10,\n                currentPage: 1\n            } as UserQueryParams}\n        >\n            <UsersContext>\n                <SwipeableTabs tabs={pages} />\n            </UsersContext>\n        </QueryParamsContext>\n    );\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport useSession from \"../../../auth/useSession\";\nimport paths from \"../../../shared/path\";\nimport AccessPage from \"./AccessPage\";\nimport AddressPage from \"./AddressPage\";\nimport BuildingPage from \"./BuildingPage\";\nimport HomePage from \"./HomePage\";\nimport RoomPage from \"./RoomPage\";\nimport SettingsPage from \"./SettingsPage\";\nimport UserPage from \"./UserPage\";\nimport UsersPage from \"./UsersPage\";\n\n\n\nexport default function ProtectedPages() {\n    const { user } = useSession();\n\n    if (!user) return <Redirect to={paths.PUBLIC} />\n\n    return (\n        <Switch>\n            <Route path={paths.ROOM} component={RoomPage} />\n            <Route path={paths.BUILDING} component={BuildingPage} />\n            <Route path={paths.ADDRESS} component={AddressPage} />\n\n            <Route path={paths.SETTINGS} component={SettingsPage} />\n            <Route path={paths.ACCESS} component={AccessPage} />\n            <Route path={paths.USER} component={UserPage} />\n            <Route path={paths.USERS} component={UsersPage} />\n            <Route path={paths.HOME} component={HomePage} />\n\n            <Route path={paths.INFRASTRUCTURE}>\n                Zasoby\n            </Route>\n            <Route path={paths.HOME + '/*'}>\n                <Redirect to={paths.HOME} />\n            </Route>\n        </Switch>\n    );\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport paths from \"../../../shared/path\";\nimport Loading from \"../../../shared/components/Loading\";\nimport React from \"react\";\nimport useSession from \"../../../auth/useSession\";\n\n\nconst Activation = React.lazy(() => import('./Activation'));\nconst Login = React.lazy(() => import('./Login'));\nconst Register = React.lazy(() => import('./Register'));\nconst ChangePassword = React.lazy(() => import('./ChangePassword'));\nconst Welcome = React.lazy(() => import('./Welcome'));\n\n\nexport default function PublicPages() {\n    const { user } = useSession();\n\n    if (user) return <Redirect to={paths.HOME} />\n\n    return (\n        <Switch>\n            <React.Suspense fallback={<Loading />}>\n                <Route path={paths.LOGIN} component={Login} />\n                <Route path={paths.REGISTER} component={Register} />\n                <Route path={paths.ACTIVATE} component={Activation} />\n                <Route path={paths.REMIND_PASSWORD} component={ChangePassword} />\n                <Route path={paths.PUBLIC} exact component={Welcome} />\n            </React.Suspense>\n\n            <Route path=\"*\">\n                <Redirect to={paths.PUBLIC} />\n            </Route>\n        </Switch>\n    );\n}","import { Box } from '@mui/system';\n\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport paths from '../../shared/path';\n\nimport ProtectedPages from './protected';\nimport PublicPages from './public';\n\n\nconst tabStyle = {\n    minHeight: \"84vh\",\n    padding: \"1.5vh 0px\"\n}\n\n\nexport default function Tabs() {\n    return (\n        <Box sx={tabStyle}>\n            <Switch>\n                <Route path={paths.HOME} component={ProtectedPages} />\n                <Route path={paths.PUBLIC} component={PublicPages} />\n                <Route path='*'> \n                    <Redirect to={paths.PUBLIC} />\n                </Route>\n            </Switch>\n        </Box>\n    );\n}","import { Typography } from \"@mui/material\";\nimport React from \"react\";\n\n\nfunction Copyright() {\n    return (\n        <Typography\n            align=\"center\"\n            sx={{\n                backgroundColor: \"primary.dark\",\n                padding: 2,\n                color: \"primary.light\"\n            }}\n        >\n            &copy; Szymon Rykała 2021/2022\n        </Typography>\n    );\n}\n\nexport default React.memo(Copyright);","import { Container, Link, List, ListItem, Typography } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport useSession from \"../../auth/useSession\";\nimport paths from \"../../shared/path\";\nimport useResolvedAccess from \"../pages/protected/hooks/useResolvedAccess\";\n\n\ninterface LinkListItem {\n    name: string,\n    link: string\n}\n\n\nconst LinkItem = (props: LinkListItem) =>\n    <ListItem\n        sx={{\n            width: '30%',\n            minWidth: '200px'\n        }}>\n        <Link\n            sx={{ color: 'background.default' }}\n            href={props.link}\n        >\n            {props.name}\n        </Link>\n    </ListItem>\n    ;\n\n\nfunction Links() {\n    const { user } = useSession();\n    const access = useResolvedAccess();\n\n\n    const linksList = React.useMemo(() => {\n        const list = [];\n        if (user) {\n            list.push({ name: 'Mój Profil', link: paths.MY_PROFILE }, { name: 'Home', link: paths.HOME });\n            access.accessAdmin && list.push({ name: 'Dostępy', link: paths.ACCESS });\n            access.owner && list.push({ name: 'Ustawienia', link: paths.SETTINGS });\n        } else {\n            list.push(\n                { name: 'Strona główna', link: paths.PUBLIC },\n                { name: 'Logowanie', link: paths.LOGIN },\n                { name: 'Rejestracja', link: paths.REGISTER },\n                { name: 'Aktywacja Konta', link: paths.ACTIVATE }\n            );\n        }\n        return list;\n    }, [\n        user,\n        access?.accessAdmin,\n        access?.owner,\n    ]);\n\n\n    const links = React.useMemo(() => {\n\n        return linksList.filter(item => item.link)\n            .map((item) => <LinkItem key={item.name} {...item} />);\n    }, [\n        linksList\n    ]);\n\n    return (\n        <Box\n            sx={{\n                backgroundColor: \"primary.main\"\n            }}\n        >\n            <Container>\n                <Typography sx={{ pt: 2 }} component='p' variant='body2' color='background.default'>\n                    Przydatne linki:\n                </Typography>\n                <List sx={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignContent: 'center',\n                    justifyContent: 'flex-start',\n                    flexWrap: 'wrap'\n                }}>\n\n                    {links}\n                </List>\n            </Container>\n        </Box>\n    );\n}\n\nexport default React.memo(Links);","import {\n    Grid,\n} from \"@mui/material\";\n\nimport { Box } from \"@mui/system\";\n\nimport Copyright from \"./Copyrights\";\nimport Links from \"./Links\";\n\n\n\n\nexport default function Footer() {\n\n    return (\n        <Box >\n            <Grid container\n                direction=\"column\"\n                alignItems=\"stretch\"\n            >\n                <Grid item>\n                    <Links />\n                </Grid>\n                <Grid item>\n                    <Copyright />\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\n\n\n\n","import { Link, List, ListItem, ListItemIcon, ListItemText, SvgIconTypeMap } from \"@mui/material\";\nimport HomeIcon from '@mui/icons-material/Home';\nimport AccountIcon from '@mui/icons-material/AccountCircle';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\nimport PeopleIcon from '@mui/icons-material/People';\n\nimport React from \"react\";\nimport paths from \"../../../shared/path\";\nimport { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport useResolvedAccess from \"../../pages/protected/hooks/useResolvedAccess\";\n\n\n\ninterface NavListItem {\n  label: string,\n  href: string,\n  icon: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>\n}\n\n\nconst navListItems: NavListItem[] = [\n  {\n    label: \"Panel Główny\",\n    href: paths.HOME,\n    icon: HomeIcon\n  }, {\n    label: \"Moje Konto\",\n    href: paths.MY_PROFILE,\n    icon: AccountIcon\n  }\n];\n\n\nconst settingsItem: NavListItem = {\n  label: 'Ustawienia Platformy',\n  href: paths.SETTINGS,\n  icon: SettingsIcon\n};\n\n\nconst accessLinkItem: NavListItem = {\n  label: 'Klasy dostępu',\n  href: paths.ACCESS,\n  icon: VerifiedUserIcon\n};\n\n\nconst usersLinkItem: NavListItem = {\n  label: 'Użytkownicy',\n  href: paths.USERS,\n  icon: PeopleIcon\n};\n\n\nconst MainListItem = React.memo((props: NavListItem) =>\n  <ListItem button component={Link} href={props.href}>\n    <ListItemIcon color=\"primary\">\n      {<props.icon color='primary' />}\n    </ListItemIcon>\n    <ListItemText primary={props.label} />\n  </ListItem >\n);\n\n\nexport default function MainDrawerList() {\n  const { accessAdmin, owner } = useResolvedAccess();\n\n  const result = React.useMemo(() => {\n    let list = Object.assign([], navListItems) as NavListItem[];\n\n    list.push(usersLinkItem);\n    accessAdmin && list.push(accessLinkItem);\n    owner && list.push(settingsItem);\n\n    return list;\n  }, [\n    accessAdmin,\n    owner\n  ]);\n\n\n  const renderedList = React.useMemo(() =>\n    result.map((item) => <MainListItem key={item.label} {...item} />)\n    , [result]);\n\n\n  return (\n    <List>\n      {renderedList}\n    </List>\n  );\n}","import { Box } from \"@mui/material\";\n\n\ninterface DrawerPanelProps {\n    children: React.ReactNode,\n    toggleOpen: any,\n}\n\n\nexport default function DrawerPanel({\n    children,\n    toggleOpen\n}: DrawerPanelProps) {\n    return (\n        <Box\n            sx={{ width: 320 }}\n            role=\"presentation\"\n            onClick={toggleOpen}\n            onKeyDown={toggleOpen}\n        >\n            {children}\n        </Box>\n    );\n}","import { Avatar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { SessionUser } from \"../../../models/User\";\nimport ImageService from \"../../../services/ImageService\";\n\n\ninterface AvatarViewProps {\n    user: SessionUser | null,\n}\n\n\nexport default function AvatarView({\n    user\n}: AvatarViewProps) {\n    return (\n        <Box\n            onClick={(ev) => ev.stopPropagation()}\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                padding: 2,\n                color: 'primary.dark'\n            }}\n        >\n            <Avatar\n                alt={`${user?.name} ${user?.surname}`}\n                src={ImageService.getLink(user?.image)}\n                sx={{\n                    width: '120px',\n                    height: '120px',\n                    fontSize: '36px',\n                    mt: 2,\n                    mb: 2,\n                }}\n            />\n            <Typography>\n                {user?.name}&nbsp;{user?.surname}\n            </Typography>\n            <Typography>\n                <a href={`mailto:${user?.email}`}>\n                    {user?.email}\n                </a>\n            </Typography>\n        </Box>\n    );\n}","import { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport { Collapse, IconButton, Link, ListItemButton, ListItemIcon, ListItemText, Stack } from \"@mui/material\";\nimport React from \"react\";\nimport StorageService from \"../../../../services/StorageService\";\n\n\n\ninterface CallapsableListItemProps {\n    name: string,\n    href?: string\n    children: React.ReactNode,\n    icon?: React.ReactNode,\n    sx?: any\n}\n\n\nexport default function CollapseableListItem(props: CallapsableListItemProps) {\n    const [open, setOpen] = React.useState<boolean>(false);\n\n    const OPENED_NAME = React.useMemo(() => `${props.name}-nav-item`, [props.name]);\n\n    React.useEffect(() => {\n        setOpen(StorageService.read(OPENED_NAME));\n    }, [OPENED_NAME]);\n\n    const handleOpen = React.useCallback((ev: React.MouseEvent) => {\n        ev.stopPropagation()\n        StorageService.save(OPENED_NAME, !open);\n        setOpen(old => !old);\n    }, [\n        OPENED_NAME,\n        open\n    ]);\n\n    return (\n        <>\n            <Stack direction=\"row\">\n                <ListItemButton component={Link} href={props.href} sx={props.sx}>\n                    <ListItemIcon>\n                        {props.icon}\n                    </ListItemIcon>\n\n                    <ListItemText primary={props.name} />\n                </ListItemButton>\n\n                <IconButton sx={{ width: '42px', height: '42px' }} size='medium' onClick={handleOpen}>\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                </IconButton>\n            </Stack>\n\n            <Collapse in={open} timeout=\"auto\" >\n                <Stack sx={props.sx}>\n                    {props.children}\n                </Stack>\n            </Collapse>\n        </>\n    );\n}\n","import { Box, Link, ListItem, ListItemIcon } from \"@mui/material\";\nimport { MapItem } from \"../../../../models/AddressMap\";\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport paths from \"../../../../shared/path\";\nimport React from \"react\";\n\n\n\nfunction RoomListItem(props: MapItem) {\n    return (\n        <ListItem button component={Link} href={`${paths.HOME}${props.href}`}>\n            <Box sx={{ width: '100%' }} >\n                <ListItemIcon >\n                    <ArrowRightIcon />\n                </ListItemIcon>\n                {props.name}\n            </Box>\n        </ListItem>\n    );\n}\n\nexport default React.memo(RoomListItem);","import BungalowIcon from '@mui/icons-material/Bungalow';\nimport MapIcon from '@mui/icons-material/Map';\nimport { Stack } from \"@mui/material\";\nimport { useResourceMap } from '../../../../contexts/ResourceMapContext';\nimport paths from '../../../../shared/path';\nimport CollapseableListItem from \"./CollapseableListItem\";\nimport RoomListItem from \"./RoomListItem\";\nimport React from 'react';\n\n\nexport default function ResourcesList() {\n    const { resourceMap } = useResourceMap();\n\n    const rendered = React.useMemo(() => {\n        return resourceMap?.map(({ id, name, href, buildings }) =>\n            <CollapseableListItem\n                key={id}\n                name={name}\n                href={`${paths.HOME}${href}`}\n                icon={<MapIcon color=\"primary\" />}\n                sx={{ width: '100%' }}\n            >\n                {buildings.map(({ id, name, href, rooms }) =>\n                    <CollapseableListItem\n                        key={id}\n                        name={name}\n                        href={`${paths.HOME}${href}`}\n                        icon={<BungalowIcon color=\"primary\" />}\n                        sx={{\n                            pl: 6,\n                            width: '100%',\n                        }}\n                    >\n                        {rooms.map((roomEntry) => <RoomListItem key={roomEntry.id} {...roomEntry} />)}\n\n                    </CollapseableListItem>)}\n            </CollapseableListItem>)\n    }, [resourceMap]);\n\n    return (\n        <Stack>\n            {rendered}\n        </Stack>\n    );\n}\n\n\n","import ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport React from \"react\";\nimport { CreateAddressForm } from \"../../pages/protected/AddressPage/Forms\";\nimport AddIcon from '@mui/icons-material/Add';\n\n\n\nexport default function CreateAddressButton() {\n    const [formOpen, setFormOpen] = React.useState<boolean>(false);\n\n    const handleClick = React.useCallback((ev) => {\n        ev.stopPropagation();\n        setFormOpen(true);\n    }, []);\n\n    return (\n        <>\n            <CreateAddressForm\n                open={formOpen}\n                onClose={() => setFormOpen(false)}\n            />\n            <ListItem button\n                component='div'\n                onClick={handleClick}\n                sx={{ color: 'primary.dark' }}\n            >\n                <ListItemIcon>\n                    <AddIcon color='primary' />\n                </ListItemIcon>\n                Dodaj adres\n            </ListItem>\n        </>\n    );\n}","import { Divider, Drawer, ListItem, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport MainDrawerList from \"./MainDrawerList\";\nimport DrawerPanel from \"./DrawerPanel\";\nimport AvatarView from './AvatarView';\nimport useSession from \"../../../auth/useSession\";\nimport ResourcesList from \"./ResourcesList\";\nimport CreateAddressButton from \"./CreateAddressButton\";\nimport useResolvedAccess from \"../../pages/protected/hooks/useResolvedAccess\";\n\n\ninterface AppDrawerProps {\n    open: boolean,\n    toggleOpen: any,\n}\n\nexport default function AppDrawer({ toggleOpen, open }: AppDrawerProps) {\n    const { premisesAdmin } = useResolvedAccess();\n    const { user } = useSession();\n\n    return (\n        <Drawer\n            variant=\"temporary\"\n            ModalProps={{\n                keepMounted: true\n            }}\n            anchor=\"left\"\n            open={open}\n            onClose={toggleOpen}\n        >\n            <DrawerPanel toggleOpen={(toggleOpen)}>\n                <AvatarView user={user} />\n\n                <Divider />\n                <MainDrawerList />\n\n                <Divider />\n                <ListItem\n                    onClick={(ev: React.MouseEvent) => ev.stopPropagation()}\n                    component=\"div\"\n                    sx={{ pb: 0, color: 'text.disabled' }}\n                >\n                    <ListItemText>\n                        Zasoby:\n                    </ListItemText>\n                </ListItem>\n                <ResourcesList />\n\n            </DrawerPanel>\n            {\n                premisesAdmin && <CreateAddressButton />\n            }\n        </Drawer>\n    );\n}\n","import { Link, Menu, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport useSession from \"../../../auth/useSession\";\nimport paths from \"../../../shared/path\";\n\n\n\ninterface AccountMenuProps {\n    trigger: null | HTMLElement,\n    handleClose: () => void\n}\n\nconst links = [\n    { name: \"Mój Profil\", link: paths.MY_PROFILE },\n    { name: \"Panel Główny\", link: paths.HOME },\n]\n\n\nexport default function AccountMenu({ trigger, handleClose }: AccountMenuProps) {\n    const { logout } = useSession();\n\n    const linksComp = React.useMemo(() => {\n        return links.map(({ name, link }, i) =>\n            <MenuItem key={i} onClick={handleClose} href={link} component={Link}>\n                {name}\n            </MenuItem>)\n    }, [handleClose]);\n\n\n    return (\n        <Menu\n            id=\"menu-appbar\"\n            anchorEl={trigger}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={Boolean(trigger)}\n            onClose={handleClose}\n        >\n            {linksComp}\n\n            <MenuItem onClick={() => {\n                handleClose();\n                logout();\n            }}>\n                Wyloguj\n            </MenuItem>\n        </Menu>\n    );\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\n\nimport AccountMenu from './AccountMenu';\nimport useSession from '../../../auth/useSession';\nimport { Avatar, Link } from '@mui/material';\nimport paths from '../../../shared/path';\nimport ImageService from '../../../services/ImageService';\n\n\ninterface NavigationBarProps {\n\ttoggleDrawer: any\n}\n\n\nexport default function NavigationBar(props: NavigationBarProps) {\n\tconst { user } = useSession();\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleMenu = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t}, []);\n\n\tconst handleClose = React.useCallback(() => {\n\t\tsetAnchorEl(null);\n\t}, []);\n\n\treturn (\n\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={props.toggleDrawer}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\t\tsx={{ mr: 2, color: \"background.default\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuIcon color='inherit' />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\t\t\t\t\t<Typography variant=\"h4\" component=\"span\" sx={{\n\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\tfontFamily: \"Dancing Script, cursive\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\thref={user ? paths.HOME : paths.PUBLIC}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\twidth: 'fit-content',\n\t\t\t\t\t\t\t\tcolor: 'background.default',\n\t\t\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\t\t\ttextDecoration: 'none'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRav System\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\talt={user.name}\n\t\t\t\t\t\t\t\t\tsrc={ImageService.getLink(user.image)}\n\t\t\t\t\t\t\t\t\tsx={{ width: 42, height: 42 }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<AccountMenu\n\t\t\t\t\t\t\t\ttrigger={anchorEl}\n\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n}\n","import React from \"react\";\nimport AppDrawer from \"./Drawer\";\nimport NavigationBar from \"./NavigationBar\";\n\n\nexport default function Navigation() {\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst toggleDrawer = React.useCallback((\n\t\tevent: React.KeyboardEvent | React.MouseEvent,\n\t\tshouldWork: boolean = true\n\t) => {\n\t\tevent.stopPropagation();\n\t\tif (\n\t\t\tshouldWork &&\n\t\t\tevent.type === 'keydown' &&\n\t\t\t((event as React.KeyboardEvent).key === 'Tab' ||\n\t\t\t\t(event as React.KeyboardEvent).key === 'Shift')\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(old => !old);\n\t}, []);\n\n\treturn <>\n\t\t<NavigationBar toggleDrawer={toggleDrawer} />\n\t\t<AppDrawer\n\t\t\topen={open}\n\t\t\ttoggleOpen={toggleDrawer}\n\t\t/>\n\t</>\n}","import { Box, Container, CssBaseline } from '@mui/material';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n\nimport Theme from './shared/Theme';\nimport SessionProvider from './auth/sessionProvider'\nimport Tabs from './components/pages';\nimport Footer from './components/Footer';\nimport { HashRouter } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport plLocale from 'date-fns/locale/pl';\nimport NotificationContextProvider from './contexts/NotificationContext/NotificationContextProvider';\nimport { ResourceMapContextProvider } from './contexts/ResourceMapContext';\nimport Navigation from './components/Navigation';\n\n\n\nfunction App() {\n\treturn (\n\t\t<Theme>\n\t\t\t<LocalizationProvider dateAdapter={AdapterDateFns} locale={plLocale}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Box component=\"div\" className=\"App\" sx={{ backgroundColor: 'background.default' }}>\n\t\t\t\t\t<HashRouter>\n\t\t\t\t\t\t<NotificationContextProvider>\n\t\t\t\t\t\t\t<SessionProvider >\n\t\t\t\t\t\t\t\t<ResourceMapContextProvider>\n\t\t\t\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t<Tabs />\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t\t\t</ResourceMapContextProvider>\n\t\t\t\t\t\t\t</SessionProvider>\n\t\t\t\t\t\t</NotificationContextProvider>\n\t\t\t\t\t</HashRouter>\n\t\t\t\t</Box>\n\t\t\t</LocalizationProvider>\n\t\t</Theme>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorkerRegistration.register();","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport { SxProps } from '@mui/system';\nimport { Paper } from '@mui/material';\n\n\ninterface GenericModalProps {\n  children: React.ReactNode | React.ReactNode[],\n  open: boolean,\n  sx?: SxProps,\n  onClose: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction GenericModal({\n  children, open, sx, onClose\n}: GenericModalProps) {\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        overflow: 'auto'\n      }}\n    >\n      <Fade in={open}>\n        <Paper sx={{\n          bgcolor: 'background.paper',\n          position: 'absolute',\n          width: '95%',\n          mt: '5vw',\n          maxWidth: '500px',\n          boxShadow: 24,\n          p: 3,\n          ...sx\n        }}>\n          {children}\n        </Paper>\n      </Fade>\n    </Modal >\n  );\n}\n\nexport default React.memo(GenericModal);","\n\n\nexport function displayDate(dateString: string): string {\n    const date = new Date(dateString);\n    const format = new Intl.DateTimeFormat('pl-PL', {\n        dateStyle: \"medium\",\n        timeStyle: \"medium\"\n    })\n\n    return format.format(date);\n}\n\n\nexport const timeFormat = new Intl.DateTimeFormat('pl-PL', {\n    timeStyle: \"medium\"\n});\n\n\nexport function isDate(str: string | undefined): boolean {\n    if (!str) return false;\n\n    let date = new Date(str);\n    return Boolean(date.getDate())\n}\n\nexport function urlToId(): string {\n    let url = window.location.pathname.toLocaleLowerCase()\n    return url.replaceAll(/\\d/gi, '*')\n}\n\n\nexport function fromLocaleDateTimeString(dateTime: string) {\n    const [d, m, y, h, i, s] = dateTime.split(/\\.|:|,\\s/).map(item => Number(item));\n    \n    return new Date(y, m - 1, d, h, i, s);\n}","import { useContext } from \"react\";\nimport { sessionContext } from \"./sessionProvider\";\nimport SessionValue from \"./SessionValue\";\n\n\n\nexport default function useSession() {\n  return useContext(sessionContext) as SessionValue;\n}","import Image from \"../models/Image\";\nimport APIServiceError from \"./APIServiceError\";\nimport { BuildingViewParams } from \"./BuildingService\";\nimport { APIResponse } from \"./interfaces\";\nimport { RoomViewParams } from \"./RoomService\";\nimport Service, { ResponseData } from \"./Service\";\nimport { UserViewParams } from \"./UserService\";\n\n\n\nclass ImageService extends Service {\n\n    private async sendImage(endpoint: string, formBody: FormData) {\n        const resp = await fetch(\n            this._BASE_URL + endpoint,\n            {\n                method: \"POST\",\n                cache: 'no-cache',\n                mode: 'cors',\n                body: formBody,\n                headers: {\n                    'Authorization': this.authToken,\n                }\n            }\n        );\n\n        const data = await resp.json() as ResponseData;\n        console.debug(data);\n\n        if (!resp.ok) {\n            console.error(`${resp.status}\\t${data?.error?.type}\\t${data?.error?.description}`);\n            throw new APIServiceError(data);\n        }\n\n        return data as APIResponse;\n    }\n\n    public getLink(image?: Image): string {\n        if (image?.url.includes('http')) return image.url;\n\n        return this._BASE_URL.slice(0, this._BASE_URL.length - 3) + image?.url;\n    }\n\n    public upload(\n        urlParams: (UserViewParams | BuildingViewParams | RoomViewParams),\n        image: Blob\n    ) {\n        const formData = new FormData();\n        formData.append(\n            'file',\n            image\n        );\n        return this.sendImage(this.preparePath(urlParams) + '/image', formData);\n    }\n\n    public remove(urlParams: (UserViewParams | BuildingViewParams | RoomViewParams)) {\n        return this.delete(this.preparePath(urlParams) + '/image');\n    }\n}\n\n\nexport default new ImageService();","import Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SaveIcon from '@mui/icons-material/Save';\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\n\n\ninterface FormGridContainerProps {\n    title: string,\n    subtitle?: string,\n    onSubmit: () => void,\n    onCancel: () => void,\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function FormGridContainer({\n    title,\n    subtitle,\n    onSubmit,\n    onCancel,\n    children,\n}: FormGridContainerProps) {\n\n\n    const handleSubmit = React.useCallback((event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        onSubmit();\n    }, [\n        onSubmit\n    ]);\n\n\n    return (\n        <Stack rowGap={3}>\n            <span>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    {title}\n                </Typography>\n\n                {subtitle && <Typography variant=\"body2\" color='text.secondary' mt='5px'>\n                    {subtitle}\n                </Typography>}\n            </span>\n\n            <Grid container spacing={2} component=\"form\" onSubmit={handleSubmit} >\n                {children}\n                <Grid item xs={12}>\n                    <Stack direction=\"row\" justifyContent=\"space-around\" mt={1.5}>\n                        <Button\n                            aria-label=\"Zamknij\"\n                            title='Zamknij'\n                            startIcon={<CancelIcon />}\n                            onClick={onCancel}\n                        >\n                            Zamknij\n                        </Button>\n                        <Button\n                            aria-label=\"Zatwierdź\"\n                            title='Zatwierdź'\n                            startIcon={<SaveIcon color='inherit' />}\n                            type=\"submit\"\n                            color=\"success\"\n                        >\n                            Zatwierdź\n                        </Button>\n                    </Stack>\n                </Grid>\n            </Grid>\n        </Stack>\n    );\n}","import React from \"react\";\nimport { queryParamsContext } from \"./QueryParamsContextProvider\";\nimport QueryParamsContextValue from \"./QueryParamsContextValue\";\n\n\nexport default function useQueryParams<T>() {\n    return React.useContext(queryParamsContext) as QueryParamsContextValue<T>;\n}","import APIServiceError from \"./APIServiceError\";\nimport { APIResponse, AppURLParams } from \"./interfaces\";\n\n\nexport interface ServiceFormData {\n    [index: string]: string | number | boolean | undefined | object\n}\n\n\n\n\ninterface FetchData {\n    endpoint: string\n    method: string,\n    body?: object\n}\n\ninterface ErrorData {\n    type: string,\n    description: string\n}\n\nexport interface ResponseData {\n    statusCode: number,\n    data?: any,\n    error?: ErrorData\n}\n\n\n\nexport interface StatusMessages {\n    [index: number]: string\n}\n\n\nexport default abstract class Service {\n\n    _BASE_URL: string = process.env.REACT_APP_API_URL as string;\n    _TOKEN_NAME: string = 'auth_token';\n    _userId: number = -1;\n\n    public set userId(value: number) {\n        this._userId = value\n    }\n\n    public get userId(): number {\n        if (this._userId === -1)\n            throw Error('user id was not set');\n\n        return this._userId;\n    }\n\n    protected get authToken() {\n        return 'Bearer ' + window.localStorage.getItem(this._TOKEN_NAME);\n    }\n\n    private async _fetch(fetchObject: FetchData): Promise<APIResponse> {\n        const response = await fetch(\n            this._BASE_URL + fetchObject.endpoint,\n            {\n                method: fetchObject.method,\n                cache: 'no-cache',\n                mode: 'cors',\n                // credentials: 'omit',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.authToken,\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: JSON.stringify(fetchObject.body)\n            }\n        );\n        const data = await response.json() as ResponseData;\n\n        if (process.env.NODE_ENV !== 'production') console.debug(data);\n\n        // if user is not authenticated - \n        // redirect to let sessionContext to resolve redirections\n        if (response.status === 401 && !fetchObject.endpoint.match('/auth|me|activate')) {\n            window.location.reload();\n        }\n\n        if (!response.ok) {\n            if (process.env.NODE_ENV !== 'production') console.error(`${response.status} ${data?.error?.type} ${data?.error?.description}`);\n            throw new APIServiceError(data);\n        }\n\n        return data as APIResponse;\n    }\n\n    protected preparePath(urlParams: AppURLParams): string {\n        let endp = '';\n        let url = window.location.toString();\n        const map = {\n            '/accesses': '/accesses',\n            '/settings': '/configurations',\n            '/users': '/users'\n        }\n\n        if (Object.keys(urlParams).length === 0) {\n            for (const [path, newPath] of Object.entries(map)) {\n                if (url.includes(path)) {\n                    endp = newPath;\n                }\n            }\n        } else if ('addressId' in urlParams) {\n            endp += `/addresses/${urlParams.addressId}`;\n\n            if ('buildingId' in urlParams) {\n                endp += `/buildings/${urlParams.buildingId}`;\n\n                if ('roomId' in urlParams) endp += `/rooms/${urlParams.roomId}`;\n            }\n        } else if ('userId' in urlParams) {\n            if (urlParams.userId === 'me') {\n                endp += '/users/' + this.userId.toString();\n            } else {\n                endp += '/users/' + urlParams.userId;\n            }\n        }\n        return endp;\n    }\n\n    protected get(endpoint: string, query = {}) {\n        return this._fetch({\n            method: 'GET',\n            endpoint: endpoint + '?' + new URLSearchParams(query).toString()\n        });\n    }\n\n    protected post(endpoint: string, body: object) {\n        return this._fetch({\n            method: 'POST',\n            endpoint: endpoint,\n            body: body\n        });\n    }\n\n    protected patch(endpoint: string, body: object) {\n        if (Object.keys(body).length === 0) return;\n\n        return this._fetch({\n            method: 'PATCH',\n            endpoint: endpoint,\n            body: body\n        });\n    }\n\n    protected delete(endpoint: string) {\n        return this._fetch({\n            method: 'DELETE',\n            endpoint: endpoint\n        });\n    }\n}","import { SessionUser } from \"../models/User\";\nimport { PaginationQueryParams } from \"./interfaces\";\nimport Service, { ServiceFormData } from \"./Service\";\n\n\nexport interface RegisterUserData extends ServiceFormData {\n    email: string,\n    password: string,\n    name: string,\n    surname: string\n}\n\nexport interface ActivationData extends ServiceFormData {\n    email: string,\n    password: string,\n    code: string,\n}\n\nexport interface ChangePasswordData extends ServiceFormData {\n    code: string,\n    newPassword: string,\n    email: string\n}\n\nexport interface UpdateUserParams extends ServiceFormData {\n    name?: string,\n    surname?: string,\n    metadata?: object\n}\n\nexport interface UserViewParams {\n    userId: string;\n}\n\nexport interface UserQueryParams extends PaginationQueryParams {\n    [index: string]: any,\n    accessId?: number,\n    deleted?: boolean,\n    search?: string,\n    activated?: boolean,\n}\n\n\nclass UserService extends Service {\n    _path = '/users';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath(urlParams: UserViewParams) {\n        this._path = this.preparePath(urlParams);\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public async getMe() {\n        const resp = await this.get('/users/me');\n        return resp.data as SessionUser;\n    }\n\n    public getUsers(data?: UserQueryParams) {\n        return this.get('/users', data);\n    }\n\n    public register(data: RegisterUserData) {\n        return this.post('/users', data);\n    }\n\n    public activate(data: ActivationData) {\n        return this.patch('/users/activate', data);\n    }\n\n    public generateKey(email: string) {\n        return this.post('/users/key', {\n            email: email\n        });\n    }\n\n    public updateAccess(userId: number, accessId: number) {\n        return this.patch(`/users/${userId}/access`, {\n            accessId: accessId\n        })\n    }\n\n    public update(data: UpdateUserParams) {\n        return this.patch(this.path, data);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public changePassword(data: ChangePasswordData) {\n        return this.patch('/users/password', data);\n    }\n}\n\n\nexport default new UserService();","import CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\n\nexport default function Loading() {\n  return (\n    <Box sx={{\n      display: 'flex',\n      alignContent: 'center',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '200px',\n      height: '100%',\n    }}>\n      <CircularProgress />\n    </Box>\n  );\n}","import Metadata, { FavouriteBuilding, FavouriteRoom } from \"../models/Metadata\";\nimport StorageService from \"./StorageService\";\nimport UserService from \"./UserService\";\n\n\n\n\nclass MetadataService {\n    private STORAGE_NAME = 'user-metadata';\n\n    private data: Metadata;\n    private _userId: number | undefined;\n\n\n    constructor() {\n        this.data = StorageService.read(this.STORAGE_NAME) ?? {\n            notes: '',\n            favourites: []\n        };\n    }\n\n    private async save(): Promise<void> {\n        StorageService.save(this.STORAGE_NAME, this.data);\n\n        if (!this._userId) return;\n\n        UserService.setPath({ userId: this._userId?.toString() });\n        try {\n            await UserService.update({\n                metadata: this.data\n            });\n        } catch (err: any) { console.error(err) }\n    }\n\n    public set userId(id: number) {\n        this._userId = id;\n    }\n\n    public set metadata(value: Metadata) {\n        this.data = {\n            ...this.data,\n            ...value\n        };\n    }\n\n    public get notes() {\n        return this.data.notes ?? '';\n    }\n\n    public get favourites() {\n        return this.data.favourites ?? [];\n    }\n\n    public set notes(value: string) {\n        this.data.notes = value;\n        this.save();\n    }\n\n    public addFavourite(item: FavouriteBuilding | FavouriteRoom): void {\n        this.data.favourites?.push(item);\n        this.data.favourites?.sort((a, b) => {\n            if (a.type >= b.type) {\n                if (a.type === b.type) {\n                    return a.name > b.name ? 1 : -1;\n                }\n                return 1;\n            }\n            return -1;\n        });\n        console.log(this.data);\n        this.save();\n    }\n\n    public isFavourite(item: FavouriteBuilding | FavouriteRoom): boolean {\n        return Boolean(this.data.favourites?.find(({ id, type }) => (type === item.type && id === item.id)));\n    }\n\n    public removeFavourite(item: FavouriteBuilding | FavouriteRoom): void {\n        this.data.favourites = this.data.favourites?.filter(({ id, type }) => id + type !== item.id + item.type)\n        this.save();\n    }\n}\n\n\nexport default new MetadataService();","import Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { SxProps } from \"@mui/system\";\n\n\n\ninterface SmallCardProps {\n    children: React.ReactNode | React.ReactNode[];\n    title?: string,\n    titleComponent?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6',\n    sx?: SxProps\n}\n\n\nexport default function SmallCard(props: SmallCardProps) {\n    return (\n        <Paper elevation={0} sx={{\n            p: 2,\n            ...props.sx\n        }}>\n            {props?.title && <Typography variant='body2' component={props.titleComponent ?? 'h2'} color='text.secondary'>\n                {props.title}\n            </Typography>}\n            {props.children}\n        </Paper>\n    )\n}","import Reservation from \"../models/Reservation\";\nimport paths from \"../shared/path\";\nimport { AppURLParams, PaginationQueryParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface ReservationsQueryParams extends PaginationQueryParams {\n    from?: string,\n    search?: string\n}\n\nexport interface CreateReservationData {\n    title: string,\n    description: string,\n    plannedStart: string,\n    plannedEnd: string,\n    roomId?: number\n}\n\nexport interface UpdateReservationData {\n    [index: string]: any,\n    title?: string,\n    description?: string,\n    plannedStart?: string,\n    plannedEnd?: string,\n    roomId?: number\n}\n\nenum Colors {\n    success = '#edf7ed',\n    error = '#fdeded',\n    info = '#e5f6fd',\n    warning = '#fff4e5',\n    inert = '#f5f5f5'\n}\n\ninterface ReservationStatus {\n    message: string,\n    color: Colors\n}\n\n\n\nclass ReservationService extends Service {\n\n    private emitStatus(mess: string, color: Colors): ReservationStatus {\n        return { message: mess, color: color };\n    }\n\n    private localPreparPath(urlParams: AppURLParams): string {\n        if (\n            window.location.toString().includes(paths.HOME)\n            && Object.keys(urlParams).length === 0\n        ) {\n            return '/users/' + this.userId.toString();\n        }\n        return this.preparePath(urlParams);\n    }\n\n\n    public getReservations(\n        urlParams: AppURLParams,\n        queryParams: ReservationsQueryParams\n    ) {\n        return this.get(`${this.localPreparPath(urlParams)}/reservations`, queryParams);\n    }\n\n\n    public createOne(data: CreateReservationData) {\n        return this.post('/reservations', data)\n    }\n\n    public update(id: number, data: UpdateReservationData) {\n        return this.patch(`/reservations/${id}`, data);\n    }\n\n    public pingKey(id: number, key: string) {\n        return this.patch(`/reservations/${id}/keys`, {\n            RFIDTag: key\n        });\n    }\n\n    public remove(id: number) {\n        return this.delete(`/reservations/${id}`);\n    }\n\n    public resolveStatus(reservation: Reservation): ReservationStatus {\n\n        const nowTimestamp = Date.now();\n\n        const now = new Date(nowTimestamp);\n        const now_minus15 = new Date(nowTimestamp - 900_000);\n        const now_plus15 = new Date(nowTimestamp + 900_000);\n        const { actualStart, plannedStart, actualEnd, plannedEnd } = reservation;\n\n\n        const start = new Date(actualStart ? actualStart : plannedStart);\n        const end = new Date(actualEnd ? actualEnd : plannedEnd);\n\n\n        // nie rozpoczęła się\n        if (!actualStart) {\n            // jest już po czasie, i czeka do +15 minut na odbiór\n            if (start < now && start > now_minus15) return this.emitStatus('Powinna zostać już odebrana', Colors.warning);\n\n            // za 15 minut zaczyna się rezerwacja\n            if (start > now && start < now_plus15) return this.emitStatus('Za chwilę zostanie odebrana', Colors.info);\n\n            // nie została odbrana w czasie <planowany start + 15 minut>\n            if (start < now_plus15) return this.emitStatus('Nieodebrana.', Colors.error)\n\n            return this.emitStatus('Oczekuje', Colors.inert)\n\n            // rozpoczęła się\n        } else if (actualStart) {\n            // zakończyła się\n            if (actualEnd) return this.emitStatus('Rezerwacja zakończona.', Colors.inert);\n\n            // nie zakończyła się\n            if (!actualEnd) {\n                // kończy się w ciągu 15 minut\n                if (now < end && now_plus15 > end) return this.emitStatus('Za chwilę się kończy.', Colors.info);\n\n                // czas zakończenia już minął\n                if (now > end) {\n                    const end_plus15 = new Date(Date.parse(end.toString()) + 900_000)\n\n                    // dodajemy 15 minut\n                    if (now < end_plus15) return this.emitStatus('Powinna się zakończyć.', Colors.warning);\n\n                    // dodane 15 minut już minęło\n                    if (now > end_plus15) return this.emitStatus('Czas minął, klucz nie oddany.', Colors.error);\n                }\n\n                return this.emitStatus('Rezerwacja trwa.', Colors.success);\n            }\n        }\n\n        return this.emitStatus(\"Status nieznany\", Colors.warning);\n    }\n}\n\nexport default new ReservationService()","\n\n\nclass StorageService {\n\n    private id: string = '';\n\n    public setIdentity(value: string | number) {\n        this.id = value.toString();\n    }\n\n    private codeName(name: string) {\n        return btoa(encodeURI(name + this.id));\n    }\n\n    public save(name: string, value: any) {\n        const str = JSON.stringify(value);\n        localStorage.setItem(this.codeName(name), str);\n    }\n\n    public delete(name: string) {\n        localStorage.removeItem(this.codeName(name));\n    }\n\n    public read(name: string) {\n        const str = localStorage.getItem(this.codeName(name));\n        if (!str) return null;\n\n        try {\n            return JSON.parse(str);\n        } catch {\n            return null;\n        }\n    }\n\n}\n\nexport default new StorageService();","import React from 'react';\nimport Loading from '../../../../../shared/components/Loading';\n\nexport { default as LogRow } from './LogRow';\n\nconst LazyGenericLogsTab = React.lazy(() => import('./GenericLogsTab'))\n\nexport default function GenericLogsTab() {\n    return <React.Suspense fallback={<Loading />}>\n        <LazyGenericLogsTab />\n    </React.Suspense>\n};\n","import { Box } from \"@mui/material\";\nimport React from \"react\";\nimport SmallCard from \"../../components/SmallCard\";\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    hidden: boolean,\n    index: number\n}\n\n\nexport default function SwipeablePanel(props: TabPanelProps) {\n    const { children, hidden, index, ...other } = props;\n\n    // should component update\n    const render = React.useMemo(() =>\n        <Box\n            role=\"tabpanel\"\n            hidden={hidden}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            <SmallCard>{children}</SmallCard>\n        </Box>\n        , [hidden, index, children, other]);\n\n    return render;\n}","import { Tab, Tabs, Typography, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport SwipeablePanel from \"./SwipeablePanel\";\n\n\ninterface SwipeableTabsProps {\n    tabs: { name: string, component: React.ReactNode }[],\n}\n\n\nfunction a11yProps(index: number) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\n\nexport default function SwipeableTabs(props: SwipeableTabsProps) {\n    const theme = useTheme();\n    const [tabIndex, setTabIndex] = React.useState(0);\n\n\n    const handleTabChange = React.useCallback((event: React.SyntheticEvent, newValue: number) => {\n        setTabIndex(newValue);\n    }, []);\n\n\n    const handleChangeIndex = React.useCallback((index: number) => {\n        setTabIndex(index);\n    }, []);\n\n\n    const renderedTabs = React.useMemo(() => {\n        return props.tabs.map((page, index) => <Tab\n            key={index}\n            label={<Typography component='h2' variant='button'>{page.name}</Typography>}\n            {...a11yProps(index)}\n        />)\n    }, [props.tabs]);\n\n\n    const renderedTabPanels = React.useMemo(() => {\n        return props.tabs.map((page, index) => <SwipeablePanel\n            key={index}\n            index={index}\n            hidden={tabIndex !== index}\n            dir={theme.direction}\n        >\n            {page.component}\n        </SwipeablePanel>)\n    }, [\n        props.tabs,\n        tabIndex,\n        theme.direction,\n    ]);\n\n\n    return (\n        <div>\n            <Tabs\n                allowScrollButtonsMobile\n                value={tabIndex}\n                onChange={handleTabChange}\n                indicatorColor=\"primary\"\n                variant=\"scrollable\"\n                sx={{ borderBottom: 2, borderColor: 'divider' }}\n            >\n                {renderedTabs}\n            </Tabs>\n            <br />\n            <SwipeableViews\n                axis='x'\n                index={tabIndex}\n                onChangeIndex={handleChangeIndex}\n            >\n                {renderedTabPanels}\n            </SwipeableViews>\n        </div>\n    );\n}","import { Button, Stack, TextField, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport GenericModal from \"../../components/GenericModal\";\n\n\ninterface DeleteModalProps {\n    open: boolean,\n    onClose: () => void,\n    objectName: string,\n    onSuccess: () => void\n}\n\nexport default function DeleteModal({\n    open, onSuccess, onClose, objectName\n}: DeleteModalProps) {\n    const notify = useNotification();\n    const [input, setInput] = React.useState<string>('');\n\n\n    const handleConfirm = React.useCallback(async () => {\n        if (input !== objectName) {\n            notify(\"Wpisana nazwa jest niepoprawna\", 'error');\n            return;\n        }\n        onSuccess();\n        setInput('');\n    }, [objectName, input, onSuccess, notify]);\n\n\n    const close = React.useCallback(() => {\n        setInput('');\n        onClose();\n    }, [onClose]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            aria-label=\"Okno do usuwania obiektu\"\n            sx={{\n                maxWidth: \"400px\",\n            }}\n        >\n            <Stack direction=\"column\" spacing={3}>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    Usuwanie obiektu\n                </Typography>\n                <Typography variant=\"body1\" color='text.secondary'>\n                    Tej operacji nie da się cofnąć.\n                    <br />\n                    1. Przepisz nazwę <b>{objectName}</b><br />\n                    2. Naciśnij 'Zatwierdź'\n                </Typography>\n                <TextField\n                    id=\"resource-name\"\n                    label=\"nazwa\"\n                    variant=\"outlined\"\n                    value={input}\n                    onChange={(evt) => setInput(evt.target.value)}\n                />\n                <Stack direction=\"row\" justifyContent=\"space-around\">\n                    <Button startIcon={<CancelIcon />} onClick={close}>Anuluj</Button>\n                    <Button startIcon={<DeleteIcon color=\"inherit\" />} onClick={handleConfirm} color=\"error\">Zatwierdź</Button>\n                </Stack>\n            </Stack>\n        </GenericModal>\n    );\n}"],"sourceRoot":""}