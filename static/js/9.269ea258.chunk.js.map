{"version":3,"sources":["components/pages/public/Register/Form.tsx","components/pages/public/Register/Register.tsx","components/pages/public/FormPage.tsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js"],"names":["Form","notify","useNotification","React","email","password","name","surname","data","setData","onChange","e","old","target","value","handleSubmit","event","a","preventDefault","UserService","register","to","paths","ACTIVATE","message","description","Box","component","onSubmit","sx","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","type","FormControlLabel","control","Checkbox","color","Button","variant","mb","justifyContent","Link","ReactRouterLink","LOGIN","Register","FormPage","title","icon","props","maxWidth","marginTop","display","flexDirection","alignItems","backgroundColor","padding","borderRadius","m","bgcolor","children","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","indeterminate","capitalize","theme","_extends","palette","text","secondary","disableRipple","alpha","action","active","main","hoverOpacity","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","fontSize"],"mappings":"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","file":"static/js/9.269ea258.chunk.js","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { Link as ReactRouterLink, Redirect } from 'react-router-dom';\nimport useNotification from '../../../../contexts/NotificationContext/useNotification';\nimport UserService, { RegisterUserData } from '../../../../services/UserService';\nimport paths from '../../../../shared/path';\n\n\nexport default function Form() {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<RegisterUserData>({\n        email: \"\",\n        password: \"\",\n        name: \"\",\n        surname: \"\"\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        try {\n            await UserService.register(data);\n            notify(\"Zarejestrowano\", 'success', () => <Redirect to={paths.ACTIVATE} />);\n        } catch (err: any) {\n            let message = err.description;\n            // if (err.code === 422) message = \"Wprowadzono nieprawidłowe dane\";\n\n            notify(message, 'error');\n        }\n    }, [data, notify]);\n\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        autoComplete=\"given-name\"\n                        name=\"name\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Imię\"\n                        autoFocus\n                        value={data.name}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"surname\"\n                        label=\"Nazwisko\"\n                        name=\"surname\"\n                        autoComplete=\"family-name\"\n                        value={data.surname}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Adres Email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        value={data.email}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Hasło\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"new-password\"\n                        value={data.password}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <FormControlLabel\n                        control={<Checkbox required value=\"allowExtraEmails\" color=\"primary\" />}\n                        label=\"Akceptuję warunki\"\n                    />\n                </Grid>\n            </Grid>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                Załóż konto!\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <Link component={ReactRouterLink} to={paths.LOGIN} variant=\"body2\" >\n                        Masz już konto? Zaloguj się!\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import FormPage from \"../FormPage\";\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport Form from \"./Form\";\n\n\nexport default function Register() {\n    return (\n        <FormPage\n            title='Rejestracja'\n            icon={<AccountCircleIcon />}\n        >\n            <Form />\n        </FormPage>\n    );\n}","import { Avatar, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\n\ninterface FormPageProps {\n    children: React.ReactNode | React.ReactNodeArray,\n    title: string,\n    icon: React.ReactNode\n}\n\n\nexport default function FormPage(props: FormPageProps) {\n    return (\n        <Container component=\"div\" maxWidth=\"xs\">\n            <Box\n                sx={{\n                    marginTop: '5vw',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    backgroundColor: 'background.paper',\n                    padding: '25px',\n                    borderRadius: '10px'\n                }}\n            >\n                <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n                    {props.icon}\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {props.title}\n                </Typography>\n                {props.children}\n            </Box>\n        </Container>\n    );\n};\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"sourceRoot":""}