{"version":3,"sources":["components/pages/protected/components/MonthlyChartsSection.tsx","components/pages/protected/components/WeeklyChartsSection.tsx","components/pages/protected/components/RoomOrBuildingChartTab.tsx"],"names":["MonthlyChartsSection","props","title","fullWidth","data","xKey","y","label","key","React","memo","WeeklyChartsSection","resolveDay","RoomOrBuildingChartTab","ActualLoader","chartsData","useCharts","weekly","monthly","defaultOpen","users","length"],"mappings":"kHAAA,oCASA,SAASA,EAAqBC,GAC1B,OACI,eAAC,IAAD,CAAcC,MAAM,6BAApB,UACI,cAAC,IAAD,CACIC,WAAS,EACTD,MAAM,yDACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,6BAAoBC,IAAK,wBAG1C,cAAC,IAAD,CACIL,WAAS,EACTD,MAAM,uCACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,0BAAsBC,IAAK,qBAG5C,cAAC,IAAD,CACIL,WAAS,EACTD,MAAM,8BACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,iCAA6BC,IAAK,yBAC3C,CAAED,MAAO,iCAA6BC,IAAK,8BAQhDC,QAAMC,KAAKV,I,iCC7C1B,oCAUA,SAASW,EAAoBV,GACzB,OACI,eAAC,IAAD,CAAcC,MAAM,wBAApB,UACI,cAAC,IAAD,CACIC,WAAS,EACTS,YAAU,EACVV,MAAM,oDACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,6BAAoBC,IAAK,wBAG1C,cAAC,IAAD,CACIL,WAAS,EACTS,YAAU,EACVV,MAAM,uCACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,0BAAsBC,IAAK,qBAG5C,cAAC,IAAD,CACIL,WAAS,EACTS,YAAU,EACVV,MAAM,8BACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,iCAA6BC,IAAK,yBAC3C,CAAED,MAAO,iCAA6BC,IAAK,8BAOhDC,QAAMC,KAAKC,I,iCChD1B,6DAQA,SAASE,IACL,OACI,cAAC,IAAD,UACI,cAACC,EAAD,MAMZ,IAAMA,EAAeL,IAAMC,MAAK,WAC5B,IAAQK,EAAeC,cAAfD,WAER,OACI,qCACI,cAAC,IAAD,CAAqBX,KAAMW,EAAWE,SAEtC,cAAC,IAAD,CAAsBb,KAAMW,EAAWG,UAEvC,eAAC,IAAD,CAAcC,aAAW,EAACjB,MAAM,6CAAhC,UACI,cAAC,IAAD,CACIC,UAAWY,EAAWK,MAAMC,OAAS,EACrCnB,MAAM,gCACNE,KAAMW,EAAWK,MACjBf,KAAK,QACLC,EAAG,CACC,CAAEC,MAAO,6BAAyBC,IAAK,yBACvC,CAAED,MAAO,6BAAyBC,IAAK,2BAG/C,cAAC,IAAD,CACIL,UAAWY,EAAWK,MAAMC,OAAS,EACrCnB,MAAM,kDACNE,KAAMW,EAAWK,MACjBf,KAAK,QACLC,EAAG,CACC,CAAEC,MAAO,6BAAoBC,IAAK,wBAG1C,cAAC,IAAD,CACIL,UAAWY,EAAWK,MAAMC,OAAS,EACrCnB,MAAM,qDACNE,KAAMW,EAAWK,MACjBf,KAAK,QACLC,EAAG,CACC,CAAEC,MAAO,sBAAkBC,IAAK,8BAQzCC,cAAMC,KAAKG","file":"static/js/0.4be0d72d.chunk.js","sourcesContent":["import React from \"react\";\nimport { DayStatsItem } from \"../../../../models/Stats\";\nimport { Chart, ChartSection } from \"./Charts\";\n\n\ninterface MonthlyChartsSectionProps {\n    data: DayStatsItem[]\n}\n\nfunction MonthlyChartsSection(props: MonthlyChartsSectionProps) {\n    return (\n        <ChartSection title='Statystyki miesięczne'>\n            <Chart\n                fullWidth\n                title='Ilość rezerwacji na dzień miesiąca'\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Faktyczny czas wszystkich rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Czas całkowity [m]', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Średni czas rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Średni planowany czas [m]', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas [m]', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}\n\n\nexport default React.memo(MonthlyChartsSection);","import React from \"react\";\nimport { DayStatsItem } from \"../../../../models/Stats\";\nimport { Chart, ChartSection } from \"./Charts\";\n\n\ninterface WeeklyChartsSectionProps {\n    data: DayStatsItem[]\n}\n\n\nfunction WeeklyChartsSection(props: WeeklyChartsSectionProps) {\n    return (\n        <ChartSection title='Statystyki tygodniowe'>\n            <Chart\n                fullWidth\n                resolveDay\n                title='Ilość rezerwacji na dzień tygodnia'\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth\n                resolveDay\n                title=\"Faktyczny czas wszystkich rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Czas całkowity [m]', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                resolveDay\n                title=\"Średni czas rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Średni planowany czas [m]', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas [m]', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}\n\nexport default React.memo(WeeklyChartsSection);","import React from \"react\";\nimport { BuildingOrRoomChartsData } from \"../../../../models/Stats\";\nimport { ChartsTab, Chart, ChartSection, useCharts } from \"./Charts\";\nimport MonthlyChartsSection from \"./MonthlyChartsSection\";\nimport WeeklyChartsSection from \"./WeeklyChartsSection\";\n\n\n\nfunction RoomOrBuildingChartTab() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n// need to use actual loading component to access charts context in ChartsTab\nconst ActualLoader = React.memo(() => {\n    const { chartsData } = useCharts<BuildingOrRoomChartsData>();\n\n    return (\n        <>\n            <WeeklyChartsSection data={chartsData.weekly} />\n\n            <MonthlyChartsSection data={chartsData.monthly} />\n\n            <ChartSection defaultOpen title='Wykresy odnośnie użytkowników'>\n                <Chart\n                    fullWidth={chartsData.users.length > 2}\n                    title=\"Średnie czasy rezerwacji\"\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                        { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                    ]}\n                />\n                <Chart\n                    fullWidth={chartsData.users.length > 2}\n                    title='Ilość rezerwacji użytkowników'\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                    ]}\n                />\n                <Chart\n                    fullWidth={chartsData.users.length > 2}\n                    title=\"Czas wszystkich reserwacji danego użytkownika\"\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                    ]}\n                />\n            </ChartSection>\n        </>\n    )\n});\n\nexport default React.memo(RoomOrBuildingChartTab);"],"sourceRoot":""}