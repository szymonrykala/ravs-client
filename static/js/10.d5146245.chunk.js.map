{"version":3,"sources":["../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","services/AccessService.ts","components/pages/protected/AccessPage/Forms/AccessEditModal.tsx","components/pages/protected/AccessPage/Forms/CreateAccessModal.tsx","components/pages/protected/AccessPage/AccessContext/AccessContextProvider.tsx","components/pages/protected/AccessPage/AccessContext/useAccess.ts","components/pages/protected/AccessPage/components/AccessesList/AccessListItem.tsx","components/pages/protected/AccessPage/components/AccessesList/AddItem.tsx","components/pages/protected/AccessPage/components/AccessesList/AccessesList.tsx","components/pages/protected/AccessPage/components/AccessInfo.tsx","components/pages/protected/AccessPage/components/EditUsersAccess/EditUsersAccess.tsx","components/pages/protected/AccessPage/AccessPage.tsx"],"names":["createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","indeterminate","color","capitalize","theme","_extends","palette","text","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","AccessService","_path","this","get","id","delete","path","data","patch","post","Service","fields","label","AccessEditModal","access","open","onClose","onSubmit","useState","setData","handleChange","useCallback","event","value","target","old","close","handleSubmit","a","GenericModal","FormGridContainer","onCancel","title","subtitle","Grid","item","xs","TextField","required","onChange","map","field","index","FormControlLabel","labelPlacement","control","Switch","ml","DatesFooter","model","CreateAccessModal","setName","autoFocus","accessContext","createContext","AccessContextProvider","notify","useNotification","modalOpen","setModalOpen","selectedAccessId","setSelectedAccessId","accessesList","setAccessesList","load","getAll","resp","description","useEffect","updateAccess","accessId","update","deleteAccess","remove","filter","createAccess","create","unshift","_created","Date","toUTCString","_updated","Object","assign","selectedAccess","useMemo","find","openAccess","Provider","children","useAccess","useContext","AccessListItem","ListItem","button","onClick","onSelect","sx","my","ListItemAvatar","ListItemText","primary","ListItemSecondaryAction","IconButton","onDelete","AddItem","disablePadding","ListItemButton","ListItemIcon","AccessesList","createModalOpen","setCreateModalOpen","deleteModalOpen","setDeleteModalOpen","toDelete","setToDelete","renderedRows","reverse","handleDelete","DeleteModal","objectName","onSuccess","Stack","spacing","TabHeadLine","List","maxWidth","explonations","AccessInfo","rendered","Typography","variant","component","mb","mt","rel","href","usersNotUsers","b","ai","undefined","bi","notNumNum","indexOf","intersection","EditUsersAccess","setChecked","leftUsers","setLeftUsers","rightUsers","setRightUsers","left","right","setAccess","updateUsersAccess","users","calls","user","UserService","Promise","all","results","loadUsers","getUsers","deleted","then","leftChecked","rightChecked","handleToggle","currentIndex","push","splice","handleCheckedRight","usersToMove","moved","concat","handleCheckedLeft","l","console","log","handleSelectChange","Number","customList","direction","Card","Box","p","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","Divider","height","bgcolor","overflow","dense","role","tabIndex","email","ev","stopPropagation","dynamicPaths","toUser","container","justifyContent","alignItems","sm","Button","length","AccessPage","logsAdmin","useResolvedAccess","pages","arr","GenericLogsTab","SwipeableTabs","tabs"],"mappings":"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","file":"static/js/10.d5146245.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import Service from \"./Service\";\n\n\n\nexport interface AccessViewParams {\n    addressId: string,\n}\n\n\nexport interface AccessUpdateParams {\n    [index: string]: string | boolean | undefined,\n    name?: string,\n    owner?: boolean,\n    accessAdmin?: boolean,\n    premisesAdmin?: boolean,\n    keysAdmin?: boolean,\n    reservationsAdmin?: boolean,\n    reservationsAbility?: boolean,\n    logsAdmin?: boolean,\n    statsViewer?: boolean,\n}\n\nexport interface AccessCreateParams {\n    name: string,\n}\n\n\nclass AccessService extends Service {\n    _path = '/accesses';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public getAll() {\n        return this.get('/accesses');\n    }\n\n    public remove(id?: number) {\n        return this.delete(\n            id ? `${this.path}/${id}` : this.path\n        );\n    }\n\n    public update(id: number, data: AccessUpdateParams) {\n        return this.patch(`${this.path}/${id}`, data);\n    }\n\n    public create(data: AccessCreateParams) {\n        return this.post(this.path, data)\n    }\n}\n\nexport default new AccessService()","import FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Grid from \"@mui/material/Grid\";\nimport Switch from \"@mui/material/Switch\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport Access from \"../../../../../models/Access\";\nimport { AccessUpdateParams } from \"../../../../../services/AccessService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../components/GenericModal\";\nimport DatesFooter from \"../../components/DatesFooter\";\n\n\n\ninterface AccessEditModalProps {\n    access: Access,\n    open: boolean,\n    onClose: () => void,\n    onSubmit: (accessId: number, data: AccessUpdateParams) => Promise<boolean>\n}\n\n\nconst fields = [\n    {\n        name: 'owner',\n        label: 'Właściciel'\n    }, {\n        name: 'accessAdmin',\n        label: 'Administrator klas dostępu'\n    }, {\n        name: 'premisesAdmin',\n        label: 'Administrator inwentarza'\n    }, {\n        name: 'keysAdmin',\n        label: 'Administrator kluczy'\n    }, {\n        name: 'reservationsAdmin',\n        label: 'Administrator rezerwacji '\n    }, {\n        name: 'reservationsAbility',\n        label: 'Możliwość rezerwacji'\n    }, {\n        name: 'logsAdmin',\n        label: 'Administrator logów'\n    }, {\n        name: 'statsViewer',\n        label: 'Dostęp do statystyk'\n    },\n];\n\n\nexport default function AccessEditModal({\n    access,\n    open,\n    onClose,\n    onSubmit,\n}: AccessEditModalProps) {\n\n    const [data, setData] = React.useState<AccessUpdateParams>({});\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | boolean;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = event.target.value;\n                break;\n            default:\n                value = event.target.checked;\n                break;\n        }\n\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await onSubmit(access.id, data)) {\n            onClose();\n            setData({});\n        }\n    }, [\n        onClose,\n        onSubmit,\n        access.id,\n        data\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n        >\n            <FormGridContainer\n                onSubmit={handleSubmit}\n                onCancel={close}\n                title=\"Edycja klasy dostępu\"\n                subtitle=\"Edycja klasy dostępu. Wprowadzone zmiany w sposób istotny wpływają na zakres funkcji użytkowników.\"\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        name=\"name\"\n                        label=\"nazwa\"\n                        id=\"nazwa\"\n                        value={data.name ?? access.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                {\n                    fields.map((field, index) =>\n                        <Grid item xs={12} key={index}>\n                            <FormControlLabel\n                                labelPlacement=\"start\"\n                                control={<Switch\n                                    id={`access-${field.name}`}\n                                    name={field.name}\n                                    inputProps={{ 'aria-label': field.label }}\n                                    onChange={handleChange}\n                                    checked={(field.name in data) ? data[field.name] : (access[field.name])}\n                                />}\n                                label={field.label}\n                            />\n                        </Grid>\n                    )\n                }\n                <Grid item xs={12} ml={2}>\n                    <DatesFooter model={access} />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    )\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { AccessCreateParams } from \"../../../../../services/AccessService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../components/GenericModal\";\n\n\n\ninterface CreateAccessModalProps {\n    open: boolean,\n    onClose: () => void,\n    onSubmit: (data: AccessCreateParams) => Promise<boolean>\n}\n\n\nexport default function CreateAccessModal({\n    open,\n    onClose,\n    onSubmit,\n}: CreateAccessModalProps) {\n\n    const [name, setName] = React.useState<string>('');\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setName(event.target.value);\n    }, []);\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setName('');\n    }, [\n        onClose\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await onSubmit({\n            name: name\n        })) {\n            onClose();\n            setName('');\n        }\n    }, [\n        onClose,\n        onSubmit,\n        name\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n        >\n            <FormGridContainer\n                onSubmit={handleSubmit}\n                onCancel={close}\n                title=\"Tworzenie klasy dostępu\"\n                subtitle=\"Podaj nazwę dla nowej klasy dostępu. Stworzona zostanie klasa bez żadnych uprawnień - pamiętaj aby dostosować ja do swoich potrzeb.\"\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        autoFocus\n                        required\n                        name=\"name\"\n                        label=\"nazwa\"\n                        id=\"nazwa\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n            </FormGridContainer>\n        </GenericModal>\n    )\n}","import React from \"react\";\nimport { AccessContextValue } from \".\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport Access from \"../../../../../models/Access\";\nimport AccessService, { AccessCreateParams, AccessUpdateParams } from \"../../../../../services/AccessService\";\nimport { EditForm } from \"../Forms\";\n\n\n\nexport const accessContext: any = React.createContext(null);\n\n\ninterface AccessContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function AccessContextProvider(props: AccessContextProviderProps) {\n    const notify = useNotification();\n\n    const [modalOpen, setModalOpen] = React.useState<boolean>(false);\n    const [selectedAccessId, setSelectedAccessId] = React.useState<number>();\n    const [accessesList, setAccessesList] = React.useState<Access[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await AccessService.getAll();\n            setAccessesList(resp.data as Access[]);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setAccessesList([]);\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const updateAccess = React.useCallback(async (accessId: number, data: AccessUpdateParams) => {\n        try {\n            if (await AccessService.update(accessId, data)) {\n                setAccessesList(old => {\n                    if (old)\n                        return old.map(access => {\n                            if (access.id === accessId) {\n                                access = {\n                                    ...access,\n                                    ...data\n                                }\n                            }\n                            return access;\n                        });\n\n                });\n                notify('Klasa dostępu została zaktualizowana', 'success');\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const deleteAccess = React.useCallback(async (id?: number) => {\n        try {\n            await AccessService.remove(id);\n\n            setAccessesList(old => {\n                if (!old) return;\n                return old.filter(access => access.id !== id);\n            });\n\n            notify('Klasa dostępu została usunięta', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const createAccess = React.useCallback(async (data: AccessCreateParams) => {\n        try {\n            const resp = await AccessService.create(data);\n\n            setAccessesList(old => {\n                old?.unshift({\n                    ...data,\n                    id: resp.data,\n                    _created: (new Date()).toUTCString(),\n                    _updated: (new Date()).toUTCString(),\n                } as Access)\n                return Object.assign([], old);\n            });\n\n            notify('Klasa dostępu została utworzona', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const selectedAccess = React.useMemo(() => {\n        return accessesList?.find(({ id }) => id === selectedAccessId);\n    }, [selectedAccessId, accessesList]);\n\n\n    const openAccess = React.useCallback((id: number) => {\n        setSelectedAccessId(id);\n        setModalOpen(true);\n    }, []);\n\n\n    if (!accessesList) return null;\n\n    return (\n        <accessContext.Provider value={{\n            accessesList,\n            updateAccess,\n            deleteAccess,\n            createAccess,\n            openAccess,\n        } as AccessContextValue}>\n            {props.children}\n            {\n                selectedAccess &&\n                <EditForm\n                    open={modalOpen}\n                    onSubmit={updateAccess}\n                    onClose={() => setModalOpen(false)}\n                    access={selectedAccess}\n                />\n            }\n        </accessContext.Provider>\n    );\n}","import React from \"react\";\nimport { accessContext } from \"./AccessContextProvider\";\nimport AccessContextValue from \"./AccessContextValue\";\n\n\nexport default function useAccess() {\n    return React.useContext(accessContext) as AccessContextValue;\n}","import IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText } from \"@mui/material\";\n\n\n\ninterface AccessListItemProps {\n    id: number,\n    name: string,\n    onSelect: () => void,\n    onDelete: () => void\n}\n\n\nexport default function AccessListItem(props: AccessListItemProps) {\n    return (\n        <ListItem button onClick={props.onSelect} sx={{ my: '5px' }}>\n            <ListItemAvatar>\n                {props.id}\n            </ListItemAvatar>\n\n            <ListItemText primary={props.name} />\n\n            <ListItemSecondaryAction>\n                <IconButton\n                    color='error'\n                    onClick={props.onDelete}\n                >\n                    <DeleteIcon />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}","import AddCircleIcon from '@mui/icons-material/AddCircle';\nimport ListItem from \"@mui/material/ListItem\";\nimport { ListItemButton, ListItemIcon, ListItemText } from \"@mui/material\";\n\n\n\ninterface AddItemProps {\n    onClick: () => void\n}\n\n\nexport default function AddItem(props: AddItemProps) {\n    return (\n        <ListItem disablePadding >\n            <ListItemButton onClick={props.onClick}>\n                <ListItemIcon>\n                    <AddCircleIcon color=\"primary\" />\n                </ListItemIcon>\n\n                <ListItemText secondary='Dodaj nową klasę dostępu' />\n            </ListItemButton>\n        </ListItem>\n    );\n}","import Stack from \"@mui/material/Stack\";\nimport React from \"react\";\nimport DeleteModal from \"../../../components/DeleteModal\";\nimport TabHeadLine from \"../../../../../../shared/components/TabHeadLine\";\n\nimport { useAccess } from \"../../AccessContext\";\nimport { CreateForm } from \"../../Forms\";\nimport AccessListItem from \"./AccessListItem\";\nimport { List } from \"@mui/material\";\nimport AddItem from \"./AddItem\";\n\n\n\nexport default function AccessesList() {\n    const { accessesList, openAccess, createAccess, deleteAccess } = useAccess();\n\n    const [createModalOpen, setCreateModalOpen] = React.useState(false);\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);\n\n    const [toDelete, setToDelete] = React.useState<{ id: number, name: string } | null>(null);\n\n    const renderedRows = React.useMemo(() => {\n        return accessesList.map(({ id, name }) =>\n            <AccessListItem\n                key={id}\n                id={id}\n                name={name}\n                onSelect={() => openAccess(id)}\n                onDelete={() => {\n                    setToDelete({ id: id, name: name })\n                    setDeleteModalOpen(true);\n                }}\n            />).reverse();\n\n    }, [\n        accessesList,\n        openAccess,\n    ]);\n\n\n    const handleDelete = React.useCallback(async () => {\n        if (!toDelete) return;\n\n        if (await deleteAccess(toDelete.id)) {\n            setDeleteModalOpen(false);\n        }\n    }, [toDelete, deleteAccess]);\n\n\n    return (\n        <>\n\n            <CreateForm\n                open={createModalOpen}\n                onClose={() => setCreateModalOpen(false)}\n                onSubmit={createAccess}\n            />\n\n            <DeleteModal\n                objectName={toDelete?.name ?? ''}\n                open={deleteModalOpen}\n                onClose={() => {\n                    setToDelete(null);\n                    setDeleteModalOpen(false);\n                }}\n                onSuccess={handleDelete}\n            />\n\n            <Stack spacing={4}>\n                <TabHeadLine\n                    title=\"Lista klas dostępu\"\n                    subtitle=\"Twórz, edytuj i usuwaj klasy dostępu.\"\n                />\n\n                <List sx={{ maxWidth: '400px' }}>\n                    <AddItem onClick={() => setCreateModalOpen(true)} />\n                    {renderedRows}\n                </List>\n            </Stack >\n        </>\n    );\n}","import Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\n\n\nconst explonations = [\n    {\n        field: 'Identyfikator - id',\n        text: 'Numer identyfikacyjny klasy dostępu. Ten numer przypisujesz użytkownikowi podczas zmiany uprawnień.'\n    },\n    {\n        field: 'Nazwa - name',\n        text: 'Nazwa klasy dostępu'\n    }, {\n        field: 'Właściciel - owner',\n        text: <>Najwyższy zestaw uprawnień.\n            Użytkownik ma możliwość zmiany konfiguracji platformy oraz posiada on wszystkie inne uprawnienia włączając w to edytowanie danych innych użytkowników.\n            Jest właścicielem platformy.</>\n    }, {\n        field: 'Administrator klas dostępu - accessAdmin',\n        text: 'Użytkownik ma możliwość tworzenia, edytowania oraz usuwania klas dostępu. Jest odpowiedzialny za przydzielanie dostępu użytkownikom.'\n    }, {\n        field: 'Administrator inwentarza - premisesAdmin',\n        text: 'Użytkownik jest odpowiedzialny za tworzenie, edycję i usuwanie adresów, budynków i sal.'\n    }, {\n        field: 'Administrator kluczy - keysAdmin',\n        text: 'Użytkownik ma możliwość przypisywania i usuwania tagów RFID dla każdej sali.'\n    }, {\n        field: 'Możliwość rezerwacji - reservationsAbility',\n        text: 'Użytkownik ma możliwość tworzenia rezerwacji'\n    }, {\n        field: 'Administrator rezerwacji - reservationsAdmin',\n        text: 'Użytkownik ma możliwość edytowania oraz usuwania rezerwacji stworzonych przez innych użytkowników.'\n    }, {\n        field: 'Administrator logów - logsAdmin',\n        text: 'Użytkownik ma możliwość przeglądania logów aplikacji.'\n    }, {\n        field: 'Dostęp do statystyk - statsViewer',\n        text: 'Użytkownik może przeglądać statystyki wygenerowane dla aplikacji, użytkownika, budynku i pokoju.'\n    },\n];\n\n\n\nexport default function AccessInfo() {\n\n\n\n    const rendered = React.useMemo(() => {\n        return explonations.map(({ field, text }, id) =>\n            <li key={id}>\n                <Typography variant='subtitle1' component='h3'>\n                    {field}\n                </Typography>\n                <Typography variant='body2' color='text.secondary' mb={1}>\n                    {text}\n                </Typography>\n            </li>\n        );\n    }, []);\n\n\n    return (\n        <Stack spacing={3}>\n            <span>\n                <Typography component='h1' variant='h3' color='primary.dark'>\n                    Klasy Dostępu\n                </Typography>\n                <Typography variant='body1' color=\"text.secondary\" mt=\"5px\">\n                    Dostępne tutaj opcje wpływają znacząco na funkcjonowanie całej platformy. <br />\n                    Konigurowanie klas dostępu użytkowników to bardzo odpowiedzialne zadanie. Upewnij się że nadajesz tylko wymagane uprawnienia.\n                    Stosuj się do modelu <a target='_blank' rel=\"noreferrer\" href='https://en.wikipedia.org/wiki/Principle_of_least_privilege'>Least Privilege</a>.\n                </Typography>\n            </span>\n\n\n            <span>\n                <Typography variant='h5' component='h2'>\n                    Pola używane w klasach dostępu:\n                </Typography>\n                <ul>\n                    {rendered}\n\n                </ul>\n            </span>\n\n\n        </Stack>\n    );\n}","import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport Card from '@mui/material/Card';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { useAccess } from \"../../AccessContext\";\nimport MenuItem from '@mui/material/MenuItem';\nimport Box from '@mui/material/Box';\nimport User from '../../../../../../models/User';\nimport useNotification from '../../../../../../contexts/NotificationContext/useNotification';\nimport UserService from '../../../../../../services/UserService';\nimport LinkIcon from '@mui/icons-material/Link';\nimport { dynamicPaths } from '../../../../../../shared/path';\nimport TabHeadLine from '../../../../../../shared/components/TabHeadLine';\nimport { Link } from '@mui/material';\n\n\nfunction usersNotUsers(a: readonly User[], b: readonly User[]) {\n    return a.filter(ai => (b.find(bi => bi.id === ai.id) === undefined));\n}\n\nfunction notNumNum(a: readonly number[], b: readonly number[]) {\n    return a.filter((value) => b.indexOf(value) === -1);\n}\n\n\nfunction intersection(a: readonly number[], b: readonly User[]) {\n    return a.filter((value) => b.find(({ id }) => id === value));\n}\n\n\nexport default function EditUsersAccess() {\n    const { accessesList } = useAccess();\n    const notify = useNotification();\n\n    const [checked, setChecked] = React.useState<readonly number[]>([]);\n\n    const [leftUsers, setLeftUsers] = React.useState<User[]>([]);\n    const [rightUsers, setRightUsers] = React.useState<User[]>([]);\n\n    const [access, setAccess] = React.useState<{\n        [index: string]: number,\n        right: number,\n        left: number\n    }>({ left: accessesList[0]?.id, right: accessesList[1]?.id });\n\n\n    const updateUsersAccess = React.useCallback(async (users: User[], accessId: number) => {\n        const calls = users.map(async (user) => {\n            try {\n                await UserService.updateAccess(user.id, accessId);\n                return user;\n            } catch (err: any) {\n                notify(err.description, 'error');\n                return false;\n            }\n        });\n        let results = await Promise.all(calls);\n        return results.filter(item => item !== false) as User[];\n    }, [notify]);\n\n\n    const loadUsers = React.useCallback(async (accessId: number) => {\n        try {\n            const resp = await UserService.getUsers({ accessId: accessId, deleted: false });\n            return resp.data as User[];\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return [];\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        loadUsers(access.left).then(data => setLeftUsers(data))\n    }, [\n        access.left,\n        loadUsers,\n    ]);\n\n\n    React.useEffect(() => {\n        loadUsers(access.right).then(data => setRightUsers(data))\n    }, [\n        access.right,\n        loadUsers,\n    ]);\n\n\n\n    const leftChecked = React.useMemo(() => intersection(checked, leftUsers), [checked, leftUsers]);\n    const rightChecked = React.useMemo(() => intersection(checked, rightUsers), [checked, rightUsers]);\n\n\n    const handleToggle = React.useCallback((value: number) => () => {\n        setChecked(old => {\n            const currentIndex = old.indexOf(value);\n            const checked = Object.assign([], old) as number[];\n\n            if (currentIndex === -1) {\n                checked.push(value);\n            } else {\n                checked.splice(currentIndex, 1);\n            }\n            return checked\n        });\n    }, []);\n\n\n    // to the right\n    const handleCheckedRight = React.useCallback(async () => {\n        const usersToMove = leftUsers.filter(({ id }) => leftChecked.indexOf(id) !== -1);\n\n        const moved = await updateUsersAccess(usersToMove, access.right);\n        setRightUsers(rightUsers.concat(moved));\n\n        setLeftUsers(usersNotUsers(leftUsers, moved)); //not user who is selected\n        setChecked(notNumNum(checked, leftChecked)); // uncheck checked elements\n    }, [\n        leftChecked,\n        rightUsers,\n        leftUsers,\n        checked,\n        access.right,\n        updateUsersAccess,\n    ]);\n\n\n    // to the left\n    const handleCheckedLeft = React.useCallback(async () => {\n        const usersToMove = rightUsers.filter(({ id }) => rightChecked.indexOf(id) !== -1);\n\n        const moved = await updateUsersAccess(usersToMove, access.left);\n        setLeftUsers(leftUsers.concat(moved));\n\n        let l = usersNotUsers(rightUsers, moved);\n        console.log(l);\n        setRightUsers(l); //not user who is selected\n        setChecked(notNumNum(checked, rightChecked)); // uncheck checked elements\n\n    }, [\n        rightChecked,\n        leftUsers,\n        rightUsers,\n        checked,\n        access.left,\n        updateUsersAccess,\n    ]);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<number>): void => {\n        const value = Number(event.target.value);\n\n        setAccess(old => {\n            if (old.left === value || old.right === value) return old;\n\n            return {\n                ...old,\n                [event.target.name]: Number(event.target.value)\n            }\n        });\n    }, []);\n\n\n    const customList = React.useCallback((direction: string, users: readonly User[]) => (\n        <Card>\n            <Box sx={{ p: 2 }}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-klase-dostępu\">Klasa dostępu</InputLabel>\n                    <Select\n                        labelId=\"wybierz-klase-dostępu\"\n                        name={direction}\n                        value={access[direction]}\n                        label=\"klasa dostępu\"\n                        onChange={handleSelectChange}\n                    >\n                        {accessesList.map(({ name, id }) => <MenuItem key={name} value={id} >{name} </MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Box>\n\n            <Divider />\n            <List\n                sx={{\n                    // maxWidth: 400,\n                    // width: '30vw',\n                    height: 550,\n                    bgcolor: 'background.paper',\n                    overflow: 'auto',\n                }}\n                dense\n                component=\"div\"\n                role=\"list\"\n            >\n                {users.map((user: User) => {\n                    const labelId = `transfer-list-all-item-${user.id}-label`;\n\n                    return (\n                        <ListItem\n                            key={user.id}\n                            role=\"listitem\"\n                            button\n                            onClick={handleToggle(user.id)}\n                        >\n                            <ListItemIcon>\n                                <Checkbox\n                                    checked={checked.indexOf(user.id) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    inputProps={{\n                                        'aria-labelledby': labelId,\n                                    }}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={labelId} primary={user.email} />\n\n                            <ListItemIcon onClick={(ev: any) => ev.stopPropagation()} color='primary'>\n                                <Link href={dynamicPaths.toUser(user.id)}>\n                                    <LinkIcon />\n                                </Link>\n                            </ListItemIcon>\n                        </ListItem>\n                    );\n                })}\n                <ListItem />\n            </List>\n        </Card>\n    ), [handleToggle, checked, handleSelectChange, access, accessesList]);\n\n    return (\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n                <TabHeadLine\n                    title='Administracja klasami dostępu'\n                    subtitle='Wybierz stworzone klasy dostępu i przydzielaj role dla użytkowników'\n                />\n            </Grid>\n\n            <Grid item xs={12} sm={5}>{customList('left', leftUsers)}</Grid>\n            <Grid item>\n                <Grid container direction=\"column\" alignItems=\"center\">\n                    <Button\n                        sx={{ my: 0.5 }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={handleCheckedRight}\n                        disabled={leftChecked.length === 0}\n                        aria-label=\"move selected right\"\n                    >\n                        &gt;\n                    </Button>\n                    <Button\n                        sx={{ my: 0.5 }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={handleCheckedLeft}\n                        disabled={rightChecked.length === 0}\n                        aria-label=\"move selected left\"\n                    >\n                        &lt;\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm={5}>{customList('right', rightUsers)}</Grid>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport { AccessContext } from \"./AccessContext\";\nimport AccessesList from \"./components/AccessesList\";\nimport AccessInfo from \"./components/AccessInfo\";\nimport EditUsersAccess from \"./components/EditUsersAccess\";\n\n\nexport default function AccessPage() {\n    const { logsAdmin } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr: any = [];\n        arr.push({ name: 'Informacje', component: <AccessInfo /> });\n        arr.push({ name: 'Lista klas', component: <AccessesList /> });\n        arr.push({ name: 'Administracja', component: < EditUsersAccess /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        logsAdmin\n    ]);\n\n\n    return (\n        <AccessContext>\n            <SwipeableTabs tabs={pages} />\n        </AccessContext >\n    );\n}"],"sourceRoot":""}