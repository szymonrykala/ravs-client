{"version":3,"sources":["services/StorageService.ts","components/pages/protected/components/GenericLogsTab/index.tsx","components/pages/protected/components/SwipeableTabs/SwipeablePanel.tsx","components/pages/protected/components/SwipeableTabs/SwipeableTabs.tsx","components/pages/protected/RoomPage/RoomContext/RoomContextProvider.tsx","components/pages/protected/RoomPage/RoomContext/useRoomContext.ts","components/pages/protected/components/DeleteModal/DeleteModal.tsx","services/AddressService.ts","services/RoomService.ts","components/pages/protected/hooks/useTrigger.ts","components/pages/protected/components/DatesFooter.tsx","components/pages/protected/AddressPage/AddressContext/AddressContextProvider.tsx","components/pages/protected/AddressPage/AddressContext/useAddress.ts","components/pages/protected/BuildingPage/BuildingContext/BuildingContextProvider.tsx","components/pages/protected/BuildingPage/BuildingContext/useBuilding.ts","services/BuildingService.ts","components/pages/protected/components/Charts/ChartOptionsBar.tsx","components/pages/protected/components/Charts/ChartsTab.tsx","components/pages/protected/components/Charts/ChartSection.tsx","contexts/ResourceMapContext/useResourceMap.ts","components/pages/protected/UserPage/UserContext/UserContextProvider.tsx","components/pages/protected/UserPage/UserContext/useUser.tsx","shared/path.ts","services/ChartService.ts","components/pages/protected/components/Charts/ChartsContext/ChartsContextProvider.tsx","components/pages/protected/components/Charts/ChartsContext/useCharts.ts","contexts/QueryParamsContext/QueryParamsContextValue.tsx","contexts/QueryParamsContext/QueryParamsContextProvider.tsx","contexts/ResourceMapContext/ResourceMapContextProvider.tsx","components/pages/protected/components/ListPagination.tsx","components/pages/protected/components/LazyInput.tsx","services/APIServiceError.ts","components/pages/protected/components/SelectButtonGroup.tsx","services/AuthService.ts","shared/components/LoadingView.tsx","auth/sessionProvider.tsx","contexts/NotificationContext/NotificationContextValue.ts","contexts/NotificationContext/NotificationContextProvider.tsx","shared/components/TabHeadLine.tsx","components/pages/protected/components/Charts/Chart.tsx","components/pages/protected/components/PDF/PDFPage.tsx","components/pages/protected/components/PDF/Table.tsx","contexts/NotificationContext/useNotification.ts","components/pages/protected/components/GenericLogsTab/LogRow.tsx","services/LogService.ts","shared/components/Loading.tsx","components/pages/protected/hooks/useResolvedAccess.ts","components/pages/protected/components/GenericModal.tsx","contexts/ResourceMapContext/index.ts","shared/utils.ts","auth/useSession.ts","shared/components/UniqueCodeButton/statusReducer.ts","shared/components/UniqueCodeButton/UniqueCodeButton.tsx","components/pages/public/ChangePassword/FormStep.tsx","components/pages/public/ChangePassword/Form.tsx","services/ImageService.ts","shared/components/FormGridContainer.tsx","contexts/QueryParamsContext/userQueryParams.ts","services/Service.ts","services/UserService.ts","services/MetadataService.ts","shared/Theme/LinkBehavior.tsx","shared/Theme/theme.ts","shared/Theme/index.tsx","components/pages/protected/AccessPage/index.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/useReservations.ts","components/pages/protected/components/DateTimePicker.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/EditModalForm.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/CopyModalForm.tsx","components/pages/protected/components/RfidForm.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/PingKeyModalForm.tsx","components/pages/protected/components/MoreVertMenu.tsx","components/pages/protected/components/ReservationViewModal/UserItem.tsx","components/pages/protected/components/ReservationViewModal/RoomItem.tsx","components/pages/protected/components/ReservationViewModal/DatesView.tsx","components/pages/protected/components/ReservationViewModal/ReservationViewModal.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ModalContext/ModalContextProvider.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ReservationsContextProvider.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsList/ReservationsListItem.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsList/ReservationsList.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ModalContext/useReservationModalContext.ts","components/pages/protected/components/CreateReservationModal/CreateReservationForm.tsx","components/pages/protected/components/CreateReservationModal/CreateReservationModal.tsx","components/pages/protected/components/GenericReservationsTab/ReservationTabBar.tsx","components/pages/protected/components/GenericReservationsTab/GenericReservationsTab.tsx","components/pages/protected/AddressPage/components/Map.tsx","components/pages/protected/AddressPage/Forms/AddressEditForm.tsx","components/pages/protected/AddressPage/Forms/CreateBuildingForm.tsx","components/pages/protected/AddressPage/Forms/CreateAddressForm.tsx","components/pages/protected/AddressPage/components/AddressCard.tsx","components/pages/protected/components/ScrollableList/ScrollableList.tsx","components/pages/protected/components/ScrollableList/ScrollableListItem.tsx","components/pages/protected/AddressPage/components/BuildingsList.tsx","components/pages/protected/AddressPage/AddressPage.tsx","components/pages/protected/components/ImageUploadField.tsx","models/Room.ts","components/pages/protected/BuildingPage/Forms/BuildingEditForm.tsx","components/pages/protected/BuildingPage/Forms/CreateRoomForm.tsx","models/Metadata.ts","components/pages/protected/components/FavouriteButton.tsx","components/pages/protected/BuildingPage/components/BuildingCard.tsx","components/pages/protected/BuildingPage/components/RoomsList.tsx","components/pages/protected/BuildingPage/BuildingPage.tsx","components/pages/protected/HomePage/Favourites.tsx","components/pages/protected/HomePage/Notebook.tsx","components/pages/protected/HomePage/HomeReservations.tsx","components/pages/protected/HomePage/HomePage.tsx","components/pages/protected/RoomPage/Forms/RoomEditForm.tsx","components/pages/protected/RoomPage/Forms/RfidModalForm.tsx","components/pages/protected/RoomPage/components/YesNoIcon.tsx","components/pages/protected/RoomPage/components/RoomTableInfo.tsx","components/pages/protected/RoomPage/components/RoomCard.tsx","components/pages/protected/RoomPage/RoomPage.tsx","components/pages/protected/SettingsPage/index.tsx","components/pages/protected/UserPage/Forms/PasswordChangeModal.tsx","components/pages/protected/UserPage/Forms/EditUserForm.tsx","components/pages/protected/UserPage/components/UserCard.tsx","components/pages/protected/UserPage/UserPage.tsx","components/pages/protected/UsersPage/UsersContext/UsersContextProvider.tsx","components/pages/protected/UsersPage/components/UsersView/SearchBar.tsx","components/pages/protected/UsersPage/components/UsersView/UsersList/UserListItem.tsx","components/pages/protected/UsersPage/components/UsersView/UsersList/UsersList.tsx","components/pages/protected/UsersPage/UsersContext/useUsers.ts","components/pages/protected/UsersPage/components/UsersView/UsersView.tsx","components/pages/protected/UsersPage/components/UsersCharts.tsx","components/pages/protected/UsersPage/UsersPage.tsx","components/pages/protected/index.tsx","components/pages/public/PublicPages.tsx","components/pages/index.tsx","components/Footer/Copyrights.tsx","components/Footer/Links.tsx","components/Footer/index.tsx","components/Navigation/Drawer/MainDrawerList.tsx","components/Navigation/Drawer/DrawerPanel.tsx","components/Navigation/Drawer/AvatarView.tsx","components/Navigation/Drawer/ResourcesList/CollapseableListItem.tsx","components/Navigation/Drawer/ResourcesList/RoomListItem.tsx","components/Navigation/Drawer/ResourcesList/ResourceList.tsx","components/Navigation/Drawer/CreateAddressButton.tsx","components/Navigation/Drawer/index.tsx","components/Navigation/NavigationBar/AccountMenu.tsx","components/Navigation/NavigationBar/index.tsx","components/Navigation/Navigation.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx","components/pages/protected/components/SmallCard.tsx","services/ReservationService.ts"],"names":["StorageService","id","value","this","toString","name","btoa","encodeURI","str","JSON","stringify","localStorage","setItem","codeName","removeItem","getItem","parse","LazyGenericLogsTab","React","lazy","GenericLogsTab","Suspense","fallback","SwipeablePanel","props","children","hidden","index","other","useMemo","Box","role","SmallCard","SwipeableTabs","theme","useTheme","useState","tabIndex","setTabIndex","handleTabChange","useCallback","event","newValue","handleChangeIndex","renderedTabs","tabs","map","page","Tab","label","Typography","component","variant","a11yProps","renderedTabPanels","dir","direction","Tabs","allowScrollButtonsMobile","onChange","indicatorColor","sx","borderBottom","borderColor","axis","onChangeIndex","RoomContext","createContext","RoomContextProvider","useResourceMap","getBuildingLink","reloadMap","notify","useNotification","urlParams","useParams","room","setRoom","refresh","useTrigger","useLayoutEffect","RoomService","setPath","getRoom","a","getView","resp","data","setOccupied","state","old","occupied","updateRoom","body","update","buildingId","building","description","deleteRoom","remove","to","updateRFIDTag","key","updateRFID","RFIDTag","deleteRFIDTag","useEffect","Boolean","Provider","Loading","useRoomContext","useContext","DeleteModal","open","onSuccess","onClose","objectName","input","setInput","handleConfirm","close","GenericModal","maxWidth","Stack","spacing","color","TextField","evt","target","justifyContent","Button","startIcon","onClick","AddressService","_path","params","preparePath","get","path","delete","patch","post","Service","addressId","roomId","timeInterval","trigger","setTrigger","int","setInterval","clearInterval","DatesFooter","fontSize","displayDate","model","_created","_updated","addressContext","AddressContextProvider","address","setAddress","getAddress","getCurrentOne","getBuildingsInAddress","getBuildings","updateAddress","deleteAddress","paths","HOME","useAddress","buildingContext","BuildingContextProvider","setBuilding","BuildingService","getBuilding","getRoomsInBuilding","updateBuilding","Object","keys","forEach","Number","assign","deleteBuilding","dynamicPaths","toAddress","useBuilding","predefinedButtons","ChartOptionsBar","useQueryParams","queryParams","setQueryParams","from","Date","customDates","setCustomDates","handleButtonChange","buttonValue","handleSubmitCustomDate","preventDefault","toDateString","SelectButtonGroup","buttons","onSubmit","pb","MobileDatePicker","inputFormat","renderInput","size","type","memo","ChartsTab","QueryParamsContext","default","ChartsContext","ChartSection","defaultOpen","setOpen","display","alignItems","title","replace","IconButton","Collapse","in","timeout","Grid","container","Divider","resourceMapContext","userContext","UserContextProvider","session","useSession","user","setUser","userId","UserService","load","deleteUser","action","logout","USERS","updateUser","useUser","PUBLIC","LOGIN","REGISTER","ACTIVATE","REMIND_PASSWORD","ACCESS","SETTINGS","USER","MY_PROFILE","INFRASTRUCTURE","ADDRESS","BUILDING","ROOM","toBuilding","toRoom","toUser","ChartService","endp","url","window","location","length","entries","newPath","includes","chartsContext","ChartsContextProvider","chartsData","setData","fetchData","useCharts","queryParamsContextDefaults","q","param","queryParamsContext","QueryParamsContextProvider","keyName","defaultValue","read","save","ResourceMapContextProvider","resourceMap","setResources","loaded","setLoaded","loadResourceMap","getResourcesMap","getRoomLink","addr","buildings","bld","rooms","flat","find","item","href","allRooms","allBuildings","allAddresses","ListPagination","handlePageChange","currentPage","handleCountChange","child","itemsOnPage","onPageList","num","flexWrap","flexDirection","alignContent","count","pagesCount","fullWidth","labelId","LazyInput","setStr","handleSearchFieldChange","clearTimeout","timer","setTimeout","placeholder","width","p","bgcolor","inputProps","APIServiceError","error","statusCode","Error","handleChange","renderedButtons","control","row","AuthService","email","password","response","_TOKEN_NAME","hasToken","LoadingView","Backdrop","zIndex","drawer","backgroundColor","text","CircularProgress","sessionContext","SessionProvider","loading","setLoading","setUpUser","setIdentity","MetadataService","metadata","ReservationService","LogService","ImageService","checkIfUserHasSession","hasSession","getMe","sessionUser","WELCOME","login","message","code","NotificationContextDefault","notificationContext","NotificationContextProvider","setMessage","severity","setSeverity","setComponent","closeSnack","reason","setSnack","_severity","componentCallback","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","TabHeadLine","subtitle","mt","weekDays","Chart","primaryAxis","getValue","resolveDay","x","min","secondaryAxes","y","position","elementType","minDomainLength","hardMin","scaleType","showDatumElements","obj","push","xKey","xs","lg","maxHeight","height","minHeight","options","Font","register","family","src","styles","StyleSheet","create","fontFamily","section","marginBottom","padding","head","PDFPage","style","wrap","toLocaleString","subject","sections","node","table","cell","margin","wordBreak","textAlign","Row","cols","col","Cell","val","emptyMonthList","rows","every","slice","Table","LogRow","hover","scope","align","endpoint","Math","fround","time","toPrecision","paddingBottom","paddingTop","colSpan","unmountOnExit","RouterLink","method","payload","undefined","defaultAccess","useResolvedAccess","access","owner","accessAdmin","premisesAdmin","keysAdmin","reservationsAdmin","reservationsAbility","logsAdmin","statsViewer","closeAfterTransition","BackdropComponent","BackdropProps","overflow","boxShadow","dateString","date","Intl","DateTimeFormat","dateStyle","timeStyle","format","timeFormat","isDate","getDate","fromLocaleDateTimeString","dateTime","split","d","m","h","i","s","statusReducer","success","UniqueCodeButton","useReducer","result","dispatchResult","handleSubmit","generateKey","ml","FormStep","Form","newPassword","e","changePassword","required","autoComplete","autoFocus","mb","Link","formBody","fetch","_BASE_URL","cache","mode","headers","authToken","json","console","debug","ok","status","image","formData","FormData","append","sendImage","FormGridContainer","onCancel","rowGap","process","_userId","fetchObject","match","reload","query","_fetch","URLSearchParams","accessId","STORAGE_NAME","notes","favourites","sort","b","log","filter","LinkBehavior","ref","createTheme","palette","primary","indigo","secondary","dark","main","light","background","paper","shape","borderRadius","components","MuiCssBaseline","styleOverrides","scrollbar","track","thumb","active","MuiTextField","defaultProps","MuiSelect","MuiButton","MuiLink","MuiButtonBase","LinkComponent","MuiSvgIcon","MuiIconButton","Theme","ThemeProvider","LazyAccessPage","AccessPage","useReservations","reservationsContext","DateTimePicker","MobileDateTimePicker","minDate","EditModalForm","updateReservation","closeForm","reservation","handleDateChange","multiline","maxRows","sm","plannedStart","plannedEnd","FormControl","InputLabel","Select","MenuItem","CopyModalForm","createReservation","dates","setDates","copyDates","setCopyDates","createCalls","Promise","all","processed","handleDeleteCopyDate","splice","setDate","handleAddDate","border","pl","HiddenInput","styled","left","RfidForm","setText","setColor","useRef","onScan","handleDecline","current","focus","alignSelf","headline","bodyText","PingKeyModalForm","pingKeyForReservation","handleKeyScan","reservationId","MoreVertMenu","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","Menu","MenuListProps","PaperProps","minWidth","opt","ListItemIcon","icon","UserItem","ListItem","button","ListItemAvatar","Avatar","getLink","alt","surname","ListItemText","RoomItem","roomLink","roomType","DatesView","columnGap","Chip","TextSection","ReservationViewModal","myId","deleteReservation","deleteModalOpen","setDeleteModalOpen","editModalOpen","setEditModalOpen","nfcModalOpen","setNFCModalOpen","copyModalOpen","setCopyModalOpen","onDelete","menuOptions","unshift","Edit","justifySelf","actualStart","actualEnd","List","ReservationModalViewContext","showReservation","ModalContextProvider","reservations","modalOpen","setModalOpen","setReservationId","ReservationsContextProvider","roomContext","setReservations","pathname","getReservations","pagination","search","triggerReload","pingKey","createOne","field","toUTCString","MemAvatar","img","ReservationListItem","resolveStatus","ReservationsList","renderedList","CreateReservationForm","start","end","now","CreateReservationModal","ReservationTabBar","createReservationModalOpen","setCreateReservationModalOpen","customDate","setCustomDate","toISOString","md","GenericReservationsTab","StyledIframe","Map","street","number","town","country","base","URL","ie","z","iwloc","output","frameBorder","AddressEditForm","postalCode","CreateBuildingForm","handleCreateBuilding","openTime","closeTime","String","MobileTimePicker","CreateAddressForm","AddressCard","Card","elevation","CardHeader","subheader","CardMedia","CardContent","ScrollableList","onAddItem","ScrollableListItem","link","py","BuildingsList","createBuildingModalOpen","setCreateBuildingModalOpen","setBuildings","createBuilding","renderedBuildings","LazyAddressCharts","AddressCharts","AddressPage","pages","arr","AddressContext","Input","StyledImage","ImageUploadField","useLocation","uploadedImage","setUploadedImage","upload","onUpload","handleImageUpload","files","handleRemoveImgae","createObjectURL","htmlFor","accept","RoomTypes","timeToDate","BuildingEditForm","handleTime","handleSelectChange","CreateRoomForm","handleCreateRoom","LECTURE","seatsCount","floor","values","FavType","FavouriteButton","marked","setMarked","isFavourite","addToFavourites","removeFavourite","addFavourite","BuildingView","Building","RoomsList","createRoomModalOpen","setCreateRoomModalOpen","setRooms","createRoom","renderedRooms","LazyRoomOrBuildingChartTab","RoomOrBuildingChartTab","BuildingPage","BuildingContext","getCorrectListItem","Room","Favourites","handleRemoveFavourite","disablePadding","Notebook","err","InputBase","minRows","mr","HomeReservations","HomePage","RoomEditForm","checked","FormControlLabel","labelPlacement","Switch","blocked","RfidModalRorm","YesNoIcon","rest","RoomTableInfo","deleteTag","rfidTagModalOpen","setRfidTagModalOpen","tableRows","RenderedRows","TableRow","TableCell","fontWeight","TableContainer","TableHead","TableBody","RoomCard","RoomPage","LazySettingsPage","SettingsPage","PasswordChangeModal","EditUserForm","UserCard","editModal","setEditModal","passModal","setPassModal","deleteModal","setDeleteModal","lastActivity","LazyUserCharts","UserCharts","UserPage","UserContext","usersContext","UsersContextProvider","users","setUsers","getUsers","deleted","activated","SearchBar","UserListItem","UsersList","UsersView","UsersCharts","Charts","ActualLoader","usePDF","document","r","reservationsCount","allTimeMinutes","avgActualTimeMinutes","avgPlannedTimeMinutes","PDF","download","UsersPage","ProtectedPages","Activation","Login","Register","ChangePassword","Welcome","PublicPages","exact","tabStyle","Copyright","LinkItem","Links","linksList","list","links","Container","pt","Footer","navListItems","HomeIcon","AccountIcon","settingsItem","SettingsIcon","accessLinkItem","VerifiedUserIcon","usersLinkItem","PeopleIcon","MainListItem","MainDrawerList","DrawerPanel","toggleOpen","onKeyDown","AvatarView","ev","stopPropagation","CollapseableListItem","OPENED_NAME","handleOpen","ListItemButton","ExpandLess","ExpandMore","RoomListItem","ResourcesList","rendered","roomEntry","CreateAddressButton","formOpen","setFormOpen","AppDrawer","Drawer","ModalProps","keepMounted","anchor","AccountMenu","linksComp","transformOrigin","NavigationBar","handleMenu","flexGrow","AppBar","Toolbar","toggleDrawer","edge","textDecoration","Navigation","shouldWork","App","LocalizationProvider","dateAdapter","AdapterDateFns","locale","plLocale","CssBaseline","className","ResourceMapContext","isLocalhost","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","ReactDOM","render","StrictMode","getElementById","origin","addEventListener","contentType","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","titleComponent","Colors","mess","localPreparPath","nowTimestamp","now_minus15","now_plus15","emitStatus","warning","info","inert","end_plus15"],"mappings":"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","file":"static/js/main.51b88f3f.chunk.js","sourcesContent":["\n\n\nclass StorageService {\n\n    private id: string = '';\n\n    public setIdentity(value: string | number) {\n        this.id = value.toString();\n    }\n\n    private codeName(name: string) {\n        return btoa(encodeURI(name + this.id));\n    }\n\n    public save(name: string, value: any) {\n        const str = JSON.stringify(value);\n        localStorage.setItem(this.codeName(name), str);\n    }\n\n    public delete(name: string) {\n        localStorage.removeItem(this.codeName(name));\n    }\n\n    public read(name: string) {\n        const str = localStorage.getItem(this.codeName(name));\n        if (!str) return null;\n\n        try {\n            return JSON.parse(str);\n        } catch {\n            return null;\n        }\n    }\n\n}\n\nexport default new StorageService();","import React from 'react';\nimport Loading from '../../../../../shared/components/Loading';\n\nexport { default as LogRow } from './LogRow';\n\nconst LazyGenericLogsTab = React.lazy(() => import('./GenericLogsTab'))\n\nexport default function GenericLogsTab() {\n    return <React.Suspense fallback={<Loading />}>\n        <LazyGenericLogsTab />\n    </React.Suspense>\n};\n","import { Box } from \"@mui/material\";\nimport React from \"react\";\nimport SmallCard from \"../../components/SmallCard\";\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    hidden: boolean,\n    index: number\n}\n\n\nexport default function SwipeablePanel(props: TabPanelProps) {\n    const { children, hidden, index, ...other } = props;\n\n    // should component update\n    const render = React.useMemo(() =>\n        <Box\n            role=\"tabpanel\"\n            hidden={hidden}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            <SmallCard>{children}</SmallCard>\n        </Box>\n        , [hidden, index, children, other]);\n\n    return render;\n}","import { Tab, Tabs, Typography, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport SwipeablePanel from \"./SwipeablePanel\";\n\n\ninterface SwipeableTabsProps {\n    tabs: { name: string, component: React.ReactNode }[],\n}\n\n\nfunction a11yProps(index: number) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\n\nexport default function SwipeableTabs(props: SwipeableTabsProps) {\n    const theme = useTheme();\n    const [tabIndex, setTabIndex] = React.useState(0);\n\n\n    const handleTabChange = React.useCallback((event: React.SyntheticEvent, newValue: number) => {\n        setTabIndex(newValue);\n    }, []);\n\n\n    const handleChangeIndex = React.useCallback((index: number) => {\n        setTabIndex(index);\n    }, []);\n\n\n    const renderedTabs = React.useMemo(() => {\n        return props.tabs.map((page, index) => <Tab\n            key={index}\n            label={<Typography component='h2' variant='button'>{page.name}</Typography>}\n            {...a11yProps(index)}\n        />)\n    }, [props.tabs]);\n\n\n    const renderedTabPanels = React.useMemo(() => {\n        return props.tabs.map((page, index) => <SwipeablePanel\n            key={index}\n            index={index}\n            hidden={tabIndex !== index}\n            dir={theme.direction}\n        >\n            {page.component}\n        </SwipeablePanel>)\n    }, [\n        props.tabs,\n        tabIndex,\n        theme.direction,\n    ]);\n\n\n    return (\n        <div>\n            <Tabs\n                allowScrollButtonsMobile\n                value={tabIndex}\n                onChange={handleTabChange}\n                indicatorColor=\"primary\"\n                variant=\"scrollable\"\n                sx={{ borderBottom: 2, borderColor: 'divider' }}\n            >\n                {renderedTabs}\n            </Tabs>\n            <br />\n            <SwipeableViews\n                axis='x'\n                index={tabIndex}\n                onChangeIndex={handleChangeIndex}\n            >\n                {renderedTabPanels}\n            </SwipeableViews>\n        </div>\n    );\n}","import React, { createContext } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { DetailedRoom } from \"../../../../../models/Room\";\nimport RoomService, { RoomUpdateParams, RoomViewParams } from \"../../../../../services/RoomService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport RoomContextValue from \"./RoomContextValue\";\nimport useResourceMap from \"../../../../../contexts/ResourceMapContext/useResourceMap\";\nimport useTrigger from \"../../hooks/useTrigger\";\nimport Loading from \"../../../../../shared/components/Loading\";\n\n\ninterface RoomContextProviderProps {\n    children?: React.ReactNode\n}\n\nexport const RoomContext: any = createContext(null);\n\n\nexport default function RoomContextProvider({\n    children\n}: RoomContextProviderProps) {\n    const { getBuildingLink, reloadMap } = useResourceMap();\n    const notify = useNotification();\n    const urlParams = useParams<RoomViewParams>();\n    const [room, setRoom] = React.useState<DetailedRoom>();\n    const refresh = useTrigger(60_000);\n\n    React.useLayoutEffect(() => {\n        RoomService.setPath(urlParams);\n    }, [urlParams]); // set new urlParams to service so it get data for propper room\n\n\n    const getRoom = React.useCallback(async () => {\n        const resp = await RoomService.getView();\n        setRoom(resp.data as DetailedRoom);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        urlParams,\n        refresh\n    ]); // recompute after change of room\n\n\n    const setOccupied = React.useCallback((state: boolean) => {\n        setRoom(old => {\n            if (old)\n                return { ...old, occupied: state };\n        });\n    }, []);\n\n\n    const updateRoom = React.useCallback(async (body: RoomUpdateParams) => {\n        if (!room) return false;\n\n        try {\n            await RoomService.update(body);\n            setRoom(old => {\n                if (old)\n                    return { ...old, ...body };\n            });\n            notify(\"Sala została zaktualizowana\", 'success');\n\n            if (('name' in body && body.name !== room.name)\n                || ('buildingId' in body && body.buildingId !== room?.building.id)\n            ) {\n                reloadMap();\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        room\n    ]);\n\n\n    const deleteRoom = React.useCallback(async () => {\n        if (!room) return;\n\n        try {\n            await RoomService.remove();\n            reloadMap();\n            notify(\"Sala została usunięta\", 'success', () => <Redirect to={getBuildingLink(room.building.id)} />);\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        room,\n        reloadMap,\n        getBuildingLink,\n    ]);\n\n\n    const updateRFIDTag = React.useCallback(async (key: string) => {\n        try {\n            await RoomService.updateRFID(key);\n            setRoom(old => {\n                if (old)\n                    return { ...old, RFIDTag: key };\n            });\n\n            notify(\"Tag został przypisany\", 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n    }, [notify]);\n\n\n    const deleteRFIDTag = React.useCallback(async () => {\n        try {\n            await RoomService.deleteRFIDTag();\n            setRoom(old => {\n                if (old)\n                    return { ...old, RFIDTag: null };\n            });\n            notify(\"Tag został usunięty\", \"success\");\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        getRoom();\n        return () => { }\n    }, [getRoom]);\n\n\n    if (!Boolean(room)) return <Loading />;\n\n    return (\n        <RoomContext.Provider value={{\n            room,\n            updateRoom,\n            deleteRoom,\n            updateRFIDTag,\n            deleteRFIDTag,\n            setOccupied\n        } as RoomContextValue}>\n            {children}\n        </RoomContext.Provider>\n    );\n}\n","import React from \"react\";\nimport { RoomContext } from \"./RoomContextProvider\";\nimport RoomContextValue from \"./RoomContextValue\";\n\n\nexport default function useRoomContext() {\n    return React.useContext(RoomContext) as RoomContextValue\n}","import { Button, Stack, TextField, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport GenericModal from \"../../components/GenericModal\";\n\n\ninterface DeleteModalProps {\n    open: boolean,\n    onClose: () => void,\n    objectName: string,\n    onSuccess: () => void\n}\n\nexport default function DeleteModal({\n    open, onSuccess, onClose, objectName\n}: DeleteModalProps) {\n    const notify = useNotification();\n    const [input, setInput] = React.useState<string>('');\n\n\n    const handleConfirm = React.useCallback(async () => {\n        if (input !== objectName) {\n            notify(\"Wpisana nazwa jest niepoprawna\", 'error');\n            return;\n        }\n        onSuccess();\n        setInput('');\n    }, [objectName, input, onSuccess, notify]);\n\n\n    const close = React.useCallback(() => {\n        setInput('');\n        onClose();\n    }, [onClose]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            aria-label=\"Okno do usuwania obiektu\"\n            sx={{\n                maxWidth: \"400px\",\n            }}\n        >\n            <Stack direction=\"column\" spacing={3}>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    Usuwanie obiektu\n                </Typography>\n                <Typography variant=\"body1\" color='text.secondary'>\n                    Tej operacji nie da się cofnąć.\n                    <br />\n                    1. Przepisz nazwę <b>{objectName}</b><br />\n                    2. Naciśnij 'Zatwierdź'\n                </Typography>\n                <TextField\n                    id=\"resource-name\"\n                    label=\"nazwa\"\n                    variant=\"outlined\"\n                    value={input}\n                    onChange={(evt) => setInput(evt.target.value)}\n                />\n                <Stack direction=\"row\" justifyContent=\"space-around\">\n                    <Button startIcon={<CancelIcon />} onClick={close}>Anuluj</Button>\n                    <Button startIcon={<DeleteIcon color=\"inherit\" />} onClick={handleConfirm} color=\"error\">Zatwierdź</Button>\n                </Stack>\n            </Stack>\n        </GenericModal>\n    );\n}","import Service from \"./Service\";\n\n\nexport interface AddressViewParams {\n    addressId: string,\n}\n\n\nexport interface UpdateAddressParams {\n    [index: string]: string | undefined,\n    country?: string,\n    town?: string,\n    postalCode?: string,\n    street?: string,\n    number?: string\n}\n\n\nexport interface CreateAddressParams {\n    country: string,\n    town: string,\n    postalCode: string,\n    street?: string,\n    number?: string,\n}\n\n\nclass AddressService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath(params: AddressViewParams) {\n        this._path = this.preparePath(params);\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(data: UpdateAddressParams) {\n        return this.patch(this.path, data);\n    }\n\n    public create(data: CreateAddressParams) {\n        return this.post('/addresses', data);\n    }\n\n    public getBuildings() {\n        return this.get(`${this.path}/buildings`);\n    }\n\n    public getResourcesMap() {\n        return this.get('/addresses/resources');\n    }\n}\n\n\nexport default new AddressService();","import { RoomType } from \"../models/Room\";\nimport { BuildingViewParams } from \"./BuildingService\";\nimport Service from \"./Service\";\n\n\nexport interface RoomViewParams {\n    roomId: string,\n    buildingId: string,\n    addressId: string\n}\n\n\nexport interface RoomUpdateParams {\n    name?: string,\n    roomType?: RoomType,\n    seatsCount?: number,\n    floor?: number,\n    buildingId?: number,\n    blocked?: boolean,\n}\n\n\nexport interface CreateRoomParams {\n    name: string,\n    roomType: RoomType,\n    seatsCount: number,\n    floor:number\n}\n\n\n\nclass RoomService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath({ addressId, buildingId, roomId }: RoomViewParams) {\n        this._path = `/addresses/${addressId}/buildings/${buildingId}/rooms/${roomId}`;\n    }\n\n    public getView() {\n        return this.get(this.path);\n    }\n\n    public create({ addressId, buildingId }: BuildingViewParams, data: CreateRoomParams) {\n        return this.post(`/addresses/${addressId}/buildings/${buildingId}/rooms`, data);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(body: RoomUpdateParams) {\n        return this.patch(this.path, body);\n    }\n\n    public updateRFID(key: string) {\n        return this.patch(`${this.path}/keys`, {\n            \"RFIDTag\": key\n        });\n    }\n\n    public deleteRFIDTag() {\n        return this.delete(`${this.path}/keys`);\n    }\n}\n\nexport default new RoomService()","import React from \"react\";\n\n\nexport default function useTrigger(timeInterval: number) {\n    const [trigger, setTrigger] = React.useState<boolean>();\n\n\n    React.useEffect(() => {\n        const int = setInterval(() => setTrigger(old => !old), timeInterval);\n\n        return () => clearInterval(int);\n    }, [\n        timeInterval\n    ]);\n\n    return trigger;\n}","import Typography from \"@mui/material/Typography\";\nimport Model from \"../../../../models/Model\";\nimport { displayDate } from \"../../../../shared/utils\";\n\n\n\ninterface DatesFooterProps {\n    model: Model\n}\n\nexport default function DatesFooter(props: DatesFooterProps) {\n    return (\n        <Typography color=\"text.secondary\" variant='body2' fontSize='smaller'>\n            Utworzono: {displayDate(props.model._created)}<br />\n            Ostatnia aktualizacja: {displayDate(props.model._updated)}\n        </Typography>\n    )\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport paths from \"../../../../../shared/path\";\nimport AddressService, { AddressViewParams, UpdateAddressParams } from \"../../../../../services/AddressService\";\nimport AddressContextValue from \"./AddressContextValue\";\nimport Address from \"../../../../../models/Address\";\nimport Building from \"../../../../../models/Building\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport Loading from \"../../../../../shared/components/Loading\";\n\n\n\ninterface AddressContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport const addressContext: any = React.createContext(null);\n\n\nexport default function AddressContextProvider(props: AddressContextProviderProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n\n    const urlParams = useParams<AddressViewParams>();\n\n    const [address, setAddress] = React.useState<Address>();\n\n\n    React.useLayoutEffect(() => {\n        AddressService.setPath(urlParams);\n    }, [urlParams])\n\n\n    const getAddress = React.useCallback(async () => {\n        const resp = await AddressService.getCurrentOne();\n        setAddress(resp.data as Address);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        getAddress();\n    }, [getAddress]);\n\n\n    const getBuildingsInAddress = React.useCallback(async () => {\n        try {\n            const resp = await AddressService.getBuildings();\n            return resp.data as Building[];\n        } catch (err: any) {\n            return [];\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    const updateAddress = React.useCallback(async (data: UpdateAddressParams) => {\n        try {\n            await AddressService.update(data)\n\n            setAddress(old => {\n                return {\n                    ...old,\n                    ...data as Address\n                }\n            });\n\n            reloadMap()\n\n            notify('Adres zaktualizowany', 'success');\n            return true;\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n    ])\n\n\n\n    const deleteAddress = React.useCallback(async () => {\n        try {\n            await AddressService.remove();\n            reloadMap();\n            notify(\"Adres został usunięty\", 'success', () => <Redirect to={paths.HOME} />);\n        } catch (err: any) {\n            address &&\n                notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        address,\n        reloadMap,\n    ]);\n\n\n    if (!Boolean(address)) return <Loading />;\n\n    return (\n        <addressContext.Provider value={{\n            address,\n            deleteAddress,\n            getBuildingsInAddress,\n            updateAddress\n        } as AddressContextValue}>\n\n            {props.children}\n\n        </addressContext.Provider>\n    );\n}","import React from \"react\";\nimport { addressContext } from \"./AddressContextProvider\";\nimport AddressContextValue from \"./AddressContextValue\";\n\n\nexport default function useAddress() {\n    return React.useContext(addressContext) as AddressContextValue;\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { DetailedBuilding } from \"../../../../../models/Building\";\nimport BuildingService, { BuildingUpdateParams, BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport BuildingContextValue from \"./BuildingContextValue\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\nimport Room from \"../../../../../models/Room\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport Loading from \"../../../../../shared/components/Loading\";\n\n\ninterface BuildingContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport const buildingContext: any = React.createContext(null);\n\n\nexport default function BuildingContextProvider(props: BuildingContextProviderProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n    const urlParams = useParams<BuildingViewParams>();\n\n    const [building, setBuilding] = React.useState<DetailedBuilding>();\n\n\n    React.useLayoutEffect(() => {\n        BuildingService.setPath(urlParams);\n    }, [urlParams])\n\n\n    const getBuilding = React.useCallback(async () => {\n        const resp = await BuildingService.getCurrentOne();\n        setBuilding(resp.data as DetailedBuilding);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        getBuilding();\n    }, [getBuilding]);\n\n\n    const getRoomsInBuilding = React.useCallback(async () => {\n        try {\n            const resp = await BuildingService.getRoomsInBuilding();\n            return resp.data as Room[];\n        } catch (err: any) {\n            return [];\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams])\n\n\n    const updateBuilding = React.useCallback(async (data: BuildingUpdateParams) => {\n        try {\n            if (await BuildingService.update(data)) {\n\n                if (\n                    building &&\n                    (\n                        ('addressId' in data && building.address.id !== data.addressId)\n                        || ('name' in data)\n                    )\n                ) {\n                    reloadMap();\n                }\n\n                setBuilding((old) => {\n                    old && Object.keys(data).forEach((key) => {\n                        switch (key) {\n                            case 'addressId':\n                                old.address.id = Number(data[key]);\n                                break;\n                            default:\n                                old[key] = data[key];\n                                break;\n                        }\n                    });\n                    return Object.assign({}, old);\n                })\n                notify('Bydynek zaktualizowany', 'success');\n                return true;\n            }\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify, building, reloadMap]);\n\n\n    const deleteBuilding = React.useCallback(async () => {\n        try {\n            await BuildingService.remove();\n            building && notify(\"Budynek usunięty\", 'success', () => <Redirect to={dynamicPaths.toAddress(building.address.id)} />);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify, building]);\n\n\n    if (!Boolean(building)) return <Loading />;\n\n    return (\n        <buildingContext.Provider value={{\n            building,\n            deleteBuilding,\n            getRoomsInBuilding,\n            updateBuilding,\n        } as BuildingContextValue}>\n\n            {props.children}\n\n        </buildingContext.Provider>\n    );\n}","import React from \"react\";\nimport { buildingContext } from \"./BuildingContextProvider\";\nimport BuildingContextValue from \"./BuildingContextValue\";\n\n\nexport default function useBuilding() {\n    return React.useContext(buildingContext) as BuildingContextValue;\n}","import Service from \"./Service\";\nimport { AddressViewParams } from \"./AddressService\";\n\n\n\nexport interface BuildingViewParams {\n    addressId: string,\n    buildingId: string,\n}\n\n\nexport interface BuildingUpdateParams {\n    [index: string]: string | number | undefined,\n    name?: string,\n    closeTime?: string,\n    openTime?: string,\n    addressId?: number\n}\n\nexport interface BuildingCreateParams {\n    name: string,\n    closeTime: string,\n    openTime: string,\n}\n\n\nclass BuildingService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath({ addressId, buildingId }: BuildingViewParams) {\n        this._path = `/addresses/${addressId}/buildings/${buildingId}`;\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(data: BuildingUpdateParams) {\n        return this.patch(this.path, data);\n    }\n\n    public create({ addressId }: AddressViewParams, data: BuildingCreateParams) {\n        return this.post(`/addresses/${addressId}/buildings`, data)\n    }\n\n    public getRoomsInBuilding() {\n        return this.get(`${this.path}/rooms`);\n    }\n}\n\nexport default new BuildingService()","import { Box, Button, Stack, TextField, Typography } from \"@mui/material\";\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport React from \"react\";\nimport SelectButtonGroup, { SelectButtonInterface } from \"../../components/SelectButtonGroup\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { ChartsQueryData } from \"../../../../../services/ChartService\";\n\n\nconst predefinedButtons: SelectButtonInterface[] = [\n    { name: \"tydzień\", value: \"1 week ago\" },\n    { name: \"miesiąc\", value: \"1 month ago\" },\n    { name: \"6 miesięcy\", value: \"6 month ago\" },\n    { name: \"rok\", value: \"1 year ago\" },\n];\n\n\n\nfunction ChartOptionsBar() {\n    const { queryParams, setQueryParams } = useQueryParams<ChartsQueryData>();\n\n    const [customDates, setCustomDates] = React.useState<{ from: Date, to: Date }>({\n        from: new Date(),\n        to: new Date()\n    });\n\n    const handleButtonChange = React.useCallback(async (buttonValue: string) => {\n        setQueryParams(old => ({\n            ...old,\n            from: buttonValue,\n            to: \"1 hour\"\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n\n    const handleSubmitCustomDate = React.useCallback(async (evt: any) => {\n        evt.preventDefault();\n\n        setQueryParams({\n            from: customDates.from?.toDateString(),\n            to: customDates.to?.toDateString()\n        });\n    }, [\n        customDates.from,\n        customDates.to,\n        setQueryParams\n    ]);\n\n\n    return (\n        <Stack direction=\"column\" spacing={2}>\n            <Box>\n                <Typography variant=\"subtitle2\">\n                    Zakres czasu:\n                </Typography>\n                <SelectButtonGroup\n                    onChange={handleButtonChange}\n                    buttons={predefinedButtons}\n                    value={queryParams.from}\n                />\n\n            </Box>\n            <Box component=\"form\" onSubmit={handleSubmitCustomDate}>\n                <Typography variant=\"subtitle2\" pb='5px'>\n                    Zakres niestandardowy:\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                    <MobileDatePicker\n                        label=\"od\"\n                        inputFormat=\"yyyy-MM-dd\"\n                        value={customDates.from}\n                        onChange={(value) => setCustomDates({ ...customDates, from: value ?? new Date() })}\n                        renderInput={(params) => <TextField {...params} size='small' />}\n                    />\n                    <MobileDatePicker\n                        label=\"do\"\n                        inputFormat=\"yyyy-MM-dd\"\n                        value={customDates.to}\n                        onChange={(value) => setCustomDates({ ...customDates, to: value ?? new Date() })}\n                        renderInput={(params) => <TextField {...params} size='small' />}\n                    />\n                    <Button\n                        type=\"submit\"\n                        variant={queryParams?.from === customDates.from.toDateString() ? 'contained' : 'outlined'}\n                    >\n                        OK\n                    </Button>\n                </Stack>\n            </Box>\n        </Stack>\n    );\n}\n\nexport default React.memo(ChartOptionsBar);","import Stack from \"@mui/material/Stack\";\nimport React from \"react\";\nimport { QueryParamsContext } from \"../../../../../contexts/QueryParamsContext\";\nimport { ChartsQueryData } from \"../../../../../services/ChartService\";\nimport ChartOptionsBar from \"./ChartOptionsBar\";\nimport { ChartsContext } from \"./ChartsContext\";\n\n\ninterface GenericChartsTabProps {\n    children: React.ReactNode[] | React.ReactNode\n}\n\nfunction ChartsTab(props: GenericChartsTabProps) {\n    return (\n        <QueryParamsContext\n            name=\"charts-query-params\"\n            default={{ from: '1 month ago', to: '1 hour' } as ChartsQueryData}\n        >\n            <ChartsContext>\n                <Stack spacing={4}>\n                    <ChartOptionsBar />\n                    {props.children}\n                </Stack>\n            </ChartsContext>\n        </QueryParamsContext>\n    )\n}\n\nexport default React.memo(ChartsTab);","import Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport IconButton from \"@mui/material/IconButton\";\nimport { Divider } from \"@mui/material\";\n\n\ninterface ChartSectionProps {\n    title: string,\n    children: React.ReactNode[] | React.ReactNode,\n    defaultOpen?: boolean,\n}\n\n\nexport default function ChartSection(props: ChartSectionProps) {\n    const [open, setOpen] = React.useState<boolean>(props?.defaultOpen ? true : false);\n\n    return (\n        <Box>\n            <Box sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n            }}>\n                <Typography variant='h6' component='h5' id={props.title.replace(' ', '_')}>\n                    {props.title}\n                    <IconButton onClick={() => setOpen(old => !old)}>\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </Typography>\n            </Box>\n            <Collapse in={open} timeout=\"auto\" >\n                <Grid container spacing={2}>\n                    {props.children}\n                </Grid>\n                <br />\n                <Divider />\n            </Collapse>\n        </Box>\n    );\n}","import React from \"react\";\nimport { resourceMapContext } from \"./ResourceMapContextProvider\";\nimport ResourceMapContextValue from \"./ResourceMapContextValue\";\n\n\nexport default function useResourceMap() {\n    return React.useContext(resourceMapContext) as ResourceMapContextValue;\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../auth/useSession\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { DetailedUser } from \"../../../../../models/User\";\nimport UserService, { UpdateUserParams, UserViewParams } from \"../../../../../services/UserService\";\nimport Loading from \"../../../../../shared/components/Loading\";\nimport paths from \"../../../../../shared/path\";\n\n\n\nexport const userContext: any = React.createContext(null);\n\n\ninterface UserContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function UserContextProvider(props: UserContextProviderProps) {\n    const urlParams = useParams<UserViewParams>();\n    const notify = useNotification();\n    const session = useSession();\n\n    const [user, setUser] = React.useState<DetailedUser>();\n\n\n    React.useLayoutEffect(() => {\n        let params = (urlParams.userId === 'me' && session.user) ? { userId: session.user.id.toString() } : urlParams;\n        UserService.setPath(params);\n    }, [\n        urlParams,\n        session\n    ]);\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await UserService.getCurrentOne();\n            setUser(resp.data as DetailedUser);\n        } catch (err: any) {\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        load()\n    }, [\n        load\n    ]);\n\n\n    const deleteUser = React.useCallback(async () => {\n        try {\n            await UserService.remove();\n\n            let action = (): React.ReactNode => null\n\n            if (session && session.user?.id === user?.id) {\n                session.logout();\n            } else {\n                action = () => <Redirect to={paths.USERS} />\n            }\n\n            notify('Użytkownik został usunięty', 'success', action);\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        session,\n        user?.id,\n    ]);\n\n\n    const updateUser = React.useCallback(async (data: UpdateUserParams) => {\n        try {\n            if (await UserService.update(data)) {\n                setUser(old => {\n                    return { ...old, ...data as DetailedUser };\n                });\n\n                notify('Użytkownik został zaktualizowany', 'success');\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    if (!user) return <Loading />;\n\n    return (\n        <userContext.Provider value={{\n            user,\n            deleteUser,\n            updateUser,\n        }}>\n            {props.children}\n        </userContext.Provider>\n    );\n}","import React from \"react\";\nimport { userContext } from \"./UserContextProvider\";\nimport UserContextValue from \"./UserContextValue\";\n\n\n\nexport default function useUser() {\n    return React.useContext(userContext) as UserContextValue;\n}\n","\ninterface AppPathsInterface {\n    readonly [index: string]: string\n    PUBLIC: string,\n    LOGIN: string,\n    REGISTER: string,\n    ACTIVATE: string,\n    REMIND_PASSWORD: string,\n\n    HOME: string,\n    SETTINGS: string,\n    MY_PROFILE: string,\n    INFRASTRUCTURE: string,\n    ADDRESS: string,\n    BUILDING: string,\n    ROOM: string,\n    USERS: string,\n    ACCESS: string,\n};\n\n\ninterface AppDynamicPaths {\n    readonly [indes: string]: (...params: any) => string,\n\n    toRoom: (addressId: number, buildingId: number, roomId: number) => string,\n    toBuilding: (addressId: number, buildingId: number) => string,\n    toAddress: (addressId: number) => string,\n    toUser: (userId: number) => string\n}\n\n\nconst paths: { [index: string]: string } = {\n    PUBLIC: '/public',\n    HOME: '/app',\n}\n\n\npaths.LOGIN = paths.PUBLIC + '/login';\npaths.REGISTER = paths.PUBLIC + '/register';\npaths.ACTIVATE = paths.PUBLIC + '/activate';\npaths.REMIND_PASSWORD = paths.PUBLIC + '/passwd';\n\npaths.ACCESS = paths.HOME + '/accesses'\npaths.SETTINGS = paths.HOME + '/settings';\n\npaths.USERS = paths.HOME + '/users';\npaths.USER = paths.USERS + '/:userId';\npaths.MY_PROFILE = paths.USERS + '/me';\npaths.INFRASTRUCTURE = paths.HOME + '/infrastructure';\npaths.ADDRESS = paths.HOME + '/addresses/:addressId';\npaths.BUILDING = paths.ADDRESS + '/buildings/:buildingId';\npaths.ROOM = paths.BUILDING + '/rooms/:roomId';\n\n\nexport const dynamicPaths: AppDynamicPaths = {\n    toAddress: (addressId: number) => `/app/addresses/${addressId}`,\n    toBuilding: (addressId: number, buildingId: number) => dynamicPaths.toAddress(addressId) + `/buildings/${buildingId}`,\n    toRoom: (addressId: number, buildingId: number, roomId: number) => dynamicPaths.toBuilding(addressId, buildingId) + `/rooms/${roomId}`,\n    toUser: (userId: number) => paths.USERS + `/${userId}`\n}\n\nexport default paths as AppPathsInterface;","import { BuildingOrRoomChartsData, BuildingsOrRoomsChartsData, LogsChartsData, UserChartsData } from \"../models/Stats\";\nimport { AppURLParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface ChartsQueryData {\n    from: string,\n    to: string\n}\n\n\n\nexport type ChartsData = (\n    BuildingOrRoomChartsData |\n    BuildingsOrRoomsChartsData |\n    LogsChartsData |\n    UserChartsData\n);\n\n\nclass ChartService extends Service {\n\n    protected preparePath(urlParams: AppURLParams): string {\n        let endp = '';\n        let url = window.location.toString();\n\n        const map = {\n            '/settings': '/requests',\n            '/users': '/users'\n        }\n\n        if (Object.keys(urlParams).length === 0) {\n            for (const [path, newPath] of Object.entries(map)) {\n                if (url.includes(path)) {\n                    endp = newPath;\n                }\n            }\n        } else if ('addressId' in urlParams) {\n            endp += `/addresses/${urlParams.addressId}/buildings`;\n\n            if ('buildingId' in urlParams) {\n                endp += `/${urlParams.buildingId}`;\n\n                if ('roomId' in urlParams) endp += `/rooms/${urlParams.roomId}`;\n            }\n        } else if ('userId' in urlParams) {\n            endp += `/users/${urlParams.userId}`\n        }\n        return endp;\n    }\n\n    public fetchData(urlParams: AppURLParams, queryParams: ChartsQueryData) {\n        return this.get(this.preparePath(urlParams) + '/stats', queryParams);\n    }\n\n\n\n}\n\nexport default new ChartService();","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../../auth/useSession\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport ChartService, { ChartsData, ChartsQueryData } from \"../../../../../../services/ChartService\";\nimport { AppURLParams } from \"../../../../../../services/interfaces\";\nimport Loading from \"../../../../../../shared/components/Loading\";\nimport useTrigger from \"../../../hooks/useTrigger\";\n\n\nexport const chartsContext: any = React.createContext(null);\n\n\n\ninterface ChartsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\n\nexport default function ChartsContextProvider(props: ChartsContextProviderProps) {\n    const notify = useNotification();\n    const urlParams = useParams<AppURLParams>();\n    const refresh = useTrigger(60_000);\n\n    const { user } = useSession();\n    const { queryParams } = useQueryParams<ChartsQueryData>();\n\n    const [chartsData, setData] = React.useState<ChartsData | {}>({});\n\n\n    const load = React.useCallback(async () => {\n        let params = urlParams;\n        if ('userId' in urlParams && urlParams.userId === 'me') {\n            params = { userId: `${user?.id}` }\n        }\n\n        try {\n            const resp = await ChartService.fetchData(params, queryParams);\n            setData(resp.data as ChartsData);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setData({});\n        }\n    }, [\n        notify,\n        queryParams,\n        urlParams,\n        user?.id,\n    ]);\n\n    React.useEffect(() => {\n        load();\n    }, [\n        load,\n        refresh\n    ]);\n\n    if (Object.keys(chartsData).length === 0) return <Loading />;\n\n    return (\n        <chartsContext.Provider value={{\n            chartsData\n        }}>\n            {props.children}\n        </chartsContext.Provider>\n    );\n}","import React from \"react\";\nimport { chartsContext } from \"./ChartsContextProvider\";\nimport ChartsContextValue from \"./ChartsContextValue\";\n\n\nexport default function useCharts<T>() {\n    return React.useContext(chartsContext) as ChartsContextValue<T>;\n}","\nexport default interface QueryParamsContextValue<T> {\n    setQueryParams: React.Dispatch<React.SetStateAction<T>>\n    queryParams: T,\n}\n\n\nexport const queryParamsContextDefaults = {\n    queryParams: { q: 1 },\n    setQueryParams: (param: { q: number }) => { }\n}","import React from \"react\";\nimport StorageService from \"../../services/StorageService\";\nimport QueryParamsContextValue, { queryParamsContextDefaults } from \"./QueryParamsContextValue\";\n\n\nexport const queryParamsContext = React.createContext<QueryParamsContextValue<any>>(queryParamsContextDefaults);\n\n\nfunction initQueryParams<T>(keyName: string, defaultValue: T): T {\n    const confString = StorageService.read(keyName);\n    if (confString) {\n        return confString;\n    }\n    return defaultValue;\n};\n\n\ninterface QueryParamsContextProviderProps<T> {\n    default: T,\n    name: string,\n    children: React.ReactNode[] | React.ReactNode\n}\n\n\nexport default function QueryParamsContextProvider<T>(props: QueryParamsContextProviderProps<T>) {\n\n    const [queryParams, setQueryParams] = React.useState<T>(\n       ()=> initQueryParams<T>(props.name, props.default)\n    );\n\n    React.useEffect(() => {\n        StorageService.save(props.name, queryParams);\n    }, [queryParams, props.name]);\n\n    if(!queryParams) return null;\n\n    return (\n        <queryParamsContext.Provider value={{ queryParams, setQueryParams }}>\n            {props.children}\n        </queryParamsContext.Provider>\n    );\n}","import React from \"react\";\nimport useSession from \"../../auth/useSession\";\nimport AddressMap from \"../../models/AddressMap\";\nimport useTrigger from \"../../components/pages/protected/hooks/useTrigger\";\nimport AddressService from \"../../services/AddressService\";\nimport useNotification from \"../NotificationContext/useNotification\";\nimport ResourceMapContextValue from \"./ResourceMapContextValue\";\n\n\n\n\nexport const resourceMapContext: any = React.createContext(null);\n\n\ninterface ResourceMapContextProviderProps {\n    children?: React.ReactNode[]\n}\n\n\nexport default function ResourceMapContextProvider(props: ResourceMapContextProviderProps) {\n    const [resourceMap, setResources] = React.useState<AddressMap[]>([]);\n    const [loaded, setLoaded] = React.useState<boolean>(false);\n    const refresh = useTrigger(300_000);\n\n    const { user } = useSession();\n    const notify = useNotification();\n\n    const loadResourceMap = React.useCallback(async (): Promise<void> => {\n        try {\n            const resp = await AddressService.getResourcesMap();\n            resp?.data && setResources(resp.data as any);\n        } catch (err: any) {\n            notify(err.description, \"error\");\n        }\n    }, [notify]);\n\n    const reloadMap = (): void => {\n        loadResourceMap();\n    }\n\n    React.useEffect(() => {\n        user && loadResourceMap();\n        setLoaded(true);\n    }, [\n        user,\n        loadResourceMap,\n        refresh\n    ]);\n\n\n    const getRoomLink = React.useCallback((roomId: number): string => {\n        return '/app' + resourceMap.map(addr => addr.buildings.map(bld => bld.rooms))\n            .flat(2)\n            .find(item => item.id === roomId)\n            ?.href ?? '';\n    }, [resourceMap]);\n\n\n    const allRooms = React.useMemo(() => {\n        return resourceMap.map(addr => addr.buildings.map(bld => bld.rooms)).flat(2)\n    }, [resourceMap]);\n\n\n    const allBuildings = React.useMemo(() => {\n        return resourceMap.map(addr => addr.buildings.map(({ name, href, id }) => ({ name, href, id }))).flat(2);\n    }, [resourceMap]);\n\n\n    const allAddresses = React.useMemo(() => {\n        return resourceMap.map(({ name, href, id }) => ({ name, href, id }));\n    }, [resourceMap]);\n\n\n    const getBuildingLink = React.useCallback((buildingId: number): string => {\n        return '/app' + resourceMap.map(addr => addr.buildings)\n            .flat(2)\n            .find(item => item.id === buildingId)\n            ?.href ?? '';\n    }, [resourceMap]);\n\n\n    if (loaded === false) return null;\n\n    return (\n        <resourceMapContext.Provider value={{\n            resourceMap,\n            reloadMap,\n            allRooms,\n            getRoomLink,\n            getBuildingLink,\n            allAddresses,\n            allBuildings,\n        } as ResourceMapContextValue}>\n            {props.children}\n        </resourceMapContext.Provider>\n    );\n}","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent } from '@mui/material';\nimport { useQueryParams } from '../../../../contexts/QueryParamsContext';\nimport { APIPagination } from '../../../../services/interfaces';\n\n\nexport default function ListPagination() {\n    const { queryParams, setQueryParams } = useQueryParams<APIPagination>();\n\n\n    const handlePageChange = React.useCallback((event: React.ChangeEvent<unknown>, value: number) => {\n        setQueryParams(old => ({\n            ...old,\n            currentPage: value\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n    const handleCountChange = React.useCallback((event: SelectChangeEvent<number>, child: React.ReactNode) => {\n        setQueryParams(old => ({\n            ...old,\n            itemsOnPage: Number(event.target.value)\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n    const onPageList = React.useMemo(() =>\n        [5, 10, 15, 20].map(num => <MenuItem key={num} value={num}>{num}</MenuItem>)\n        , []);\n\n    return (\n        <Stack spacing={2} sx={{\n            flexWrap: 'wrap',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center'\n        }}>\n            <Pagination\n                count={queryParams.pagesCount}\n                size='small'\n                page={queryParams.currentPage}\n                onChange={handlePageChange}\n            />\n            <FormControl fullWidth sx={{ maxWidth: '100px' }}>\n                <InputLabel id=\"items-on-page-label\">Na stronie</InputLabel>\n                <Select\n                    size='small'\n                    labelId=\"items-on-page-label\"\n                    id=\"items-on-page\"\n                    label=\"Na stronie\"\n                    value={queryParams.itemsOnPage ?? 5}\n                    onChange={handleCountChange}\n                >\n                    {onPageList}\n                    <MenuItem value={10000}>wszystko</MenuItem>\n                </Select>\n            </FormControl>\n        </Stack>\n    );\n}\n","import InputBase from \"@mui/material/InputBase\";\nimport { SxProps } from \"@mui/system\";\nimport React from \"react\";\n\n\ninterface SimpleInputProps {\n    value: string,\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    label: string,\n    name: string,\n    sx?: SxProps\n}\n\nexport default function LazyInput({\n    value,\n    onChange,\n    label,\n    name,\n    sx,\n}: SimpleInputProps) {\n    const [trigger, setTrigger] = React.useState<any>();\n    const [str, setStr] = React.useState<string>(value);\n\n\n    const handleSearchFieldChange = React.useCallback((evt) => {\n        setStr(evt.target.value);\n        clearTimeout(trigger);\n\n        let timer = setTimeout(() => {\n            onChange(evt);\n        }, 1000);\n        setTrigger(timer);\n    }, [\n        trigger,\n        onChange,\n    ]);\n\n\n    return <InputBase\n        name={name}\n        value={str}\n        onChange={handleSearchFieldChange}\n        placeholder={label}\n        sx={{\n            width: '100%',\n            maxWidth: '600px',\n            p: 1,\n            bgcolor: 'background.default',\n            ...sx\n        }}\n        inputProps={{ 'aria-label': label }}\n    />;\n}","import { ResponseData } from \"./Service\";\n\n\n\n\nexport default class APIServiceError extends Error {\n\n    private data: ResponseData;\n\n    get code() {\n        return this.data.statusCode;\n    }\n\n    get description() {\n        return this.data.error?.description;\n    }\n\n    constructor(data: ResponseData) {\n        super(data.error?.description);\n        this.data = data;\n    }\n}\n","import { FormControl, FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\nimport React from \"react\";\n\nexport interface SelectButtonInterface {\n    name: string, value: string\n}\n\nexport interface SelectButtonGroupProps {\n    onChange: (value: string) => void,\n    buttons: SelectButtonInterface[],\n    value: string\n}\n\nexport default function SelectButtonGroup({\n    onChange, buttons, value\n}: SelectButtonGroupProps) {\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).value);\n    }, [onChange]);\n\n\n    const renderedButtons = React.useMemo(() => {\n        return buttons.map(({ value, name }) =>\n            <FormControlLabel\n                key={name}\n                value={value}\n                control={<Radio />}\n                label={name}\n                aria-label={name}\n                title={name}\n            />\n        )\n    }, [buttons]);\n\n\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup\n                row\n                aria-label=\"wybór opcji\"\n                name=\"wybór zdefiniowanej opcji\"\n                value={value}\n                onChange={handleChange}\n            >\n                {renderedButtons}\n            </RadioGroup>\n        </FormControl>\n    );\n}","import { APIResponse } from \"./interfaces\";\nimport Service, { ServiceFormData } from \"./Service\";\n\n\n\nexport interface LoginFormData extends ServiceFormData {\n    email: string,\n    password: string\n}\n\n\n\nclass AuthService extends Service {\n\n    async login(data: LoginFormData): Promise<APIResponse> {\n        const response = await this.post(\n            '/users/auth',\n            {\n                'email': data.email,\n                'password': data.password\n            }\n        );\n\n        // set the token to local storage\n        if (response.data) {\n            localStorage.setItem(this._TOKEN_NAME, response.data.toString());\n        }\n\n        return response;\n    }\n\n    logout(): void {\n        localStorage.removeItem(this._TOKEN_NAME);\n    }\n\n    hasToken(): boolean {\n        return Boolean(localStorage.getItem(this._TOKEN_NAME));\n    }\n\n    async hasSession(): Promise<boolean> {\n        try {\n            if (this.hasToken()) {\n                await this.get('/users/me'); // change to ping\n                return true\n            }\n        } catch (err: any) {\n            // localStorage.removeItem(this._TOKEN_NAME);\n            \n        }\n        return false\n    }\n}\n\nexport default new AuthService();","import Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport { SxProps } from \"@mui/system\";\n\n\ninterface ContextLoaderProps {\n    open: boolean,\n    text?: string,\n    sx?: SxProps\n}\n\nexport default function LoadingView(props: ContextLoaderProps) {\n    return (\n        <Backdrop\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                color: 'primary.main',\n                zIndex: (theme) => theme.zIndex.drawer + 1,\n                backgroundColor:'background.default',\n                ...props.sx\n            }}\n            open={props.open}\n        >\n            <Typography variant=\"h5\" pb={2}>\n                {props.text}\n            </Typography>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    );\n}","import React, { createContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport useNotification from \"../contexts/NotificationContext/useNotification\";\n\nimport { SessionUser } from \"../models/User\";\n\nimport AuthService, { LoginFormData } from \"../services/AuthService\";\nimport ImageService from \"../services/ImageService\";\nimport LogService from \"../services/LogService\";\nimport MetadataService from \"../services/MetadataService\";\nimport ReservationService from \"../services/ReservationService\";\nimport StorageService from \"../services/StorageService\";\nimport UserService from \"../services/UserService\";\nimport LoadingView from \"../shared/components/LoadingView\";\nimport paths from \"../shared/path\";\nimport SessionValue from \"./SessionValue\";\n\n\ninterface SessionProviderProps {\n    children?: React.ReactNode\n}\n\n\nexport const sessionContext: any = createContext(null);\n\n\nexport default function SessionProvider({ children }: SessionProviderProps) {\n    const notify = useNotification();\n    const [loading, setLoading] = React.useState(true);\n    const [user, setUser] = useState<SessionUser | null>(null);\n\n\n    const setUpUser = React.useCallback((user: SessionUser) => {\n        setUser(user);\n\n        // config services which require identity data\n        StorageService.setIdentity(user.id);\n        MetadataService.metadata = user.metadata;\n        MetadataService.userId = user.id;\n        ReservationService.userId = user.id;\n        LogService.userId = user.id;\n        ImageService.userId = user.id;\n        UserService.userId = user.id;\n    }, []);\n\n\n    const checkIfUserHasSession = React.useCallback(async () => {\n        setLoading(true);\n        if (AuthService.hasToken()) {\n            try {\n                if (await AuthService.hasSession()) {\n                    const sessionUser = await UserService.getMe();\n                    setUpUser(sessionUser);\n                    notify(\"Witaj ponownie!\", 'info');\n                } else {\n                    notify('Twoja sesja wygasła', 'info', () => <Redirect to={paths.LOGIN} />);\n                }\n            } catch (err: any) {\n                notify(err.description, 'error', () => <Redirect to={paths.WELCOME} />);\n            }\n        }\n        setLoading(false)\n    }, [\n        notify,\n        setUpUser\n    ]);\n\n\n    React.useEffect(() => {\n        checkIfUserHasSession();\n        return () => { }\n    }, [checkIfUserHasSession]);\n\n\n    const login = React.useCallback(async (data: LoginFormData): Promise<void> => {\n        try {\n            await AuthService.login(data);\n            const sessionUser = await UserService.getMe();\n            setUpUser(sessionUser);\n\n            notify(\"Pomyślnie zalogowano!\", \"success\", () => <Redirect to={paths.HOME} />);\n\n        } catch (err: any) {\n            let message = err.description;\n\n            if (err.code === 404) message = \"Użytkownik nie istnieje\";\n\n            notify(message, \"error\");\n        }\n    }, [\n        notify,\n        setUpUser\n    ]);\n\n\n    const logout = React.useCallback(() => {\n        notify(\"Pomyślnie wylogowano!\", \"success\", () => <Redirect to={paths.PUBLIC} />);\n        setUser(null);\n        AuthService.logout();\n    }, [notify]);\n\n\n    return (\n        <>\n            <LoadingView\n                open={loading}\n                text=\"Ładowanie Sesji...\"\n            />\n            <sessionContext.Provider value={{ user, login, logout } as SessionValue}>\n                {!loading && children}\n            </sessionContext.Provider>\n        </>\n    );\n}\n","import { AlertProps } from \"@mui/material/Alert\";\n\ntype NotificationContextValue = (message: string,\n    _severity: AlertProps[\"severity\"],\n    componentCallback?: () => null | React.ReactNode\n) => void;\n\nexport default NotificationContextValue;\n\n\nexport const NotificationContextDefault = (\n    message: string,\n    _severity: AlertProps[\"severity\"] = \"error\",\n    componentCallback: () => null | React.ReactNode = () => null\n) => { }","import { Alert, AlertProps, Snackbar, SnackbarCloseReason } from \"@mui/material\";\nimport React, { createContext } from \"react\";\nimport NotificationContextValue, { NotificationContextDefault } from \"./NotificationContextValue\";\n\n\n\ninterface NotificationContextProviderProps {\n    children?: React.ReactChild\n}\n\n\nexport const notificationContext: any = createContext<NotificationContextValue>(NotificationContextDefault);\n\n\nexport default function NotificationContextProvider({\n    children\n}: NotificationContextProviderProps) {\n    const [message, setMessage] = React.useState<string | null>();\n    const [open, setOpen] = React.useState<boolean>(false);\n    const [severity, setSeverity] = React.useState<AlertProps[\"severity\"]>(\"error\");\n    const [component, setComponent] = React.useState<React.ReactNode>();\n\n\n    const closeSnack = React.useCallback((\n        event?: Event | React.SyntheticEvent<any, Event>,\n        reason?: SnackbarCloseReason\n    ) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n        setMessage('');\n        setComponent(null);\n    }, []);\n\n\n    const setSnack = React.useCallback((\n        message: string,\n        _severity: AlertProps[\"severity\"] = \"error\",\n        componentCallback: () => null | React.ReactNode = () => null\n    ) => {\n        setSeverity(_severity);\n        setMessage(message);\n        setOpen(true);\n        setComponent(componentCallback());\n    }, []);\n\n\n    return (\n        <notificationContext.Provider value={setSnack}>\n            {children}\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={open} autoHideDuration={6000} onClose={closeSnack}>\n                <Alert onClose={closeSnack} severity={severity} sx={{ width: '100%' }}>\n                    {message}\n                </Alert>\n            </Snackbar>\n\n            {component}\n        </notificationContext.Provider>\n    );\n}","import Typography from \"@mui/material/Typography\";\n\n\n\ninterface TabHeadLineProps {\n    title: string | React.ReactNode,\n    subtitle?: string | React.ReactNode,\n}\n\n\nexport default function TabHeadLine(props: TabHeadLineProps) {\n    return (\n        <span>\n            <Typography variant='h4' component='h2' color='primary.dark'>\n                {props.title}\n            </Typography>\n            {\n                props.subtitle &&\n                <Typography variant=\"body1\" color='text.secondary' mt='5px'>\n                    {props.subtitle}\n                </Typography>\n            }\n        </span>\n    )\n}","import Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { AxisOptions } from \"react-charts\";\nimport { Chart as ReactChart } from 'react-charts'\nimport BarChartIcon from '@mui/icons-material/BarChart';\n\n\n\nexport const weekDays = [\n    'Niedziela',\n    'Poniedziałek',\n    'Wtorek',\n    'Środa',\n    'Czwartek',\n    'Piątek',\n    'Sobota',\n];\n\n\ninterface ChartSeries {\n    x: any\n    y: number,\n}\n\n\ninterface ChartProps<T> {\n    data: T[],\n    title: string,\n    fullWidth?: boolean,\n    resolveDay?: boolean\n    xKey: keyof T,\n    y: { label: string, key: keyof T }[]\n}\n\n\nexport default function Chart<DataType>(props: ChartProps<DataType>) {\n\n    const primaryAxis = React.useMemo((): AxisOptions<ChartSeries> => ({\n        getValue: item => props.resolveDay ? weekDays[Number(item.x)] : item.x,\n        min: 0\n    }), [props.resolveDay]);\n\n\n    const secondaryAxes = React.useMemo((): AxisOptions<ChartSeries>[] => [\n        {\n            getValue: item => item.y,\n            position: 'left',\n            elementType: 'bar',\n            minDomainLength: 15,\n            hardMin: 0,\n            scaleType: 'linear',\n            showDatumElements: true\n        }\n    ], []);\n\n\n    const data = React.useMemo(() => {\n        const obj: { label: string, data: ChartSeries[] }[] = props.y.map(({ label }) => ({ label: label, data: [] }))\n\n        props.data.forEach((item) => {\n            props.y.forEach(({ key }, index) => {\n                obj[index].data.push({\n                    x: item[props.xKey],\n                    y: Number(item[key]),\n                });\n            })\n        })\n        return obj;\n    }, [\n        props.y,\n        props.xKey,\n        props.data,\n    ]);\n\n\n    return (\n        <Grid item\n            xs={12}\n            lg={props.fullWidth ? 12 : 6}\n        >\n            <Stack direction='row' spacing={1} alignItems='center'>\n                <Typography variant=\"body2\" component='h4' color='text.secondary'>\n                    {props.title}\n                </Typography>\n                <BarChartIcon color='primary' />\n\n            </Stack>\n            {props.data.length === 0 ?\n                <Typography component='p' color='text.secondary'>\n                    Brak danych do nakreślenia wykresu\n                </Typography>\n                : <Box\n                    sx={{\n                        maxHeight: '400px',\n                        height: '40vh',\n                        minHeight: '300px',\n                        width: '100%',\n                    }}>\n\n                    <ReactChart\n                        options={{\n                            data,\n                            primaryAxis,\n                            secondaryAxes,\n                        }}\n                    />\n                </Box>}\n        </Grid>\n    )\n}","import { Page, Font, View, Document, StyleSheet, Text } from '@react-pdf/renderer';\n\n\n// Register Font\nFont.register({\n    family: \"Roboto\",\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-light-webfont.ttf\"\n});\n\n\nconst styles = StyleSheet.create({\n    page: {\n        fontSize: 11,\n        fontFamily: \"Roboto\",\n        flexDirection: 'column',\n        backgroundColor: '#ffffff'\n    },\n    section: {\n        marginBottom: '15px',\n        justifyContent: 'flex-start',\n        padding: '15px',\n    },\n    head: {\n        fontSize: '16px'\n    }\n});\n\n\ninterface PDFPageProps {\n    sections: React.ReactNode[],\n    subject: string\n};\n\n\nexport default function PDFPage(props: PDFPageProps) {\n    return (\n        <Document>\n            <Page size=\"A4\" style={styles.page} wrap>\n                <View style={styles.section}>\n                    <Text style={styles.head}>\n                        Rav System, dnia {(new Date()).toLocaleString('pl')}\n                    </Text>\n                    <Text style={styles.head}>\n                        {props.subject}\n                    </Text>\n                </View>\n                {\n                    props.sections.map((node, id) =>\n                        <View\n                            key={id}\n                            style={styles.section}\n                        >\n                            {node}\n                        </View>\n                    )\n                }\n            </Page>\n        </Document>\n    )\n}","import { Text, View, StyleSheet } from \"@react-pdf/renderer\";\n\n\nconst styles = StyleSheet.create({\n    title: {\n        padding: '5px',\n        marginBottom: '5px',\n        fontSize: '18px'\n    },\n    table: {\n\n    },\n    row: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        borderBottom: '1px solid black',\n    },\n    cell: {\n        padding: '5px',\n        width: '80px',\n        alignItems: 'center',\n    },\n    text: {\n        margin: '0px',\n        padding: '0px',\n        wordBreak: 'keep-all',\n        textAlign: 'center',\n    }\n});\n\n\ninterface RowProps {\n    cols: Array<(number | string)>\n}\n\nfunction Row({\n    cols\n}: RowProps) {\n    return (\n        <View style={styles.row}>\n            {\n                cols.map((col, id) => <Cell key={id} val={col} />)\n            }\n        </View>\n    )\n}\n\n\ninterface CellProps {\n    val: string | number\n}\n\nfunction Cell(props: CellProps) {\n    return (\n        <View style={styles.cell}>\n            <Text style={styles.text}>{props.val}</Text>\n        </View>\n    )\n}\n\n\ntype TRow = (number | string)[];\n\nexport interface TableProps {\n    title: string,\n    rows: TRow[]\n};\n\nfunction emptyMonthList(rows: TRow[]): boolean {\n    // if every item in list except first element is 0\n    return rows.every(row => row.slice(1).every(val => val === 0));\n};\n\nexport default function Table({\n    rows,\n    title\n}: TableProps) {\n    return (\n        <View>\n            <Text style={styles.title}>{title}</Text>\n            {\n                emptyMonthList(rows.slice(1)) ?\n                    <Text style={styles.text}>Brak danych w wybranym przedziale czasu</Text>\n                    : rows.map((row, id) => <Row key={id} cols={row} />)\n            }\n        </View>\n    )\n}\n","import { useContext } from \"react\";\nimport { notificationContext } from \"./NotificationContextProvider\";\nimport NotificationContextValue from \"./NotificationContextValue\";\n\n\n\nexport default function useNotification() {\n    return useContext(notificationContext) as NotificationContextValue;\n}","import { TableRow, TableCell, IconButton, Collapse, Box } from \"@mui/material\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Link } from \"@mui/material\";\nimport Log from \"../../../../../models/Log\";\nimport { displayDate } from \"../../../../../shared/utils\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\n\ninterface LogRowProps {\n    row: Log\n}\n\nexport default function LogRow(props: LogRowProps) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <>\n            <TableRow hover sx={{ '& > *': { borderBottom: 'unset' } }}>\n                <TableCell>\n                    <IconButton\n                        aria-label=\"szczegóły zapytania\"\n                        size=\"small\"\n                        onClick={() => setOpen(!open)}\n                    >\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">{row.id}</TableCell>\n                {/* <TableCell align=\"left\">{row.method}</TableCell> */}\n                <TableCell align=\"left\">{row.endpoint}</TableCell>\n                <TableCell align=\"left\">{Math.fround(row.time * 1000).toPrecision(6)}</TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box component=\"pre\" sx={{ margin: 1 }}>\n                            <Link component={RouterLink} to={`/users/${row.user}`}>Pokaż użytkownika</Link> <br />\n                            {displayDate(row._created)}&nbsp;|&nbsp;{row.method}&nbsp;{row.endpoint}<br />\n                            czas przetwarzania: {row.time} [s]<br />\n                            Ciało zapytania <br />\n                            {JSON.stringify(\n                                JSON.parse(row.payload),\n                                undefined,\n                                3\n                            )}\n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </>\n    );\n}","import { AppURLParams, PaginationQueryParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface LogsQueryParams extends PaginationQueryParams {\n    method?: \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\",\n    userId?: string | number\n}\n\n\nclass LogService extends Service {\n\n    fetch(urlParams: AppURLParams, queryParams: LogsQueryParams) {\n        return this.get(\n            this.preparePath(urlParams) + '/requests',\n            queryParams\n        );\n    }\n\n    async getStats() {\n        return await this.get(`/requests/stats`);\n    }\n}\n\n\nexport default new LogService();","import CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\n\nexport default function Loading() {\n  return (\n    <Box sx={{\n      display: 'flex',\n      alignContent: 'center',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '200px',\n      height: '100%',\n    }}>\n      <CircularProgress />\n    </Box>\n  );\n}","import React from \"react\";\nimport useSession from \"../../../../auth/useSession\";\n\n\nconst defaultAccess = {\n    'owner': false,\n    'accessAdmin': false,\n    'premisesAdmin': false,\n    'keysAdmin': false,\n    'reservationsAdmin': false,\n    'reservationsAbility': false,\n    'logsAdmin': false,\n    'statsViewer': false,\n    'myId': (id: number): boolean => false\n}\n\nexport default function useResolvedAccess() {\n    const { user } = useSession();\n\n    const access = React.useMemo(() => {\n        if (!user) return defaultAccess;\n\n        const { owner,\n            accessAdmin,\n            premisesAdmin,\n            keysAdmin,\n            reservationsAdmin,\n            reservationsAbility,\n            logsAdmin,\n            statsViewer\n        } = user.access;\n\n        return {\n            'owner': owner,\n            'accessAdmin': owner || accessAdmin,\n            'premisesAdmin': owner || premisesAdmin,\n            'keysAdmin': owner || keysAdmin,\n            'reservationsAdmin': owner || reservationsAdmin,\n            'reservationsAbility': owner || reservationsAbility,\n            'logsAdmin': owner || logsAdmin,\n            'statsViewer': owner || statsViewer,\n            'myId': (id: number) => owner || (user.id === id)\n        } as typeof defaultAccess;\n    }, [user]);\n\n    return access;\n}\n","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport { SxProps } from '@mui/system';\nimport { Paper } from '@mui/material';\n\n\ninterface GenericModalProps {\n  children: React.ReactNode | React.ReactNode[],\n  open: boolean,\n  sx?: SxProps,\n  onClose: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction GenericModal({\n  children, open, sx, onClose\n}: GenericModalProps) {\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        overflow: 'auto'\n      }}\n    >\n      <Fade in={open}>\n        <Paper sx={{\n          bgcolor: 'background.paper',\n          position: 'absolute',\n          width: '95%',\n          mt: '5vw',\n          maxWidth: '500px',\n          boxShadow: 24,\n          p: 3,\n          ...sx\n        }}>\n          {children}\n        </Paper>\n      </Fade>\n    </Modal >\n  );\n}\n\nexport default React.memo(GenericModal);","export {default as useResourceMap } from './useResourceMap';\nexport {default as ResourceMapContextProvider} from './ResourceMapContextProvider'","\n\n\nexport function displayDate(dateString: string): string {\n    const date = new Date(dateString);\n    const format = new Intl.DateTimeFormat('pl-PL', {\n        dateStyle: \"medium\",\n        timeStyle: \"medium\"\n    })\n\n    return format.format(date);\n}\n\n\nexport const timeFormat = new Intl.DateTimeFormat('pl-PL', {\n    timeStyle: \"medium\"\n});\n\n\nexport function isDate(str: string | undefined): boolean {\n    if (!str) return false;\n\n    let date = new Date(str);\n    return Boolean(date.getDate())\n}\n\nexport function urlToId(): string {\n    let url = window.location.pathname.toLocaleLowerCase()\n    return url.replaceAll(/\\d/gi, '*')\n}\n\n\nexport function fromLocaleDateTimeString(dateTime: string) {\n    const [d, m, y, h, i, s] = dateTime.split(/\\.|:|,\\s/).map(item => Number(item));\n    \n    return new Date(y, m - 1, d, h, i, s);\n}","import { useContext } from \"react\";\nimport { sessionContext } from \"./sessionProvider\";\nimport SessionValue from \"./SessionValue\";\n\n\n\nexport default function useSession() {\n  return useContext(sessionContext) as SessionValue;\n}","\n\nexport interface ButtonStatus {\n    success: boolean | null,\n    message: string,\n}\n\ninterface Action {\n    statusCode: number | string,\n    payload?: any\n}\n\nexport const initialResult = {\n    success: null,\n    message: ''\n}\n\nexport function statusReducer(state: ButtonStatus, action: Action): ButtonStatus {\n    switch (action.statusCode) {\n        case 200:\n        case 201:\n            return {\n                success: true,\n                message: \"Kod został wysłany na podany email\"\n            };\n        case 403:\n        case 401:\n        case 400:\n            return {\n                success: false,\n                message: action.payload\n            };\n        case 404:\n            return {\n                success: false,\n                message: \"Taki użytkownik nie istnieje.\"\n            };\n        case 422:\n            return {\n                success: false,\n                message: \"Adres email jest niepoprawny\"\n            };\n        case \"NO_ADDRESS\":\n            return {\n                success: false,\n                message: \"Musisz podać adres email\"\n            };\n        default:\n            return {\n                success: false,\n                message: action.payload\n            };\n            // throw new Error();\n    }\n}","import { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport SyncIcon from '@mui/icons-material/Sync';\nimport React from \"react\";\nimport UserService from \"../../../services/UserService\";\nimport { statusReducer } from \"./statusReducer\";\n\n\ninterface UniqueCodeButtonProps {\n    email: string,\n    text: string\n}\n\n\nfunction resolveColor(value: null | boolean): string {\n    if (value === null) return \"inherit\";\n    if (value === true) return \"green\";\n    return \"error\";\n}\n\n\nexport default function UniqueCodeButton(props: UniqueCodeButtonProps) {\n    const [result, dispatchResult] = React.useReducer(statusReducer, {\n        success: null,\n        message: props.text\n    });\n\n    const handleSubmit = async () => {\n        if (!props.email) {\n            dispatchResult({ statusCode: \"NO_ADDRESS\" });\n        }\n        try {\n            const resp = await UserService.generateKey(props.email);\n            dispatchResult(resp);\n\n        } catch (err: any) {\n            dispatchResult({\n                statusCode: err.code,\n                payload: err.description\n            });\n        }\n    };\n\n    return (\n        <Box\n            component=\"div\"\n            display=\"flex\"\n        >\n            <Button sx={{\n                bgcolor: \"primary.50\",\n                \"&:hover\": {\n                    bgcolor: \"primary.100\",\n                }\n            }}\n                onClick={handleSubmit} >\n                <SyncIcon fontSize=\"large\" />\n            </Button>\n\n            <Box\n                sx={{\n                    display: \"flex\",\n                    alignItems: 'center',\n                    ml: 1\n                }}\n            >\n                <Typography\n                    variant=\"body2\"\n                    component=\"p\"\n                    color={resolveColor(result.success)}\n                >\n                    {result.message}\n                </Typography>\n            </Box>\n\n        </Box>\n    );\n}","import { Typography } from \"@mui/material\";\n\n\ninterface StepProps {\n    title: string,\n    text?:string,\n    children: React.ReactNode | React.ReactNodeArray\n}\n\nexport default function FormStep(props: StepProps) {\n    return (\n        <>\n            <Typography variant=\"h5\" sx={{ mt: 3 }}>\n                {props.title}\n            </Typography>\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                {props.text}\n            </Typography>\n            {props.children}\n        </>\n    );\n}","import { Button, Grid, Link, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport UniqueCodeButton from \"../../../../shared/components/UniqueCodeButton\";\nimport React from \"react\";\nimport FormStep from \"./FormStep\";\nimport UserService, { ChangePasswordData } from \"../../../../services/UserService\";\nimport { Redirect } from 'react-router-dom';\nimport paths from \"../../../../shared/path\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\n\n\ninterface FormProps {\n    onSuccess?: () => void\n}\n\nexport default function Form(props: FormProps) {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<ChangePasswordData>({\n        email: localStorage.getItem('email')?.toString() ?? '',\n        newPassword: '',\n        code: ''\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        try {\n            await UserService.changePassword(data);\n\n            notify(\"Hasło zostało zmienione\", 'success',\n                () => {\n                    if (props.onSuccess) props.onSuccess();\n                    return <Redirect to={paths.LOGIN} />\n                }\n            );\n        } catch (err: any) {\n            let message = err.description;\n            if (err.code === 404) message = \"Taki użytkownik nie istnieje\";\n\n            notify(message, 'error');\n        }\n    }, [\n        data,\n        notify,\n        props\n    ]);\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <FormStep\n                title=\"1. Wygeneruj Kod\"\n                text=\"Podaj swój aders email i naciśnij przycisk by otrzymać email i kodem.\"\n            >\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Adres email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    value={data.email}\n                    onChange={onChange}\n                />\n                <UniqueCodeButton\n                    text=\"Kliknij przycisk by otrzymać kod.\"\n                    email={data.email}\n                />\n            </FormStep>\n            <FormStep\n                title=\"2. Podaj nowe hasło i kod\"\n                text=\"Podaj nowe hasło i kod który otrzymałeś (jeśli nie, powtórz krok nr 1)\"\n            >\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"newPassword\"\n                    label=\"Hasło\"\n                    type=\"password\"\n                    id=\"password\"\n                    value={data.newPassword}\n                    onChange={onChange}\n                    autoComplete=\"current-password\"\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"code\"\n                    label=\"Kod\"\n                    type=\"text\"\n                    id=\"code\"\n                    value={data.code}\n                    onChange={onChange}\n                    autoComplete=\"email-code\"\n                />\n            </FormStep>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                3. Zmień Hasło\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <Link href={paths.LOGIN}>\n                        Hasło zmienione? Zaloguj się!\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import Image from \"../models/Image\";\nimport APIServiceError from \"./APIServiceError\";\nimport { BuildingViewParams } from \"./BuildingService\";\nimport { APIResponse } from \"./interfaces\";\nimport { RoomViewParams } from \"./RoomService\";\nimport Service, { ResponseData } from \"./Service\";\nimport { UserViewParams } from \"./UserService\";\n\n\n\nclass ImageService extends Service {\n\n    private async sendImage(endpoint: string, formBody: FormData) {\n        const resp = await fetch(\n            this._BASE_URL + endpoint,\n            {\n                method: \"POST\",\n                cache: 'no-cache',\n                mode: 'cors',\n                body: formBody,\n                headers: {\n                    'Authorization': this.authToken,\n                }\n            }\n        );\n\n        const data = await resp.json() as ResponseData;\n        console.debug(data);\n\n        if (!resp.ok) {\n            console.error(`${resp.status}\\t${data?.error?.type}\\t${data?.error?.description}`);\n            throw new APIServiceError(data);\n        }\n\n        return data as APIResponse;\n    }\n\n    public getLink(image?: Image): string {\n        if (image?.url.includes('http')) return image.url;\n\n        return this._BASE_URL.slice(0, this._BASE_URL.length - 3) + image?.url;\n    }\n\n    public upload(\n        urlParams: (UserViewParams | BuildingViewParams | RoomViewParams),\n        image: Blob\n    ) {\n        const formData = new FormData();\n        formData.append(\n            'file',\n            image\n        );\n        return this.sendImage(this.preparePath(urlParams) + '/image', formData);\n    }\n\n    public remove(urlParams: (UserViewParams | BuildingViewParams | RoomViewParams)) {\n        return this.delete(this.preparePath(urlParams) + '/image');\n    }\n}\n\n\nexport default new ImageService();","import Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SaveIcon from '@mui/icons-material/Save';\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\n\n\ninterface FormGridContainerProps {\n    title: string,\n    subtitle?: string,\n    onSubmit: () => void,\n    onCancel: () => void,\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function FormGridContainer({\n    title,\n    subtitle,\n    onSubmit,\n    onCancel,\n    children,\n}: FormGridContainerProps) {\n\n\n    const handleSubmit = React.useCallback((event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        onSubmit();\n    }, [\n        onSubmit\n    ]);\n\n\n    return (\n        <Stack rowGap={3}>\n            <span>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    {title}\n                </Typography>\n\n                {subtitle && <Typography variant=\"body2\" color='text.secondary' mt='5px'>\n                    {subtitle}\n                </Typography>}\n            </span>\n\n            <Grid container spacing={2} component=\"form\" onSubmit={handleSubmit} >\n                {children}\n                <Grid item xs={12}>\n                    <Stack direction=\"row\" justifyContent=\"space-around\" mt={1.5}>\n                        <Button\n                            aria-label=\"Zamknij\"\n                            title='Zamknij'\n                            startIcon={<CancelIcon />}\n                            onClick={onCancel}\n                        >\n                            Zamknij\n                        </Button>\n                        <Button\n                            aria-label=\"Zatwierdź\"\n                            title='Zatwierdź'\n                            startIcon={<SaveIcon color='inherit' />}\n                            type=\"submit\"\n                            color=\"success\"\n                        >\n                            Zatwierdź\n                        </Button>\n                    </Stack>\n                </Grid>\n            </Grid>\n        </Stack>\n    );\n}","import React from \"react\";\nimport { queryParamsContext } from \"./QueryParamsContextProvider\";\nimport QueryParamsContextValue from \"./QueryParamsContextValue\";\n\n\nexport default function useQueryParams<T>() {\n    return React.useContext(queryParamsContext) as QueryParamsContextValue<T>;\n}","import APIServiceError from \"./APIServiceError\";\nimport { APIResponse, AppURLParams } from \"./interfaces\";\n\n\nexport interface ServiceFormData {\n    [index: string]: string | number | boolean | undefined | object\n}\n\n\n\n\ninterface FetchData {\n    endpoint: string\n    method: string,\n    body?: object\n}\n\ninterface ErrorData {\n    type: string,\n    description: string\n}\n\nexport interface ResponseData {\n    statusCode: number,\n    data?: any,\n    error?: ErrorData\n}\n\n\n\nexport interface StatusMessages {\n    [index: number]: string\n}\n\n\nexport default abstract class Service {\n\n    _BASE_URL: string = process.env.REACT_APP_API_URL as string;\n    _TOKEN_NAME: string = 'auth_token';\n    _userId: number = -1;\n\n    public set userId(value: number) {\n        this._userId = value\n    }\n\n    public get userId(): number {\n        if (this._userId === -1)\n            throw Error('user id was not set');\n\n        return this._userId;\n    }\n\n    protected get authToken() {\n        return 'Bearer ' + window.localStorage.getItem(this._TOKEN_NAME);\n    }\n\n    private async _fetch(fetchObject: FetchData): Promise<APIResponse> {\n        const response = await fetch(\n            this._BASE_URL + fetchObject.endpoint,\n            {\n                method: fetchObject.method,\n                cache: 'no-cache',\n                mode: 'cors',\n                // credentials: 'omit',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.authToken,\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: JSON.stringify(fetchObject.body)\n            }\n        );\n        const data = await response.json() as ResponseData;\n\n        if (process.env.NODE_ENV !== 'production') console.debug(data);\n\n        // if user is not authenticated - \n        // redirect to let sessionContext to resolve redirections\n        if (response.status === 401 && !fetchObject.endpoint.match('/auth|me|activate')) {\n            window.location.reload();\n        }\n\n        if (!response.ok) {\n            if (process.env.NODE_ENV !== 'production') console.error(`${response.status} ${data?.error?.type} ${data?.error?.description}`);\n            throw new APIServiceError(data);\n        }\n\n        return data as APIResponse;\n    }\n\n    protected preparePath(urlParams: AppURLParams): string {\n        let endp = '';\n        let url = window.location.toString();\n        const map = {\n            '/accesses': '/accesses',\n            '/settings': '/configurations',\n            '/users': '/users'\n        }\n\n        if (Object.keys(urlParams).length === 0) {\n            for (const [path, newPath] of Object.entries(map)) {\n                if (url.includes(path)) {\n                    endp = newPath;\n                }\n            }\n        } else if ('addressId' in urlParams) {\n            endp += `/addresses/${urlParams.addressId}`;\n\n            if ('buildingId' in urlParams) {\n                endp += `/buildings/${urlParams.buildingId}`;\n\n                if ('roomId' in urlParams) endp += `/rooms/${urlParams.roomId}`;\n            }\n        } else if ('userId' in urlParams) {\n            if (urlParams.userId === 'me') {\n                endp += '/users/' + this.userId.toString();\n            } else {\n                endp += '/users/' + urlParams.userId;\n            }\n        }\n        return endp;\n    }\n\n    protected get(endpoint: string, query = {}) {\n        return this._fetch({\n            method: 'GET',\n            endpoint: endpoint + '?' + new URLSearchParams(query).toString()\n        });\n    }\n\n    protected post(endpoint: string, body: object) {\n        return this._fetch({\n            method: 'POST',\n            endpoint: endpoint,\n            body: body\n        });\n    }\n\n    protected patch(endpoint: string, body: object) {\n        if (Object.keys(body).length === 0) return;\n\n        return this._fetch({\n            method: 'PATCH',\n            endpoint: endpoint,\n            body: body\n        });\n    }\n\n    protected delete(endpoint: string) {\n        return this._fetch({\n            method: 'DELETE',\n            endpoint: endpoint\n        });\n    }\n}","import { SessionUser } from \"../models/User\";\nimport { PaginationQueryParams } from \"./interfaces\";\nimport Service, { ServiceFormData } from \"./Service\";\n\n\nexport interface RegisterUserData extends ServiceFormData {\n    email: string,\n    password: string,\n    name: string,\n    surname: string\n}\n\nexport interface ActivationData extends ServiceFormData {\n    email: string,\n    password: string,\n    code: string,\n}\n\nexport interface ChangePasswordData extends ServiceFormData {\n    code: string,\n    newPassword: string,\n    email: string\n}\n\nexport interface UpdateUserParams extends ServiceFormData {\n    name?: string,\n    surname?: string,\n    metadata?: object\n}\n\nexport interface UserViewParams {\n    userId: string;\n}\n\nexport interface UserQueryParams extends PaginationQueryParams {\n    [index: string]: any,\n    accessId?: number,\n    deleted?: boolean,\n    search?: string,\n    activated?: boolean,\n}\n\n\nclass UserService extends Service {\n    _path = '/users';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath(urlParams: UserViewParams) {\n        this._path = this.preparePath(urlParams);\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public async getMe() {\n        const resp = await this.get('/users/me');\n        return resp.data as SessionUser;\n    }\n\n    public getUsers(data?: UserQueryParams) {\n        return this.get('/users', data);\n    }\n\n    public register(data: RegisterUserData) {\n        return this.post('/users', data);\n    }\n\n    public activate(data: ActivationData) {\n        return this.patch('/users/activate', data);\n    }\n\n    public generateKey(email: string) {\n        return this.post('/users/key', {\n            email: email\n        });\n    }\n\n    public updateAccess(userId: number, accessId: number) {\n        return this.patch(`/users/${userId}/access`, {\n            accessId: accessId\n        })\n    }\n\n    public update(data: UpdateUserParams) {\n        return this.patch(this.path, data);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public changePassword(data: ChangePasswordData) {\n        return this.patch('/users/password', data);\n    }\n}\n\n\nexport default new UserService();","import Metadata, { FavouriteBuilding, FavouriteRoom } from \"../models/Metadata\";\nimport StorageService from \"./StorageService\";\nimport UserService from \"./UserService\";\n\n\n\n\nclass MetadataService {\n    private STORAGE_NAME = 'user-metadata';\n\n    private data: Metadata;\n    private _userId: number | undefined;\n\n\n    constructor() {\n        this.data = StorageService.read(this.STORAGE_NAME) ?? {\n            notes: '',\n            favourites: []\n        };\n    }\n\n    private async save(): Promise<void> {\n        StorageService.save(this.STORAGE_NAME, this.data);\n\n        if (!this._userId) return;\n\n        UserService.setPath({ userId: this._userId?.toString() });\n        try {\n            await UserService.update({\n                metadata: this.data\n            });\n        } catch (err: any) { console.error(err) }\n    }\n\n    public set userId(id: number) {\n        this._userId = id;\n    }\n\n    public set metadata(value: Metadata) {\n        this.data = {\n            ...this.data,\n            ...value\n        };\n    }\n\n    public get notes() {\n        return this.data.notes ?? '';\n    }\n\n    public get favourites() {\n        return this.data.favourites ?? [];\n    }\n\n    public set notes(value: string) {\n        this.data.notes = value;\n        this.save();\n    }\n\n    public addFavourite(item: FavouriteBuilding | FavouriteRoom): void {\n        this.data.favourites?.push(item);\n        this.data.favourites?.sort((a, b) => {\n            if (a.type >= b.type) {\n                if (a.type === b.type) {\n                    return a.name > b.name ? 1 : -1;\n                }\n                return 1;\n            }\n            return -1;\n        });\n        console.log(this.data);\n        this.save();\n    }\n\n    public isFavourite(item: FavouriteBuilding | FavouriteRoom): boolean {\n        return Boolean(this.data.favourites?.find(({ id, type }) => (type === item.type && id === item.id)));\n    }\n\n    public removeFavourite(item: FavouriteBuilding | FavouriteRoom): void {\n        this.data.favourites = this.data.favourites?.filter(({ id, type }) => id + type !== item.id + item.type)\n        this.save();\n    }\n}\n\n\nexport default new MetadataService();","import * as React from 'react';\nimport {\n    Link as RouterLink,\n    LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\n\nconst LinkBehavior = React.forwardRef<\n    any,\n    Omit<RouterLinkProps, 'to'> & { href: RouterLinkProps['to'] }\n>((props, ref) => {\n    const { href, ...other } = props;\n    // Map href (MUI) -> to (react-router)\n    return <RouterLink data-testid=\"custom-link\" ref={ref} to={href} {...other} />;\n});\n\n\nexport default LinkBehavior; ","import { indigo } from '@mui/material/colors';\nimport { darkScrollbar as scrollbar } from '@mui/material';\nimport { LinkProps } from '@mui/material/Link';\nimport { createTheme } from '@mui/material/styles';\nimport LinkBehavior from './LinkBehavior';\n\n\nconst light = {\n  track: '#f5f5f5',\n  thumb: '#adadad',\n  active: '#959595'\n};\n\n\n\nconst theme = createTheme({\n  palette: {\n    primary: indigo,\n    secondary: {\n      dark: \"#f5f5f5\",\n      main: \"#304ffe\",\n      light: \"#fff\"\n    },\n    background: {\n      default: '#f3f3f3',\n      paper: '#fff'\n    }\n  },\n  // spacing: 10,\n  shape: {\n    borderRadius: 4\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        body: scrollbar(light),\n      },\n    },\n    MuiTextField: {\n      defaultProps: {\n        size: 'medium',\n        variant: 'outlined',\n      }\n    },\n    MuiSelect: {\n      defaultProps: {\n        size: 'medium'\n      }\n    },\n    MuiButton: {\n      defaultProps: {\n        sx: {\n          borderRadius: ({ shape }) => Number(shape.borderRadius) / 2\n        }\n      },\n    },\n    MuiLink: {\n      defaultProps: {\n        component: LinkBehavior,\n      } as LinkProps,\n    },\n    MuiButtonBase: {\n      defaultProps: {\n        LinkComponent: LinkBehavior,\n      },\n    },\n    MuiSvgIcon: {\n      defaultProps: {\n        color: 'inherit',\n      }\n    },\n    MuiIconButton: {\n      defaultProps: {\n        color: 'primary'\n      }\n    }\n  },\n  // typography:{\n\n  // }\n})\n\nexport default theme;","import React from 'react';\nimport { ThemeProvider } from '@mui/material/styles';\n\n\nimport theme from './theme';\n\n\ninterface ThemeProps {\n    children: React.ReactNode\n}\n\n\nexport default function Theme(props: ThemeProps) {\n    return (\n        <ThemeProvider theme={theme}>\n            {props.children}\n        </ThemeProvider>\n    );\n}","import React from 'react';\nimport Loading from '../../../../shared/components/Loading';\n\nconst LazyAccessPage = React.lazy(() => import('./AccessPage'));\n\n\nexport default function AccessPage() {\n    return <React.Suspense fallback={<Loading />}>\n        <LazyAccessPage />\n    </React.Suspense>\n}\n","import React from \"react\";\nimport { reservationsContext } from \"./ReservationsContextProvider\";\nimport ReservationsContextValue from \"./ReservationsContextValue\";\n\nexport default function useReservations() {\n    return React.useContext(reservationsContext) as ReservationsContextValue;\n}","import MobileDateTimePicker from \"@mui/lab/MobileDateTimePicker\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\n\n\ninterface Props {\n    value: Date,\n    label: string,\n    onChange: (value: Date) => void,\n}\n\nexport default function DateTimePicker({\n    value,\n    onChange,\n    label,\n}: Props) {\n\n    const handleChange = React.useCallback((newValue: Date | null) => {\n        if (newValue) {\n            onChange(newValue);\n        }\n    }, [\n        onChange\n    ]);\n\n    return (\n        <MobileDateTimePicker\n            minDate={new Date()}\n            label={label}\n            value={value}\n            onChange={handleChange}\n            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n        />\n    )\n}\n\n","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../../components/GenericModal\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { UpdateReservationData } from \"../../../../../../services/ReservationService\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useResourceMap } from \"../../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\nimport useReservations from \"../../GenericReservationsTab/ReservationsContext/useReservations\";\nimport FormGridContainer from \"../../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../../DateTimePicker\";\nimport { fromLocaleDateTimeString } from \"../../../../../../shared/utils\";\n\n\ninterface EditModalFormProps {\n    open: boolean,\n    onClose: () => void,\n    reservation: Reservation\n}\n\nexport default function EditModalForm(props: EditModalFormProps) {\n    const { updateReservation } = useReservations()\n    const { allRooms } = useResourceMap();\n\n    const [data, setData] = React.useState<UpdateReservationData>({});\n\n\n    const closeForm = React.useCallback(() => {\n        props.onClose();\n        setData({});\n    }, [\n        props\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateReservation(props.reservation.id, data)) {\n            closeForm();\n            setData({});\n        }\n\n    }, [\n        props,\n        data,\n        closeForm,\n        updateReservation,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleDateChange = React.useCallback((name: keyof UpdateReservationData, value: Date) => {\n        value && setData(old => ({\n            ...old,\n            [name]: value.toLocaleString('pl')\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={closeForm}\n            aria-label=\"Okno do edycji rezerwacji\"\n        >\n            <FormGridContainer\n                title='Edycja rezerwacji'\n                subtitle=\"Zmień właściwości pokoju i zatwierdź zmiany.\"\n                onSubmit={handleSubmit}\n                onCancel={props.onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Tytuł\"\n                        multiline\n                        maxRows={4}\n                        name='title'\n                        value={data.title ?? props.reservation.title}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Opis\"\n                        multiline\n                        maxRows={20}\n                        name='description'\n                        value={data.description ?? props.reservation.description}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <DateTimePicker\n                        value={\n                            data.plannedStart ?\n                                fromLocaleDateTimeString(data.plannedStart) :\n                                new Date(props.reservation.plannedStart)\n                        }\n                        label=\"Początek\"\n                        onChange={(value) => handleDateChange('plannedStart', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <DateTimePicker\n                        value={\n                            data.plannedEnd ?\n                                fromLocaleDateTimeString(data.plannedEnd) :\n                                new Date(props.reservation.plannedEnd)\n                        }\n                        label=\"Koniec\"\n                        onChange={(value) => handleDateChange('plannedEnd', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                        <Select\n                            required\n                            labelId=\"wybierz-salę\"\n                            name=\"roomId\"\n                            value={data.roomId ?? props.reservation.room.id}\n                            label=\"Sala\"\n                            onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                        >\n                            {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../../components/GenericModal\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useResourceMap } from \"../../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\nimport useReservations from \"../../GenericReservationsTab/ReservationsContext/useReservations\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { IconButton } from \"@mui/material\";\nimport { CreateReservationData } from \"../../../../../../services/ReservationService\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport FormGridContainer from \"../../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../../DateTimePicker\";\n\n\ninterface CopyModalFormProps {\n    open: boolean,\n    onClose: () => void,\n    reservation: Reservation\n}\n\ninterface DateTimeSlot {\n    color: string | null,\n    from: Date,\n    to: Date,\n}\n\ninterface CopyReservationData {\n    title: string,\n    description: string,\n    roomId?: number\n}\n\n\nexport default function CopyModalForm(props: CopyModalFormProps) {\n    const { createReservation } = useReservations()\n    const { allRooms } = useResourceMap();\n    const notify = useNotification();\n\n    const [dates, setDates] = React.useState<DateTimeSlot>({\n        color: '',\n        from: new Date(props.reservation.plannedStart),\n        to: new Date(props.reservation.plannedEnd),\n    });\n\n    const [copyDates, setCopyDates] = React.useState<DateTimeSlot[]>([]);\n    const [data, setData] = React.useState<CopyReservationData>({\n        title: props.reservation.title,\n        description: props.reservation.description,\n        roomId: props.reservation.room.id ?? 0\n    });\n\n\n    const closeForm = React.useCallback(() => {\n        props.onClose();\n        // setCopyDates([]);\n    }, [props]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n\n        const createCalls = copyDates.map(async (date) => {\n            const success = await createReservation({\n                ...data,\n                plannedStart: date.from.toLocaleString('pl'),\n                plannedEnd: date.to.toLocaleString('pl')\n            } as CreateReservationData);\n            date.color = success ? 'green' : 'red';\n            return date;\n        })\n        const processed = await Promise.all(createCalls);\n        setCopyDates(processed);\n\n    }, [data, copyDates, createReservation]);\n\n\n    const handleDeleteCopyDate = React.useCallback((index: number) => {\n        setCopyDates(old => {\n            old.splice(index, 1);\n            return Object.assign([], old);\n        });\n    }, []);\n\n\n    const setDate = React.useCallback((key: keyof DateTimeSlot, dateTime: Date) => {\n        setDates(old => ({\n            ...old,\n            [key]: dateTime,\n        }));\n    }, []);\n\n\n    const handleAddDate = React.useCallback(() => {\n        if (copyDates.find(({ from, to }) => from === dates.from || to === dates.to)) {\n            notify(\"Daty powinny się różnić\", 'error');\n            return;\n        };\n\n        setCopyDates(old => {\n            old.push({\n                ...dates,\n                color: ''\n            });\n            return Object.assign([], old);\n        });\n    }, [\n        dates,\n        notify,\n        copyDates,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={closeForm}\n            aria-label=\"Okno do kopiowania rezerwacji\"\n        >\n\n            <FormGridContainer\n                title='Kopiowanie rezerwacji'\n                subtitle=\"Skopiuj rezerwację dla wybranych przez siebie nowych dat.\"\n                onSubmit={handleSubmit}\n                onCancel={props.onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Tytuł\"\n                        multiline\n                        maxRows={4}\n                        name='title'\n                        value={data.title ?? props.reservation.title}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Opis\"\n                        multiline\n                        maxRows={20}\n                        name='description'\n                        value={data.description ?? props.reservation.description}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={5}>\n                    <DateTimePicker\n                        label=\"Początek\"\n                        value={dates.from}\n                        onChange={(value) => setDate('from', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={5}>\n                    <DateTimePicker\n                        label=\"Koniec\"\n                        value={dates.to}\n                        onChange={(value) => setDate('to', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={2}>\n                    <Button\n                        size='large'\n                        sx={{\n                            height: '100%',\n                            width: '100%'\n                        }}\n                        variant='outlined'\n                        onClick={handleAddDate}\n                    >\n                        Dodaj\n                    </Button>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Stack\n                        spacing={1}\n                        sx={{\n                            border: '1px solid',\n                            borderColor: 'divider',\n                            borderRadius: 1,\n                            padding: 0.5,\n                            bgcolor: 'background.default',\n                            maxHeight: '200px',\n                            overflow: 'auto',\n                        }}>\n                        {copyDates.length === 0 && <Typography textAlign='center' component='p'>\n                            Brak dat\n                        </Typography>}\n                        {\n                            copyDates.map(({ color, from, to }, index) =>\n                                <Box\n                                    key={index}\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'space-between',\n                                        pl: '3px'\n                                    }}>\n                                    <Typography component='p' sx={{ color: color }}>\n                                        <>\n                                            {from.toLocaleString('pl')}&nbsp;-&nbsp;{to.toLocaleString('pl')}\n                                        </>\n                                    </Typography>\n                                    <IconButton\n                                        onClick={() => handleDeleteCopyDate(index)}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Box>\n                            )\n                        }\n                    </Stack>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                        <Select\n                            required\n                            labelId=\"wybierz-salę\"\n                            name=\"roomId\"\n                            value={data.roomId ?? props.reservation.room.id}\n                            label=\"Sala\"\n                            onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                        >\n                            {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </FormGridContainer>\n\n        </GenericModal >\n    );\n}","import { Box, Button, Stack, Typography } from \"@mui/material\";\nimport NfcIcon from '@mui/icons-material/Nfc';\nimport { styled } from \"@mui/system\";\nimport React from \"react\";\nimport CancelIcon from '@mui/icons-material/Cancel';\n\n\ninterface RfidFormProps {\n    headline: string,\n    bodyText: string,\n    onScan: (keyText: string) => Promise<boolean>,\n    onClose: () => void,\n}\n\nconst HiddenInput = styled('input')({\n    position: \"absolute\",\n    left: \"-1000px\",\n    color: \"transparent\"\n});\n\n\nexport default function RfidForm(props: RfidFormProps) {\n    const [text, setText] = React.useState<string>('');\n    const [color, setColor] = React.useState<string>('primary');\n    const input = React.useRef<HTMLInputElement | null>(null);\n\n    const handleSubmit = async (evt: React.FormEvent) => {\n        evt.preventDefault();\n        const success = await props.onScan(text);\n        if (success) {\n            setColor('success');\n            setTimeout(handleDecline, 2000);\n        } else {\n            setColor('error');\n        }\n        setText('');\n    }\n\n    const handleDecline = () => {\n        props.onClose();\n        setText('');\n        setColor('primary');\n    }\n\n    const focusOnInput = () => {\n        input.current && console.log(input.current.focus())\n    }\n\n    return (\n        <Stack\n            onClick={focusOnInput}\n            component=\"form\"\n            direction=\"column\"\n            spacing={4}\n            onSubmit={handleSubmit}\n        >\n            <NfcIcon\n                sx={{ fontSize: 140, alignSelf: \"center\" }}\n                color={color as any}\n            />\n            <HiddenInput\n                ref={input}\n                autoFocus\n                type=\"text\"\n                value={text}\n                onChange={(evt: any) => setText(evt.target.value)}\n            />\n            <Box component=\"span\" textAlign='center'>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    {props.headline}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" mt='5px'>\n                    {props.bodyText}\n                </Typography>\n            </Box>\n\n            <Button startIcon={<CancelIcon />}\n                onClick={handleDecline}\n                color=\"error\"\n            >\n                Zamknij\n            </Button>\n\n        </Stack>\n    );\n}","import { useReservations } from \"../../GenericReservationsTab/ReservationsContext\";\nimport React from \"react\";\nimport GenericModal from \"../../GenericModal\";\nimport RfidForm from \"../../RfidForm\";\n\n\ninterface PingKeyModalFormProps {\n    reservationId: number,\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport default function PingKeyModalForm(props: PingKeyModalFormProps) {\n    const { pingKeyForReservation } = useReservations();\n\n    const handleKeyScan = React.useCallback(\n        async (key: string) => pingKeyForReservation(props.reservationId, key)\n        , [props, pingKeyForReservation]);\n\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={props.onClose}\n            aria-label=\"Okno do edycji rezerwacji\"\n            sx={{ maxWidth: '400px' }}\n        >\n            <RfidForm\n                headline=\"Wczytaj klucz z tagiem NFC\"\n                bodyText='Przy pomocy czytnika, wczytaj wydawany klucz. Aby opuścić to okno, naciśnij \"Zamknij\"'\n                onScan={handleKeyScan}\n                onClose={props.onClose}\n            />\n        </GenericModal>\n    );\n}","import React from \"react\";\nimport { ListItemIcon, Menu, MenuItem, SxProps, Typography } from \"@mui/material\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport IconButton from '@mui/material/IconButton';\nimport { Box } from \"@mui/system\";\n\n\ninterface MoreVertMenuProps {\n    options: { action: () => void, icon?: React.ReactNode, label: string }[],\n    sx?: SxProps\n}\n\nexport default function MoreVertMenu(props: MoreVertMenuProps) {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n\n    const handleClick = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    }, []);\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <Box sx={props.sx}>\n            <IconButton\n                aria-label='more-options'\n                aria-controls=\"card-menu\"\n                aria-expanded={open ? 'true' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Menu\n                MenuListProps={{\n                    'aria-labelledby': 'more-options',\n                }}\n                anchorEl={anchorEl}\n                id=\"card-menu\"\n                open={open}\n                onClose={handleClose}\n                PaperProps={{\n                    sx: {\n                        minWidth: 200,\n                        maxWidth: '100%'\n                    }\n                }}\n            >\n                {\n                    props.options.map((opt, id) => <MenuItem\n                        key={id}\n                        onClick={() => {\n                            opt.action();\n                            handleClose();\n                        }}\n                    >\n                        <ListItemIcon>\n                            {opt.icon}\n                        </ListItemIcon>\n                        <Typography>{opt.label}</Typography>\n                    </MenuItem>)\n                }\n            </Menu>\n        </Box>\n    );\n}\n\n","import { Avatar, Link, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\nimport User from \"../../../../../models/User\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\n\n\n\ninterface UserItemProps {\n    user: User\n}\n\nexport default function UserItem({\n    user\n}: UserItemProps) {\n    return (\n        <ListItem button component={Link} href={dynamicPaths.toUser(user.id)}>\n            <ListItemAvatar>\n                <Avatar\n                    src={ImageService.getLink(user.image)}\n                    alt={`${user.name} ${user.surname}`}\n                />\n            </ListItemAvatar>\n            <ListItemText\n                primary={`${user.name} ${user.surname}`}\n                secondary={user.email}\n            />\n        </ListItem>\n    );\n}","import { Avatar, Link, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport Room from \"../../../../../models/Room\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\n\ninterface RoomItemProps {\n    room: Room\n}\n\nexport default function RoomItem({\n    room\n}: RoomItemProps) {\n    const { getRoomLink } = useResourceMap();\n\n    const roomLink = React.useMemo(() => getRoomLink(room.id), [\n        room.id,\n        getRoomLink\n    ]);\n\n    return (\n        <ListItem button component={Link} href={roomLink}>\n            <ListItemAvatar>\n                <Avatar\n                    src={ImageService.getLink(room.image)}\n                    alt={`zdjęcie sali ${room.name}`}\n                />\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={`Sala ${room.name}`}\n                secondary={room.roomType}\n            />\n        </ListItem>\n    );\n}","import Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\n\n\n\ninterface Props {\n    title: string | React.ReactNode\n    children: {\n        label: string,\n        value: string | React.ReactNode\n    }[]\n}\n\n\nexport default function DatesView(props: Props) {\n    return (\n        <div>\n            <Typography component=\"h3\" variant=\"subtitle1\">\n                {props.title}\n            </Typography>\n            <Typography\n                variant=\"body1\"\n                color='text.secondary'\n                textAlign='left'\n                component='div'\n            >\n                <Stack\n                    direction='row'\n                    alignItems='center'\n                    flexWrap='wrap'\n                    rowGap={1}\n                    columnGap={1}\n                >\n                    {\n                        props.children.map(({ label, value }) =>\n                            <div key={label} >\n                                {label}:&nbsp;<Chip label={value} />\n                            </div>\n                        )\n                    }\n                </Stack>\n            </Typography>\n        </div>\n    );\n}","import Reservation from '../../../../../models/Reservation';\nimport GenericModal from '../../components/GenericModal';\nimport Stack from '@mui/material/Stack';\nimport { Grid, IconButton, List, Typography } from '@mui/material';\nimport { displayDate } from '../../../../../shared/utils';\nimport React from 'react';\nimport DeleteModal from '../DeleteModal';\nimport { CopyForm, EditForm, PingNFCForm } from './ModalForms';\nimport { useReservations } from '../GenericReservationsTab/ReservationsContext';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CopyIcon from '@mui/icons-material/CopyAll';\nimport NFCIcon from '@mui/icons-material/Nfc';\nimport { Edit } from '@mui/icons-material';\nimport MoreVertMenu from '../../components/MoreVertMenu';\nimport UserItem from './UserItem';\nimport RoomItem from './RoomItem';\nimport useResolvedAccess from '../../hooks/useResolvedAccess';\nimport DatesView from './DatesView';\n\n\n\ninterface ReservationViewModalProps {\n    reservation: Reservation,\n    open: boolean,\n    onClose: () => void\n}\n\n\nfunction TextSection(props: {\n    title: string, children: React.ReactNode | React.ReactNode[]\n}) {\n    return (\n        <span>\n            <Typography component=\"h3\" variant=\"subtitle1\">\n                {props.title}\n            </Typography>\n            <Typography\n                variant=\"body1\"\n                color='text.secondary'\n                textAlign='justify'\n                component='p'\n            >\n                {props.children}\n            </Typography>\n        </span>\n    );\n}\n\n\n\n\n\nexport default function ReservationViewModal(props: ReservationViewModalProps) {\n    const { reservationsAdmin, keysAdmin, myId } = useResolvedAccess();\n    const { deleteReservation } = useReservations();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n    const [nfcModalOpen, setNFCModalOpen] = React.useState<boolean>(false);\n    const [copyModalOpen, setCopyModalOpen] = React.useState<boolean>(false);\n\n\n    const onDelete = React.useCallback(async () => {\n        if (await deleteReservation(props.reservation.id)) {\n            setDeleteModalOpen(false);\n        }\n    }, [\n        props.reservation.id,\n        deleteReservation,\n    ]);\n\n\n    const menuOptions = React.useMemo(() => {\n        const opt = [\n            {\n                icon: <CopyIcon color='primary' />,\n                label: 'Kopiuj',\n                action: () => setCopyModalOpen(true)\n            },\n        ];\n        keysAdmin && opt.unshift({\n            icon: <NFCIcon color='primary' />,\n            label: 'Odbij klucz',\n            action: () => setNFCModalOpen(true)\n        });\n\n        if (myId(props.reservation.user.id) || reservationsAdmin)\n            opt.push({\n                icon: <Edit color='primary' />,\n                label: 'Edytuj',\n                action: () => setEditModalOpen(true)\n            }, {\n                icon: <DeleteIcon color='error' />,\n                label: 'Usuń',\n                action: () => setDeleteModalOpen(true)\n            });\n\n        return opt;\n    }, [\n        myId,\n        keysAdmin,\n        props.reservation.user.id,\n        reservationsAdmin\n    ]);\n\n\n    return (\n        <>\n            {(myId(props.reservation.user.id) || reservationsAdmin) &&\n                <>\n                    <DeleteModal\n                        open={deleteModalOpen}\n                        onClose={() => setDeleteModalOpen(false)}\n                        objectName={props.reservation.title}\n                        onSuccess={onDelete}\n                    />\n\n                    <EditForm\n                        open={editModalOpen}\n                        onClose={() => setEditModalOpen(false)}\n                        reservation={props.reservation}\n                    />\n                </>\n            }\n            <CopyForm\n                open={copyModalOpen}\n                onClose={() => setCopyModalOpen(false)}\n                reservation={props.reservation}\n            />\n\n            {keysAdmin &&\n                <PingNFCForm\n                    open={nfcModalOpen}\n                    onClose={() => setNFCModalOpen(false)}\n                    reservationId={props.reservation.id}\n                />\n            }\n\n            <GenericModal\n                open={props.open}\n                onClose={props.onClose}\n                aria-label=\"Widok Rezerwacji\"\n                sx={{\n                    maxWidth: '800px',\n                    mt: '4vw'\n                }}\n            >\n                <Grid container spacing='15px'>\n\n                    <Grid item xs={10} sm={11}>\n                        <Stack spacing={4} alignItems='stretch'>\n                            <Typography component=\"h2\" variant=\"h4\">\n                                {props.reservation.title}\n                            </Typography>\n\n                            <DatesView title='Planowany czas:'>\n                                {[\n                                    {\n                                        label: 'Od',\n                                        value: displayDate(props.reservation.plannedStart)\n                                    }, {\n                                        label: 'do',\n                                        value: displayDate(props.reservation.plannedEnd)\n                                    },\n                                ]}\n                            </DatesView>\n                        </Stack>\n                    </Grid>\n\n                    <Grid item xs={2} sm={1}>\n                        <Stack\n                            alignItems='flex-end'\n                            direction='column'\n                            spacing={3}\n                        >\n                            <IconButton onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\n                            <MoreVertMenu options={menuOptions} sx={{ justifySelf: \"right\" }} />\n\n                            {keysAdmin &&\n                                <IconButton\n                                    onClick={() => setNFCModalOpen(true)}\n                                    title=\"Odbij klucz\"\n                                    aria-label=\"Odbij klucz\"\n                                    color='success'\n                                >\n                                    <NFCIcon />\n                                </IconButton>\n                            }\n                        </Stack>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Stack spacing={4} alignItems='stretch'>\n                            <DatesView title='Faktyczny czas rezerwacji:'>\n                                {[\n                                    {\n                                        label: 'Początek',\n                                        value: props.reservation.actualStart ?\n                                            displayDate(props.reservation.actualStart)\n                                            : 'Brak'\n                                    }, {\n                                        label: 'Koniec',\n                                        value: props.reservation.actualEnd ?\n                                            displayDate(props.reservation.actualEnd)\n                                            : 'Brak'\n                                    },\n                                ]}\n                            </DatesView>\n\n                            <TextSection title='Opis:'>\n                                {props.reservation.description}\n                            </TextSection>\n\n                            <List component='div'>\n                                <UserItem user={props.reservation.user} />\n                                <RoomItem room={props.reservation.room} />\n                            </List>\n\n                        </Stack>\n                    </Grid>\n\n                </Grid>\n            </GenericModal>\n        </>\n    );\n}\n\n\n","import React from \"react\";\nimport ReservationViewModal from \"../../../ReservationViewModal\";\nimport { useReservations } from \"..\";\nimport ModalContextValue from \"./ModalContextValue\";\n\n\nexport const ReservationModalViewContext = React.createContext<ModalContextValue>({\n    showReservation: (id: number) => { },\n    reservation: null\n});\n\n\ninterface ModalContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\nexport default function ModalContextProvider(props: ModalContextProviderProps) {\n    const { reservations } = useReservations();\n\n    const [modalOpen, setModalOpen] = React.useState<boolean>(true);\n    const [reservationId, setReservationId] = React.useState<number | null>(null);\n\n\n    const reservation = React.useMemo(() => {\n        if (reservationId) {\n            return reservations.find(({ id }) => id === reservationId);\n        }\n    }, [reservations, reservationId]) ?? null;\n\n\n    const showReservation = React.useCallback((id: number) => {\n        setReservationId(id);\n        setModalOpen(true);\n    }, []);\n\n\n    return (\n        <ReservationModalViewContext.Provider value={{ reservation, showReservation }}>\n            {props.children}\n\n            {reservation &&\n                <ReservationViewModal\n                    reservation={reservation}\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                />}\n        </ReservationModalViewContext.Provider>\n    );\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../../auth/useSession\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { AppURLParams } from \"../../../../../../services/interfaces\";\nimport ReservationService, { CreateReservationData, ReservationsQueryParams, UpdateReservationData } from \"../../../../../../services/ReservationService\";\nimport { useRoomContext } from \"../../../RoomPage/RoomContext\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport ReservationModalContext from \"./ModalContext\";\nimport useResourceMap from \"../../../../../../contexts/ResourceMapContext/useResourceMap\";\nimport ReservationsContextValue from \"./ReservationsContextValue\";\nimport paths from \"../../../../../../shared/path\";\nimport { UserViewParams } from \"../../../../../../services/UserService\";\nimport useTrigger from \"../../../hooks/useTrigger\";\nimport { fromLocaleDateTimeString } from \"../../../../../../shared/utils\";\n\n\nexport const reservationsContext: any = React.createContext(null);\n\n\ninterface ReservationsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\n\nexport default function ReservationsContextProvider(props: ReservationsContextProviderProps) {\n    const { queryParams, setQueryParams } = useQueryParams<ReservationsQueryParams>();\n    const notify = useNotification();\n    const { getRoomLink } = useResourceMap();\n    const roomContext = useRoomContext();\n    const { user } = useSession();\n    const urlParams = useParams<AppURLParams>();\n    const refresh = useTrigger(30_000);\n\n    const [reservations, setReservations] = React.useState<Reservation[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            let params = urlParams;\n            if (Object.keys(urlParams).length === 0 && window.location.pathname === paths.HOME) {\n                params = { userId: 'me' } as UserViewParams;\n            }\n            const resp = await ReservationService.getReservations(params, queryParams);\n\n            resp.pagination && setQueryParams((old) => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount,\n            }));\n            setReservations(resp.data as Reservation[]);\n        } catch (err: any) {\n            notify(err.description ?? err.message, 'error');\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        queryParams.currentPage,\n        queryParams.itemsOnPage,\n        queryParams.from,\n        queryParams.search,\n        setQueryParams,\n        urlParams,\n        notify,\n        user\n    ]);\n\n\n    // when loading function is recalculated - trigger the loading\n    React.useEffect(() => {\n        load();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        load,\n        refresh\n    ]);\n\n\n    const triggerReload = React.useCallback(() => setQueryParams(old => Object.assign({}, old)), [\n        setQueryParams\n    ]);\n\n\n    const pingKeyForReservation = React.useCallback(async (id: number, key: string) => {\n        if (!reservations) return;\n        try {\n            const reservation = reservations.find(item => item.id === id);\n            if (!reservation) return false;\n\n            const resp = await ReservationService.pingKey(id, key);\n\n            setReservations(old => {\n                old && old.forEach(item => {\n                    if (item.id !== id) return;\n\n                    if (item.actualStart) {\n                        item.actualEnd = new Date().toString();\n                    } else {\n                        item.actualStart = new Date().toString();\n                    }\n\n                });\n                return Object.assign([], old);\n            });\n\n            roomContext && roomContext.setOccupied(!reservation.room.occupied);\n            resp?.data && notify(resp.data.toString(), 'success');\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [\n        reservations,\n        roomContext,\n        notify,\n    ]);\n\n\n    const createReservation = React.useCallback(async (data: CreateReservationData) => {\n        try {\n            await ReservationService.createOne(data);\n\n            triggerReload();\n            notify(\"Rezerwacja utworzona prawidłowo!\", 'success');\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true\n    }, [\n        notify,\n        triggerReload,\n    ]);\n\n\n    const deleteReservation = React.useCallback(async (reservationId: number) => {\n        try {\n            await ReservationService.remove(reservationId);\n            setReservations(old => old && old.filter(({ id }) => id !== reservationId));\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [notify]);\n\n\n    const updateReservation = React.useCallback(async (id: number, data: UpdateReservationData) => {\n        try {\n            await ReservationService.update(id, data); //call to API\n\n            //update state\n            setReservations((old) => {\n                return old && old.map(item => {\n                    if (item.id === id) {\n                        ['plannedStart', 'plannedEnd']\n                            .forEach(field => {\n                                if (field in data) {\n                                    item[field] = fromLocaleDateTimeString(data[field]).toUTCString();\n                                }\n                            });\n                        ['description', 'title']\n                            .forEach(field => {\n                                if (field in data) {\n                                    item[field] = data[field];\n                                }\n                            });\n                    }\n                    return item;\n                });\n            });\n\n            // when reservation room is changing\n            if ('roomId' in data) {\n                data.roomId && notify(\n                    'Rezerwacja zaktualizowana i przeniesiona!',\n                    'success',\n                    () => <Redirect to={getRoomLink(Number(data.roomId))} />\n                )\n            } else {\n                notify('Rezerwacja zaktualizowana!', 'success');\n            }\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [getRoomLink, notify]);\n\n\n    // if (!reservations) return <Loading />;\n\n    return (\n        <reservationsContext.Provider value={{\n            reservations,\n            updateReservation,\n            deleteReservation,\n            createReservation,\n            pingKeyForReservation,\n        } as ReservationsContextValue}>\n            <ReservationModalContext>\n                {props.children}\n            </ReservationModalContext>\n        </reservationsContext.Provider>\n    );\n}","import Avatar from \"@mui/material/Avatar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { dynamicPaths } from \"../../../../../../shared/path\";\nimport ImageService from \"../../../../../../services/ImageService\";\nimport { displayDate } from \"../../../../../../shared/utils\";\nimport ReservationService from \"../../../../../../services/ReservationService\";\nimport { Link } from \"@mui/material\";\nimport React from \"react\";\nimport Image from \"../../../../../../models/Image\";\n\n\ninterface ReservationListItemProps {\n    data: Reservation,\n    onClick: () => void\n}\n\n// memoize avatar\nconst MemAvatar = React.memo((props: { img: Image }) => <Avatar alt=\"użytkownik\" src={ImageService.getLink(props.img)} />)\n\n\nexport default function ReservationListItem({\n    data, onClick\n}: ReservationListItemProps) {\n    const { message, color } = ReservationService.resolveStatus(data);\n\n    return (\n        <ListItem\n            component='li'\n            button\n            sx={{\n                mb: '2px',\n                bgcolor: color,\n                '&:hover, &:focus': {\n                    bgcolor: color,\n                    filter: 'brightness(97%)',\n                }\n            }}\n            onClick={onClick}\n        >\n            <ListItemAvatar>\n                <Link href={dynamicPaths.toUser(data.user.id)}>\n                    <MemAvatar img={data.user.image} />\n                </Link>\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={data.title}\n                secondary={displayDate(data.actualStart ?? data.plannedStart) + ' - ' + message}\n            />\n        </ListItem>\n    )\n}","import { List, ListItem, ListItemText } from \"@mui/material\";\nimport useReservationModalContext from \"../ReservationsContext/ModalContext/useReservationModalContext\";\nimport { useReservations } from \"../ReservationsContext\";\nimport ReservationListItem from \"./ReservationsListItem\";\nimport React from \"react\";\nimport Loading from \"../../../../../../shared/components/Loading\";\n\n\n\nexport default function ReservationsList() {\n    const { showReservation } = useReservationModalContext();\n    const { reservations } = useReservations();\n\n\n    const renderedList = React.useMemo(() =>\n        reservations?.map((item) => <ReservationListItem\n            key={item.id}\n            data={item}\n            onClick={() => showReservation(item.id)}\n        />)\n        , [\n            reservations,\n            showReservation\n        ]);\n\n    if (!reservations) return <Loading />;\n\n    return (\n        <List aria-label='lista rezerwacji'>\n            {reservations.length === 0 ?\n                <ListItem>\n                    <ListItemText primary='Brak rezerwacji spełniających kryteria.' />\n                </ListItem> :\n                renderedList\n            }\n        </List>\n    );\n}\n\n\n","import React from \"react\";\nimport { ReservationModalViewContext } from \"./ModalContextProvider\";\nimport ModalContextValue from \"./ModalContextValue\";\n\n\nexport default function useReservationModalContext() {\n    return React.useContext(ReservationModalViewContext) as ModalContextValue;\n}","import FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport ReservationService, { CreateReservationData, UpdateReservationData } from \"../../../../../services/ReservationService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../DateTimePicker\";\n\n\n\ninterface CreateReservationFormProps {\n    roomId?: number\n    onCancel: () => void\n}\n\n\nexport default function CreateReservationForm(props: CreateReservationFormProps) {\n    const notify = useNotification();\n    const { allRooms } = useResourceMap();\n\n    const [dates, setDates] = React.useState({\n        start: new Date(),\n        end: (new Date(Date.now() + 3600_000))\n    });\n\n    const [data, setData] = React.useState<CreateReservationData>({\n        title: '',\n        description: '',\n        plannedStart: '',\n        plannedEnd: '',\n        roomId: props.roomId ?? 0\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        data.plannedStart = dates.start.toLocaleString('pl');\n        data.plannedEnd = dates.end.toLocaleString('pl');\n\n        try {\n            await ReservationService.createOne(data);\n            notify(\"Rezerwacja utworzona!\", 'success');\n            props.onCancel()\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n        props,\n        dates.start,\n        dates.end\n    ]);\n\n\n    const setDate = React.useCallback((key: keyof UpdateReservationData, dateTime: Date) => {\n        setDates(old => ({\n            ...old,\n            [key]: dateTime,\n        }));\n    }, []);\n\n\n    return (\n        <FormGridContainer\n            title='Tworzenie rezerwacji'\n            subtitle=\"Stwórz rezerwację w wybranym przez siebie pokoju.\"\n            onSubmit={handleSubmit}\n            onCancel={props.onCancel}\n        >\n            <Grid item xs={12}>\n                <TextField\n                    title=\"Tytuł rezerwacji\"\n                    inputProps={{ title: \"Tytuł rezerwacji\" }}\n                    autoFocus\n                    required\n                    fullWidth\n                    // multiline\n                    maxRows={4}\n                    label=\"Tytuł\"\n                    id=\"outlined-multiline-flexible\"\n                    name='title'\n                    value={data.title}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    required\n                    fullWidth\n                    multiline\n                    maxRows={20}\n                    label=\"Opis\"\n                    id=\"outlined-multiline-flexible\"\n                    name='description'\n                    value={data.description}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <DateTimePicker\n                    label=\"Początek\"\n                    value={dates.start}\n                    onChange={(value) => setDate('start', value)}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <DateTimePicker\n                    label=\"Koniec\"\n                    value={dates.end}\n                    onChange={(value) => setDate('end', value)}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                    <Select\n                        required\n                        labelId=\"wybierz-budynek\"\n                        name=\"buildingId\"\n                        value={data.roomId}\n                        label=\"Budynek\"\n                        onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                    >\n                        {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n        </FormGridContainer>\n    );\n}","import React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport CreateReservationForm from \"./CreateReservationForm\";\n\n\ninterface CreateReservationModalProps {\n    open: boolean,\n    onClose: () => void,\n    roomId?: number\n}\n\nfunction CreateReservationModal(props: CreateReservationModalProps) {\n    return (\n        <GenericModal\n            open={props.open}\n            aria-label='Okno do tworzenia rezerwacji'\n            onClose={props.onClose}\n        >\n            <CreateReservationForm\n                roomId={props.roomId}\n                onCancel={props.onClose}\n            />\n\n        </GenericModal>\n    );\n}\n\nexport default React.memo(CreateReservationModal);","import MobileDatePicker from \"@mui/lab/MobileDatePicker\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { ReservationsQueryParams } from \"../../../../../services/ReservationService\";\nimport SelectButtonGroup from \"../../components/SelectButtonGroup\";\nimport LazyInput from \"../../components/LazyInput\";\nimport { isDate } from \"../../../../../shared/utils\";\nimport AddIcon from '@mui/icons-material/Add';\nimport CreateReservationModal from \"../CreateReservationModal\";\nimport { useParams } from \"react-router-dom\";\nimport { RoomViewParams } from \"../../../../../services/RoomService\";\nimport { BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport { AddressViewParams } from \"../../../../../services/AddressService\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\nconst buttons = [\n    { name: 'Dziś', value: 'today' },\n    { name: 'Ten tydzień', value: 'this week' },\n    { name: 'Od wczoraj', value: 'yesterday' },\n];\n\n\nfunction ReservationTabBar() {\n    const { reservationsAbility } = useResolvedAccess();\n    const { setQueryParams, queryParams } = useQueryParams<ReservationsQueryParams>();\n    const urlParams = useParams<RoomViewParams | BuildingViewParams | AddressViewParams>();\n\n    const [createReservationModalOpen, setCreateReservationModalOpen] = React.useState<boolean>(false);\n    const [customDate, setCustomDate] = React.useState(new Date(isDate(queryParams.from) ? queryParams.from ?? 'xxx' : Date.now()));\n\n    const handleButtonChange = React.useCallback((value: string) => {\n        setQueryParams((old: ReservationsQueryParams) => ({ ...old, from: value }));\n    }, [setQueryParams]);\n\n\n    const handleSubmitCustomDate = React.useCallback((evt: React.FormEvent) => {\n        evt.preventDefault();\n        setQueryParams((old: ReservationsQueryParams) => ({ ...old, from: customDate.toISOString() }))\n    }, [customDate, setQueryParams])\n\n\n    const handleSearchFieldChange = React.useCallback((evt) => {\n        setQueryParams(old => ({ ...old, search: evt.target.value }));\n    }, [setQueryParams]);\n\n\n    return (\n        <>\n            {reservationsAbility &&\n                <CreateReservationModal\n                    open={createReservationModalOpen}\n                    onClose={() => setCreateReservationModalOpen(false)}\n                    roomId={'roomId' in urlParams ? Number(urlParams.roomId) : undefined}\n                />\n            }\n\n            <Grid container\n                component='form'\n                onSubmit={handleSubmitCustomDate}\n                spacing={2}\n                alignItems='center'\n            >\n                <Grid item xs={12} md={12}>\n                    <SelectButtonGroup\n                        onChange={handleButtonChange}\n                        buttons={buttons}\n                        value={isDate(queryParams.from) ? '' : queryParams?.from ?? buttons[0].value}\n                    />\n                    <Box display='inline-flex' >\n                        <MobileDatePicker\n                            label=\"Od daty\"\n                            inputFormat=\"yyyy-MM-dd\"\n                            value={customDate}\n                            onChange={(value: Date | null) => value && setCustomDate(value)}\n                            renderInput={(params) => <TextField {...params} size='small' />}\n                        />\n                        <Button\n                            variant={queryParams?.from === customDate.toISOString() ? 'contained' : 'outlined'}\n                            type='submit'\n                            sx={{ ml: 1 }}\n                        >\n                            OK\n                        </Button>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <LazyInput\n                        name=\"search\"\n                        label='wyszukaj'\n                        value={queryParams.search ?? ''}\n                        onChange={handleSearchFieldChange}\n                    />\n                </Grid>\n\n                {reservationsAbility &&\n                    <Grid item xs={12}>\n                        <Button\n                            startIcon={<AddIcon />}\n                            onClick={() => setCreateReservationModalOpen(true)}\n                        >\n                            Stwórz rezerwację\n                        </Button>\n                    </Grid>\n                }\n            </Grid>\n        </>\n    );\n}\n\nexport default React.memo(ReservationTabBar);","import { Stack } from \"@mui/material\";\nimport { QueryParamsContext } from \"../../../../../contexts/QueryParamsContext\";\nimport ReservationsContext from \"./ReservationsContext\";\nimport { ReservationsQueryParams } from \"../../../../../services/ReservationService\";\nimport ListPagination from \"../../components/ListPagination\";\nimport ReservationsList from \"./ReservationsList\";\nimport ReservationTabBar from \"./ReservationTabBar\";\nimport React from \"react\";\n\n\n\nfunction GenericReservationsTab() {\n    return (\n        <QueryParamsContext name='reservations-query-params' default={{\n            itemsOnPage: 5,\n            currentPage: 1,\n            from: 'today'\n        } as ReservationsQueryParams}>\n            <ReservationsContext>\n                <Stack rowGap={3}>\n                    <ReservationTabBar />\n                    <ReservationsList />\n                    <ListPagination />\n                </Stack>\n            </ReservationsContext>\n        </QueryParamsContext>\n    );\n}\n\nexport default React.memo(GenericReservationsTab);","import { styled, SxProps } from \"@mui/system\";\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Address from \"../../../../../models/Address\";\n\n\n\ninterface MapProps {\n    address: Address,\n    sx?: SxProps\n}\n\nconst StyledIframe = styled('iframe')({\n    width: '100%',\n    height: '50vh',\n    maxHeight: '400px',\n    minHeight: '300px'\n});\n\n\nexport default function Map({ address, sx }: MapProps) {\n\n    const url = React.useMemo(() => {\n        const { street, number, town, country } = address;\n\n        const base = new URL('https://maps.google.com/maps');\n        const params = new URLSearchParams({\n            q: `${street + \" \" + number + \" \" + town + \" \" + country}`,\n            ie: 'UTF8',\n            z: '14',\n            iwloc: '',\n            output: 'embed'\n        });\n        base.search = params.toString();\n\n        return base.toString();\n    }, [address]);\n\n    return (\n        <Box>\n            <StyledIframe\n                src={url}\n                frameBorder=\"0\"\n                sx={{ ...sx }}\n            />\n        </Box>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport { useAddress } from \"../AddressContext\";\nimport { UpdateAddressParams } from \"../../../../../services/AddressService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\n\ninterface AddressEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\n\nexport default function AddressEditForm({\n    open,\n    onClose\n}: AddressEditFormProps) {\n    const { address, updateAddress } = useAddress();\n\n    const [data, setData] = React.useState<UpdateAddressParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old: UpdateAddressParams) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateAddress(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateAddress,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do edycji budynku\"\n        >\n            <FormGridContainer\n                title='Edycja adresu'\n                subtitle=\"Zmień właściwości adresu i zatwierdź zmiany.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"country\"\n                        label=\"Kraj\"\n                        name=\"country\"\n                        value={data.country ?? address.country}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        autoFocus\n                        required\n                        fullWidth\n                        id=\"town\"\n                        label=\"Miasto\"\n                        name=\"town\"\n                        value={data.town ?? address.town}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"postalCode\"\n                        label=\"Kod pocztowy\"\n                        name=\"postalCode\"\n                        value={data.postalCode ?? address.postalCode}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={8}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"street\"\n                        label=\"Ulica\"\n                        name=\"street\"\n                        value={data.street ?? address.street}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"number\"\n                        label=\"Number\"\n                        name=\"number\"\n                        value={data.number ?? address.number}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport { BuildingCreateParams } from \"../../../../../services/BuildingService\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport { timeFormat } from \"../../../../../shared/utils\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateBuildingFormProps {\n    open: boolean,\n    onClose: () => void,\n    handleCreateBuilding: (data: BuildingCreateParams) => Promise<boolean>\n}\n\n\nexport default function CreateBuildingForm({\n    open,\n    onClose,\n    handleCreateBuilding,\n}: CreateBuildingFormProps) {\n    const [data, setData] = React.useState<BuildingCreateParams>({\n        name: '',\n        openTime: (new Date(0, 0, 0, 7, 0)).toString(),\n        closeTime: (new Date(0, 0, 0, 21, 0)).toString()\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        const success = await handleCreateBuilding({\n            ...data,\n            closeTime: timeFormat.format(new Date(data.closeTime)),\n            openTime: timeFormat.format(new Date(data.openTime))\n        });\n\n        if (success) {\n            onClose();\n        }\n\n    }, [\n        data,\n        onClose,\n        handleCreateBuilding,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do tworzenia budynku\"\n        >\n            <FormGridContainer\n                title='Dodaj nowy budynek!'\n                subtitle=\"Wypełnij dane nowego budynku i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nazwa\"\n                        name=\"name\"\n                        autoFocus\n                        value={data.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6} >\n                    <MobileTimePicker\n                        label=\"Godzina otwarcia\"\n                        inputFormat=\"HH:mm\"\n                        value={data.openTime}\n                        onChange={(value: any) => setData(old => ({ ...old, openTime: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <MobileTimePicker\n                        label=\"Godzina zamknięcia\"\n                        inputFormat=\"HH:mm\"\n                        value={data.closeTime}\n                        onChange={(value: any) => setData(old => ({ ...old, closeTime: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport AddressService, { CreateAddressParams } from \"../../../../../services/AddressService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateAddressFormProps {\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport default function CreateAddressForm({\n    open,\n    onClose,\n}: CreateAddressFormProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n\n    const [data, setData] = React.useState<CreateAddressParams>({\n        country: 'Polska',\n        town: '',\n        street: '',\n        number: '',\n        postalCode: '',\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old: CreateAddressParams) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        try {\n            await AddressService.create(data);\n            reloadMap();\n            notify('Adres został dodany', 'success');\n            onClose();\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n        onClose,\n        reloadMap,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do tworzenia adresu\"\n        >\n            <FormGridContainer\n                title='Dodaj nowy adres!'\n                subtitle=\"Wypełnij dane nowego adresu i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"country\"\n                        label=\"Kraj\"\n                        name=\"country\"\n                        value={data.country}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"town\"\n                        label=\"Miasto\"\n                        name=\"town\"\n                        autoFocus\n                        value={data.town}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"postalCode\"\n                        label=\"Kod pocztowy\"\n                        name=\"postalCode\"\n                        value={data.postalCode}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={8}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"street\"\n                        label=\"Ulica\"\n                        name=\"street\"\n                        value={data.street}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"number\"\n                        label=\"Number\"\n                        name=\"number\"\n                        value={data.number}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import { Card, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport Map from \"./Map\";\nimport { useAddress } from \"../AddressContext\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { AddressEditForm } from \"../Forms\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\n\n\nexport default function AddressCard() {\n    const { premisesAdmin } = useResolvedAccess();\n    const { address, deleteAddress } = useAddress();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);\n    const [editModalOpen, setEditModalOpen] = React.useState(false);\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n    return (\n        <>\n            {premisesAdmin &&\n                <>\n                    <DeleteModal\n                        objectName={`${address.street} ${address.number}`}\n                        open={deleteModalOpen}\n                        onClose={() => setDeleteModalOpen(false)}\n                        onSuccess={deleteAddress}\n                    />\n\n                    <AddressEditForm\n                        open={editModalOpen}\n                        onClose={() => setEditModalOpen(false)}\n                    />\n                </>\n            }\n            <Card elevation={0}>\n                <CardHeader\n                    action={premisesAdmin && <MoreVertMenu options={options} />}\n                    title={<>{address.country}, {address.town}</>}\n                    subheader={<>{address.street} {address.number}</>}\n                />\n                <CardMedia component=\"div\">\n                    <Map address={address} />\n                </CardMedia>\n                <CardContent>\n                    <Typography component='p'>\n                        ul. {address.street} {address.number}<br />\n                        {address.postalCode} {address.town}, <br />\n                        {address.country}\n                    </Typography>\n                    <br />\n                    <DatesFooter model={address} />\n                </CardContent>\n            </Card>\n        </>\n    )\n}","import { List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\ninterface ScrollableListProps {\n    onAddItem: () => void,\n    children: React.ReactNode[] | React.ReactNode,\n}\n\n\nexport default function ScrollableList(props: ScrollableListProps) {\n    const { premisesAdmin } = useResolvedAccess();\n\n    return (\n        <Box>\n            <List sx={{\n                minHeight: '160px',\n                maxHeight: '400px'\n            }}>\n                {premisesAdmin &&\n                    <ListItem button onClick={props.onAddItem}>\n                        <ListItemIcon >\n                            <AddCircleIcon color='primary' />\n                        </ListItemIcon>\n                        <ListItemText primary='Dodaj element' />\n                    </ListItem>\n                }\n                {props.children}\n            </List>\n        </Box>\n    )\n}\n\n\n","import { Link, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport LinkIcon from '@mui/icons-material/Link';\nimport React from \"react\";\n\n\ninterface ScrollableListItemProps {\n    primary: string | React.ReactNode,\n    link: string,\n}\n\n\nfunction ScrollableListItem(props: ScrollableListItemProps) {\n    return (\n        <ListItem button\n            component={Link}\n            href={props.link}\n            sx={{ py: '2px' }}\n        >\n            <ListItemIcon>\n                <LinkIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.primary} />\n        </ListItem>\n    );\n}\n\nexport default React.memo(ScrollableListItem);","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport Building from \"../../../../../models/Building\";\nimport { AddressViewParams } from \"../../../../../services/AddressService\";\nimport BuildingService, { BuildingCreateParams } from \"../../../../../services/BuildingService\";\nimport ScrollableList, { ScrollableListItem } from \"../../components/ScrollableList\";\nimport SmallCard from \"../../components/SmallCard\";\nimport { useAddress } from \"../AddressContext\";\nimport { CreateBuildingForm } from \"../Forms\";\n\n\nfunction BuildingsList() {\n    const { getBuildingsInAddress } = useAddress();\n    const { reloadMap } = useResourceMap();\n    const notify = useNotification();\n\n    const urlParams = useParams() as AddressViewParams;\n\n    const [createBuildingModalOpen, setCreateBuildingModalOpen] = React.useState<boolean>(false);\n    const [buildings, setBuildings] = React.useState<Building[]>();\n\n\n    const load = React.useCallback(async () => {\n        const buildings = await getBuildingsInAddress();\n        setBuildings(buildings);\n    }, [getBuildingsInAddress])\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const createBuilding = React.useCallback(async (data: BuildingCreateParams) => {\n        try {\n            await BuildingService.create(urlParams, data);\n            load();\n            reloadMap();\n            notify('Nowa sala utworzona!', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        load,\n        urlParams,\n    ]);\n\n\n    const renderedBuildings = React.useMemo(() => {\n        return buildings?.map(item => <ScrollableListItem key={item.id}\n            primary={`Budynek ${item.name}`}\n            link={`./${item.address}/buildings/${item.id}`}\n        />)\n    }, [buildings]);\n\n\n    return (\n        <>\n            <CreateBuildingForm\n                open={createBuildingModalOpen}\n                onClose={() => setCreateBuildingModalOpen(false)}\n                handleCreateBuilding={createBuilding}\n            />\n\n            <SmallCard title='Budynki pod adresem'>\n                <ScrollableList\n                    onAddItem={() => setCreateBuildingModalOpen(true)}\n                >\n                    {renderedBuildings}\n                </ScrollableList>\n            </SmallCard>\n            <br />\n        </>\n    );\n}\n\nexport default React.memo(BuildingsList);","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport Loading from \"../../../../shared/components/Loading\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport AddressContext from \"./AddressContext\";\nimport AddressCard from \"./components/AddressCard\";\nimport BuildingsList from \"./components/BuildingsList\";\n\nconst LazyAddressCharts = React.lazy(() => import(\"./components/AddressCharts\"));\nconst AddressCharts = () => <React.Suspense fallback={<Loading />}>\n    <LazyAddressCharts />\n</React.Suspense>\n\n\n\nfunction AddressPage() {\n    const { logsAdmin, statsViewer } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <AddressCharts /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        logsAdmin,\n        statsViewer\n    ]);\n\n\n    return (\n        <AddressContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item container spacing={2} alignContent='flex-start' xs={12} md={5} lg={4}>\n                    <Grid item xs={12}>\n                        <AddressCard />\n                    </Grid>\n                    <Grid item xs={12} >\n                        <BuildingsList />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </AddressContext>\n    );\n}\n\nexport default React.memo(AddressPage);","import { Button, Grid } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\nimport React from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { Redirect, useLocation, useParams } from \"react-router-dom\";\nimport Image from \"../../../../models/Image\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport { UserViewParams } from \"../../../../services/UserService\";\nimport { BuildingViewParams } from \"../../../../services/BuildingService\";\nimport { RoomViewParams } from \"../../../../services/RoomService\";\nimport ImageService from \"../../../../services/ImageService\";\n\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst StyledImage = styled('img')({\n    width: \"fill-available\",\n    maxHeight: '350px'\n});\n\ninterface ImageUploadFieldProps {\n    image?: Image,\n    onUpload?: () => void;\n    onDelete?: () => void;\n}\n\nexport default function ImageUploadField(props: ImageUploadFieldProps) {\n    const notify = useNotification();\n    const location = useLocation();\n    const urlParams = useParams<UserViewParams | BuildingViewParams | RoomViewParams>();\n    const [uploadedImage, setUploadedImage] = React.useState<Blob>();\n\n\n    const handleSubmit = React.useCallback(async (evt: React.FormEvent) => {\n        evt.preventDefault();\n        if (!uploadedImage) {\n            notify(\"Najpierw załaduj nowy obraz\", \"warning\");\n            return;\n        }\n        try {\n            await ImageService.upload(urlParams, uploadedImage);\n            props.onUpload && props.onUpload();\n            notify(\"Obraz został zmieniony\", 'success',\n                () => <Redirect to={location.pathname} /> // rerender the current page\n            );\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        uploadedImage,\n        props,\n        notify,\n        location,\n        urlParams,\n    ]);\n\n\n    const handleImageUpload = React.useCallback((evt: any) => {\n        if (evt.target.files && evt.target.files[0]) {\n            const img = evt.target.files[0];\n            setUploadedImage(img);\n        }\n    }, []);\n\n\n    const handleRemoveImgae = React.useCallback(async () => {\n        try {\n            await ImageService.remove(urlParams);\n            props.onDelete && props.onDelete();\n            notify(\"Przywrócono domyślny obraz, załaduj ponownie aby zobaczyć rezultat.\", \"success\",\n                () => <Redirect to={location.pathname} /> // rerender the current page\n            );\n\n        } catch (err: any) {\n            notify(err.description, \"error\");\n        }\n    }, [\n        props,\n        notify,\n        location,\n        urlParams,\n    ]);\n\n\n    return (\n        <Grid container component=\"form\"\n            onSubmit={handleSubmit}\n            direction=\"row\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <Grid item xs={12} sm={9}>\n                <StyledImage\n                    src={uploadedImage ? URL.createObjectURL(uploadedImage) : ImageService.getLink(props.image)}\n                    alt='nowy obraz'\n                />\n            </Grid>\n            <Grid item xs={12} sm={3} sx={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n            }}>\n                <label htmlFor=\"upload-obrazu\">\n                    <Input\n                        accept=\"*.(jpg|png)\"\n                        id=\"upload-obrazu\"\n                        type=\"file\"\n                        onChange={handleImageUpload}\n                    />\n                    <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        component=\"span\">\n                        Wybierz zdjęcie\n                    </Button>\n                </label>\n\n                <Button color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={handleRemoveImgae}\n                >\n                    Usuń\n                </Button>\n\n                <Button\n                    type=\"submit\"\n                    color=\"success\"\n                    startIcon={<SaveIcon />}\n                >\n                    Zapisz\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}","import Model from './Model';\nimport Image from './Image';\nimport Building from './Building';\n\nexport enum RoomTypes {\n    LABORATORY = \"Sala laboratoryjna\",\n    CONFERENCE = \"Sala konferencyjna\",\n    LECTURE = \"Sala wykładowa\"\n}\n\nexport type RoomType = RoomTypes.LABORATORY | RoomTypes.CONFERENCE | RoomTypes.LECTURE;\n\ninterface BaseRoom extends Model {\n    name: string,\n    image: Image,\n    roomType: RoomType,\n    seatsCount: number,\n    floor: number,\n    blocked: boolean,\n    occupied: boolean,\n    RFIDTag: null | string\n}\n\nexport default interface Room extends BaseRoom {\n    building: number\n}\n\nexport interface DetailedRoom extends BaseRoom {\n    building: Building\n}","import Grid from \"@mui/material/Grid\";\nimport { SelectChangeEvent } from \"@mui/material/Select/SelectInput\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { BuildingUpdateParams } from \"../../../../../services/BuildingService\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useBuilding } from \"../BuildingContext\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport { timeFormat } from \"../../../../../shared/utils\";\nimport ImageUploadField from \"../../components/ImageUploadField\";\nimport Divider from \"@mui/material/Divider\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\n\ninterface BuildingEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\n\nfunction timeToDate(value: string) {\n    const [h, m] = value.split(':');\n    return new Date(0, 0, 0, Number(h), Number(m));\n}\n\n\nexport default function BuildingEditForm({\n    open,\n    onClose,\n}: BuildingEditFormProps) {\n    const { allAddresses } = useResourceMap();\n    const { updateBuilding, building } = useBuilding();\n\n    const [data, setData] = React.useState<BuildingUpdateParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n\n        setData((old: BuildingUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleTime = React.useCallback((field: 'closeTime' | 'openTime', value: Date) => {\n        setData(old => {\n            old[field] = timeFormat.format(value);\n            return Object.assign({}, old);\n        });\n    }, [])\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateBuilding(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateBuilding,\n    ]);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<string | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'addressId') value = Number(value);\n\n        event.target && setData((old: BuildingUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno edycji budynku\"\n        >\n            <Stack spacing={3}>\n\n                <ImageUploadField image={building.image} />\n                <Divider />\n\n                <FormGridContainer\n                    title='Edycja budynku'\n                    subtitle=\"Zmień właściwości budynku i zatwierdź zmiany.\"\n                    onSubmit={handleSubmit}\n                    onCancel={onClose}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nazwa\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? building.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6} >\n                        <MobileTimePicker\n                            label=\"Godzina otwarcia\"\n                            inputFormat=\"HH:mm\"\n                            value={timeToDate(data.openTime ?? building.openTime)}\n                            onChange={(value: any) => handleTime('openTime', value)}\n                            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <MobileTimePicker\n                            label=\"Godzina zamknięcia\"\n                            inputFormat=\"HH:mm\"\n                            value={timeToDate(data.closeTime ?? building.closeTime)}\n                            onChange={(value: any) => handleTime('closeTime', value)}\n                            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"wybierz-adres\">Adres</InputLabel>\n                            <Select\n                                labelId=\"wybierz-adres\"\n                                name=\"addressId\"\n                                value={data.addressId ?? building.address.id}\n                                label=\"Adres\"\n                                onChange={handleSelectChange}\n                            >\n                                {allAddresses.map(({ name, id }) => <MenuItem key={name} value={id} >{name} </MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    );\n}","import FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { RoomType, RoomTypes } from \"../../../../../models/Room\";\nimport { CreateRoomParams } from \"../../../../../services/RoomService\";\nimport GenericModal from \"../../components/GenericModal\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateRoomFormProps {\n    open: boolean,\n    onClose: () => void,\n    handleCreateRoom: (data: CreateRoomParams) => Promise<boolean>\n}\n\n\nexport default function CreateRoomForm({\n    open,\n    onClose,\n    handleCreateRoom,\n}: CreateRoomFormProps) {\n\n    const [data, setData] = React.useState<CreateRoomParams>({\n        name: '',\n        roomType: RoomTypes.LECTURE,\n        seatsCount: 50,\n        floor: 0\n    });\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<RoomType | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'buildingId') value = Number(value);\n\n        event.target && setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await handleCreateRoom(data)) {\n            onClose();\n        }\n\n    }, [\n        data,\n        handleCreateRoom,\n        onClose,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno edycji budynku\"\n        >\n            <FormGridContainer\n                title='Dodaj nową salę'\n                subtitle=\"Wypełnij dane nowej sali i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nazwa\"\n                        name=\"name\"\n                        autoFocus\n                        value={data.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"room-type\">Typ Sali</InputLabel>\n                        <Select\n                            required\n                            labelId=\"room-type\"\n                            id=\"roomType\"\n                            value={data.roomType}\n                            name=\"roomType\"\n                            label=\"Typ Sali\"\n                            onChange={handleSelectChange}\n                        >\n                            {Object.values(RoomTypes).map(val => <MenuItem key={val} value={val}>{val}</MenuItem>)}\n\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={6} >\n                    <TextField\n                        required\n                        name=\"seatsCount\"\n                        label=\"Ilość miejsc\"\n                        type=\"number\"\n                        id=\"seatsCount\"\n                        value={data.seatsCount}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        name=\"floor\"\n                        label=\"Piętro\"\n                        type=\"number\"\n                        id=\"floor\"\n                        value={data.floor}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal >\n    );\n}","\n\n\nexport enum FavType {\n    Building = 'building-item',\n    Room = 'room-item'\n}\n\n\ninterface FavouriteItem {\n    id: number,\n    name: string,\n    type: FavType,\n}\n\nexport interface FavouriteBuilding extends FavouriteItem {\n    addressId: number,\n}\n\nexport interface FavouriteRoom extends FavouriteBuilding {\n    buildingId: number,\n}\n\n\nexport default interface Metadata {\n    notes?: string,\n    favourites?: (FavouriteBuilding | FavouriteRoom)[]\n}\n","import StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport IconButton from '@mui/material/IconButton';\nimport React from 'react';\nimport { FavouriteBuilding, FavouriteRoom } from '../../../../models/Metadata';\nimport MetadataService from '../../../../services/MetadataService';\n\n\n\ninterface FavouriteButtonProps {\n    data: FavouriteBuilding | FavouriteRoom\n}\n\n\nexport default function FavouriteButton(props: FavouriteButtonProps) {\n    const [marked, setMarked] = React.useState(false);\n\n    React.useEffect(() => {\n        setMarked(MetadataService.isFavourite(props.data));\n    }, [props.data]);\n\n\n    const addToFavourites = React.useCallback(() => {\n        if (marked) {\n            MetadataService.removeFavourite(props.data);\n        } else {\n            MetadataService.addFavourite(props.data);\n        }\n\n        setMarked(old => !old);\n    }, [\n        marked,\n        props.data,\n    ]);\n\n\n    return (\n        <IconButton sx={{display:'inline'}} onClick={addToFavourites} color='warning'>\n            {marked ? <StarIcon /> : <StarBorderIcon />}\n        </IconButton>\n    );\n}","import { Card, CardContent, CardHeader, CardMedia, Link } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport React from \"react\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport { useBuilding } from \"../BuildingContext\";\nimport { BuildingEditForm } from \"../Forms\";\nimport FavouriteButton from \"../../components/FavouriteButton\";\nimport { FavType } from \"../../../../../models/Metadata\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\n\n\nexport default function BuildingView() {\n    const { premisesAdmin } = useResolvedAccess();\n    const { building, deleteBuilding } = useBuilding();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    if (!Boolean(building)) return null;\n\n    return (\n        <>\n            {premisesAdmin &&\n                <>\n                    <DeleteModal\n                        objectName={building.name}\n                        open={deleteModalOpen}\n                        onClose={() => setDeleteModalOpen(false)}\n                        onSuccess={deleteBuilding}\n                    />\n\n                    <BuildingEditForm\n                        open={editModalOpen}\n                        onClose={() => setEditModalOpen(false)}\n                    />\n                </>\n            }\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={\n                        premisesAdmin &&\n                        <MoreVertMenu options={options} />\n                    }\n                    title={\n                        <>\n                            Budynek {building.name}\n                            <FavouriteButton data={{\n                                id: building.id,\n                                name: building.name,\n                                type: FavType.Building,\n                                addressId: building.address.id,\n                            }} />\n                        </>\n                    }\n                    subheader={<>{building.openTime} - {building.closeTime}</>}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"350\"\n                    image={ImageService.getLink(building.image)}\n                    alt={building.name}\n                />\n                <CardContent>\n                    <Link href={dynamicPaths.toAddress(building.address.id)}>\n                        {building.address.town},&nbsp;{building.address.street}&nbsp;{building.address.number}\n                    </Link>\n                    <br />\n                    <DatesFooter model={building} />\n                </CardContent>\n            </Card>\n        </>\n    );\n}","import React from \"react\";\nimport Room from \"../../../../../models/Room\";\nimport ScrollableList, { ScrollableListItem } from \"../../components/ScrollableList\";\nimport { useBuilding } from \"../BuildingContext\";\nimport { CreateRoomForm } from \"../Forms\";\nimport RoomService, { CreateRoomParams } from \"../../../../../services/RoomService\";\nimport { useParams } from \"react-router-dom\";\nimport { BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport SmallCard from \"../../components/SmallCard\";\n\n\n\nfunction RoomsList() {\n    const { getRoomsInBuilding } = useBuilding();\n    const { reloadMap } = useResourceMap();\n\n    const urlParams = useParams() as BuildingViewParams;\n    const notify = useNotification();\n\n    const [createRoomModalOpen, setCreateRoomModalOpen] = React.useState<boolean>(false);\n    const [rooms, setRooms] = React.useState<Room[]>();\n\n\n    const load = React.useCallback(async () => {\n        const rooms = await getRoomsInBuilding();\n        setRooms(rooms);\n    }, [\n        getRoomsInBuilding\n    ]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const createRoom = React.useCallback(async (data: CreateRoomParams) => {\n        try {\n            await RoomService.create(urlParams, data);\n            notify('Nowa sala utworzona!', 'success');\n            load();\n            reloadMap();\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        load,\n        urlParams,\n    ]);\n\n\n    const renderedRooms = React.useMemo(() => {\n        return rooms?.map(item => <ScrollableListItem\n            key={item.id}\n            primary={`Sala ${item.name}`}\n            link={`./${item.building}/rooms/${item.id}`}\n        />)\n    }, [rooms])\n\n\n    return (\n        <>\n            <CreateRoomForm\n                handleCreateRoom={createRoom}\n                open={createRoomModalOpen}\n                onClose={() => setCreateRoomModalOpen(false)}\n            />\n\n            <SmallCard title=\"Sale w budynku\">\n                <ScrollableList onAddItem={() => setCreateRoomModalOpen(true)}>\n                    {renderedRooms}\n                </ScrollableList>\n            </SmallCard>\n            <br />\n        </>\n    );\n}\n\nexport default React.memo(RoomsList);","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport BuildingContext from \"./BuildingContext\";\nimport BuildingCard from \"./components/BuildingCard\";\nimport RoomsList from \"./components/RoomsList\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport Loading from \"../../../../shared/components/Loading\";\n\n\n\nconst LazyRoomOrBuildingChartTab = React.lazy(() => import(\"../components/RoomOrBuildingChartTab\"));\nconst RoomOrBuildingChartTab = () => <React.Suspense fallback={<Loading />}>\n    <LazyRoomOrBuildingChartTab />\n</React.Suspense>\n\n\nfunction BuildingPage() {\n    const { logsAdmin, statsViewer } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <RoomOrBuildingChartTab /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        logsAdmin,\n        statsViewer\n    ]);\n\n\n    return (\n        <BuildingContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item container spacing={2} alignContent='flex-start' xs={12} md={5} lg={4}>\n                    <Grid item xs={12}>\n                        <BuildingCard />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <RoomsList />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </BuildingContext>\n    );\n};\n\nexport default React.memo(BuildingPage);","import { IconButton, Link, List, ListItem, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport useSession from \"../../../../auth/useSession\";\nimport { FavouriteBuilding, FavouriteRoom, FavType } from \"../../../../models/Metadata\";\nimport MetadataService from \"../../../../services/MetadataService\";\nimport SmallCard from \"../components/SmallCard\";\nimport { dynamicPaths } from \"../../../../shared/path\";\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\n\n\nfunction getCorrectListItem(data: FavouriteBuilding | FavouriteRoom): React.ReactNode {\n    switch (data.type) {\n        case FavType.Building: {\n            const { addressId, id, name } = data as FavouriteBuilding;\n            return <ListItemText key={name + id} primary={<Link href={dynamicPaths.toBuilding(addressId, id)}>Budynek {name}</Link>} />\n        }\n        case FavType.Room: {\n            const { addressId, buildingId, id, name } = data as FavouriteRoom;\n            return <ListItemText key={name + id} primary={<Link href={dynamicPaths.toRoom(addressId, buildingId, id)}>Sala {name}</Link>} />\n        }\n        default: return null;\n    }\n}\n\n\nfunction Favourites() {\n    const { user } = useSession();\n\n    const [data, setData] = React.useState<(FavouriteBuilding | FavouriteRoom)[]>()\n\n\n    React.useEffect(() => {\n        setData(MetadataService.favourites);\n    }, [user])\n\n    const handleRemoveFavourite = React.useCallback((item: FavouriteBuilding | FavouriteRoom) => {\n        MetadataService.removeFavourite(item);\n        setData(MetadataService.favourites);\n    }, []);\n\n    return (\n        <SmallCard title='Ulubione'>\n            <List sx={{ minHeight: '160px' }}>\n                {\n                    data?.map((item) => <ListItem disablePadding key={`${item.name}-${item.id}`}>\n                        {getCorrectListItem(item)}\n                        <IconButton\n                            title='usuń z ulubionych'\n                            aria-label='usuń z ulubionych'\n                            onClick={() => handleRemoveFavourite(item)}\n                            size='small'>\n                            <RemoveCircleOutlineIcon fontSize=\"small\" />\n                        </IconButton>\n                    </ListItem>\n                    )\n                }\n                {\n                    data?.length === 0 &&\n                    <ListItemText color='text.secondary' primary='Brak ulubionych' />\n                }\n            </List>\n        </SmallCard>\n    )\n}\n\nexport default React.memo(Favourites);\n","import { Button, InputBase } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport SaveIcon from '@mui/icons-material/Save';\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport SmallCard from \"../components/SmallCard\";\nimport MetadataService from \"../../../../services/MetadataService\";\n\n\n\nfunction Notebook() {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<string>();\n\n\n    React.useEffect(() => {\n        setData(MetadataService.notes)\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (!data) return;\n\n        try {\n            MetadataService.notes = data;\n\n            notify('Notatki zostały zapisane', 'success');\n            setData(undefined);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n    ]);\n\n\n    const handleChange = React.useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n        setData(event.target.value)\n    }, []);\n\n\n    return (\n        <SmallCard title='Notatnik'>\n            <Box component='form' onSubmit={handleSubmit} sx={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                flexDirection: 'column',\n            }}>\n                <InputBase\n                    aria-label=\"twoje notatki\"\n                    title='twoje notatki'\n                    multiline\n                    minRows={4}\n                    maxRows={10}\n                    name='search'\n                    value={data ?? MetadataService.notes ?? ''}\n                    onChange={handleChange}\n                    placeholder=\"Twoje notatki\"\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        p: 1,\n                        bgcolor: 'background.default'\n                    }}\n                    inputProps={{\n                        'aria-label': 'Twoje notatki'\n                    }}\n                />\n                <Button\n                    title='Zapisz notatki'\n                    aria-label='Zapisz notatki'\n                    sx={{ mr: '0px', ml: 'auto' }}\n                    startIcon={<SaveIcon />}\n                    type=\"submit\">\n                    Zapisz\n                </Button>\n            </Box>\n        </SmallCard >\n    );\n}\n\nexport default React.memo(Notebook);","import GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SmallCard from \"../components/SmallCard\";\n\n\n\nexport default function HomeReservations() {\n    return (\n        <SmallCard title='Rezerwacje'>\n            <GenericReservationsTab />\n        </SmallCard>\n    );\n}\n","import { Grid } from \"@mui/material\";\nimport Favourites from \"./Favourites\";\nimport Notebook from \"./Notebook\";\nimport HomeReservations from \"./HomeReservations\";\n\n\n\nexport default function HomePage() {\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12} lg={8}>\n                <HomeReservations />\n            </Grid>\n            <Grid item container spacing={2} xs={12} lg={4}\n                alignContent='flex-start'\n            >\n                <Grid item xs={12} sm={6} lg={12}>\n                    <Notebook />\n                </Grid>\n                <Grid item xs={12} sm={6} lg={12}>\n                    <Favourites />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Divider, FormControl, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack } from '@mui/material';\nimport { RoomUpdateParams } from '../../../../../services/RoomService';\nimport { RoomType, RoomTypes } from '../../../../../models/Room';\nimport { useRoomContext } from '../RoomContext';\nimport ImageUploadField from '../../components/ImageUploadField';\nimport { useResourceMap } from '../../../../../contexts/ResourceMapContext';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport GenericModal from '../../components/GenericModal';\nimport FormGridContainer from '../../../../../shared/components/FormGridContainer';\n\n\n\ninterface RoomEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\nexport default function RoomEditForm({\n    open,\n    onClose,\n}: RoomEditFormProps) {\n    const { room, updateRoom } = useRoomContext();\n    const { allBuildings } = useResourceMap();\n\n    const [data, setData] = React.useState<RoomUpdateParams>({});\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number | boolean = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            case \"blocked\":\n                value = !event.target.checked;\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n\n        setData((old: RoomUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<RoomType | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'buildingId') value = Number(value);\n\n        event.target && setData((old: RoomUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateRoom(data)) {\n            onClose();\n        }\n    }, [\n        data,\n        updateRoom,\n        onClose\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno usuwania obiektu\"\n            sx={{\n                maxWidth: \"450px\",\n            }}\n        >\n            <Stack spacing={2}>\n                <ImageUploadField image={room.image} />\n                <Divider />\n\n                <FormGridContainer\n                    title='Edycja sali'\n                    subtitle=\"Zmień właściwości pokoju i zatwierdź zmiany.\"\n                    onSubmit={handleSubmit}\n                    onCancel={onClose}\n                >\n\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nazwa\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? room.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"room-type\">Typ Sali</InputLabel>\n                            <Select\n                                labelId=\"room-type\"\n                                id=\"roomType\"\n                                value={data.roomType ?? room.roomType}\n                                name=\"roomType\"\n                                label=\"Typ Sali\"\n                                onChange={handleSelectChange}\n                            >\n                                {Object.values(RoomTypes).map(val => <MenuItem key={val} value={val}>{val}</MenuItem>)}\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={6} >\n                        <TextField\n                            required\n                            name=\"seatsCount\"\n                            label=\"Ilość miejsc\"\n                            type=\"number\"\n                            id=\"seatsCount\"\n                            value={data.seatsCount ?? room.seatsCount}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <TextField\n                            required\n                            name=\"floor\"\n                            label=\"Piętro\"\n                            type=\"number\"\n                            id=\"floor\"\n                            value={data.floor ?? room.floor}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"wybierz-budynek\">Budynek</InputLabel>\n                            <Select\n                                labelId=\"wybierz-budynek\"\n                                name=\"buildingId\"\n                                value={data.buildingId ?? room.building.id}\n                                label=\"Budynek\"\n                                onChange={handleSelectChange}\n                            >\n                                {allBuildings.map(({ name, id }) => <MenuItem key={name} value={id} >Budynek &nbsp;{name} </MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            labelPlacement=\"start\"\n                            control={<Switch id=\"room-blocked\" name=\"blocked\"\n                                inputProps={{ 'aria-label': 'controlled' }}\n                                onChange={handleChange}\n                                checked={!(data.blocked ?? room.blocked)}\n                            />}\n                            label=\"Dostępność Sali\"\n                        />\n                    </Grid>\n\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    );\n}","import GenericModal from \"../../components/GenericModal\";\nimport RfidForm from \"../../components/RfidForm\";\nimport { useRoomContext } from \"../RoomContext\";\n\n\ninterface RfidModalRormProps {\n    open: boolean,\n    onClose: () => void,\n}\n\nexport default function RfidModalRorm(props: RfidModalRormProps) {\n    const { updateRFIDTag } = useRoomContext();\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={props.onClose}\n            aria-label=\"Okno przypisania tagu RFID\"\n            sx={{\n                maxWidth: \"400px\"\n            }}\n        >\n            <RfidForm\n                headline=\"Użyj czytnika, aby wprowadzić tag.\"\n                bodyText='Jeśli nie chcesz wprowadzać zmian, naciśnij \"Zamknij\"'\n                onScan={updateRFIDTag}\n                onClose={props.onClose}\n            />\n        </GenericModal>\n    );\n}\n","import CancelIcon, { } from '@mui/icons-material/Cancel';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\n\n\ninterface YesNoIconProps {\n    value: boolean,\n    title?: string,\n    fontSize?: 'small' | 'medium' | 'large',\n}\n\n\nexport default function YesNoIcon(props: YesNoIconProps) {\n    const { value, ...rest } = props;\n\n    return (\n        value ?\n            <CheckCircleOutlineIcon color=\"success\" {...rest} />\n            : <CancelIcon sx={{ color: \"red\" }} {...rest} />\n    )\n}","import { Chip, IconButton, Link, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport { DetailedRoom } from \"../../../../../models/Room\";\nimport { RfidForm } from \"../Forms\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport YesNoIcon from \"./YesNoIcon\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\ninterface RoomTableInfoProps {\n    room: DetailedRoom,\n    deleteTag: () => Promise<void>\n}\n\n\nexport default function RoomTableInfo({\n    room, deleteTag\n}: RoomTableInfoProps) {\n    const { keysAdmin } = useResolvedAccess();\n    const { getBuildingLink } = useResourceMap();\n    const [rfidTagModalOpen, setRfidTagModalOpen] = React.useState<boolean>(false);\n\n    const tableRows = React.useMemo(() => {\n        const rows = [\n            {\n                label: \"Ilość miejsc\",\n                value: room.seatsCount\n            }, {\n                label: \"Piętro\",\n                value: room.floor === 0 ? \"parter\" : room.floor\n            }, {\n                label: \"Budynek\",\n                value: <Link href={getBuildingLink(room.building.id)}> {room.building.name} </Link>\n            }, {\n                label: \"Aktualnie wolny\",\n                value: <YesNoIcon value={!room.occupied} />\n            }\n        ];\n        keysAdmin && rows.push({\n            label: \"Tag RFID\",\n            value: room.RFIDTag ?\n                <Chip label={room.RFIDTag} onDelete={deleteTag} sx={{ maxWidth: '120px' }} />\n                : <IconButton size=\"small\"\n                    onClick={() => setRfidTagModalOpen(true)}\n                    sx={{ p: '0px' }}\n                >\n                    <AddCircleIcon />\n                </IconButton>\n        });\n        rows.push({\n            label: \"Dostępny do rezerwacji\",\n            value: <YesNoIcon value={!room.blocked} />\n        });\n\n        return rows;\n    }, [\n        keysAdmin,\n        room,\n        deleteTag,\n        getBuildingLink,\n    ]);\n\n\n    const RenderedRows = React.useMemo(() => {\n        return tableRows.map(({ label, value }) =>\n            <TableRow hover key={label}>\n                <TableCell sx={{ color: \"text.secondary\" }} align=\"left\">{label}</TableCell>\n                <TableCell sx={{ color: \"primary.main\", fontWeight: \"bold\" }} align=\"left\">{value}</TableCell>\n            </TableRow>\n        )\n    }, [tableRows])\n\n\n    return (\n        <>\n            <RfidForm\n                open={rfidTagModalOpen}\n                onClose={() => setRfidTagModalOpen(false)}\n            />\n\n            <TableContainer >\n                <Table aria-label=\"room-info-table\" size=\"small\">\n                    <TableHead sx={{ display: 'none' }}>\n                        <TableRow>\n                            <TableCell align=\"left\">Właściwość</TableCell>\n                            <TableCell align=\"left\">stan</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {RenderedRows}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n}\n","import { Card, CardContent, CardHeader, CardMedia } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport RoomTableInfo from \"./RoomTableInfo\";\nimport React from \"react\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport { useRoomContext } from \"../RoomContext\";\nimport Loading from \"../../../../../shared/components/Loading\";\nimport { RoomEditForm } from \"../Forms\";\nimport FavouriteButton from \"../../components/FavouriteButton\";\nimport { FavType } from \"../../../../../models/Metadata\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\n\nexport default function RoomCard() {\n    const { premisesAdmin} = useResolvedAccess();\n    const { room, deleteRoom, deleteRFIDTag } = useRoomContext();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    return (\n        !Boolean(room) ? <Loading /> :\n            <>\n                {premisesAdmin &&\n                    <>\n                        <DeleteModal\n                            objectName={room.name}\n                            open={deleteModalOpen}\n                            onClose={() => setDeleteModalOpen(false)}\n                            onSuccess={deleteRoom}\n                        />\n\n                        <RoomEditForm\n                            open={editModalOpen}\n                            onClose={() => setEditModalOpen(false)}\n                        />\n                    </>\n                }\n\n                <Card elevation={0}>\n                    <CardHeader\n                        action={\n                            premisesAdmin &&\n                            <MoreVertMenu options={options} />\n                        }\n                        title={\n                            <>\n                                {room.name}\n                                <FavouriteButton data={{\n                                    id: room.id,\n                                    name: room.name,\n                                    type: FavType.Room,\n                                    addressId: room.building.address,\n                                    buildingId: room.building.id\n                                }} />\n                            </>\n                        }\n                        subheader={<>\n                            {room.roomType}\n                        </>}\n                    />\n                    <CardMedia\n                        component=\"img\"\n                        height=\"350\"\n                        image={ImageService.getLink(room.image)}\n                        alt={room.name}\n                    />\n                    <CardContent>\n                        <RoomTableInfo room={room} deleteTag={deleteRFIDTag} />\n                        <br />\n                        <DatesFooter model={room} />\n                    </CardContent>\n                </Card>\n            </>\n    );\n}\n","import { RoomContextProvider } from \"./RoomContext\";\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport RoomCard from \"./components/RoomCard\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport Loading from \"../../../../shared/components/Loading\";\n\n\nconst LazyRoomOrBuildingChartTab = React.lazy(() => import(\"../components/RoomOrBuildingChartTab\"));\nconst RoomOrBuildingChartTab = () => <React.Suspense fallback={<Loading />}>\n    <LazyRoomOrBuildingChartTab />\n</React.Suspense>\n\n\nexport default function RoomPage() {\n    const { logsAdmin, statsViewer } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <RoomOrBuildingChartTab /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        logsAdmin,\n        statsViewer\n    ]);\n\n\n    return (\n        <RoomContextProvider>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item xs={12} md={5} lg={4}>\n                    <RoomCard />\n                </Grid>\n            </Grid>\n        </RoomContextProvider>\n    );\n}\n","import React from 'react';\nimport Loading from '../../../../shared/components/Loading';\n\nconst LazySettingsPage = React.lazy(() => import('./SettingsPage'));\n\n\nexport default function SettingsPage() {\n    return <React.Suspense fallback={<Loading />}>\n        <LazySettingsPage />\n    </React.Suspense>\n};\n\n","import React from \"react\";\nimport useSession from \"../../../../../auth/useSession\";\nimport GenericModal from \"../../components/GenericModal\";\nimport PasswordChangeForm from '../../../public/ChangePassword/Form';\n\ninterface EditUserFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\nexport default function PasswordChangeModal({\n    open,\n    onClose\n}: EditUserFormProps) {\n    const { logout } = useSession();\n\n    const close = React.useCallback(() => {\n        onClose();\n\n    }, [onClose]);\n\n    const onSuccess = React.useCallback(() => {\n        logout();\n    }, [logout]);\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            sx={{\n                maxWidth: '450px'\n            }}\n        >\n            <PasswordChangeForm onSuccess={onSuccess} />\n        </GenericModal>\n    )\n}","import Divider from \"@mui/material/Divider\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { DetailedUser } from \"../../../../../models/User\";\nimport { UpdateUserParams } from \"../../../../../services/UserService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../components/GenericModal\";\nimport ImageUploadField from \"../../components/ImageUploadField\";\nimport { useUser } from \"../UserContext\";\n\n\n\ninterface EditUserFormProps {\n    open: boolean,\n    onClose: () => void,\n    user: DetailedUser,\n}\n\n\nexport default function EditUserForm({\n    open,\n    onClose,\n    user,\n}: EditUserFormProps) {\n    const { updateUser } = useUser();\n\n    const [data, setData] = React.useState<UpdateUserParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const onSubmit = React.useCallback(async () => {\n        if (await updateUser(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateUser,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            sx={{\n                maxWidth: '450px'\n            }}\n        >\n            <Stack spacing={3}>\n\n                <ImageUploadField image={user.image} />\n\n                <Divider />\n\n                <FormGridContainer\n                    title=\"Edycja użytkownika\"\n                    subtitle=\"Zmień dane użytkownika. Zmiany w całej aplikacji będą widoczne po ponownym przeładowaniu aplikacji.\"\n                    onSubmit={onSubmit}\n                    onCancel={close}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Imię\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? user.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"surname\"\n                            label=\"Nazwisko\"\n                            name=\"surname\"\n                            value={data.surname ?? user.surname}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    )\n}","import React from \"react\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport { useUser } from \"../UserContext\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ChangePasswordForm, UserEditForm } from \"../Forms\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { displayDate } from \"../../../../../shared/utils\";\nimport { Link, Typography } from \"@mui/material\";\nimport paths from \"../../../../../shared/path\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\n\nexport default function UserCard() {\n    const { myId, owner } = useResolvedAccess();\n    const { user, deleteUser } = useUser();\n\n    const [editModal, setEditModal] = React.useState(false);\n    const [passModal, setPassModal] = React.useState(false);\n    const [deleteModal, setDeleteModal] = React.useState(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModal(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Zmień hasło',\n            action: () => setPassModal(true),\n            icon: <PasswordIcon color='warning' />\n        }, {\n            label: 'Usuń konto',\n            action: () => setDeleteModal(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    return (\n        <>\n\n            {(myId(user.id) || owner) && <>\n                <DeleteModal\n                    objectName={`${user.email}`}\n                    open={deleteModal}\n                    onClose={() => setDeleteModal(false)}\n                    onSuccess={deleteUser}\n                />\n\n                <UserEditForm\n                    user={user}\n                    open={editModal}\n                    onClose={() => setEditModal(false)}\n                />\n\n                <ChangePasswordForm\n                    open={passModal}\n                    onClose={() => setPassModal(false)}\n                />\n            </>\n            }\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={(myId(user.id) || owner) && <MoreVertMenu options={options} />}\n                    title={<>{user.name} {user.surname}</>}\n                    subheader={<a href={`mailto:${user.email}`}>\n                        {user.email}\n                    </a>}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"350\"\n                    image={ImageService.getLink(user.image)}\n                    alt={user.email}\n                />\n                <CardContent>\n                    <Typography color='text.secondary' variant=\"subtitle1\">\n                        Ostatnio aktywny: {displayDate(user.lastActivity)}<br />\n                        Klasa dostępu: {<Link href={paths.ACCESS}>{user.access.name}</Link>}\n                    </Typography>\n                    <br />\n                    <DatesFooter model={user} />\n                </CardContent>\n            </Card>\n        </>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport Loading from \"../../../../shared/components/Loading\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport UserCard from \"./components/UserCard\";\nimport { UserContext } from \"./UserContext\";\n\n\n\nconst LazyUserCharts = React.lazy(() => import(\"./components/UserCharts\"));\nconst UserCharts = () => <React.Suspense fallback={<Loading />}>\n    <LazyUserCharts />\n</React.Suspense>\n\n\nexport default function UserPage() {\n    const { statsViewer, logsAdmin } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr: any = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <UserCharts /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        statsViewer,\n        logsAdmin,\n    ]);\n\n\n    return (\n        <UserContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item xs={12} md={5} lg={4}>\n                    <UserCard />\n                </Grid>\n            </Grid>\n        </UserContext>\n    );\n}","import React from \"react\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport User from \"../../../../../models/User\";\nimport UserService, { UserQueryParams } from \"../../../../../services/UserService\";\nimport Loading from \"../../../../../shared/components/Loading\";\nimport UsersContextValue from \"./UsersContextValue\";\n\n\n\nexport const usersContext: any = React.createContext(null);\n\n\ninterface UsersContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\nexport default function UsersContextProvider(props: UsersContextProviderProps) {\n    const notify = useNotification();\n    const { queryParams, setQueryParams } = useQueryParams<UserQueryParams>();\n\n    const [users, setUsers] = React.useState<User[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await UserService.getUsers(queryParams);\n            setQueryParams(old => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount\n            }));\n            setUsers(resp.data as User[]);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setUsers([]);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        notify,\n        queryParams.itemsOnPage,\n        queryParams.currentPage,\n        queryParams.search,\n        queryParams.deleted,\n        queryParams.activated\n    ]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    if (!users) return <Loading />;\n\n    return (\n        <usersContext.Provider value={{\n            users,\n        } as UsersContextValue}>\n            {props.children}\n        </usersContext.Provider>\n    )\n}","import { FormControlLabel, Grid, Switch } from \"@mui/material\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport { UserQueryParams } from \"../../../../../../services/UserService\";\nimport React from \"react\";\nimport LazyInput from \"../../../components/LazyInput\";\n\n\nfunction SearchBar() {\n    const { setQueryParams, queryParams } = useQueryParams<UserQueryParams>();\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        let value: string | number | boolean = event.target.value;\n\n        switch (event.target.name) {\n            case \"deleted\":\n            case \"activated\":\n                value = Boolean(event.target.checked);\n                break;\n            case 'search':\n                break;\n            default:\n                break;\n        }\n\n        setQueryParams((old: UserQueryParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, [setQueryParams]);\n\n\n    return (\n        <Grid container>\n            <Grid item xs={12} md={8}>\n                <LazyInput\n                    label='wyszukaj'\n                    name='search'\n                    value={queryParams.search ?? ''}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} md={4} display='flex' justifyContent='start' flexWrap='wrap' color='text.secondary'>\n                <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch id=\"aktywni-użytkownicy\" name=\"activated\"\n                        inputProps={{ 'aria-label': 'aktywni-użytkownicy' }}\n                        onChange={handleChange}\n                        checked={queryParams.activated}\n                    />}\n                    label=\"Aktywne konta\"\n                />\n                <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch id=\"unsunięci-użytkownicy\" name=\"deleted\"\n                        inputProps={{ 'aria-label': 'unsunięci-użytkownicy' }}\n                        onChange={handleChange}\n                        checked={queryParams.deleted}\n                    />}\n                    label=\"Usunięte konta\"\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(SearchBar);","import { Link } from \"@mui/material\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport User from \"../../../../../../../models/User\";\nimport ImageService from \"../../../../../../../services/ImageService\";\nimport { dynamicPaths } from \"../../../../../../../shared/path\";\n\n\n\ninterface UserListItemProps {\n    user: User\n}\n\nexport default function UserListItem({ user }: UserListItemProps) {\n    return (\n        <ListItem button\n            component={Link}\n            href={dynamicPaths.toUser(user.id)}\n        >\n            <ListItemAvatar\n                title={user.email}\n                aria-label={user.email}\n            >\n                <Avatar src={ImageService.getLink(user.image)} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={`${user.name} ${user.surname}`}\n                secondary={\n                    <>\n                        {user.email}\n                    </>\n                }\n            />\n        </ListItem>\n    );\n}","import { ListItem, ListItemText } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport { useUsers } from \"../../../UsersContext\";\nimport UserListItem from \"./UserListItem\";\n\n\n\nexport default function UsersList() {\n    const { users } = useUsers();\n\n    return (\n        <List>\n            {\n                users.length === 0 && <ListItem>\n                    <ListItemText primary='Brak użytkowników spełniających kryteria' />\n                </ListItem>\n            }\n            {\n                users.map((item) => <UserListItem key={item.id} user={item} />)\n            }\n        </List>\n    );\n}\n\n","import React from \"react\";\nimport { UsersContextValue } from \".\";\nimport { usersContext } from \"./UsersContextProvider\";\n\n\n\nexport default function useUsers(){\n    return React.useContext(usersContext) as UsersContextValue\n}","import { Stack } from \"@mui/material\";\nimport TabHeadLine from \"../../../../../../shared/components/TabHeadLine\";\nimport ListPagination from \"../../../components/ListPagination\";\nimport SearchBar from \"./SearchBar\";\nimport UsersList from \"./UsersList\";\n\n\n\nexport default function UsersView() {\n    return (\n        <Stack spacing={3}>\n            <TabHeadLine\n                title='Lista użytkowników'\n                subtitle='Wyszukuj użytkowników według podanych kryteriów.'\n            />\n\n            <SearchBar />\n\n            <UsersList />\n\n            <ListPagination />\n        </Stack>\n    );\n}","import { AllUsersChartsData } from \"../../../../../models/Stats\";\nimport { Chart, ChartSection, ChartsTab, useCharts } from \"../../components/Charts\";\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport { Button } from \"@mui/material\";\nimport { usePDF } from \"@react-pdf/renderer\";\nimport PDFPage from \"../../components/PDF/PDFPage\";\nimport Table from \"../../components/PDF/Table\";\n\n\n\nexport default function UsersCharts() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n\nfunction ActualLoader() {\n    const { chartsData } = useCharts<AllUsersChartsData>();\n\n\n    const [PDF] = usePDF({\n        document: <PDFPage\n            subject='Statystyki użytkowników'\n            sections={\n                [\n                    <Table\n                        title=\"Statystyki użytkowników\"\n                        rows={[\n                            [\n                                'email',\n                                'ilość rezerwacji',\n                                'czas rezerwacji',\n                                'średni czas rezerwacji',\n                                'średni planowany czas rezerwacji'\n                            ]\n                            , ...chartsData.users.map(r => [\n                                r.email,\n                                r.reservationsCount,\n                                r.allTimeMinutes,\n                                r.avgActualTimeMinutes,\n                                r.avgPlannedTimeMinutes\n                            ])\n                        ]}\n                    />\n                ]} />\n    });\n\n\n    return (\n        <>\n            {\n                (PDF.loading || !PDF.url) ?\n                    <p>loading pdf ...</p>\n                    :\n                    <Button startIcon={<PictureAsPdfIcon />}>\n                        <a href={PDF.url} download={'stats.pdf'} title='pobierz tabele pdf'>\n                            Pobierz raport pdf\n                        </a>\n                    </Button>\n            }\n            <ChartSection defaultOpen title='Statystyki użytkowników'>\n                <Chart\n                    fullWidth={chartsData.users.length >= 6}\n                    title='Ilość rezerwacji na użytkownika'\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                    ]}\n                />\n                <Chart\n                    fullWidth={chartsData.users.length >= 6}\n                    title=\"Czas wszystkich reserwacji w dany dzień\"\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title=\"Średnie czasy rezerwacji\"\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                        { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                    ]}\n                />\n            </ChartSection>\n        </>\n    );\n}","import { QueryParamsContext } from \"../../../../contexts/QueryParamsContext\";\nimport { UserQueryParams } from \"../../../../services/UserService\";\nimport { UsersContext } from \"./UsersContext\";\nimport React from \"react\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport UsersView from \"./components/UsersView\";\nimport UsersCharts from \"./components/UsersCharts\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\n\n\n\nexport default function UsersPage() {\n    const { statsViewer, logsAdmin } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [\n            { name: 'Użytkownicy', component: <UsersView /> }\n        ];\n\n        statsViewer && arr.push({ name: 'Statystyki', component: <UsersCharts /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        logsAdmin,\n        statsViewer\n    ]);\n\n\n    return (\n        <QueryParamsContext\n            name=\"users-query-params\"\n            default={{\n                deleted: false,\n                activated: true,\n                search: '',\n                itemsOnPage: 10,\n                currentPage: 1\n            } as UserQueryParams}\n        >\n            <UsersContext>\n                <SwipeableTabs tabs={pages} />\n            </UsersContext>\n        </QueryParamsContext>\n    );\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport useSession from \"../../../auth/useSession\";\nimport paths from \"../../../shared/path\";\nimport AccessPage from \"./AccessPage\";\nimport AddressPage from \"./AddressPage\";\nimport BuildingPage from \"./BuildingPage\";\nimport HomePage from \"./HomePage\";\nimport RoomPage from \"./RoomPage\";\nimport SettingsPage from \"./SettingsPage\";\nimport UserPage from \"./UserPage\";\nimport UsersPage from \"./UsersPage\";\n\n\n\nexport default function ProtectedPages() {\n    const { user } = useSession();\n\n    if (!user) return <Redirect to={paths.PUBLIC} />\n\n    return (\n        <Switch>\n            <Route path={paths.ROOM} component={RoomPage} />\n            <Route path={paths.BUILDING} component={BuildingPage} />\n            <Route path={paths.ADDRESS} component={AddressPage} />\n\n            <Route path={paths.SETTINGS} component={SettingsPage} />\n            <Route path={paths.ACCESS} component={AccessPage} />\n            <Route path={paths.USER} component={UserPage} />\n            <Route path={paths.USERS} component={UsersPage} />\n            <Route path={paths.HOME} component={HomePage} />\n\n            <Route path={paths.INFRASTRUCTURE}>\n                Zasoby\n            </Route>\n            <Route path={paths.HOME + '/*'}>\n                <Redirect to={paths.HOME} />\n            </Route>\n        </Switch>\n    );\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport paths from \"../../../shared/path\";\nimport Loading from \"../../../shared/components/Loading\";\nimport React from \"react\";\nimport useSession from \"../../../auth/useSession\";\n\n\nconst Activation = React.lazy(() => import('./Activation'));\nconst Login = React.lazy(() => import('./Login'));\nconst Register = React.lazy(() => import('./Register'));\nconst ChangePassword = React.lazy(() => import('./ChangePassword'));\nconst Welcome = React.lazy(() => import('./Welcome'));\n\n\nexport default function PublicPages() {\n    const { user } = useSession();\n\n    if (user) return <Redirect to={paths.HOME} />\n\n    return (\n        <Switch>\n            <React.Suspense fallback={<Loading />}>\n                <Route path={paths.LOGIN} component={Login} />\n                <Route path={paths.REGISTER} component={Register} />\n                <Route path={paths.ACTIVATE} component={Activation} />\n                <Route path={paths.REMIND_PASSWORD} component={ChangePassword} />\n                <Route path={paths.PUBLIC} exact component={Welcome} />\n            </React.Suspense>\n\n            <Route path=\"*\">\n                <Redirect to={paths.PUBLIC} />\n            </Route>\n        </Switch>\n    );\n}","import { Box } from '@mui/system';\n\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport paths from '../../shared/path';\n\nimport ProtectedPages from './protected';\nimport PublicPages from './public';\n\n\nconst tabStyle = {\n    minHeight: \"84vh\",\n    padding: \"1.5vh 0px\"\n}\n\n\nexport default function Tabs() {\n    return (\n        <Box sx={tabStyle}>\n            <Switch>\n                <Route path={paths.HOME} component={ProtectedPages} />\n                <Route path={paths.PUBLIC} component={PublicPages} />\n                <Route path='*'> \n                    <Redirect to={paths.PUBLIC} />\n                </Route>\n            </Switch>\n        </Box>\n    );\n}","import { Typography } from \"@mui/material\";\nimport React from \"react\";\n\n\nfunction Copyright() {\n    return (\n        <Typography\n            align=\"center\"\n            sx={{\n                backgroundColor: \"primary.dark\",\n                padding: 2,\n                color: \"primary.light\"\n            }}\n        >\n            &copy; Szymon Rykała 2021/2022\n        </Typography>\n    );\n}\n\nexport default React.memo(Copyright);","import { Container, Link, List, ListItem, Typography } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport useSession from \"../../auth/useSession\";\nimport paths from \"../../shared/path\";\nimport useResolvedAccess from \"../pages/protected/hooks/useResolvedAccess\";\n\n\ninterface LinkListItem {\n    name: string,\n    link: string\n}\n\n\nconst LinkItem = (props: LinkListItem) =>\n    <ListItem\n        sx={{\n            width: '30%',\n            minWidth: '200px'\n        }}>\n        <Link\n            sx={{ color: 'background.default' }}\n            href={props.link}\n        >\n            {props.name}\n        </Link>\n    </ListItem>\n    ;\n\n\nfunction Links() {\n    const { user } = useSession();\n    const access = useResolvedAccess();\n\n\n    const linksList = React.useMemo(() => {\n        const list = [];\n        if (user) {\n            list.push({ name: 'Mój Profil', link: paths.MY_PROFILE }, { name: 'Home', link: paths.HOME });\n            access.accessAdmin && list.push({ name: 'Dostępy', link: paths.ACCESS });\n            access.owner && list.push({ name: 'Ustawienia', link: paths.SETTINGS });\n        } else {\n            list.push(\n                { name: 'Strona główna', link: paths.PUBLIC },\n                { name: 'Logowanie', link: paths.LOGIN },\n                { name: 'Rejestracja', link: paths.REGISTER },\n                { name: 'Aktywacja Konta', link: paths.ACTIVATE }\n            );\n        }\n        return list;\n    }, [\n        user,\n        access?.accessAdmin,\n        access?.owner,\n    ]);\n\n\n    const links = React.useMemo(() => {\n\n        return linksList.filter(item => item.link)\n            .map((item) => <LinkItem key={item.name} {...item} />);\n    }, [\n        linksList\n    ]);\n\n    return (\n        <Box\n            sx={{\n                backgroundColor: \"primary.main\"\n            }}\n        >\n            <Container>\n                <Typography sx={{ pt: 2 }} component='p' variant='body2' color='background.default'>\n                    Przydatne linki:\n                </Typography>\n                <List sx={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignContent: 'center',\n                    justifyContent: 'flex-start',\n                    flexWrap: 'wrap'\n                }}>\n\n                    {links}\n                </List>\n            </Container>\n        </Box>\n    );\n}\n\nexport default React.memo(Links);","import {\n    Grid,\n} from \"@mui/material\";\n\nimport { Box } from \"@mui/system\";\n\nimport Copyright from \"./Copyrights\";\nimport Links from \"./Links\";\n\n\n\n\nexport default function Footer() {\n\n    return (\n        <Box >\n            <Grid container\n                direction=\"column\"\n                alignItems=\"stretch\"\n            >\n                <Grid item>\n                    <Links />\n                </Grid>\n                <Grid item>\n                    <Copyright />\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\n\n\n\n","import { Link, List, ListItem, ListItemIcon, ListItemText, SvgIconTypeMap } from \"@mui/material\";\nimport HomeIcon from '@mui/icons-material/Home';\nimport AccountIcon from '@mui/icons-material/AccountCircle';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\nimport PeopleIcon from '@mui/icons-material/People';\n\nimport React from \"react\";\nimport paths from \"../../../shared/path\";\nimport { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport useResolvedAccess from \"../../pages/protected/hooks/useResolvedAccess\";\n\n\n\ninterface NavListItem {\n  label: string,\n  href: string,\n  icon: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>\n}\n\n\nconst navListItems: NavListItem[] = [\n  {\n    label: \"Panel Główny\",\n    href: paths.HOME,\n    icon: HomeIcon\n  }, {\n    label: \"Moje Konto\",\n    href: paths.MY_PROFILE,\n    icon: AccountIcon\n  }\n];\n\n\nconst settingsItem: NavListItem = {\n  label: 'Ustawienia Platformy',\n  href: paths.SETTINGS,\n  icon: SettingsIcon\n};\n\n\nconst accessLinkItem: NavListItem = {\n  label: 'Klasy dostępu',\n  href: paths.ACCESS,\n  icon: VerifiedUserIcon\n};\n\n\nconst usersLinkItem: NavListItem = {\n  label: 'Użytkownicy',\n  href: paths.USERS,\n  icon: PeopleIcon\n};\n\n\nconst MainListItem = React.memo((props: NavListItem) =>\n  <ListItem button component={Link} href={props.href}>\n    <ListItemIcon color=\"primary\">\n      {<props.icon color='primary' />}\n    </ListItemIcon>\n    <ListItemText primary={props.label} />\n  </ListItem >\n);\n\n\nexport default function MainDrawerList() {\n  const { accessAdmin, owner } = useResolvedAccess();\n\n  const result = React.useMemo(() => {\n    let list = Object.assign([], navListItems) as NavListItem[];\n\n    list.push(usersLinkItem);\n    accessAdmin && list.push(accessLinkItem);\n    owner && list.push(settingsItem);\n\n    return list;\n  }, [\n    accessAdmin,\n    owner\n  ]);\n\n\n  const renderedList = React.useMemo(() =>\n    result.map((item) => <MainListItem key={item.label} {...item} />)\n    , [result]);\n\n\n  return (\n    <List>\n      {renderedList}\n    </List>\n  );\n}","import { Box } from \"@mui/material\";\n\n\ninterface DrawerPanelProps {\n    children: React.ReactNode,\n    toggleOpen: any,\n}\n\n\nexport default function DrawerPanel({\n    children,\n    toggleOpen\n}: DrawerPanelProps) {\n    return (\n        <Box\n            sx={{ width: 320 }}\n            role=\"presentation\"\n            onClick={toggleOpen}\n            onKeyDown={toggleOpen}\n        >\n            {children}\n        </Box>\n    );\n}","import { Avatar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { SessionUser } from \"../../../models/User\";\nimport ImageService from \"../../../services/ImageService\";\n\n\ninterface AvatarViewProps {\n    user: SessionUser | null,\n}\n\n\nexport default function AvatarView({\n    user\n}: AvatarViewProps) {\n    return (\n        <Box\n            onClick={(ev) => ev.stopPropagation()}\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                padding: 2,\n                color: 'primary.dark'\n            }}\n        >\n            <Avatar\n                alt={`${user?.name} ${user?.surname}`}\n                src={ImageService.getLink(user?.image)}\n                sx={{\n                    width: '120px',\n                    height: '120px',\n                    fontSize: '36px',\n                    mt: 2,\n                    mb: 2,\n                }}\n            />\n            <Typography>\n                {user?.name}&nbsp;{user?.surname}\n            </Typography>\n            <Typography>\n                <a href={`mailto:${user?.email}`}>\n                    {user?.email}\n                </a>\n            </Typography>\n        </Box>\n    );\n}","import { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport { Collapse, IconButton, Link, ListItemButton, ListItemIcon, ListItemText, Stack } from \"@mui/material\";\nimport React from \"react\";\nimport StorageService from \"../../../../services/StorageService\";\n\n\n\ninterface CallapsableListItemProps {\n    name: string,\n    href?: string\n    children: React.ReactNode,\n    icon?: React.ReactNode,\n    sx?: any\n}\n\n\nexport default function CollapseableListItem(props: CallapsableListItemProps) {\n    const [open, setOpen] = React.useState<boolean>(false);\n\n    const OPENED_NAME = React.useMemo(() => `${props.name}-nav-item`, [props.name]);\n\n    React.useEffect(() => {\n        setOpen(StorageService.read(OPENED_NAME));\n    }, [OPENED_NAME]);\n\n    const handleOpen = React.useCallback((ev: React.MouseEvent) => {\n        ev.stopPropagation()\n        StorageService.save(OPENED_NAME, !open);\n        setOpen(old => !old);\n    }, [\n        OPENED_NAME,\n        open\n    ]);\n\n    return (\n        <>\n            <Stack direction=\"row\">\n                <ListItemButton component={Link} href={props.href} sx={props.sx}>\n                    <ListItemIcon>\n                        {props.icon}\n                    </ListItemIcon>\n\n                    <ListItemText primary={props.name} />\n                </ListItemButton>\n\n                <IconButton sx={{ width: '42px', height: '42px' }} size='medium' onClick={handleOpen}>\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                </IconButton>\n            </Stack>\n\n            <Collapse in={open} timeout=\"auto\" >\n                <Stack sx={props.sx}>\n                    {props.children}\n                </Stack>\n            </Collapse>\n        </>\n    );\n}\n","import { Box, Link, ListItem, ListItemIcon } from \"@mui/material\";\nimport { MapItem } from \"../../../../models/AddressMap\";\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport paths from \"../../../../shared/path\";\nimport React from \"react\";\n\n\n\nfunction RoomListItem(props: MapItem) {\n    return (\n        <ListItem button component={Link} href={`${paths.HOME}${props.href}`}>\n            <Box sx={{ width: '100%' }} >\n                <ListItemIcon >\n                    <ArrowRightIcon />\n                </ListItemIcon>\n                {props.name}\n            </Box>\n        </ListItem>\n    );\n}\n\nexport default React.memo(RoomListItem);","import BungalowIcon from '@mui/icons-material/Bungalow';\nimport MapIcon from '@mui/icons-material/Map';\nimport { Stack } from \"@mui/material\";\nimport { useResourceMap } from '../../../../contexts/ResourceMapContext';\nimport paths from '../../../../shared/path';\nimport CollapseableListItem from \"./CollapseableListItem\";\nimport RoomListItem from \"./RoomListItem\";\nimport React from 'react';\n\n\nexport default function ResourcesList() {\n    const { resourceMap } = useResourceMap();\n\n    const rendered = React.useMemo(() => {\n        return resourceMap?.map(({ id, name, href, buildings }) =>\n            <CollapseableListItem\n                key={id}\n                name={name}\n                href={`${paths.HOME}${href}`}\n                icon={<MapIcon color=\"primary\" />}\n                sx={{ width: '100%' }}\n            >\n                {buildings.map(({ id, name, href, rooms }) =>\n                    <CollapseableListItem\n                        key={id}\n                        name={name}\n                        href={`${paths.HOME}${href}`}\n                        icon={<BungalowIcon color=\"primary\" />}\n                        sx={{\n                            pl: 6,\n                            width: '100%',\n                        }}\n                    >\n                        {rooms.map((roomEntry) => <RoomListItem key={roomEntry.id} {...roomEntry} />)}\n\n                    </CollapseableListItem>)}\n            </CollapseableListItem>)\n    }, [resourceMap]);\n\n    return (\n        <Stack>\n            {rendered}\n        </Stack>\n    );\n}\n\n\n","import ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport React from \"react\";\nimport { CreateAddressForm } from \"../../pages/protected/AddressPage/Forms\";\nimport AddIcon from '@mui/icons-material/Add';\n\n\n\nexport default function CreateAddressButton() {\n    const [formOpen, setFormOpen] = React.useState<boolean>(false);\n\n    const handleClick = React.useCallback((ev) => {\n        ev.stopPropagation();\n        setFormOpen(true);\n    }, []);\n\n    return (\n        <>\n            <CreateAddressForm\n                open={formOpen}\n                onClose={() => setFormOpen(false)}\n            />\n            <ListItem button\n                component='div'\n                onClick={handleClick}\n                sx={{ color: 'primary.dark' }}\n            >\n                <ListItemIcon>\n                    <AddIcon color='primary' />\n                </ListItemIcon>\n                Dodaj adres\n            </ListItem>\n        </>\n    );\n}","import { Divider, Drawer, ListItem, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport MainDrawerList from \"./MainDrawerList\";\nimport DrawerPanel from \"./DrawerPanel\";\nimport AvatarView from './AvatarView';\nimport useSession from \"../../../auth/useSession\";\nimport ResourcesList from \"./ResourcesList\";\nimport CreateAddressButton from \"./CreateAddressButton\";\nimport useResolvedAccess from \"../../pages/protected/hooks/useResolvedAccess\";\n\n\ninterface AppDrawerProps {\n    open: boolean,\n    toggleOpen: any,\n}\n\nexport default function AppDrawer({ toggleOpen, open }: AppDrawerProps) {\n    const { premisesAdmin } = useResolvedAccess();\n    const { user } = useSession();\n\n    return (\n        <Drawer\n            variant=\"temporary\"\n            ModalProps={{\n                keepMounted: true\n            }}\n            anchor=\"left\"\n            open={open}\n            onClose={toggleOpen}\n        >\n            <DrawerPanel toggleOpen={(toggleOpen)}>\n                <AvatarView user={user} />\n\n                <Divider />\n                <MainDrawerList />\n\n                <Divider />\n                <ListItem\n                    onClick={(ev: React.MouseEvent) => ev.stopPropagation()}\n                    component=\"div\"\n                    sx={{ pb: 0, color: 'text.disabled' }}\n                >\n                    <ListItemText>\n                        Zasoby:\n                    </ListItemText>\n                </ListItem>\n                <ResourcesList />\n\n            </DrawerPanel>\n            {\n                premisesAdmin && <CreateAddressButton />\n            }\n        </Drawer>\n    );\n}\n","import { Link, Menu, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport useSession from \"../../../auth/useSession\";\nimport paths from \"../../../shared/path\";\n\n\n\ninterface AccountMenuProps {\n    trigger: null | HTMLElement,\n    handleClose: () => void\n}\n\nconst links = [\n    { name: \"Mój Profil\", link: paths.MY_PROFILE },\n    { name: \"Panel Główny\", link: paths.HOME },\n]\n\n\nexport default function AccountMenu({ trigger, handleClose }: AccountMenuProps) {\n    const { logout } = useSession();\n\n    const linksComp = React.useMemo(() => {\n        return links.map(({ name, link }, i) =>\n            <MenuItem key={i} onClick={handleClose} href={link} component={Link}>\n                {name}\n            </MenuItem>)\n    }, [handleClose]);\n\n\n    return (\n        <Menu\n            id=\"menu-appbar\"\n            anchorEl={trigger}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={Boolean(trigger)}\n            onClose={handleClose}\n        >\n            {linksComp}\n\n            <MenuItem onClick={() => {\n                handleClose();\n                logout();\n            }}>\n                Wyloguj\n            </MenuItem>\n        </Menu>\n    );\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\n\nimport AccountMenu from './AccountMenu';\nimport useSession from '../../../auth/useSession';\nimport { Avatar, Link } from '@mui/material';\nimport paths from '../../../shared/path';\nimport ImageService from '../../../services/ImageService';\n\n\ninterface NavigationBarProps {\n\ttoggleDrawer: any\n}\n\n\nexport default function NavigationBar(props: NavigationBarProps) {\n\tconst { user } = useSession();\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleMenu = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t}, []);\n\n\tconst handleClose = React.useCallback(() => {\n\t\tsetAnchorEl(null);\n\t}, []);\n\n\treturn (\n\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={props.toggleDrawer}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\t\tsx={{ mr: 2, color: \"background.default\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuIcon color='inherit' />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\t\t\t\t\t<Typography variant=\"h4\" component=\"span\" sx={{\n\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\tfontFamily: \"Dancing Script, cursive\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\thref={user ? paths.HOME : paths.PUBLIC}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\twidth: 'fit-content',\n\t\t\t\t\t\t\t\tcolor: 'background.default',\n\t\t\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\t\t\ttextDecoration: 'none'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRav System\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\talt={user.name}\n\t\t\t\t\t\t\t\t\tsrc={ImageService.getLink(user.image)}\n\t\t\t\t\t\t\t\t\tsx={{ width: 42, height: 42 }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<AccountMenu\n\t\t\t\t\t\t\t\ttrigger={anchorEl}\n\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n}\n","import React from \"react\";\nimport AppDrawer from \"./Drawer\";\nimport NavigationBar from \"./NavigationBar\";\n\n\nexport default function Navigation() {\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst toggleDrawer = React.useCallback((\n\t\tevent: React.KeyboardEvent | React.MouseEvent,\n\t\tshouldWork: boolean = true\n\t) => {\n\t\tevent.stopPropagation();\n\t\tif (\n\t\t\tshouldWork &&\n\t\t\tevent.type === 'keydown' &&\n\t\t\t((event as React.KeyboardEvent).key === 'Tab' ||\n\t\t\t\t(event as React.KeyboardEvent).key === 'Shift')\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(old => !old);\n\t}, []);\n\n\treturn <>\n\t\t<NavigationBar toggleDrawer={toggleDrawer} />\n\t\t<AppDrawer\n\t\t\topen={open}\n\t\t\ttoggleOpen={toggleDrawer}\n\t\t/>\n\t</>\n}","import { Box, Container, CssBaseline } from '@mui/material';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n\nimport Theme from './shared/Theme';\nimport SessionProvider from './auth/sessionProvider'\nimport Tabs from './components/pages';\nimport Footer from './components/Footer';\nimport { HashRouter } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport plLocale from 'date-fns/locale/pl';\nimport NotificationContextProvider from './contexts/NotificationContext/NotificationContextProvider';\nimport { ResourceMapContextProvider } from './contexts/ResourceMapContext';\nimport Navigation from './components/Navigation';\n\n\n\nfunction App() {\n\treturn (\n\t\t<Theme>\n\t\t\t<LocalizationProvider dateAdapter={AdapterDateFns} locale={plLocale}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Box component=\"div\" className=\"App\" sx={{ backgroundColor: 'background.default' }}>\n\t\t\t\t\t<HashRouter>\n\t\t\t\t\t\t<NotificationContextProvider>\n\t\t\t\t\t\t\t<SessionProvider >\n\t\t\t\t\t\t\t\t<ResourceMapContextProvider>\n\t\t\t\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t<Tabs />\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t\t\t</ResourceMapContextProvider>\n\t\t\t\t\t\t\t</SessionProvider>\n\t\t\t\t\t\t</NotificationContextProvider>\n\t\t\t\t\t</HashRouter>\n\t\t\t\t</Box>\n\t\t\t</LocalizationProvider>\n\t\t</Theme>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorkerRegistration.register();","import Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { SxProps } from \"@mui/system\";\n\n\n\ninterface SmallCardProps {\n    children: React.ReactNode | React.ReactNode[];\n    title?: string,\n    titleComponent?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6',\n    sx?: SxProps\n}\n\n\nexport default function SmallCard(props: SmallCardProps) {\n    return (\n        <Paper elevation={0} sx={{\n            p: 2,\n            ...props.sx\n        }}>\n            {props?.title && <Typography variant='body2' component={props.titleComponent ?? 'h2'} color='text.secondary'>\n                {props.title}\n            </Typography>}\n            {props.children}\n        </Paper>\n    )\n}","import Reservation from \"../models/Reservation\";\nimport paths from \"../shared/path\";\nimport { AppURLParams, PaginationQueryParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface ReservationsQueryParams extends PaginationQueryParams {\n    from?: string,\n    search?: string\n}\n\nexport interface CreateReservationData {\n    title: string,\n    description: string,\n    plannedStart: string,\n    plannedEnd: string,\n    roomId?: number\n}\n\nexport interface UpdateReservationData {\n    [index: string]: any,\n    title?: string,\n    description?: string,\n    plannedStart?: string,\n    plannedEnd?: string,\n    roomId?: number\n}\n\nenum Colors {\n    success = '#edf7ed',\n    error = '#fdeded',\n    info = '#e5f6fd',\n    warning = '#fff4e5',\n    inert = '#f5f5f5'\n}\n\ninterface ReservationStatus {\n    message: string,\n    color: Colors\n}\n\n\n\nclass ReservationService extends Service {\n\n    private emitStatus(mess: string, color: Colors): ReservationStatus {\n        return { message: mess, color: color };\n    }\n\n    private localPreparPath(urlParams: AppURLParams): string {\n        if (\n            window.location.toString().includes(paths.HOME)\n            && Object.keys(urlParams).length === 0\n        ) {\n            return '/users/' + this.userId.toString();\n        }\n        return this.preparePath(urlParams);\n    }\n\n\n    public getReservations(\n        urlParams: AppURLParams,\n        queryParams: ReservationsQueryParams\n    ) {\n        return this.get(`${this.localPreparPath(urlParams)}/reservations`, queryParams);\n    }\n\n\n    public createOne(data: CreateReservationData) {\n        return this.post('/reservations', data)\n    }\n\n    public update(id: number, data: UpdateReservationData) {\n        return this.patch(`/reservations/${id}`, data);\n    }\n\n    public pingKey(id: number, key: string) {\n        return this.patch(`/reservations/${id}/keys`, {\n            RFIDTag: key\n        });\n    }\n\n    public remove(id: number) {\n        return this.delete(`/reservations/${id}`);\n    }\n\n    public resolveStatus(reservation: Reservation): ReservationStatus {\n\n        const nowTimestamp = Date.now();\n\n        const now = new Date(nowTimestamp);\n        const now_minus15 = new Date(nowTimestamp - 900_000);\n        const now_plus15 = new Date(nowTimestamp + 900_000);\n        const { actualStart, plannedStart, actualEnd, plannedEnd } = reservation;\n\n\n        const start = new Date(actualStart ? actualStart : plannedStart);\n        const end = new Date(actualEnd ? actualEnd : plannedEnd);\n\n\n        // nie rozpoczęła się\n        if (!actualStart) {\n            // jest już po czasie, i czeka do +15 minut na odbiór\n            if (start < now && start > now_minus15) return this.emitStatus('Powinna zostać już odebrana', Colors.warning);\n\n            // za 15 minut zaczyna się rezerwacja\n            if (start > now && start < now_plus15) return this.emitStatus('Za chwilę zostanie odebrana', Colors.info);\n\n            // nie została odbrana w czasie <planowany start + 15 minut>\n            if (start < now_plus15) return this.emitStatus('Nieodebrana.', Colors.error)\n\n            return this.emitStatus('Oczekuje', Colors.inert)\n\n            // rozpoczęła się\n        } else if (actualStart) {\n            // zakończyła się\n            if (actualEnd) return this.emitStatus('Rezerwacja zakończona.', Colors.inert);\n\n            // nie zakończyła się\n            if (!actualEnd) {\n                // kończy się w ciągu 15 minut\n                if (now < end && now_plus15 > end) return this.emitStatus('Za chwilę się kończy.', Colors.info);\n\n                // czas zakończenia już minął\n                if (now > end) {\n                    const end_plus15 = new Date(Date.parse(end.toString()) + 900_000)\n\n                    // dodajemy 15 minut\n                    if (now < end_plus15) return this.emitStatus('Powinna się zakończyć.', Colors.warning);\n\n                    // dodane 15 minut już minęło\n                    if (now > end_plus15) return this.emitStatus('Czas minął, klucz nie oddany.', Colors.error);\n                }\n\n                return this.emitStatus('Rezerwacja trwa.', Colors.success);\n            }\n        }\n\n        return this.emitStatus(\"Status nieznany\", Colors.warning);\n    }\n}\n\nexport default new ReservationService()"],"sourceRoot":""}