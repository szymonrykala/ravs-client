{"version":3,"sources":["components/pages/public/FormPage.tsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/icons-material/Login.js","components/pages/public/Login/Form.tsx","components/pages/public/Login/Login.tsx"],"names":["FormPage","props","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","backgroundColor","padding","borderRadius","m","bgcolor","icon","variant","title","children","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","styles","ownerState","root","indeterminate","color","capitalize","theme","_extends","palette","text","secondary","disableRipple","alpha","action","active","main","hoverOpacity","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","Form","login","useSession","remember","setRemember","email","localStorage","getItem","toString","password","data","setData","onChange","e","old","target","handleSubmit","event","preventDefault","setItem","Box","onSubmit","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Button","mb","Grid","container","item","xs","Link","ReactRouterLink","to","paths","REMIND_PASSWORD","REGISTER","ACTIVATE","Login"],"mappings":"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","file":"static/js/5.a7e14059.chunk.js","sourcesContent":["import { Avatar, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\n\ninterface FormPageProps {\n    children: React.ReactNode | React.ReactNodeArray,\n    title: string,\n    icon: React.ReactNode\n}\n\n\nexport default function FormPage(props: FormPageProps) {\n    return (\n        <Container component=\"div\" maxWidth=\"xs\">\n            <Box\n                sx={{\n                    marginTop: '5vw',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    backgroundColor: 'background.paper',\n                    padding: '4vw',\n                    borderRadius: '10px'\n                }}\n            >\n                <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n                    {props.icon}\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {props.title}\n                </Typography>\n                {props.children}\n            </Box>\n        </Container>\n    );\n};\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 7 9.6 8.4l2.6 2.6H2v2h10.2l-2.6 2.6L11 17l5-5-5-5zm9 12h-8v2h8c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-8v2h8v14z\"\n}), 'Login');\n\nexports.default = _default;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport useSession from '../../../../auth/useSession';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { LoginFormData } from '../../../../services/AuthService';\nimport paths from '../../../../shared/path';\n\n\n\nexport default function Form() {\n    const { login } = useSession();\n\n    const [remember, setRemember] = React.useState<boolean>(true);\n    const [data, setData] = React.useState<LoginFormData>({\n        email: localStorage.getItem('email')?.toString() ?? '',\n        password: '',\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback((event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        if (remember) localStorage.setItem('email', data.email);\n        login(data);\n    }, [data, login, remember]);\n\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Adres Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={data.email}\n                onChange={onChange}\n            />\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Hasło\"\n                type=\"password\"\n                id=\"password\"\n                value={data.password}\n                onChange={onChange}\n                autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n                control={<Checkbox\n                    onChange={() => setRemember(!remember)}\n                    name=\"remember\"\n                    checked={remember}\n                    color=\"primary\"\n                />}\n                label=\"Zapamiętaj mnie\"\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                Zaloguj\n            </Button>\n            <Grid container>\n                <Grid item xs>\n                    <Link component={ReactRouterLink} to={paths.REMIND_PASSWORD} variant=\"body2\">\n                        Zapomniałeś hasła?\n                    </Link>\n                </Grid>\n                <Grid item >\n                    <Link component={ReactRouterLink} to={paths.REGISTER} variant=\"body2\">\n                        Zarejestruj się!\n                    </Link>\n                </Grid>\n                <Grid item xs={12}>\n                    <Link component={ReactRouterLink} to={paths.ACTIVATE} variant=\"body2\">\n                        Aktywuj konto\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import FormPage from \"../FormPage\";\nimport Form from \"./Form\";\nimport LoginIcon from '@mui/icons-material/Login';\n\n\n\nexport default function Login() {\n    return (\n        <FormPage\n            title='Logowanie'\n            icon={<LoginIcon />}\n        >\n            <Form />\n        </FormPage>\n    );\n}"],"sourceRoot":""}