{"version":3,"sources":["services/SettingsService.ts","components/pages/protected/SettingsPage/SettingsContext/SettingsContextProvider.tsx","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","../node_modules/@mui/material/internal/svg-icons/ArrowDownward.js","../node_modules/@mui/material/TableSortLabel/tableSortLabelClasses.js","../node_modules/@mui/material/TableSortLabel/TableSortLabel.js","../node_modules/@mui/utils/esm/visuallyHidden.js","components/pages/protected/SettingsPage/components/EndpointsStats/EnhancedTableHead.tsx","components/pages/protected/SettingsPage/components/EndpointsStats/SortableTable.tsx","components/pages/protected/SettingsPage/components/EndpointsStats/EndpointsStats.tsx","components/pages/protected/SettingsPage/components/SettingsForm.tsx","components/pages/protected/SettingsPage/SettingsContext/useSettings.ts","components/pages/protected/SettingsPage/components/SettingsMain.tsx","components/pages/protected/SettingsPage/SettingsPage.tsx"],"names":["SettingsService","this","get","data","patch","Service","settingsContext","React","createContext","SettingsContextProvider","props","notify","useNotification","useState","settings","setSettings","load","useCallback","a","getAll","resp","description","useEffect","updateSettings","update","old","Provider","value","children","Loading","_LastPageIcon","_FirstPageIcon","_KeyboardArrowRight","_KeyboardArrowLeft","_KeyboardArrowLeft2","_KeyboardArrowRight2","_FirstPageIcon2","_LastPageIcon2","_excluded","TablePaginationActions","ref","backIconButtonProps","count","getItemAriaLabel","nextIconButtonProps","onPageChange","page","rowsPerPage","showFirstButton","showLastButton","other","_objectWithoutPropertiesLoose","theme","useTheme","_jsxs","_extends","_jsx","IconButton","onClick","event","disabled","title","direction","LastPageIcon","FirstPageIcon","color","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","getTablePaginationUtilityClass","slot","generateUtilityClass","_InputBase","tablePaginationClasses","generateUtilityClasses","TablePaginationRoot","styled","TableCell","name","overridesResolver","styles","root","overflow","palette","text","primary","fontSize","typography","pxToRem","padding","TablePaginationToolbar","Toolbar","actions","toolbar","minHeight","paddingRight","breakpoints","up","flexShrink","marginLeft","TablePaginationSpacer","spacer","flex","TablePaginationSelectLabel","selectLabel","body2","TablePaginationSelect","Select","selectIcon","select","input","selectRoot","marginRight","paddingLeft","textAlign","textAlignLast","TablePaginationMenuItem","MenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","from","to","defaultGetAriaLabel","type","TablePagination","inProps","colSpan","useThemeProps","ActionsComponent","className","colSpanProp","component","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","ownerState","classes","composeClasses","useUtilityClasses","MenuItemComponent","native","selectId","useId","id","labelId","as","clsx","length","variant","InputBase","onChange","icon","map","rowsPerPageOption","_createElement","isHostComponent","key","label","min","createSvgIcon","d","getTableSortLabelUtilityClass","tableSortLabelClasses","TableSortLabelRoot","ButtonBase","active","cursor","display","justifyContent","flexDirection","alignItems","secondary","opacity","TableSortLabelIcon","capitalize","transition","transitions","create","duration","shorter","userSelect","transform","TableSortLabel","hideSortIcon","IconComponent","ArrowDownwardIcon","slots","disableRipple","visuallyHidden","border","clip","height","margin","position","whiteSpace","width","headCells","numeric","disablePadding","EnhancedTableHead","order","orderBy","onRequestSort","TableHead","TableRow","headCell","sortDirection","property","Box","sx","descendingComparator","b","getComparator","SortableTable","chartsData","useCharts","setRowsPerPage","setPage","setOrder","setOrderBy","TableContainer","Table","minWidth","size","TableBody","endpoints","slice","sort","row","index","hover","method","generalEndpoint","calls","round","timeForEndpoint","avgTime","newPage","parseInt","target","EndpointsStats","ChartsContext","TabHeadLine","subtitle","FormField","mr","Typography","TextField","required","SettingsForm","useContext","setData","handleSubmit","preventDefault","handleChange","Number","Stack","spacing","onSubmit","mb","maxImageSize","Link","href","paths","ACCESS","defaultUserAccess","Grid","container","rowSpacing","item","xs","md","maxReservationTime","minReservationTime","reservationHistory","requestHistory","mt","Button","SettingsMain","SettingsPage","pages","useMemo","GenericLogsTab","SwipeableTabs","tabs","memo"],"mappings":"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","file":"static/js/12.94947486.chunk.js","sourcesContent":["import Service from \"./Service\";\n\n\nexport interface SettingsUpdateParams {\n    maxImageSize?: number,\n    defaultUserAccess?: number,\n    maxReservationTime?: number,\n    minReservationTime?: number,\n    reservationHistory?: number,\n    requestHistory?: number\n}\n\n\nclass SettingsService extends Service {\n\n    public getAll() {\n        return this.get('/configurations');\n    }\n\n    public update(data: SettingsUpdateParams) {\n        return this.patch('/configurations', data);\n    }\n}\n\nexport default new SettingsService();","import React from \"react\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport Settings from \"../../../../../models/Settings\";\nimport SettingsService, { SettingsUpdateParams } from \"../../../../../services/SettingsService\";\nimport Loading from \"../../../../../shared/components/Loading\";\nimport SettingsContextValue from \"./SettingsContextValue\";\n\n\n\nexport const settingsContext: any = React.createContext(null);\n\n\ninterface SettingsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function SettingsContextProvider(props: SettingsContextProviderProps) {\n    const notify = useNotification();\n\n    const [settings, setSettings] = React.useState<Settings>();\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await SettingsService.getAll();\n            setSettings(resp.data as Settings);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const updateSettings = React.useCallback(async (data: SettingsUpdateParams) => {\n        try {\n            await SettingsService.update(data);\n            setSettings(old => ({\n                ...old,\n                ...data as Settings\n            }))\n            notify(\"Ustawienia zostały zaktualizowane\", 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false\n    }, [notify]);\n\n\n    if (!settings) return <Loading />;\n\n    return (\n        <settingsContext.Provider value={{\n            settings,\n            updateSettings\n        } as SettingsContextValue}>\n            {props.children}\n        </settingsContext.Provider>\n    );\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2;\n\nconst _excluded = [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      children: theme.direction === 'rtl' ? _LastPageIcon || (_LastPageIcon = /*#__PURE__*/_jsx(LastPageIcon, {})) : _FirstPageIcon || (_FirstPageIcon = /*#__PURE__*/_jsx(FirstPageIcon, {}))\n    }), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, backIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleNextButtonClick,\n      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = /*#__PURE__*/_jsx(KeyboardArrowLeft, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {}))\n    })), showLastButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      children: theme.direction === 'rtl' ? _FirstPageIcon2 || (_FirstPageIcon2 = /*#__PURE__*/_jsx(FirstPageIcon, {})) : _LastPageIcon2 || (_LastPageIcon2 = /*#__PURE__*/_jsx(LastPageIcon, {}))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _InputBase;\n\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: theme.palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\n\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    className,\n    colSpan: colSpanProp,\n    component = TableCell,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    SelectProps = {},\n    showFirstButton = false,\n    showLastButton = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const MenuItemComponent = SelectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId(SelectProps.id);\n  const labelId = useId(SelectProps.labelId);\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\",\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {})),\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, SelectProps, {\n        classes: _extends({}, SelectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (SelectProps.classes || {}).root),\n          select: clsx(classes.select, (SelectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (SelectProps.classes || {}).icon)\n        }),\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        getItemAriaLabel: getItemAriaLabel\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableSortLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiTableSortLabel', slot);\n}\nconst tableSortLabelClasses = generateUtilityClasses('MuiTableSortLabel', ['root', 'active', 'icon', 'iconDirectionDesc', 'iconDirectionAsc']);\nexport default tableSortLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"active\", \"children\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport ButtonBase from '../ButtonBase';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport tableSortLabelClasses, { getTableSortLabelUtilityClass } from './tableSortLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction,\n    active\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active'],\n    icon: ['icon', `iconDirection${capitalize(direction)}`]\n  };\n  return composeClasses(slots, getTableSortLabelUtilityClass, classes);\n};\n\nconst TableSortLabelRoot = styled(ButtonBase, {\n  name: 'MuiTableSortLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.active && styles.active];\n  }\n})(({\n  theme\n}) => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'inherit',\n  alignItems: 'center',\n  '&:focus': {\n    color: theme.palette.text.secondary\n  },\n  '&:hover': {\n    color: theme.palette.text.secondary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 0.5\n    }\n  },\n  [`&.${tableSortLabelClasses.active}`]: {\n    color: theme.palette.text.primary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 1,\n      color: theme.palette.text.secondary\n    }\n  }\n}));\nconst TableSortLabelIcon = styled('span', {\n  name: 'MuiTableSortLabel',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, styles[`iconDirection${capitalize(ownerState.direction)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  fontSize: 18,\n  marginRight: 4,\n  marginLeft: 4,\n  opacity: 0,\n  transition: theme.transitions.create(['opacity', 'transform'], {\n    duration: theme.transitions.duration.shorter\n  }),\n  userSelect: 'none'\n}, ownerState.direction === 'desc' && {\n  transform: 'rotate(0deg)'\n}, ownerState.direction === 'asc' && {\n  transform: 'rotate(180deg)'\n}));\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nconst TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableSortLabel'\n  });\n\n  const {\n    active = false,\n    children,\n    className,\n    direction = 'asc',\n    hideSortIcon = false,\n    IconComponent = ArrowDownwardIcon\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    active,\n    direction,\n    hideSortIcon,\n    IconComponent\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(TableSortLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    component: \"span\",\n    disableRipple: true,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [children, hideSortIcon && !active ? null : /*#__PURE__*/_jsx(TableSortLabelIcon, {\n      as: IconComponent,\n      className: clsx(classes.icon),\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   * @default false\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   * @default 'asc'\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   * @default false\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   * @default ArrowDownwardIcon\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableSortLabel;","const visuallyHidden = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: -1,\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1px'\n};\nexport default visuallyHidden;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport { visuallyHidden } from '@mui/utils';\nimport { EndpointStatItem } from '../../../../../../models/Stats';\n\n\n\n\n\ninterface HeadCell {\n    disablePadding: boolean;\n    id: keyof EndpointStatItem;\n    label: string;\n    numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n    {\n        id: 'method',\n        numeric: false,\n        disablePadding: true,\n        label: 'Metoda',\n    },\n    {\n        id: 'generalEndpoint',\n        numeric: false,\n        disablePadding: false,\n        label: 'Ścieżka',\n    },\n    {\n        id: 'calls',\n        numeric: true,\n        disablePadding: false,\n        label: 'Liczba zapytań',\n    },\n    {\n        id: 'timeForEndpoint',\n        numeric: true,\n        disablePadding: false,\n        label: 'Całkowity czas',\n    },\n    {\n        id: 'avgTime',\n        numeric: true,\n        disablePadding: false,\n        label: 'Śr. czas wykonania',\n    },\n];\n\nexport type Order = 'asc' | 'desc';\n\n\ninterface EnhancedTableProps {\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof EndpointStatItem) => void;\n    order: Order;\n    orderBy: string;\n}\n\n\nexport default function EnhancedTableHead(props: EnhancedTableProps) {\n    const { order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property: keyof EndpointStatItem) => (event: React.MouseEvent<unknown>) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        padding={'normal'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport TablePagination from '@mui/material/TablePagination';\nimport { useCharts } from '../../../components/Charts';\nimport { EndpointChartsData, EndpointStatItem } from '../../../../../../models/Stats';\nimport EnhancedTableHead, { Order } from './EnhancedTableHead';\n\n\n\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (\n        a: { [key in Key]: number | string },\n        b: { [key in Key]: number | string },\n    ) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n\n\nexport default function SortableTable() {\n    const { chartsData } = useCharts<EndpointChartsData>();\n\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [page, setPage] = React.useState(0);\n\n    const [order, setOrder] = React.useState<Order>('asc');\n    const [orderBy, setOrderBy] = React.useState<keyof EndpointStatItem>('generalEndpoint');\n\n\n    const handleRequestSort = (\n        event: React.MouseEvent<unknown>,\n        property: keyof EndpointStatItem,\n    ) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n\n    return (\n        <>\n            <TableContainer>\n                <Table\n                    sx={{ minWidth: 550 }}\n                    aria-labelledby=\"Endpointy aplikacji\"\n                    size='medium'\n                >\n                    <EnhancedTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={handleRequestSort}\n\n                    />\n                    <TableBody>\n                        {chartsData.endpoints.slice().sort(getComparator(order, orderBy))\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, index) =>\n                                <TableRow\n                                    hover\n                                    key={index}\n                                >\n                                    <TableCell >{row.method}</TableCell>\n                                    <TableCell>{row.generalEndpoint}</TableCell>\n                                    <TableCell >{row.calls}</TableCell>\n                                    <TableCell >{Math.round(row.timeForEndpoint * 1000) / 1000}</TableCell>\n                                    <TableCell >{Math.round(row.avgTime * 1000) / 1000}</TableCell>\n                                </TableRow>\n                            )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={chartsData.endpoints.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </>\n    );\n}\n","import Box from '@mui/material/Box';\nimport TabHeadLine from '../../../../../../shared/components/TabHeadLine';\nimport { ChartsContext } from '../../../components/Charts/ChartsContext';\nimport SortableTable from './SortableTable';\n\n\n\nexport default function EndpointsStats() {\n\treturn (\n\t\t<Box sx={{ width: '100%' }}>\n\t\t\t<ChartsContext>\n\t\t\t\t<TabHeadLine\n\t\t\t\t\ttitle='Parametry endpointów'\n\t\t\t\t\tsubtitle=\"Wylistowane są wszystkie ścieżki na jakie aplikacja serwerowa dostaje zapytania od wszystkich aplikacji klienckich.\n\t\t\t\tParametry wydajnościowe dla każdej z nich mogą być pomocne w konfigurowaniu oraz planowaniu rozwoju aplikacji.\"\n\t\t\t\t/>\n\n\t\t\t\t<SortableTable />\n\t\t\t</ChartsContext>\n\t\t</Box>\n\t);\n}\n","import { Button, Link } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { SettingsUpdateParams } from \"../../../../../services/SettingsService\";\nimport paths from \"../../../../../shared/path\";\nimport { useSettings } from \"../SettingsContext\";\n\n\ninterface FormFieldProps {\n    text: string | React.ReactNode,\n    name: string,\n    label: string,\n    onChange: (evt: React.ChangeEvent<HTMLInputElement>) => void,\n    value: string | number | boolean\n}\n\n\nfunction FormField(props: FormFieldProps) {\n    return (\n        <Box mr={1}>\n            <Typography variant='body2' >\n                {props.text}\n            </Typography>\n            <TextField\n                required\n                type='number'\n                margin='dense'\n                name={props.name}\n                id={`${props.label}-name`}\n                label={props.label}\n                value={props.value}\n                onChange={props.onChange}\n            />\n        </Box>\n    );\n}\n\n\n\nexport default function SettingsForm() {\n    const { settings, updateSettings } = useSettings();\n\n    const [data, setData] = React.useState<SettingsUpdateParams>({});\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        await updateSettings(data);\n        setData({});\n    }, [\n        data,\n        updateSettings,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: Number(event.target.value)\n        }));\n    }, []);\n\n\n    return (\n        <span>\n            <Stack spacing={3} component='form' onSubmit={handleSubmit}>\n                <Typography component='h2' variant='h5'>\n                    Formularz:\n                </Typography>\n\n                <span>\n                    <Typography component='h3' variant='h6' mb={1}>\n                        Ustawienia zdjęć\n                    </Typography>\n                    <FormField\n                        text={<>Maksymalny rozmiar zdjecia (podawany <b>w bajtach</b>) ładowanego przez użytkownika do aplikacji.</>}\n                        name='maxImageSize'\n                        label='max. rozmiar'\n                        value={data.maxImageSize ?? settings.maxImageSize}\n                        onChange={handleChange}\n                    />\n                </span>\n\n                <span>\n                    <Typography component='h3' variant='h6' mb={1}>\n                        Użytkownicy\n                    </Typography>\n                    <FormField\n                        text={<>Domyślny numer identyfikacyjny klasy deostępowej przypisywany dla każdego nowego użytkownika.\n                            <Link href={paths.ACCESS}>klasy dostępu</Link></>}\n                        name='defaultUserAccess'\n                        label='numer ID'\n                        value={data.defaultUserAccess ?? settings.defaultUserAccess}\n                        onChange={handleChange}\n                    />\n                </span>\n\n                <Grid container rowSpacing={2}>\n                    <Grid item xs={12}>\n                        <Typography component='h3' variant='h6'>\n                            Czas trwania rezerwacji:\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Maksymalny czas trwania rezerwacji <b>w minutach</b>.\n                                Stworzone wcześniej rezerwacje pozostaną niezmienione.</>}\n                            name='maxReservationTime'\n                            label='max. czas'\n                            value={data.maxReservationTime ?? settings.maxReservationTime}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Minimalny czas trwania rezerwacji <b>w minutach</b>.\n                                Stworzone wcześniej rezerwacje pozostaną niezmienione.</>}\n                            name='minReservationTime'\n                            label='min. czas'\n                            value={data.minReservationTime ?? settings.minReservationTime}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid container rowSpacing={2}>\n                    <Grid item xs={12}>\n                        <Typography component='h3' variant='h6'>\n                            Czas przechowywania danych:\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Ilość czasu <b>w dniach</b> po którym historia rezerwacji ma zostać usunięta.\n                                Zmiana tego parametru wpływa bezpośrednio na statystyki.</>}\n                            name='reservationHistory'\n                            label='Ilość dni'\n                            value={data.reservationHistory ?? settings.reservationHistory}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Ilość czasu <b>w dniach</b> po którym logi zostaną usunięte.</>}\n                            name='requestHistory'\n                            label='Ilość dni'\n                            value={data.requestHistory ?? settings.requestHistory}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n                <Stack direction='row' justifyContent=\"space-around\" mt={1.5}>\n                    <Button\n                        color='error'\n                    >\n                        Przywróć\n                    </Button>\n                    <Button\n                        color='success'\n                        type='submit'\n                    >\n                        Zatwierdź\n                    </Button>\n                </Stack>\n            </Stack>\n        </span>\n    );\n}","import React from \"react\";\nimport { settingsContext } from \"./SettingsContextProvider\";\nimport SettingsContextValue from \"./SettingsContextValue\";\n\nexport default function useSettings() {\n    return React.useContext(settingsContext) as SettingsContextValue;\n}","import { Stack, Typography } from \"@mui/material\";\nimport SettingsForm from \"./SettingsForm\";\n\n\n\nexport default function SettingsMain() {\n    return (\n        <Stack spacing={3}>\n            <span>\n                <Typography component='h1' variant='h3' color='primary.dark'>\n                    Ustawienia platformy\n                </Typography>\n                <Typography variant='body1' color=\"text.secondary\" mt=\"5px\">\n                    Dostępne tutaj opcje wpływają znacząco na funkcjonowanie całej platformy. <br />\n                    Postępuj racjonalnie podczas modyfikacji znajdujących się tutaj parametrów.\n                </Typography>\n            </span>\n\n            <SettingsForm />\n\n        </Stack>\n    );\n}","import React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport { SettingsContext } from \"./SettingsContext\";\nimport EndpointsStats from \"./components/EndpointsStats\";\nimport SettingsMain from \"./components/SettingsMain\";\n\n\n\nfunction SettingsPage() {\n\n\n    const pages = React.useMemo(() => {\n        return [\n            { name: 'Ustawienia', component: < SettingsMain /> },\n            { name: 'Logi', component: <GenericLogsTab /> },\n            { name: 'Endpointy', component: <EndpointsStats /> }\n        ];\n    }, []);\n\n\n    return (\n        <SettingsContext>\n            <SwipeableTabs tabs={pages} />\n        </SettingsContext>\n    );\n}\n\nexport default React.memo(SettingsPage);"],"sourceRoot":""}