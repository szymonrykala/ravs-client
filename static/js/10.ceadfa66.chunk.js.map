{"version":3,"sources":["services/AccessService.ts","components/pages/protected/AccessPage/Forms/AccessEditModal.tsx","components/pages/protected/AccessPage/Forms/CreateAccessModal.tsx","components/pages/protected/AccessPage/AccessContext/AccessContextProvider.tsx","components/pages/protected/AccessPage/AccessContext/useAccess.ts","components/pages/protected/AccessPage/components/AccessesList/AccessListItem.tsx","components/pages/protected/AccessPage/components/AccessesList/AddItem.tsx","components/pages/protected/AccessPage/components/AccessesList/AccessesList.tsx","components/pages/protected/AccessPage/components/AccessInfo.tsx","components/pages/protected/AccessPage/components/EditUsersAccess/EditUsersAccess.tsx","components/pages/protected/AccessPage/AccessPage.tsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js"],"names":["AccessService","_path","this","get","id","delete","path","data","patch","post","Service","fields","name","label","AccessEditModal","access","open","onClose","onSubmit","React","useState","setData","handleChange","useCallback","event","value","target","checked","old","close","handleSubmit","a","GenericModal","FormGridContainer","onCancel","title","subtitle","Grid","item","xs","TextField","required","onChange","map","field","index","FormControlLabel","labelPlacement","control","Switch","inputProps","ml","DatesFooter","model","CreateAccessModal","setName","autoFocus","accessContext","createContext","AccessContextProvider","props","notify","useNotification","modalOpen","setModalOpen","selectedAccessId","setSelectedAccessId","accessesList","setAccessesList","load","getAll","resp","description","useEffect","updateAccess","accessId","update","deleteAccess","remove","filter","createAccess","create","unshift","_created","Date","toUTCString","_updated","Object","assign","selectedAccess","useMemo","find","openAccess","Provider","children","Loading","useAccess","useContext","AccessListItem","ListItem","button","onClick","onSelect","sx","my","ListItemAvatar","ListItemText","primary","ListItemSecondaryAction","IconButton","color","onDelete","AddItem","disablePadding","ListItemButton","ListItemIcon","secondary","AccessesList","createModalOpen","setCreateModalOpen","deleteModalOpen","setDeleteModalOpen","toDelete","setToDelete","renderedRows","reverse","handleDelete","DeleteModal","objectName","onSuccess","Stack","spacing","TabHeadLine","List","maxWidth","explonations","text","AccessInfo","rendered","Typography","variant","component","mb","mt","rel","href","usersNotUsers","b","ai","undefined","bi","notNumNum","indexOf","intersection","EditUsersAccess","setChecked","leftUsers","setLeftUsers","rightUsers","setRightUsers","left","right","setAccess","updateUsersAccess","users","calls","user","UserService","Promise","all","results","loadUsers","getUsers","deleted","then","leftChecked","rightChecked","handleToggle","currentIndex","push","splice","handleCheckedRight","usersToMove","moved","concat","handleCheckedLeft","l","console","log","handleSelectChange","Number","customList","direction","Card","Box","p","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","Divider","height","bgcolor","overflow","dense","role","Checkbox","tabIndex","disableRipple","email","ev","stopPropagation","dynamicPaths","toUser","container","justifyContent","alignItems","sm","Button","size","disabled","length","AccessPage","logsAdmin","useResolvedAccess","pages","arr","GenericLogsTab","SwipeableTabs","tabs","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","indeterminate","capitalize","theme","_extends","palette","backgroundColor","alpha","action","active","main","hoverOpacity","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize"],"mappings":"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","file":"static/js/10.ceadfa66.chunk.js","sourcesContent":["import Service from \"./Service\";\n\n\n\nexport interface AccessViewParams {\n    addressId: string,\n}\n\n\nexport interface AccessUpdateParams {\n    [index: string]: string | boolean | undefined,\n    name?: string,\n    owner?: boolean,\n    accessAdmin?: boolean,\n    premisesAdmin?: boolean,\n    keysAdmin?: boolean,\n    reservationsAdmin?: boolean,\n    reservationsAbility?: boolean,\n    logsAdmin?: boolean,\n    statsViewer?: boolean,\n}\n\nexport interface AccessCreateParams {\n    name: string,\n}\n\n\nclass AccessService extends Service {\n    _path = '/accesses';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public getAll() {\n        return this.get('/accesses');\n    }\n\n    public remove(id?: number) {\n        return this.delete(\n            id ? `${this.path}/${id}` : this.path\n        );\n    }\n\n    public update(id: number, data: AccessUpdateParams) {\n        return this.patch(`${this.path}/${id}`, data);\n    }\n\n    public create(data: AccessCreateParams) {\n        return this.post(this.path, data)\n    }\n}\n\nexport default new AccessService()","import FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Grid from \"@mui/material/Grid\";\nimport Switch from \"@mui/material/Switch\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport Access from \"../../../../../models/Access\";\nimport { AccessUpdateParams } from \"../../../../../services/AccessService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../components/GenericModal\";\nimport DatesFooter from \"../../components/DatesFooter\";\n\n\n\ninterface AccessEditModalProps {\n    access: Access,\n    open: boolean,\n    onClose: () => void,\n    onSubmit: (accessId: number, data: AccessUpdateParams) => Promise<boolean>\n}\n\n\nconst fields = [\n    {\n        name: 'owner',\n        label: 'Właściciel'\n    }, {\n        name: 'accessAdmin',\n        label: 'Administrator klas dostępu'\n    }, {\n        name: 'premisesAdmin',\n        label: 'Administrator inwentarza'\n    }, {\n        name: 'keysAdmin',\n        label: 'Administrator kluczy'\n    }, {\n        name: 'reservationsAdmin',\n        label: 'Administrator rezerwacji '\n    }, {\n        name: 'reservationsAbility',\n        label: 'Możliwość rezerwacji'\n    }, {\n        name: 'logsAdmin',\n        label: 'Administrator logów'\n    }, {\n        name: 'statsViewer',\n        label: 'Dostęp do statystyk'\n    },\n];\n\n\nexport default function AccessEditModal({\n    access,\n    open,\n    onClose,\n    onSubmit,\n}: AccessEditModalProps) {\n\n    const [data, setData] = React.useState<AccessUpdateParams>({});\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | boolean;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = event.target.value;\n                break;\n            default:\n                value = event.target.checked;\n                break;\n        }\n\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await onSubmit(access.id, data)) {\n            onClose();\n            setData({});\n        }\n    }, [\n        onClose,\n        onSubmit,\n        access.id,\n        data\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n        >\n            <FormGridContainer\n                onSubmit={handleSubmit}\n                onCancel={close}\n                title=\"Edycja klasy dostępu\"\n                subtitle=\"Edycja klasy dostępu. Wprowadzone zmiany w sposób istotny wpływają na zakres funkcji użytkowników.\"\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        name=\"name\"\n                        label=\"nazwa\"\n                        id=\"nazwa\"\n                        value={data.name ?? access.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                {\n                    fields.map((field, index) =>\n                        <Grid item xs={12} key={index}>\n                            <FormControlLabel\n                                labelPlacement=\"start\"\n                                control={<Switch\n                                    id={`access-${field.name}`}\n                                    name={field.name}\n                                    inputProps={{ 'aria-label': field.label }}\n                                    onChange={handleChange}\n                                    checked={(field.name in data) ? data[field.name] : (access[field.name])}\n                                />}\n                                label={field.label}\n                            />\n                        </Grid>\n                    )\n                }\n                <Grid item xs={12} ml={2}>\n                    <DatesFooter model={access} />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    )\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { AccessCreateParams } from \"../../../../../services/AccessService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../components/GenericModal\";\n\n\n\ninterface CreateAccessModalProps {\n    open: boolean,\n    onClose: () => void,\n    onSubmit: (data: AccessCreateParams) => Promise<boolean>\n}\n\n\nexport default function CreateAccessModal({\n    open,\n    onClose,\n    onSubmit,\n}: CreateAccessModalProps) {\n\n    const [name, setName] = React.useState<string>('');\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setName(event.target.value);\n    }, []);\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setName('');\n    }, [\n        onClose\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await onSubmit({\n            name: name\n        })) {\n            onClose();\n            setName('');\n        }\n    }, [\n        onClose,\n        onSubmit,\n        name\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n        >\n            <FormGridContainer\n                onSubmit={handleSubmit}\n                onCancel={close}\n                title=\"Tworzenie klasy dostępu\"\n                subtitle=\"Podaj nazwę dla nowej klasy dostępu. Stworzona zostanie klasa bez żadnych uprawnień - pamiętaj aby dostosować ja do swoich potrzeb.\"\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        autoFocus\n                        required\n                        name=\"name\"\n                        label=\"nazwa\"\n                        id=\"nazwa\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n            </FormGridContainer>\n        </GenericModal>\n    )\n}","import React from \"react\";\nimport { AccessContextValue } from \".\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport Access from \"../../../../../models/Access\";\nimport AccessService, { AccessCreateParams, AccessUpdateParams } from \"../../../../../services/AccessService\";\nimport Loading from \"../../../../../shared/components/Loading\";\nimport { EditForm } from \"../Forms\";\n\n\n\nexport const accessContext: any = React.createContext(null);\n\n\ninterface AccessContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function AccessContextProvider(props: AccessContextProviderProps) {\n    const notify = useNotification();\n\n    const [modalOpen, setModalOpen] = React.useState<boolean>(false);\n    const [selectedAccessId, setSelectedAccessId] = React.useState<number>();\n    const [accessesList, setAccessesList] = React.useState<Access[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await AccessService.getAll();\n            setAccessesList(resp.data as Access[]);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setAccessesList([]);\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const updateAccess = React.useCallback(async (accessId: number, data: AccessUpdateParams) => {\n        try {\n            if (await AccessService.update(accessId, data)) {\n                setAccessesList(old => {\n                    if (old)\n                        return old.map(access => {\n                            if (access.id === accessId) {\n                                access = {\n                                    ...access,\n                                    ...data\n                                }\n                            }\n                            return access;\n                        });\n\n                });\n                notify('Klasa dostępu została zaktualizowana', 'success');\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const deleteAccess = React.useCallback(async (id?: number) => {\n        try {\n            await AccessService.remove(id);\n\n            setAccessesList(old => {\n                if (!old) return;\n                return old.filter(access => access.id !== id);\n            });\n\n            notify('Klasa dostępu została usunięta', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const createAccess = React.useCallback(async (data: AccessCreateParams) => {\n        try {\n            const resp = await AccessService.create(data);\n\n            setAccessesList(old => {\n                old?.unshift({\n                    ...data,\n                    id: resp.data,\n                    _created: (new Date()).toUTCString(),\n                    _updated: (new Date()).toUTCString(),\n                } as Access)\n                return Object.assign([], old);\n            });\n\n            notify('Klasa dostępu została utworzona', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const selectedAccess = React.useMemo(() => {\n        return accessesList?.find(({ id }) => id === selectedAccessId);\n    }, [selectedAccessId, accessesList]);\n\n\n    const openAccess = React.useCallback((id: number) => {\n        setSelectedAccessId(id);\n        setModalOpen(true);\n    }, []);\n\n\n    if (!accessesList) return <Loading />;\n\n    return (\n        <accessContext.Provider value={{\n            accessesList,\n            updateAccess,\n            deleteAccess,\n            createAccess,\n            openAccess,\n        } as AccessContextValue}>\n            {props.children}\n            {\n                selectedAccess &&\n                <EditForm\n                    open={modalOpen}\n                    onSubmit={updateAccess}\n                    onClose={() => setModalOpen(false)}\n                    access={selectedAccess}\n                />\n            }\n        </accessContext.Provider>\n    );\n}","import React from \"react\";\nimport { accessContext } from \"./AccessContextProvider\";\nimport AccessContextValue from \"./AccessContextValue\";\n\n\nexport default function useAccess() {\n    return React.useContext(accessContext) as AccessContextValue;\n}","import IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText } from \"@mui/material\";\n\n\n\ninterface AccessListItemProps {\n    id: number,\n    name: string,\n    onSelect: () => void,\n    onDelete: () => void\n}\n\n\nexport default function AccessListItem(props: AccessListItemProps) {\n    return (\n        <ListItem button onClick={props.onSelect} sx={{ my: '5px' }}>\n            <ListItemAvatar>\n                {props.id}\n            </ListItemAvatar>\n\n            <ListItemText primary={props.name} />\n\n            <ListItemSecondaryAction>\n                <IconButton\n                    color='error'\n                    onClick={props.onDelete}\n                >\n                    <DeleteIcon />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}","import AddCircleIcon from '@mui/icons-material/AddCircle';\nimport ListItem from \"@mui/material/ListItem\";\nimport { ListItemButton, ListItemIcon, ListItemText } from \"@mui/material\";\n\n\n\ninterface AddItemProps {\n    onClick: () => void\n}\n\n\nexport default function AddItem(props: AddItemProps) {\n    return (\n        <ListItem disablePadding >\n            <ListItemButton onClick={props.onClick}>\n                <ListItemIcon>\n                    <AddCircleIcon color=\"primary\" />\n                </ListItemIcon>\n\n                <ListItemText secondary='Dodaj nową klasę dostępu' />\n            </ListItemButton>\n        </ListItem>\n    );\n}","import Stack from \"@mui/material/Stack\";\nimport React from \"react\";\nimport DeleteModal from \"../../../components/DeleteModal\";\nimport TabHeadLine from \"../../../../../../shared/components/TabHeadLine\";\n\nimport { useAccess } from \"../../AccessContext\";\nimport { CreateForm } from \"../../Forms\";\nimport AccessListItem from \"./AccessListItem\";\nimport { List } from \"@mui/material\";\nimport AddItem from \"./AddItem\";\n\n\n\nexport default function AccessesList() {\n    const { accessesList, openAccess, createAccess, deleteAccess } = useAccess();\n\n    const [createModalOpen, setCreateModalOpen] = React.useState(false);\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);\n\n    const [toDelete, setToDelete] = React.useState<{ id: number, name: string } | null>(null);\n\n    const renderedRows = React.useMemo(() => {\n        return accessesList.map(({ id, name }) =>\n            <AccessListItem\n                key={id}\n                id={id}\n                name={name}\n                onSelect={() => openAccess(id)}\n                onDelete={() => {\n                    setToDelete({ id: id, name: name })\n                    setDeleteModalOpen(true);\n                }}\n            />).reverse();\n\n    }, [\n        accessesList,\n        openAccess,\n    ]);\n\n\n    const handleDelete = React.useCallback(async () => {\n        if (!toDelete) return;\n\n        if (await deleteAccess(toDelete.id)) {\n            setDeleteModalOpen(false);\n        }\n    }, [toDelete, deleteAccess]);\n\n\n    return (\n        <>\n\n            <CreateForm\n                open={createModalOpen}\n                onClose={() => setCreateModalOpen(false)}\n                onSubmit={createAccess}\n            />\n\n            <DeleteModal\n                objectName={toDelete?.name ?? ''}\n                open={deleteModalOpen}\n                onClose={() => {\n                    setToDelete(null);\n                    setDeleteModalOpen(false);\n                }}\n                onSuccess={handleDelete}\n            />\n\n            <Stack spacing={4}>\n                <TabHeadLine\n                    title=\"Lista klas dostępu\"\n                    subtitle=\"Twórz, edytuj i usuwaj klasy dostępu.\"\n                />\n\n                <List sx={{ maxWidth: '400px' }}>\n                    <AddItem onClick={() => setCreateModalOpen(true)} />\n                    {renderedRows}\n                </List>\n            </Stack >\n        </>\n    );\n}","import Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\n\n\nconst explonations = [\n    {\n        field: 'Identyfikator - id',\n        text: 'Numer identyfikacyjny klasy dostępu. Ten numer przypisujesz użytkownikowi podczas zmiany uprawnień.'\n    },\n    {\n        field: 'Nazwa - name',\n        text: 'Nazwa klasy dostępu'\n    }, {\n        field: 'Właściciel - owner',\n        text: <>Najwyższy zestaw uprawnień.\n            Użytkownik ma możliwość zmiany konfiguracji platformy oraz posiada on wszystkie inne uprawnienia włączając w to edytowanie danych innych użytkowników.\n            Jest właścicielem platformy.</>\n    }, {\n        field: 'Administrator klas dostępu - accessAdmin',\n        text: 'Użytkownik ma możliwość tworzenia, edytowania oraz usuwania klas dostępu. Jest odpowiedzialny za przydzielanie dostępu użytkownikom.'\n    }, {\n        field: 'Administrator inwentarza - premisesAdmin',\n        text: 'Użytkownik jest odpowiedzialny za tworzenie, edycję i usuwanie adresów, budynków i sal.'\n    }, {\n        field: 'Administrator kluczy - keysAdmin',\n        text: 'Użytkownik ma możliwość przypisywania i usuwania tagów RFID dla każdej sali.'\n    }, {\n        field: 'Możliwość rezerwacji - reservationsAbility',\n        text: 'Użytkownik ma możliwość tworzenia rezerwacji'\n    }, {\n        field: 'Administrator rezerwacji - reservationsAdmin',\n        text: 'Użytkownik ma możliwość edytowania oraz usuwania rezerwacji stworzonych przez innych użytkowników.'\n    }, {\n        field: 'Administrator logów - logsAdmin',\n        text: 'Użytkownik ma możliwość przeglądania logów aplikacji.'\n    }, {\n        field: 'Dostęp do statystyk - statsViewer',\n        text: 'Użytkownik może przeglądać statystyki wygenerowane dla aplikacji, użytkownika, budynku i pokoju.'\n    },\n];\n\n\n\nexport default function AccessInfo() {\n\n\n\n    const rendered = React.useMemo(() => {\n        return explonations.map(({ field, text }, id) =>\n            <li key={id}>\n                <Typography variant='subtitle1' component='h3'>\n                    {field}\n                </Typography>\n                <Typography variant='body2' color='text.secondary' mb={1}>\n                    {text}\n                </Typography>\n            </li>\n        );\n    }, []);\n\n\n    return (\n        <Stack spacing={3}>\n            <span>\n                <Typography component='h1' variant='h3' color='primary.dark'>\n                    Klasy Dostępu\n                </Typography>\n                <Typography variant='body1' color=\"text.secondary\" mt=\"5px\">\n                    Dostępne tutaj opcje wpływają znacząco na funkcjonowanie całej platformy. <br />\n                    Konigurowanie klas dostępu użytkowników to bardzo odpowiedzialne zadanie. Upewnij się że nadajesz tylko wymagane uprawnienia.\n                    Stosuj się do modelu <a target='_blank' rel=\"noreferrer\" href='https://en.wikipedia.org/wiki/Principle_of_least_privilege'>Least Privilege</a>.\n                </Typography>\n            </span>\n\n\n            <span>\n                <Typography variant='h5' component='h2'>\n                    Pola używane w klasach dostępu:\n                </Typography>\n                <ul>\n                    {rendered}\n\n                </ul>\n            </span>\n\n\n        </Stack>\n    );\n}","import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport Card from '@mui/material/Card';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { useAccess } from \"../../AccessContext\";\nimport MenuItem from '@mui/material/MenuItem';\nimport Box from '@mui/material/Box';\nimport User from '../../../../../../models/User';\nimport useNotification from '../../../../../../contexts/NotificationContext/useNotification';\nimport UserService from '../../../../../../services/UserService';\nimport LinkIcon from '@mui/icons-material/Link';\nimport { dynamicPaths } from '../../../../../../shared/path';\nimport TabHeadLine from '../../../../../../shared/components/TabHeadLine';\nimport { Link } from '@mui/material';\n\n\nfunction usersNotUsers(a: readonly User[], b: readonly User[]) {\n    return a.filter(ai => (b.find(bi => bi.id === ai.id) === undefined));\n}\n\nfunction notNumNum(a: readonly number[], b: readonly number[]) {\n    return a.filter((value) => b.indexOf(value) === -1);\n}\n\n\nfunction intersection(a: readonly number[], b: readonly User[]) {\n    return a.filter((value) => b.find(({ id }) => id === value));\n}\n\n\nexport default function EditUsersAccess() {\n    const { accessesList } = useAccess();\n    const notify = useNotification();\n\n    const [checked, setChecked] = React.useState<readonly number[]>([]);\n\n    const [leftUsers, setLeftUsers] = React.useState<User[]>([]);\n    const [rightUsers, setRightUsers] = React.useState<User[]>([]);\n\n    const [access, setAccess] = React.useState<{\n        [index: string]: number,\n        right: number,\n        left: number\n    }>({ left: accessesList[0]?.id, right: accessesList[1]?.id });\n\n\n    const updateUsersAccess = React.useCallback(async (users: User[], accessId: number) => {\n        const calls = users.map(async (user) => {\n            try {\n                await UserService.updateAccess(user.id, accessId);\n                return user;\n            } catch (err: any) {\n                notify(err.description, 'error');\n                return false;\n            }\n        });\n        let results = await Promise.all(calls);\n        return results.filter(item => item !== false) as User[];\n    }, [notify]);\n\n\n    const loadUsers = React.useCallback(async (accessId: number) => {\n        try {\n            const resp = await UserService.getUsers({ accessId: accessId, deleted: false });\n            return resp.data as User[];\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return [];\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        loadUsers(access.left).then(data => setLeftUsers(data))\n    }, [\n        access.left,\n        loadUsers,\n    ]);\n\n\n    React.useEffect(() => {\n        loadUsers(access.right).then(data => setRightUsers(data))\n    }, [\n        access.right,\n        loadUsers,\n    ]);\n\n\n\n    const leftChecked = React.useMemo(() => intersection(checked, leftUsers), [checked, leftUsers]);\n    const rightChecked = React.useMemo(() => intersection(checked, rightUsers), [checked, rightUsers]);\n\n\n    const handleToggle = React.useCallback((value: number) => () => {\n        setChecked(old => {\n            const currentIndex = old.indexOf(value);\n            const checked = Object.assign([], old) as number[];\n\n            if (currentIndex === -1) {\n                checked.push(value);\n            } else {\n                checked.splice(currentIndex, 1);\n            }\n            return checked\n        });\n    }, []);\n\n\n    // to the right\n    const handleCheckedRight = React.useCallback(async () => {\n        const usersToMove = leftUsers.filter(({ id }) => leftChecked.indexOf(id) !== -1);\n\n        const moved = await updateUsersAccess(usersToMove, access.right);\n        setRightUsers(rightUsers.concat(moved));\n\n        setLeftUsers(usersNotUsers(leftUsers, moved)); //not user who is selected\n        setChecked(notNumNum(checked, leftChecked)); // uncheck checked elements\n    }, [\n        leftChecked,\n        rightUsers,\n        leftUsers,\n        checked,\n        access.right,\n        updateUsersAccess,\n    ]);\n\n\n    // to the left\n    const handleCheckedLeft = React.useCallback(async () => {\n        const usersToMove = rightUsers.filter(({ id }) => rightChecked.indexOf(id) !== -1);\n\n        const moved = await updateUsersAccess(usersToMove, access.left);\n        setLeftUsers(leftUsers.concat(moved));\n\n        let l = usersNotUsers(rightUsers, moved);\n        console.log(l);\n        setRightUsers(l); //not user who is selected\n        setChecked(notNumNum(checked, rightChecked)); // uncheck checked elements\n\n    }, [\n        rightChecked,\n        leftUsers,\n        rightUsers,\n        checked,\n        access.left,\n        updateUsersAccess,\n    ]);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<number>): void => {\n        const value = Number(event.target.value);\n\n        setAccess(old => {\n            if (old.left === value || old.right === value) return old;\n\n            return {\n                ...old,\n                [event.target.name]: Number(event.target.value)\n            }\n        });\n    }, []);\n\n\n    const customList = React.useCallback((direction: string, users: readonly User[]) => (\n        <Card>\n            <Box sx={{ p: 2 }}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-klase-dostępu\">Klasa dostępu</InputLabel>\n                    <Select\n                        labelId=\"wybierz-klase-dostępu\"\n                        name={direction}\n                        value={access[direction]}\n                        label=\"klasa dostępu\"\n                        onChange={handleSelectChange}\n                    >\n                        {accessesList.map(({ name, id }) => <MenuItem key={name} value={id} >{name} </MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Box>\n\n            <Divider />\n            <List\n                sx={{\n                    // maxWidth: 400,\n                    // width: '30vw',\n                    height: 550,\n                    bgcolor: 'background.paper',\n                    overflow: 'auto',\n                }}\n                dense\n                component=\"div\"\n                role=\"list\"\n            >\n                {users.map((user: User) => {\n                    const labelId = `transfer-list-all-item-${user.id}-label`;\n\n                    return (\n                        <ListItem\n                            key={user.id}\n                            role=\"listitem\"\n                            button\n                            onClick={handleToggle(user.id)}\n                        >\n                            <ListItemIcon>\n                                <Checkbox\n                                    checked={checked.indexOf(user.id) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    inputProps={{\n                                        'aria-labelledby': labelId,\n                                    }}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={labelId} primary={user.email} />\n\n                            <ListItemIcon onClick={(ev: any) => ev.stopPropagation()} color='primary'>\n                                <Link href={dynamicPaths.toUser(user.id)}>\n                                    <LinkIcon />\n                                </Link>\n                            </ListItemIcon>\n                        </ListItem>\n                    );\n                })}\n                <ListItem />\n            </List>\n        </Card>\n    ), [handleToggle, checked, handleSelectChange, access, accessesList]);\n\n    return (\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n                <TabHeadLine\n                    title='Administracja klasami dostępu'\n                    subtitle='Wybierz stworzone klasy dostępu i przydzielaj role dla użytkowników'\n                />\n            </Grid>\n\n            <Grid item xs={12} sm={5}>{customList('left', leftUsers)}</Grid>\n            <Grid item>\n                <Grid container direction=\"column\" alignItems=\"center\">\n                    <Button\n                        sx={{ my: 0.5 }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={handleCheckedRight}\n                        disabled={leftChecked.length === 0}\n                        aria-label=\"move selected right\"\n                    >\n                        &gt;\n                    </Button>\n                    <Button\n                        sx={{ my: 0.5 }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={handleCheckedLeft}\n                        disabled={rightChecked.length === 0}\n                        aria-label=\"move selected left\"\n                    >\n                        &lt;\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm={5}>{customList('right', rightUsers)}</Grid>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport { AccessContext } from \"./AccessContext\";\nimport AccessesList from \"./components/AccessesList\";\nimport AccessInfo from \"./components/AccessInfo\";\nimport EditUsersAccess from \"./components/EditUsersAccess\";\n\n\nexport default function AccessPage() {\n    const { logsAdmin } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr: any = [];\n        arr.push({ name: 'Informacje', component: <AccessInfo /> });\n        arr.push({ name: 'Lista klas', component: <AccessesList /> });\n        arr.push({ name: 'Administracja', component: < EditUsersAccess /> });\n        logsAdmin && arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, [\n        logsAdmin\n    ]);\n\n\n    return (\n        <AccessContext>\n            <SwipeableTabs tabs={pages} />\n        </AccessContext >\n    );\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"sourceRoot":""}