{"version":3,"sources":["components/pages/protected/components/GenericLogsTab/LogsContext/LogsContextProvider.tsx","components/pages/protected/components/GenericLogsTab/LogsTabBar.tsx","components/pages/protected/components/GenericLogsTab/LogsTable.tsx","components/pages/protected/components/GenericLogsTab/LogsContext/useLogs.ts","components/pages/protected/components/GenericLogsTab/GenericLogsTab.tsx"],"names":["logsContext","React","createContext","LogsContextProvider","props","urlParams","useParams","useQueryParams","queryParams","setQueryParams","notify","useNotification","refresh","useTrigger","useState","logs","setLogs","load","useCallback","a","LogService","fetch","resp","data","pagination","old","pagesCount","description","currentPage","itemsOnPage","method","userId","useEffect","Provider","value","children","LogsTabBar","handleChange","evt","preventDefault","target","name","Grid","container","component","spacing","item","xs","md","FormControl","fullWidth","InputLabel","id","Select","size","labelId","label","onChange","MenuItem","LazyInput","toString","memo","LogsTable","useContext","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","length","colSpan","Typography","textAlign","p","map","log","LogRow","row","GenericLogsTab","QueryParamsContextProvider","default","Stack","ListPagination"],"mappings":"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","file":"static/js/13.9997e3ec.chunk.js","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport Log from \"../../../../../../models/Log\";\nimport LogService, { LogsQueryParams } from \"../../../../../../services/LogService\";\nimport useTrigger from \"../../../hooks/useTrigger\";\nimport LogsContextValue from \"./LogsContextValue\";\n\n\n\n\nexport const logsContext: any = React.createContext(null);\n\n\ninterface LogsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function LogsContextProvider(props: LogsContextProviderProps) {\n    const urlParams = useParams();\n    const { queryParams, setQueryParams } = useQueryParams<LogsQueryParams>();\n    const notify = useNotification();\n    const refresh = useTrigger(60_000);\n\n    const [logs, setLogs] = React.useState<Log[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await LogService.fetch(urlParams, queryParams);\n            setLogs(resp.data as Log[]);\n\n            resp.pagination && setQueryParams(old => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount,\n            }));\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setLogs([]);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        setQueryParams,\n        queryParams.currentPage,\n        queryParams.itemsOnPage,\n        queryParams.method,\n        queryParams.userId,\n        notify,\n        urlParams,\n    ]);\n\n\n    React.useEffect(() => {\n        load()\n    }, [\n        load,\n        refresh\n    ])\n\n\n    if (!logs) return null;\n\n    return (\n        <logsContext.Provider value={{\n            logs\n        } as LogsContextValue}>\n            {props.children}\n        </logsContext.Provider>\n    )\n}","import { Grid, FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { LogsQueryParams } from \"../../../../../services/LogService\";\nimport LazyInput from \"../../components/LazyInput\";\n\n\n\nfunction LogsTabBar() {\n    const { queryParams, setQueryParams } = useQueryParams<LogsQueryParams>();\n\n\n    const handleChange = React.useCallback((evt: any) => {\n        evt.preventDefault();\n        setQueryParams(old => ({ ...old, [evt.target.name]: evt.target.value }));\n    }, [setQueryParams])\n\n\n    return (\n        <Grid container component=\"form\" spacing={3}>\n            <Grid item xs={6} md={2}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-metode\">Metoda</InputLabel>\n                    <Select\n                        size=\"small\"\n                        labelId=\"wybierz-metode\"\n                        id=\"metoda\"\n                        value={queryParams.method}\n                        name=\"method\"\n                        label=\"wybierz-metode\"\n                        onChange={handleChange}\n                    >\n                        <MenuItem value=\"\">brak</MenuItem>\n                        <MenuItem value=\"GET\">GET</MenuItem>\n                        <MenuItem value=\"POST\">POST</MenuItem>\n                        <MenuItem value=\"PATCH\">PATCH</MenuItem>\n                        <MenuItem value=\"DELETE\">DELETE</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6} md={3}>\n                <LazyInput\n                    label=\"id użytkownika\"\n                    name='userId'\n                    value={queryParams.userId?.toString() ?? ''}\n                    onChange={(evt) => setQueryParams(old => ({ ...old, userId: evt.target.value }))}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(LogsTabBar);","import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { Typography } from '@mui/material';\nimport LogRow from './LogRow';\nimport { useLogs } from './LogsContext';\n\n\n\n\nexport default function LogsTable() {\n    const { logs } = useLogs();\n\n    return (\n        <TableContainer>\n            <Table aria-label=\"tabela logów\" size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell />\n                        <TableCell align=\"left\">Id</TableCell>\n                        {/* <TableCell align=\"left\">Metoda</TableCell> */}\n                        <TableCell align=\"left\">Cel/endpoint</TableCell>\n                        <TableCell align=\"left\">Czas wykonania&nbsp;[ms]</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {logs.length === 0 &&\n                        <TableRow>\n                            <TableCell colSpan={6}>\n                                <Typography textAlign=\"center\" p=\"15px 0px\">\n                                    Brak elementów do wyświetlenia\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    }\n\n                    {logs.map((log) => <LogRow key={log.id} row={log} />)}\n                </TableBody>\n            </Table>\n        </TableContainer>\n\n    );\n}\n\n\n\n\n","import React from \"react\";\nimport { logsContext } from \"./LogsContextProvider\";\nimport LogsContextValue from \"./LogsContextValue\";\n\nexport default function useLogs() {\n    return React.useContext(logsContext) as LogsContextValue;\n}","import Stack from \"@mui/material/Stack\";\nimport React from \"react\";\nimport QueryParamsContextProvider from \"../../../../../contexts/QueryParamsContext/QueryParamsContextProvider\";\nimport ListPagination from \"../../components/ListPagination\";\nimport { LogsContext } from \"./LogsContext\";\nimport LogsTabBar from \"./LogsTabBar\";\nimport LogsTable from \"./LogsTable\";\n\n\n\nfunction GenericLogsTab() {\n    return (\n        <QueryParamsContextProvider name=\"logs-query-params\" default={{ method: 'PATCH', itemsOnPage: 5 }}>\n            <LogsContext>\n                <Stack spacing={3}>\n                    <LogsTabBar />\n                    <LogsTable />\n                    <ListPagination />\n                </Stack>\n            </LogsContext>\n        </QueryParamsContextProvider>\n    );\n}\n\nexport default React.memo(GenericLogsTab);"],"sourceRoot":""}