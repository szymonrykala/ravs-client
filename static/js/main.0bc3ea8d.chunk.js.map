{"version":3,"sources":["shared/Theme/theme.ts","shared/Theme/index.tsx","contexts/NotificationContext/NotificationContextValue.ts","contexts/NotificationContext/NotificationContextProvider.tsx","contexts/NotificationContext/useNotification.ts","services/APIServiceError.ts","services/ReservationService.ts","services/Service.ts","services/AuthService.ts","services/ImageService.ts","services/StorageService.ts","services/UserService.ts","services/MetadataService.ts","shared/components/LoadingView.tsx","shared/path.ts","auth/sessionProvider.tsx","contexts/QueryParamsContext/QueryParamsContextValue.tsx","contexts/QueryParamsContext/QueryParamsContextProvider.tsx","contexts/QueryParamsContext/userQueryParams.ts","shared/components/ListPagination.tsx","services/LogService.ts","pages/protected/hooks/useTrigger.ts","pages/protected/components/GenericLogsTab/LogsContext/LogsContextProvider.tsx","shared/components/LazyInput.tsx","pages/protected/components/GenericLogsTab/LogsTabBar.tsx","shared/utils.ts","pages/protected/components/GenericLogsTab/LogRow.tsx","pages/protected/components/GenericLogsTab/LogsTable.tsx","pages/protected/components/GenericLogsTab/LogsContext/useLogs.ts","pages/protected/components/GenericLogsTab/GenericLogsTab.tsx","shared/components/SmallCard.tsx","pages/protected/components/SwipeableTabs/SwipeablePanel.tsx","pages/protected/components/SwipeableTabs/SwipeableTabs.tsx","services/AccessService.ts","shared/components/DatesFooter.tsx","shared/components/FormGridContainer.tsx","shared/components/GenericModal.tsx","pages/protected/AccessPage/Forms/AccessEditModal.tsx","pages/protected/AccessPage/Forms/CreateAccessModal.tsx","pages/protected/AccessPage/AccessContext/AccessContextProvider.tsx","pages/protected/AccessPage/AccessContext/useAccess.ts","shared/components/DeleteModal/DeleteModal.tsx","shared/components/TabHeadLine.tsx","pages/protected/AccessPage/components/AccessesList/AddItem.tsx","pages/protected/AccessPage/components/AccessesList/RowItem.tsx","pages/protected/AccessPage/components/AccessesList/AccessesList.tsx","pages/protected/AccessPage/components/AccessInfo.tsx","shared/components/AppLink.tsx","pages/protected/AccessPage/components/EditUsersAccess/EditUsersAccess.tsx","pages/protected/AccessPage/AccessPage.tsx","auth/useSession.ts","services/RoomService.ts","services/AddressService.ts","contexts/ResourceMapContext/ResourceMapContextProvider.tsx","contexts/ResourceMapContext/useResourceMap.ts","pages/protected/RoomPage/RoomContext/RoomContextProvider.tsx","pages/protected/RoomPage/RoomContext/useRoomContext.ts","pages/protected/components/ReservationViewModal/ReservationUserCard.tsx","pages/protected/components/ReservationViewModal/ReservationRoomCard.tsx","pages/protected/components/GenericReservationsTab/ReservationsContext/useReservations.ts","pages/protected/components/ReservationViewModal/ModalForms/EditModalForm.tsx","pages/protected/components/ReservationViewModal/ModalForms/CopyModalForm.tsx","shared/components/RfidForm.tsx","pages/protected/components/ReservationViewModal/ModalForms/PingKeyModalForm.tsx","shared/components/MoreVertMenu.tsx","pages/protected/components/ReservationViewModal/ReservationViewModal.tsx","pages/protected/components/GenericReservationsTab/ReservationsContext/ModalContext/ModalContextProvider.tsx","pages/protected/components/GenericReservationsTab/ReservationsContext/ReservationsContextProvider.tsx","pages/protected/components/GenericReservationsTab/ReservationsList/ReservationsListItem.tsx","pages/protected/components/GenericReservationsTab/ReservationsList/ReservationsList.tsx","pages/protected/components/GenericReservationsTab/ReservationsContext/ModalContext/useReservationModalContext.ts","shared/components/SelectButtonGroup.tsx","pages/protected/components/GenericReservationsTab/ReservationTabBar.tsx","pages/protected/components/GenericReservationsTab/GenericReservationsTab.tsx","pages/protected/AddressPage/AddressContext/AddressContextProvider.tsx","pages/protected/AddressPage/AddressContext/useAddress.ts","pages/protected/AddressPage/components/Map.tsx","pages/protected/AddressPage/Forms/AddressEditForm.tsx","pages/protected/AddressPage/Forms/CreateBuildingForm.tsx","pages/protected/AddressPage/Forms/CreateAddressForm.tsx","pages/protected/AddressPage/components/AddressCard.tsx","pages/protected/components/Charts/ChartOptionsBar.tsx","services/ChartService.ts","pages/protected/components/Charts/ChartsContext/ChartsContextProvider.tsx","pages/protected/components/Charts/ChartsContext/useCharts.ts","pages/protected/components/Charts/ChartsTab.tsx","pages/protected/components/Charts/ChartSection.tsx","pages/protected/components/Charts/Chart.tsx","pages/protected/AddressPage/components/AddressCharts.tsx","services/BuildingService.ts","pages/protected/components/ScrollableList/ScrollableList.tsx","pages/protected/components/ScrollableList/ScrollableListItem.tsx","pages/protected/AddressPage/components/BuildingsList.tsx","pages/protected/AddressPage/AddressPage.tsx","pages/protected/components/MonthlyChartsSection.tsx","pages/protected/components/WeeklyChartsSection.tsx","pages/protected/components/RoomOrBuildingChartTab.tsx","pages/protected/BuildingPage/BuildingContext/BuildingContextProvider.tsx","pages/protected/BuildingPage/BuildingContext/useBuilding.ts","models/Room.ts","shared/components/ImageUploadField.tsx","pages/protected/BuildingPage/Forms/BuildingEditForm.tsx","pages/protected/BuildingPage/Forms/CreateRoomForm.tsx","models/Metadata.ts","shared/components/FavouriteButton.tsx","pages/protected/BuildingPage/components/BuildingCard.tsx","pages/protected/BuildingPage/components/RoomsList.tsx","pages/protected/BuildingPage/BuildingPage.tsx","pages/protected/HomePage/Favourites.tsx","pages/protected/HomePage/Notebook.tsx","pages/protected/HomePage/HomeReservations.tsx","pages/protected/HomePage/HomePage.tsx","shared/components/YesNoIcon.tsx","pages/protected/RoomPage/Forms/RoomEditForm.tsx","pages/protected/RoomPage/Forms/RfidModalForm.tsx","pages/protected/RoomPage/components/RoomTableInfo.tsx","shared/components/Loading.tsx","pages/protected/components/CreateReservationModal/CreateReservationForm.tsx","pages/protected/components/CreateReservationModal/CreateReservationModal.tsx","pages/protected/RoomPage/components/RoomCard.tsx","pages/protected/RoomPage/RoomPage.tsx","services/SettingsService.ts","pages/protected/SettingsPage/SettingsContext/SettingsContextProvider.tsx","pages/protected/SettingsPage/components/EndpointsStats/EnhancedTableHead.tsx","pages/protected/SettingsPage/components/EndpointsStats/SortableTable.tsx","pages/protected/SettingsPage/components/EndpointsStats/EndpointsStats.tsx","pages/protected/SettingsPage/components/SettingsForm.tsx","pages/protected/SettingsPage/SettingsContext/useSettings.ts","pages/protected/SettingsPage/components/SettingsMain.tsx","pages/protected/SettingsPage/SettingsPage.tsx","pages/protected/UserPage/UserContext/UserContextProvider.tsx","pages/protected/UserPage/UserContext/useUser.tsx","shared/components/UniqueCodeButton/statusReducer.ts","shared/components/UniqueCodeButton/index.tsx","pages/public/ChangePassword/FormStep.tsx","pages/public/ChangePassword/Form.tsx","pages/protected/UserPage/Forms/PasswordChangeModal.tsx","pages/protected/UserPage/Forms/EditUserForm.tsx","pages/protected/UserPage/components/UserCard.tsx","pages/protected/UserPage/components/UserCharts.tsx","pages/protected/UserPage/UserPage.tsx","pages/protected/UsersPage/UsersContext/UsersContextProvider.tsx","pages/protected/UsersPage/components/UsersView/SearchBar.tsx","pages/protected/UsersPage/components/UsersView/UsersList/UserListItem.tsx","pages/protected/UsersPage/components/UsersView/UsersList/UsersList.tsx","pages/protected/UsersPage/UsersContext/useUsers.ts","pages/protected/UsersPage/components/UsersView/UsersView.tsx","pages/protected/UsersPage/components/UsersCharts.tsx","pages/protected/UsersPage/UsersPage.tsx","pages/protected/index.tsx","pages/public/FormPage.tsx","pages/public/Activation/Form.tsx","pages/public/Activation/Activation.tsx","pages/public/Login/Form.tsx","pages/public/Login/Login.tsx","pages/public/Register/Form.tsx","pages/public/Register/Register.tsx","pages/public/ChangePassword/ChangePassword.tsx","pages/public/Welcome/Welcome.tsx","pages/public/PublicPages.tsx","pages/index.tsx","shared/components/Footer/Copyrights.tsx","shared/components/Footer/Links.tsx","shared/components/Footer/index.tsx","shared/components/Navigation/Drawer/MainDrawerList.tsx","shared/components/Navigation/Drawer/DrawerPanel.tsx","shared/components/Navigation/Drawer/AvatarView.tsx","shared/components/Navigation/Drawer/ResourcesList/CollapseableListItem.tsx","shared/components/Navigation/Drawer/ResourcesList/RoomListItem.tsx","shared/components/Navigation/Drawer/ResourcesList/ResourceList.tsx","shared/components/Navigation/Drawer/CreateAddressButton.tsx","shared/components/Navigation/Drawer/index.tsx","shared/components/Navigation/NavigationBar/AccountMenu.tsx","shared/components/Navigation/NavigationBar/index.tsx","shared/components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","palette","primary","indigo","secondary","dark","main","light","background","default","paper","shape","borderRadius","components","MuiCssBaseline","styleOverrides","body","scrollbar","track","thumb","active","MuiTextField","defaultProps","size","variant","MuiSelect","MuiButton","sx","Number","MuiSvgIcon","color","MuiIconButton","Theme","props","ThemeProvider","children","NotificationContextDefault","message","notificationContext","createContext","NotificationContextProvider","React","useState","setMessage","open","setOpen","severity","setSeverity","component","setComponent","closeSnack","useCallback","event","reason","setSnack","_severity","componentCallback","Provider","value","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","width","useNotification","useContext","APIServiceError","data","error","description","this","statusCode","Error","Colors","Service","_BASE_URL","_TOKEN_NAME","_userId","window","localStorage","getItem","fetchObject","fetch","endpoint","method","cache","mode","headers","authToken","JSON","stringify","response","json","console","debug","status","match","location","reload","ok","type","urlParams","endp","url","pathname","Object","keys","length","entries","path","newPath","includes","addressId","buildingId","roomId","userId","toString","query","_fetch","URLSearchParams","AuthService","a","post","email","password","setItem","removeItem","Boolean","hasToken","get","ImageService","formBody","resp","image","slice","formData","FormData","append","sendImage","preparePath","delete","id","name","btoa","encodeURI","str","codeName","parse","UserService","_path","patch","accessId","MetadataService","STORAGE_NAME","StorageService","read","notes","favourites","save","setPath","update","metadata","item","push","sort","b","log","find","filter","ReservationService","mess","queryParams","key","RFIDTag","reservation","nowTimestamp","Date","now","now_minus15","now_plus15","actualStart","plannedStart","actualEnd","plannedEnd","start","end","emitStatus","warning","info","inert","success","LoadingView","Backdrop","display","flexDirection","zIndex","drawer","backgroundColor","Typography","pb","text","CircularProgress","paths","PUBLIC","FAQ","HOME","LOGIN","REGISTER","ACTIVATE","REMIND_PASSWORD","ACCESS","SETTINGS","USERS","USER","MY_PROFILE","INFRASTRUCTURE","ADDRESS","BUILDING","ROOM","dynamicPaths","toAddress","toBuilding","toRoom","toUser","sessionContext","SessionProvider","notify","loading","setLoading","user","setUser","setUpUser","setIdentity","checkIfUserHasSession","hasSession","getMe","sessionUser","to","WELCOME","useEffect","login","code","logout","queryParamsContextDefaults","q","setQueryParams","param","queryParamsContext","QueryParamsContextProvider","keyName","defaultValue","useQueryParams","ListPagination","handlePageChange","old","currentPage","handleCountChange","child","itemsOnPage","target","Stack","spacing","flexWrap","justifyContent","alignContent","alignItems","Pagination","count","pagesCount","page","onChange","FormControl","fullWidth","maxWidth","InputLabel","Select","labelId","label","map","num","MenuItem","LogService","useTrigger","timeInterval","trigger","setTrigger","int","setInterval","clearInterval","logsContext","LogsContextProvider","useParams","refresh","logs","setLogs","load","pagination","LazyInput","setStr","handleSearchFieldChange","evt","clearTimeout","timer","setTimeout","InputBase","placeholder","p","bgcolor","inputProps","LogsTabBar","handleChange","preventDefault","Grid","container","xs","md","displayDate","dateString","date","Intl","DateTimeFormat","dateStyle","timeStyle","format","timeFormat","isDate","getDate","LogRow","row","TableRow","hover","borderBottom","TableCell","IconButton","onClick","scope","align","Math","fround","time","toPrecision","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Link","RouterLink","_created","payload","undefined","LogsTable","TableContainer","Table","TableHead","TableBody","textAlign","GenericLogsTab","SmallCard","Paper","elevation","title","titleComponent","SwipeablePanel","hidden","index","other","useMemo","role","SwipeableTabs","useTheme","tabIndex","setTabIndex","handleTabChange","newValue","handleChangeIndex","renderedTabs","tabs","Tab","a11yProps","renderedTabPanels","dir","direction","Tabs","allowScrollButtonsMobile","indicatorColor","borderColor","axis","onChangeIndex","AccessService","DatesFooter","fontSize","model","_updated","FormGridContainer","subtitle","onSubmit","onCancel","handleSubmit","rowGap","mt","Button","startIcon","GenericModal","Modal","closeAfterTransition","BackdropComponent","BackdropProps","overflow","Fade","position","boxShadow","fields","AccessEditModal","access","setData","checked","close","TextField","required","field","FormControlLabel","labelPlacement","control","Switch","ml","CreateAccessModal","setName","autoFocus","accessContext","AccessContextProvider","modalOpen","setModalOpen","selectedAccessId","setSelectedAccessId","accessesList","setAccessesList","getAll","updateAccess","deleteAccess","remove","createAccess","create","unshift","toUTCString","assign","selectedAccess","openAccess","useAccess","DeleteModal","onSuccess","objectName","input","setInput","handleConfirm","TabHeadLine","AddItem","border","RowItem","onDelete","onSelect","AccessesList","createModalOpen","setCreateModalOpen","deleteModalOpen","setDeleteModalOpen","toDelete","setToDelete","renderedRows","reverse","handleDelete","explonations","AccessInfo","rendered","mb","rel","href","AppLink","withIcon","restProps","underline","usersNotUsers","ai","bi","notNumNum","indexOf","intersection","EditUsersAccess","setChecked","leftUsers","setLeftUsers","rightUsers","setRightUsers","left","right","setAccess","updateUsersAccess","users","calls","Promise","all","results","loadUsers","getUsers","deleted","then","leftChecked","rightChecked","handleToggle","currentIndex","splice","handleCheckedRight","usersToMove","moved","concat","handleCheckedLeft","l","handleSelectChange","customList","Card","Divider","List","height","dense","ListItem","button","ListItemIcon","Checkbox","disableRipple","ListItemText","ev","stopPropagation","sm","my","disabled","AccessPage","pages","arr","useSession","RoomService","AddressService","params","resourceMapContext","ResourceMapContextProvider","resourceMap","setResources","loaded","setLoaded","loadResourceMap","getResourcesMap","getRoomLink","addr","buildings","bld","rooms","flat","allRooms","allBuildings","allAddresses","getBuildingLink","reloadMap","useResourceMap","RoomContext","RoomContextProvider","room","setRoom","useLayoutEffect","getRoom","getView","setOccupied","state","occupied","updateRoom","building","deleteRoom","updateRFIDTag","updateRFID","deleteRFIDTag","useRoomContext","ReservationUserCard","minHeight","CardHeader","avatar","Avatar","alt","surname","src","getLink","subheader","action","CardContent","lastActivity","ReservationRoomCard","roomLink","buildingLink","CardMedia","maxHeight","roomType","pt","useReservations","reservationsContext","EditModalForm","updateReservation","closeForm","multiline","maxRows","MobileDateTimePicker","minDate","inputFormat","renderInput","CopyModalForm","createReservation","from","dates","setDates","copyDates","setCopyDates","createCalls","processed","handleDeleteCopyDate","handleAddDate","padding","pl","HiddenInput","styled","RfidForm","setText","setColor","useRef","onScan","handleDecline","current","focus","alignSelf","ref","headline","bodyText","PingKeyModalForm","pingKeyForReservation","handleKeyScan","reservationId","MoreVertMenu","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","Menu","MenuListProps","PaperProps","options","opt","icon","TextSection","ReservationViewModal","deleteReservation","editModalOpen","setEditModalOpen","nfcModalOpen","setNFCModalOpen","copyModalOpen","setCopyModalOpen","menuOptions","Edit","lg","pr","ReservationModalViewContext","showReservation","ModalContextProvider","reservations","setReservationId","ReservationsContextProvider","roomContext","setReservations","getReservations","search","triggerReload","pingKey","forEach","toISOString","createOne","ReservationListItem","resolveStatus","ListItemAvatar","ReservationsList","SelectButtonGroup","buttons","renderedButtons","Radio","RadioGroup","ReservationTabBar","customDate","setCustomDate","handleButtonChange","handleSubmitCustomDate","MobileDatePicker","GenericReservationsTab","addressContext","AddressContextProvider","address","setAddress","getAddress","getCurrentOne","getBuildingsInAddress","getBuildings","updateAddress","deleteAddress","useAddress","StyledIframe","Map","street","number","town","country","base","URL","ie","z","iwloc","output","frameBorder","AddressEditForm","postalCode","CreateBuildingForm","handleCreateBuilding","openTime","closeTime","String","MobileTimePicker","CreateAddressForm","AddressCard","predefinedButtons","ChartOptionsBar","customDates","setCustomDates","buttonValue","ChartService","chartsContext","ChartsContextProvider","chartsData","fetchData","useCharts","ChartsTab","ChartSection","defaultOpen","replace","weekDays","Chart","primaryAxis","getValue","resolveDay","x","min","secondaryAxes","y","elementType","minDomainLength","hardMin","scaleType","showDatumElements","obj","xKey","AddressCharts","ActualLoader","allReservations","BuildingService","ScrollableList","onAddItem","ScrollableListItem","py","link","BuildingsList","createBuildingModalOpen","setCreateBuildingModalOpen","setBuildings","createBuilding","renderedBuildings","AddressPage","MonthlyChartsSection","WeeklyChartsSection","RoomOrBuildingChartTab","weekly","monthly","buildingContext","BuildingContextProvider","setBuilding","getBuilding","getRoomsInBuilding","updateBuilding","deleteBuilding","useBuilding","RoomTypes","Input","StyledImage","ImageUploadField","useLocation","uploadedImage","setUploadedImage","upload","onUpload","handleImageUpload","files","img","handleRemoveImgae","createObjectURL","htmlFor","accept","timeToDate","split","h","m","BuildingEditForm","handleTime","CreateRoomForm","handleCreateRoom","LECTURE","seatsCount","floor","values","val","FavType","FavouriteButton","marked","setMarked","isFavourite","addToFavourites","removeFavourite","addFavourite","BuildingView","Building","RoomsList","createRoomModalOpen","setCreateRoomModalOpen","setRooms","createRoom","renderedRooms","BuildingPage","Favourites","Room","getCorrectListItem","Notebook","err","minRows","mr","HomeReservations","HomePage","YesNoIcon","rest","RoomEditForm","blocked","RfidModalRorm","RoomTableInfo","deleteTag","rfidTagModalOpen","setRfidTagModalOpen","tableRows","Chip","RenderedRows","fontWeight","Loading","CreateReservationForm","CreateReservationModal","RoomCard","createReservationModalOpen","setCreateReservationModalOpen","RoomPage","SettingsService","settingsContext","SettingsContextProvider","settings","setSettings","updateSettings","headCells","numeric","disablePadding","EnhancedTableHead","order","orderBy","onRequestSort","headCell","sortDirection","TableSortLabel","property","visuallyHidden","descendingComparator","getComparator","SortableTable","rowsPerPage","setRowsPerPage","setPage","setOrder","setOrderBy","minWidth","endpoints","generalEndpoint","round","timeForEndpoint","avgTime","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","EndpointsStats","FormField","SettingsForm","maxImageSize","defaultUserAccess","rowSpacing","maxReservationTime","minReservationTime","reservationHistory","requestHistory","SettingsMain","SettingsPage","userContext","UserContextProvider","session","deleteUser","updateUser","useUser","statusReducer","UniqueCodeButton","useReducer","result","dispatchResult","generateKey","FormStep","Form","newPassword","e","changePassword","autoComplete","PasswordChangeModal","EditUserForm","UserCard","editModal","setEditModal","passModal","setPassModal","deleteModal","setDeleteModal","UserCharts","reservedRooms","UserPage","usersContext","UsersContextProvider","setUsers","activated","SearchBar","UserListItem","UsersList","UsersView","UsersCharts","UsersPage","ProtectedPages","FormPage","Container","marginTop","activate","ReactRouterLink","ActivationPage","remember","setRemember","Login","register","Register","ChangePassword","Welcome","PublicPages","Activation","tabStyle","Copyright","linksList","Links","links","list","Footer","navListItems","HomeIcon","AccountIcon","settingsItem","SettingsIcon","accessLinkItem","VerifiedUserIcon","usersLinkItem","PeopleIcon","MainDrawerList","ListItemButton","DrawerPanel","toggleOpen","onKeyDown","AvatarView","CollapseableListItem","OPENED_NAME","ExpandLess","ExpandMore","RoomListItem","ResourcesList","roomEntry","CreateAddressButton","formOpen","setFormOpen","AppDrawer","Drawer","ModalProps","keepMounted","anchor","AccountMenu","linksComp","i","transformOrigin","NavigationBar","handleMenu","flexGrow","AppBar","Toolbar","toggleDrawer","edge","fontFamily","textDecoration","Navigation","shouldWork","App","LocalizationProvider","dateAdapter","AdapterDateFns","CssBaseline","className","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAqEeA,EA1DDC,YAAY,CACxBC,QAAS,CACPC,QAASC,IACTC,UAAW,CACTC,KAAM,UACNC,KAAM,UACNC,MAAO,QAETC,WAAY,CACVC,QAAS,UACTC,MAAO,SAIXC,MAAO,CACLC,aAAc,GAEhBC,WAAY,CACVC,eAAgB,CACdC,eAAgB,CACdC,KAAMC,YA1BA,CACZC,MAAO,UACPC,MAAO,UACPC,OAAQ,cA0BNC,aAAc,CACZC,aAAc,CACZC,KAAM,SACNC,QAAS,aAGbC,UAAW,CACTH,aAAc,CACZC,KAAM,WAGVG,UAAW,CACTJ,aAAc,CACZK,GAAI,CACFf,aAAc,gBAAGD,EAAH,EAAGA,MAAH,OAAeiB,OAAOjB,EAAMC,cAAc,MAK9DiB,WAAY,CACVP,aAAc,CACZQ,MAAO,YAGXC,cAAe,CACbT,aAAc,CACZQ,MAAO,e,OChDA,SAASE,EAAMC,GAC1B,OACI,cAACC,EAAA,EAAD,CAAenC,MAAOA,EAAtB,SACKkC,EAAME,W,6DCLNC,EAA6B,SACtCC,KCASC,EAA2BC,wBAAwCH,GAGjE,SAASI,EAAT,GAEuB,IADlCL,EACiC,EADjCA,SAEA,EAA8BM,IAAMC,WAApC,mBAAOL,EAAP,KAAgBM,EAAhB,KACA,EAAwBF,IAAMC,UAAkB,GAAhD,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAgCJ,IAAMC,SAAiC,SAAvE,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,IAAMC,WAAxC,mBAAOM,EAAP,KAAkBC,EAAlB,KAGMC,EAAaT,IAAMU,aAAY,SACjCC,EACAC,GAEe,cAAXA,IAGJR,GAAQ,GACRF,EAAW,IACXM,EAAa,SACd,IAGGK,EAAWb,IAAMU,aAAY,SAC/Bd,GAGE,IAFFkB,EAEC,uDAFmC,QACpCC,EACC,uDADiD,kBAAM,MAExDT,EAAYQ,GACZZ,EAAWN,GACXQ,GAAQ,GACRI,EAAaO,OACd,IAGH,OACI,eAAClB,EAAoBmB,SAArB,CAA8BC,MAAOJ,EAArC,UACKnB,EAED,cAACwB,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBlB,KAAMA,EAAMmB,iBAAkB,IAAMC,QAASd,EALjD,SAMI,cAACe,EAAA,EAAD,CAAOD,QAASd,EAAYJ,SAAUA,EAAUnB,GAAI,CAAEuC,MAAO,QAA7D,SACK7B,MAIRW,KCzDE,SAASmB,IACpB,OAAOC,qBAAW9B,G,6CCFD+B,E,kDAYjB,WAAYC,GAAqB,IAAD,gCAC5B,wBAAMA,EAAKC,aAAX,aAAM,EAAYC,cAXdF,UAUwB,EAE5B,EAAKA,KAAOA,EAFgB,E,sCARhC,WACI,OAAOG,KAAKH,KAAKI,a,uBAGrB,WAAmB,IAAD,EACd,iBAAOD,KAAKH,KAAKC,aAAjB,aAAO,EAAiBC,gB,eATaG,Q,ICsBxCC,ECsByBC,E,iDAE1BC,UATe,mC,KAUfC,YAAsB,a,KACtBC,SAAmB,E,wCAMnB,WACI,OAAOP,KAAKO,S,IALhB,SAAkBtB,GACde,KAAKO,QAAUtB,I,qBAOnB,WACI,MAAO,UAAYuB,OAAOC,aAAaC,QAAQV,KAAKM,e,2DAGxD,WAAqBK,GAArB,6FAC2BC,MACnBZ,KAAKK,UAAYM,EAAYE,SAC7B,CACIC,OAAQH,EAAYG,OACpBC,MAAO,WACPC,KAAM,OAENC,QAAS,CACL,eAAgB,mBAChB,cAAiBjB,KAAKkB,WAG1B3E,KAAM4E,KAAKC,UAAUT,EAAYpE,QAb7C,cACU8E,EADV,gBAgBuBA,EAASC,OAhBhC,UAgBUzB,EAhBV,OAkBI0B,QAAQC,MAAM3B,GAIU,MAApBwB,EAASI,QAAmBd,EAAYE,SAASa,MAAM,sBACvDlB,OAAOmB,SAASC,SAGfP,EAASQ,GA1BlB,uBA2BQN,QAAQzB,MAAR,UAAiBuB,EAASI,OAA1B,mBAAoC5B,QAApC,IAAoCA,GAApC,UAAoCA,EAAMC,aAA1C,aAAoC,EAAagC,KAAjD,mBAAyDjC,QAAzD,IAAyDA,GAAzD,UAAyDA,EAAMC,aAA/D,aAAyD,EAAaC,cAChE,IAAIH,EAAgBC,GA5BlC,iCA+BWA,GA/BX,iD,gFAkCA,SAAsBkC,GAClB,IAAIC,EAAO,GACPC,EAAMzB,OAAOmB,SAASO,SAO1B,GAAsC,IAAlCC,OAAOC,KAAKL,GAAWM,OACvB,cAA8BF,OAAOG,QAP7B,CACR,YAAa,YACb,YAAa,kBACb,SAAU,WAIV,eAAmD,CAA9C,0BAAOC,EAAP,KAAaC,EAAb,KACGP,EAAIQ,SAASF,KACbP,EAAOQ,OAGR,cAAeT,GACtBC,GAAI,qBAAkBD,EAAUW,WAE5B,eAAgBX,IAChBC,GAAI,qBAAkBD,EAAUY,YAE5B,WAAYZ,IAAWC,GAAI,iBAAcD,EAAUa,WAEpD,WAAYb,IACM,OAArBA,EAAUc,OACVb,GAAQ,UAAYhC,KAAK6C,OAAOC,WAEhCd,GAAQ,UAAYD,EAAUc,QAGtC,OAAOb,I,iBAGX,SAAcnB,GAA+B,IAAbkC,EAAY,uDAAJ,GACpC,OAAO/C,KAAKgD,OAAO,CACflC,OAAQ,MACRD,SAAUA,EAAW,IAAM,IAAIoC,gBAAgBF,GAAOD,e,kBAI9D,SAAejC,EAAkBtE,GAC7B,OAAOyD,KAAKgD,OAAO,CACflC,OAAQ,OACRD,SAAUA,EACVtE,KAAMA,M,mBAId,SAAgBsE,EAAkBtE,GAC9B,GAAiC,IAA7B4F,OAAOC,KAAK7F,GAAM8F,OAEtB,OAAOrC,KAAKgD,OAAO,CACflC,OAAQ,QACRD,SAAUA,EACVtE,KAAMA,M,oBAId,SAAiBsE,GACb,OAAOb,KAAKgD,OAAO,CACflC,OAAQ,SACRD,SAAUA,Q,KCtJhBqC,E,kMAEF,WAAYrD,GAAZ,eAAAsD,EAAA,sEAC2BnD,KAAKoD,KACxB,cACA,CACI,MAASvD,EAAKwD,MACd,SAAYxD,EAAKyD,WAL7B,cACUjC,EADV,QAUiBxB,MACTY,aAAa8C,QAAQvD,KAAKM,YAAae,EAASxB,KAAKiD,YAX7D,kBAcWzB,GAdX,gD,2EAiBA,WACIZ,aAAa+C,WAAWxD,KAAKM,e,sBAGjC,WACI,OAAOmD,QAAQhD,aAAaC,QAAQV,KAAKM,gB,+DAG7C,sBAAA6C,EAAA,mEAEYnD,KAAK0D,WAFjB,gCAGkB1D,KAAK2D,IAAI,aAH3B,iCAImB,GAJnB,uFAUW,GAVX,yD,2DA3BsBvD,GAyCX,MAAI8C,EC3CbU,E,sMAEF,WAAwB/C,EAAkBgD,GAA1C,6FACuBjD,MACfZ,KAAKK,UAAYQ,EACjB,CACIC,OAAQ,OACRC,MAAO,WACPC,KAAM,OACNzE,KAAMsH,EACN5C,QAAS,CACL,cAAiBjB,KAAKkB,aATtC,cACU4C,EADV,gBAcuBA,EAAKxC,OAd5B,UAcUzB,EAdV,OAeI0B,QAAQC,MAAM3B,GAETiE,EAAKjC,GAjBd,uBAkBQN,QAAQzB,MAAR,UAAiBgE,EAAKrC,OAAtB,oBAAiC5B,QAAjC,IAAiCA,GAAjC,UAAiCA,EAAMC,aAAvC,aAAiC,EAAagC,KAA9C,oBAAuDjC,QAAvD,IAAuDA,GAAvD,UAAuDA,EAAMC,aAA7D,aAAuD,EAAaC,cAC9D,IAAIH,EAAgBC,GAnBlC,iCAsBWA,GAtBX,iD,8EAyBA,SAAekE,GACX,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAO9B,IAAIQ,SAAS,SAAgBsB,EAAM9B,IAEvCjC,KAAKK,UAAU2D,MAAM,EAAGhE,KAAKK,UAAUgC,OAAS,IAAhD,OAAqD0B,QAArD,IAAqDA,OAArD,EAAqDA,EAAO9B,O,oBAGvE,SACIF,EACAgC,GAEA,IAAME,EAAW,IAAIC,SAKrB,OAJAD,EAASE,OACL,OACAJ,GAEG/D,KAAKoE,UAAUpE,KAAKqE,YAAYtC,GAAa,SAAUkC,K,oBAGlE,SAAclC,GACV,OAAO/B,KAAKsE,OAAOtE,KAAKqE,YAAYtC,GAAa,c,GA9C9B3B,GAmDZ,MAAIwD,E,OCxBJ,M,iDAhCHW,GAAa,G,+CAErB,SAAmBtF,GACfe,KAAKuE,GAAKtF,EAAM6D,a,sBAGpB,SAAiB0B,GACb,OAAOC,KAAKC,UAAUF,EAAOxE,KAAKuE,O,kBAGtC,SAAYC,EAAcvF,GACtB,IAAM0F,EAAMxD,KAAKC,UAAUnC,GAC3BwB,aAAa8C,QAAQvD,KAAK4E,SAASJ,GAAOG,K,oBAG9C,SAAcH,GACV/D,aAAa+C,WAAWxD,KAAK4E,SAASJ,M,kBAG1C,SAAYA,GACR,IAAMG,EAAMlE,aAAaC,QAAQV,KAAK4E,SAASJ,IAC/C,IAAKG,EAAK,OAAO,KAEjB,IACI,OAAOxD,KAAK0D,MAAMF,GACpB,SACE,OAAO,U,MCYbG,E,4MACFC,MAAQ,S,wCAER,WACI,OAAO/E,KAAK+E,Q,qBAGhB,SAAehD,GACX/B,KAAK+E,MAAQ/E,KAAKqE,YAAYtC,K,2BAGlC,WACI,OAAO/B,KAAK2D,IAAI3D,KAAKuC,Q,0DAGzB,oGACuBvC,KAAK2D,IAAI,aADhC,cACUG,EADV,yBAEWA,EAAKjE,MAFhB,gD,4EAKA,SAAgBA,GACZ,OAAOG,KAAK2D,IAAI,SAAU9D,K,sBAG9B,SAAgBA,GACZ,OAAOG,KAAKoD,KAAK,SAAUvD,K,sBAG/B,SAAgBA,GACZ,OAAOG,KAAKgF,MAAM,kBAAmBnF,K,yBAGzC,SAAmBwD,GACf,OAAOrD,KAAKoD,KAAK,aAAc,CAC3BC,MAAOA,M,0BAIf,SAAoBR,EAAgBoC,GAChC,OAAOjF,KAAKgF,MAAL,iBAAqBnC,EAArB,WAAsC,CACzCoC,SAAUA,M,oBAIlB,SAAcpF,GACV,OAAOG,KAAKgF,MAAMhF,KAAKuC,KAAM1C,K,oBAGjC,WACI,OAAOG,KAAKsE,OAAOtE,KAAKuC,Q,4BAG5B,SAAsB1C,GAClB,OAAOG,KAAKgF,MAAM,kBAAmBnF,O,GArDnBO,GA0DX,MAAI0E,EC9FbI,E,WAOF,aAAe,IAAD,2BANNC,aAAe,gBAMT,KAJNtF,UAIM,OAHNU,aAGM,EACVP,KAAKH,KAAL,UAAYuF,EAAeC,KAAKrF,KAAKmF,qBAArC,QAAsD,CAClDG,MAAO,GACPC,WAAY,I,+EAIpB,uFACIH,EAAeI,KAAKxF,KAAKmF,aAAcnF,KAAKH,MAEvCG,KAAKO,QAHd,wDAKIuE,EAAYW,QAAQ,CAAE5C,OAAM,UAAE7C,KAAKO,eAAP,aAAE,EAAcuC,aALhD,kBAOcgC,EAAYY,OAAO,CACrBC,SAAU3F,KAAKH,OAR3B,uDAUyB0B,QAAQzB,MAAR,MAVzB,yD,wEAaA,SAAkByE,GACdvE,KAAKO,QAAUgE,I,oBAGnB,SAAoBtF,GAChBe,KAAKH,KAAL,2BACOG,KAAKH,MACLZ,K,iBAIX,WAAoB,IAAD,EACf,iBAAOe,KAAKH,KAAKyF,aAAjB,QAA0B,I,IAO9B,SAAiBrG,GACbe,KAAKH,KAAKyF,MAAQrG,EAClBe,KAAKwF,S,sBANT,WAAyB,IAAD,EACpB,iBAAOxF,KAAKH,KAAK0F,kBAAjB,QAA+B,K,0BAQnC,SAAoBK,GAAgD,IAAD,IAC/D,UAAA5F,KAAKH,KAAK0F,kBAAV,SAAsBM,KAAKD,GAC3B,UAAA5F,KAAKH,KAAK0F,kBAAV,SAAsBO,MAAK,SAAC3C,EAAG4C,GAC3B,OAAI5C,EAAErB,MAAQiE,EAAEjE,KACRqB,EAAErB,OAASiE,EAAEjE,KACNqB,EAAEqB,KAAOuB,EAAEvB,KAAO,GAAK,EAE3B,GAEH,KAEZjD,QAAQyE,IAAIhG,KAAKH,MACjBG,KAAKwF,S,yBAGT,SAAmBI,GAAmD,IAAD,EACjE,OAAOnC,QAAO,UAACzD,KAAKH,KAAK0F,kBAAX,aAAC,EAAsBU,MAAK,gBAAG1B,EAAH,EAAGA,GAAH,SAAOzC,OAAqB8D,EAAK9D,MAAQyC,IAAOqB,EAAKrB,S,6BAGnG,SAAuBqB,GAAgD,IAAD,EAClE5F,KAAKH,KAAK0F,WAAV,UAAuBvF,KAAKH,KAAK0F,kBAAjC,aAAuB,EAAsBW,QAAO,qBAAG3B,GAAH,EAAOzC,OAAyB8D,EAAKrB,GAAKqB,EAAK9D,QACnG9B,KAAKwF,W,KAKE,MAAIN,G,SNzDd/E,K,kBAAAA,E,gBAAAA,E,eAAAA,E,kBAAAA,E,iBAAAA,M,SAeCgG,E,gKAEF,SAAmBC,EAAc/I,GAC7B,MAAO,CAAEO,QAASwI,EAAM/I,MAAOA,K,6BAGnC,SACI0E,EACAsE,GAEA,OAAOrG,KAAK2D,IAAL,UAAY3D,KAAKqE,YAAYtC,GAA7B,iBAAwDsE,K,uBAInE,SAAiBxG,GACb,OAAOG,KAAKoD,KAAK,gBAAiBvD,K,oBAGtC,SAAc0E,EAAY1E,GACtB,OAAOG,KAAKgF,MAAL,wBAA4BT,GAAM1E,K,qBAG7C,SAAe0E,EAAY+B,GACvB,OAAOtG,KAAKgF,MAAL,wBAA4BT,EAA5B,SAAuC,CAC1CgC,QAASD,M,oBAIjB,SAAc/B,GACV,OAAOvE,KAAKsE,OAAL,wBAA6BC,M,2BAGxC,SAAqBiC,GAEjB,IAAMC,EAAeC,KAAKC,MAEpBA,EAAM,IAAID,KAAKD,GACfG,EAAc,IAAIF,KAAKD,EAAe,KACtCI,EAAa,IAAIH,KAAKD,EAAe,KAEnCK,EAAqDN,EAArDM,YAAaC,EAAwCP,EAAxCO,aAAcC,EAA0BR,EAA1BQ,UAAWC,EAAeT,EAAfS,WAExCC,EAAQ,IAAIR,KAAKI,GAA4BC,GAC7CI,EAAM,IAAIT,KAAKM,GAAwBC,GAI7C,IAAKH,EAED,OAAII,EAAQP,GAAOO,EAAQN,EAAoB5G,KAAKoH,WAAW,wCAA+BjH,EAAOkH,SAGjGH,EAAQP,GAAOO,EAAQL,EAAmB7G,KAAKoH,WAAW,mCAA+BjH,EAAOmH,MAGhGJ,EAAQL,EAAmB7G,KAAKoH,WAAW,eAAgBjH,EAAOL,OAE/DE,KAAKoH,WAAW,WAAYjH,EAAOoH,OAGvC,GAAIT,EAAa,CAEpB,GAAIE,EAAW,OAAOhH,KAAKoH,WAAW,8BAA0BjH,EAAOoH,OAGvE,IAAKP,EAED,OAAIL,EAAMQ,GAAOP,EAAcO,EAAYnH,KAAKoH,WAAW,uCAAyBjH,EAAOmH,MAGvFX,EAAMQ,GAAOA,EAAMN,EAAmB7G,KAAKoH,WAAW,wCAA0BjH,EAAOkH,SAGvFV,EAAMQ,GAAOA,EAAMN,EAAmB7G,KAAKoH,WAAW,0CAAiCjH,EAAOL,OAE3FE,KAAKoH,WAAW,mBAAoBjH,EAAOqH,SAI1D,OAAOxH,KAAKoH,WAAW,kBAAmBjH,EAAOkH,a,GA/ExBjH,GAmFlB,MAAI+F,E,2BOjHJ,SAASsB,EAAYjK,GAChC,OACI,eAACkK,EAAA,EAAD,CACIxK,GAAE,aACEyK,QAAS,OACTC,cAAe,SACfvK,MAAO,eACPwK,OAAQ,SAACvM,GAAD,OAAWA,EAAMuM,OAAOC,OAAS,GACzCC,gBAAgB,sBACbvK,EAAMN,IAEbiB,KAAMX,EAAMW,KAThB,UAWI,cAAC6J,EAAA,EAAD,CAAYjL,QAAQ,KAAKkL,GAAI,EAA7B,SACKzK,EAAM0K,OAEX,cAACC,EAAA,EAAD,CAAkB9K,MAAM,eCIpC,IAAM+K,EAAqC,CACvCC,OAAQ,UACRC,IAAK,OACLC,KAAM,QAIVH,EAAMI,MAAQJ,EAAMC,OAAS,SAC7BD,EAAMK,SAAWL,EAAMC,OAAS,YAChCD,EAAMM,SAAWN,EAAMC,OAAS,YAChCD,EAAMO,gBAAkBP,EAAMC,OAAS,UAEvCD,EAAMQ,OAASR,EAAMG,KAAO,YAC5BH,EAAMS,SAAWT,EAAMG,KAAO,YAE9BH,EAAMU,MAAQV,EAAMG,KAAO,SAC3BH,EAAMW,KAAOX,EAAMU,MAAQ,WAC3BV,EAAMY,WAAaZ,EAAMU,MAAQ,MACjCV,EAAMa,eAAiBb,EAAMG,KAAO,kBACpCH,EAAMc,QAAUd,EAAMG,KAAO,wBAC7BH,EAAMe,SAAWf,EAAMc,QAAU,yBACjCd,EAAMgB,KAAOhB,EAAMe,SAAW,iBAGvB,IAAME,EAAgC,CACzCC,UAAW,SAAC5G,GAAD,+BAAyCA,IACpD6G,WAAY,SAAC7G,EAAmBC,GAApB,OAA2C0G,EAAaC,UAAU5G,GAAvB,qBAAkDC,IACzG6G,OAAQ,SAAC9G,EAAmBC,EAAoBC,GAAxC,OAA2DyG,EAAaE,WAAW7G,EAAWC,GAAnC,iBAA2DC,IAC9H6G,OAAQ,SAAC5G,GAAD,OAAoBuF,EAAMU,MAAN,WAAkBjG,KAGnCuF,KCzCFsB,GAAsB5L,wBAAc,MAGlC,SAAS6L,GAAT,GAA8D,IAAnCjM,EAAkC,EAAlCA,SAChCkM,EAASlK,IACf,EAA8B1B,IAAMC,UAAS,GAA7C,mBAAO4L,EAAP,KAAgBC,EAAhB,KACA,EAAwB7L,mBAA6B,MAArD,mBAAO8L,EAAP,KAAaC,EAAb,KAGMC,EAAYjM,IAAMU,aAAY,SAACqL,GACjCC,EAAQD,GAGR3E,EAAe8E,YAAYH,EAAKxF,IAChCW,EAAgBS,SAAWoE,EAAKpE,SAChCT,EAAgBrC,OAASkH,EAAKxF,GAC9B4B,EAAmBtD,OAASkH,EAAKxF,GACjCX,EAAaf,OAASkH,EAAKxF,GAC3BO,EAAYjC,OAASkH,EAAKxF,KAC3B,IAGG4F,EAAwBnM,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,yDAC5C2G,GAAW,IACP5G,EAAYQ,WAF4B,0CAI1BR,EAAYkH,aAJc,mDAKNtF,EAAYuF,QALN,OAK1BC,EAL0B,OAMhCL,EAAUK,GACVV,EAAO,kBAAmB,QAPM,wBAShCA,EAAO,2BAAuB,QAAQ,kBAAM,cAAC,IAAD,CAAUW,GAAInC,GAAMI,WAThC,0DAYpCoB,EAAO,KAAI7J,YAAa,SAAS,kBAAM,cAAC,IAAD,CAAUwK,GAAInC,GAAMoC,aAZvB,gCAexCZ,EAAO,SAAU,QAAQ,kBAAM,cAAC,IAAD,CAAUW,GAAInC,GAAMoC,aAfX,QAiB5CV,GAAW,GAjBiC,0DAkB7C,CACCF,EACAK,IAIJjM,IAAMyM,WAAU,WAEZ,OADAN,IACO,eACR,CAACA,IAGJ,IAAMO,EAAQ1M,IAAMU,YAAN,uCAAkB,WAAOmB,GAAP,iBAAAsD,EAAA,+EAElBD,EAAYwH,MAAM7K,GAFA,uBAGEiF,EAAYuF,QAHd,OAGlBC,EAHkB,OAIxBL,EAAUK,GAEVV,EAAO,6BAAyB,WAAW,kBAAM,cAAC,IAAD,CAAUW,GAAInC,GAAMG,UAN7C,kDASpB3K,EAAU,KAAImC,YAED,MAAb,KAAI4K,OAAc/M,EAAU,gCAEhCgM,EAAOhM,EAAS,SAbQ,0DAAlB,sDAeX,CACCgM,EACAK,IAIEW,EAAS5M,IAAMU,aAAY,WAC7BkL,EAAO,6BAAyB,WAAW,kBAAM,cAAC,IAAD,CAAUW,GAAInC,GAAMoC,aACrEtH,EAAY0H,SACZZ,EAAQ,QACT,CAACJ,IAGJ,OACI,qCACI,cAACnC,EAAD,CACItJ,KAAM0L,EACN3B,KAAK,4BAET,cAACwB,GAAe1K,SAAhB,CAAyBC,MAAO,CAAE8K,OAAMW,QAAOE,UAA/C,UACMf,GAAWnM,O,wBCtGhBmN,GAA6B,CACtCxE,YAAa,CAAEyE,EAAG,GAClBC,eAAgB,SAACC,MCJRC,GAAqBjN,IAAMF,cAA4C+M,IAmBrE,SAASK,GAA8B1N,GAElD,MAAsCQ,IAAMC,UACzC,kBAnBqBkN,EAmBG3N,EAAMgH,KAnBQ4G,EAmBF5N,EAAMxB,QAlB1BoJ,EAAeC,KAAK8F,IAIhCC,EALX,IAA4BD,EAAiBC,KAkBzC,mBAAO/E,EAAP,KAAoB0E,EAApB,KAQA,OAJA/M,IAAMyM,WAAU,WACZrF,EAAeI,KAAKhI,EAAMgH,KAAM6B,KACjC,CAACA,EAAa7I,EAAMgH,OAEnB6B,EAGA,cAAC4E,GAAmBjM,SAApB,CAA6BC,MAAO,CAAEoH,cAAa0E,kBAAnD,SACKvN,EAAME,WAJS,K,sDC7Bb,SAAS2N,KACpB,OAAOrN,IAAM2B,WAAWsL,ICEb,SAASK,KAAkB,IAAD,EACrC,EAAwCD,KAAhChF,EAAR,EAAQA,YAAa0E,EAArB,EAAqBA,eAGfQ,EAAmBvN,eAAkB,SAACW,EAAmCM,GAC3E8L,GAAe,SAAAS,GAAG,kCACXA,GADW,IAEdC,YAAaxM,SAElB,CACC8L,IAGEW,EAAoB1N,eAAkB,SAACW,EAAkCgN,GAC3EZ,GAAe,SAAAS,GAAG,kCACXA,GADW,IAEdI,YAAazO,OAAOwB,EAAMkN,OAAO5M,cAEtC,CACC8L,IAIJ,OACI,eAACe,GAAA,EAAD,CAAOC,QAAS,EAAG7O,GAAI,CACnB8O,SAAU,OACVpE,cAAe,MACfqE,eAAgB,SAChBC,aAAc,SACdC,WAAY,UALhB,UAOI,cAACC,GAAA,EAAD,CACIC,MAAOhG,EAAYiG,WACnBxP,KAAK,QACLyP,KAAMlG,EAAYoF,YAClBe,SAAUjB,IAEd,eAACkB,GAAA,EAAD,CAAaC,WAAS,EAACxP,GAAI,CAAEyP,SAAU,SAAvC,UACI,cAACC,GAAA,EAAD,CAAYrI,GAAG,sBAAf,wBACA,eAACsI,GAAA,EAAD,CACI/P,KAAK,QACLgQ,QAAQ,sBACRvI,GAAG,gBACHwI,MAAM,aACN9N,MAAK,UAAEoH,EAAYuF,mBAAd,QAA6B,EAClCY,SAAUd,EANd,UASQ,CAAC,EAAG,GAAI,GAAI,IAAIsB,KAAI,SAAAC,GAAG,OAAI,cAACC,GAAA,EAAD,CAAoBjO,MAAOgO,EAA3B,SAAiCA,GAAlBA,MAE9C,cAACC,GAAA,EAAD,CAAUjO,MAAO,IAAjB,+B,IChDdkO,G,2JAEF,SAAMpL,EAAyBsE,GAC3B,OAAOrG,KAAK2D,IACR3D,KAAKqE,YAAYtC,GAAa,YAC9BsE,K,6DAIR,sBAAAlD,EAAA,sEACiBnD,KAAK2D,IAAL,mBADjB,wF,2DATqBvD,GAeV,OAAI+M,GCtBJ,SAASC,GAAWC,GAC/B,MAA8BrP,IAAMC,WAApC,mBAAOqP,EAAP,KAAgBC,EAAhB,KAWA,OARAvP,IAAMyM,WAAU,WACZ,IAAM+C,EAAMC,aAAY,kBAAMF,GAAW,SAAA/B,GAAG,OAAKA,OAAM6B,GAEvD,OAAO,kBAAMK,cAAcF,MAC5B,CACCH,IAGGC,ECHJ,IAAMK,GAAmB3P,IAAMF,cAAc,MAQrC,SAAS8P,GAAoBpQ,GACxC,IAAMuE,EAAY8L,cAClB,EAAwCxC,KAAhChF,EAAR,EAAQA,YAAa0E,EAArB,EAAqBA,eACfnB,EAASlK,IACToO,EAAUV,GAAW,KAE3B,EAAwBpP,IAAMC,WAA9B,mBAAO8P,EAAP,KAAaC,EAAb,KAGMC,EAAOjQ,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,+EAEJgK,GAAWvM,MAAMmB,EAAWsE,GAFxB,OAEjBvC,EAFiB,OAGvBkK,EAAQlK,EAAKjE,MAEbiE,EAAKoK,YAAcnD,GAAe,SAAAS,GAAG,wCAC9BA,GAD8B,IAEjCc,WAAU,UAAExI,EAAKoK,kBAAP,aAAE,EAAiB5B,gBAPV,gDAUvB1C,EAAO,KAAI7J,YAAa,SACxBiO,EAAQ,IAXe,yDAe5B,CACCjD,EACA1E,EAAYoF,YACZpF,EAAYuF,YACZvF,EAAYvF,OACZuF,EAAYxD,OACZ+G,EACA7H,IAYJ,OARA/D,IAAMyM,WAAU,WACZwD,MACD,CACCA,EACAH,IAICC,EAGD,cAACJ,GAAY3O,SAAb,CAAsBC,MAAO,CACzB8O,QADJ,SAGKvQ,EAAME,WANG,K,+BClDP,SAASyQ,GAAT,GAMO,IALlBlP,EAKiB,EALjBA,MACAuN,EAIiB,EAJjBA,SACAO,EAGiB,EAHjBA,MACAvI,EAEiB,EAFjBA,KACAtH,EACiB,EADjBA,GAEA,EAA8Bc,IAAMC,WAApC,mBAAOqP,EAAP,KAAgBC,EAAhB,KACA,EAAsBvP,IAAMC,SAAiBgB,GAA7C,mBAAO0F,EAAP,KAAYyJ,EAAZ,KAGMC,EAA0BrQ,IAAMU,aAAY,SAAC4P,GAC/CF,EAAOE,EAAIzC,OAAO5M,OAClBsP,aAAajB,GAEb,IAAIkB,EAAQC,YAAW,WACnBjC,EAAS8B,KACV,KACHf,EAAWiB,KACZ,CACClB,EACAd,IAIJ,OAAO,cAACkC,GAAA,EAAD,CACHlK,KAAMA,EACNvF,MAAO0F,EACP6H,SAAU6B,EACVM,YAAa5B,EACb7P,GAAE,aACEuC,MAAO,OACPkN,SAAU,QACViC,EAAG,EACHC,QAAS,sBACN3R,GAEP4R,WAAY,CAAE,aAAc/B,KC1C7B,SAASgC,KAAc,IAAD,IACzB,EAAwC1D,KAAhChF,EAAR,EAAQA,YAAa0E,EAArB,EAAqBA,eAGfiE,EAAehR,IAAMU,aAAY,SAAC4P,GACpCA,EAAIW,iBACJlE,GAAe,SAAAS,GAAG,kCAAUA,GAAV,mBAAgB8C,EAAIzC,OAAOrH,KAAO8J,EAAIzC,OAAO5M,aAChE,CAAC8L,IAGJ,OACI,eAACmE,GAAA,EAAD,CAAMC,WAAS,EAAC5Q,UAAU,OAAOwN,QAAS,EAA1C,UACI,cAACmD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAGC,GAAI,EAAtB,SACI,eAAC5C,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,cAACE,GAAA,EAAD,CAAYrI,GAAG,iBAAf,oBACA,eAACsI,GAAA,EAAD,CACI/P,KAAK,QACLgQ,QAAQ,iBACRvI,GAAG,SACHtF,MAAOoH,EAAYvF,OACnB0D,KAAK,SACLuI,MAAM,iBACNP,SAAUwC,EAPd,UASI,cAAC9B,GAAA,EAAD,CAAUjO,MAAM,GAAhB,kBACA,cAACiO,GAAA,EAAD,CAAUjO,MAAM,MAAhB,iBACA,cAACiO,GAAA,EAAD,CAAUjO,MAAM,OAAhB,kBACA,cAACiO,GAAA,EAAD,CAAUjO,MAAM,QAAhB,mBACA,cAACiO,GAAA,EAAD,CAAUjO,MAAM,SAAhB,4BAIZ,cAACiQ,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAClB,GAAD,CACIpB,MAAM,sBACNvI,KAAK,SACLvF,MAAK,oBAAEoH,EAAYxD,cAAd,aAAE,EAAoBC,kBAAtB,QAAoC,GACzC0J,SAAU,SAAC8B,GAAD,OAASvD,GAAe,SAAAS,GAAG,kCAAUA,GAAV,IAAe3I,OAAQyL,EAAIzC,OAAO5M,mB,uGC1CpF,SAASqQ,GAAYC,GACxB,IAAMC,EAAO,IAAI9I,KAAK6I,GAMtB,OALe,IAAIE,KAAKC,eAAe,QAAS,CAC5CC,UAAW,SACXC,UAAW,WAGDC,OAAOL,GAIlB,IAAMM,GAAa,IAAIL,KAAKC,eAAe,QAAS,CACvDE,UAAW,WAIR,SAASG,GAAOpL,GACnB,IAAKA,EAAK,OAAO,EAEjB,IAAI6K,EAAO,IAAI9I,KAAK/B,GACpB,OAAOlB,QAAQ+L,EAAKQ,W,8CCTT,SAASC,GAAOzS,GAC3B,IAAQ0S,EAAQ1S,EAAR0S,IACR,EAAwBlS,IAAMC,UAAS,GAAvC,mBAAOE,EAAP,KAAaC,EAAb,KAEA,OACI,qCACI,eAAC+R,GAAA,EAAD,CAAUC,OAAK,EAAClT,GAAI,CAAE,QAAS,CAAEmT,aAAc,UAA/C,UACI,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACI,aAAW,8BACXzT,KAAK,QACL0T,QAAS,kBAAMpS,GAASD,IAH5B,SAKKA,EAAO,cAAC,KAAD,IAA0B,cAAC,KAAD,QAG1C,cAACmS,GAAA,EAAD,CAAW/R,UAAU,KAAKkS,MAAM,MAAhC,SAAuCP,EAAI3L,KAE3C,cAAC+L,GAAA,EAAD,CAAWI,MAAM,OAAjB,SAAyBR,EAAIrP,WAC7B,cAACyP,GAAA,EAAD,CAAWI,MAAM,OAAjB,SAAyBC,KAAKC,OAAkB,IAAXV,EAAIW,MAAaC,YAAY,QAEtE,cAACX,GAAA,EAAD,UACI,cAACG,GAAA,EAAD,CAAWS,MAAO,CAAEC,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAhE,SACI,cAACC,GAAA,EAAD,CAAUC,GAAIjT,EAAMkT,QAAQ,OAAOC,eAAa,EAAhD,SACI,eAACC,EAAA,EAAD,CAAKhT,UAAU,MAAMrB,GAAI,CAAEsU,OAAQ,GAAnC,UACI,cAACC,GAAA,EAAD,CAAMlT,UAAWmT,KAAYnH,GAAE,iBAAY2F,EAAInG,MAA/C,yCADJ,IACoF,uBAC/EuF,GAAYY,EAAIyB,UAFrB,YAE6CzB,EAAIpP,OAFjD,OAE+DoP,EAAIrP,SAAS,uBAF5E,uBAGyBqP,EAAIW,KAH7B,OAGsC,uBAHtC,wBAIoB,uBACf1P,KAAKC,UACFD,KAAK0D,MAAMqL,EAAI0B,cACfC,EACA,eCjCjB,SAASC,KACpB,IAAQ/D,ECTD/P,IAAM2B,WAAWgO,IDShBI,KAER,OACI,cAACgE,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAO,aAAW,kBAAelV,KAAK,QAAtC,UACI,cAACmV,GAAA,EAAD,UACI,eAAC9B,GAAA,EAAD,WACI,cAACG,GAAA,EAAD,IACA,cAACA,GAAA,EAAD,CAAWI,MAAM,OAAjB,gBAEA,cAACJ,GAAA,EAAD,CAAWI,MAAM,OAAjB,0BACA,cAACJ,GAAA,EAAD,CAAWI,MAAM,OAAjB,yCAGR,eAACwB,GAAA,EAAD,WACqB,IAAhBnE,EAAK1L,QACF,cAAC8N,GAAA,EAAD,UACI,cAACG,GAAA,EAAD,CAAWY,QAAS,EAApB,SACI,cAAClJ,EAAA,EAAD,CAAYmK,UAAU,SAASvD,EAAE,WAAjC,wDAOXb,EAAKf,KAAI,SAAChH,GAAD,OAAS,cAACiK,GAAD,CAAqBC,IAAKlK,GAAbA,EAAIzB,eE9BzC,SAAS6N,KACpB,OACI,cAAClH,GAAD,CAA4B1G,KAAK,oBAAoBxI,QAAS,CAAE8E,OAAQ,QAAS8K,YAAa,GAA9F,SACI,cAAC,GAAD,UACI,eAACE,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACI,cAACgD,GAAD,IACA,cAAC+C,GAAD,IACA,cAACxG,GAAD,W,0ECFL,SAAS+G,GAAU7U,GAAwB,IAAD,EACrD,OACI,eAAC8U,GAAA,EAAD,CAAOC,UAAW,EAAGrV,GAAE,aACnB0R,EAAG,GACApR,EAAMN,IAFb,WAIU,OAALM,QAAK,IAALA,OAAA,EAAAA,EAAOgV,QAAS,cAACxK,EAAA,EAAD,CAAYjL,QAAQ,QAAQwB,UAAS,UAAEf,EAAMiV,sBAAR,QAA0B,KAAMpV,MAAM,iBAA3E,SACZG,EAAMgV,QAEVhV,EAAME,Y,qCCVJ,SAASgV,GAAelV,GACnC,IAAQE,EAAsCF,EAAtCE,SAAUiV,EAA4BnV,EAA5BmV,OAAQC,EAAoBpV,EAApBoV,MAAUC,EAApC,aAA8CrV,EAA9C,IAeA,OAZeQ,IAAM8U,SAAQ,kBACzB,cAACvB,EAAA,EAAD,yBACIwB,KAAK,WACLJ,OAAQA,EACRpO,GAAE,8BAAyBqO,GAC3B,2CAAmCA,IAC/BC,GALR,aAOI,cAACR,GAAD,UAAY3U,SAEd,CAACiV,EAAQC,EAAOlV,EAAUmV,ICRrB,SAASG,GAAcxV,GAClC,IAAMlC,EAAQ2X,eACd,EAAgCjV,IAAMC,SAAS,GAA/C,mBAAOiV,EAAP,KAAiBC,EAAjB,KAGMC,EAAkBpV,IAAMU,aAAY,SAACC,EAA6B0U,GACpEF,EAAYE,KACb,IAGGC,EAAoBtV,IAAMU,aAAY,SAACkU,GACzCO,EAAYP,KACb,IAGGW,EAAevV,IAAM8U,SAAQ,WAC/B,OAAOtV,EAAMgW,KAAKxG,KAAI,SAACT,EAAMqG,GAAP,OAAiB,cAACa,GAAA,EAAD,aAEnC1G,MAAO,cAAC/E,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,SAAnC,SAA6CwP,EAAK/H,QA1BrE,SAAmBoO,GACf,MAAO,CACHrO,GAAG,kBAAD,OAAoBqO,GACtB,gBAAgB,uBAAhB,OAAwCA,IAwBhCc,CAAUd,IAFTA,QAIV,CAACpV,EAAMgW,OAGJG,EAAoB3V,IAAM8U,SAAQ,WACpC,OAAOtV,EAAMgW,KAAKxG,KAAI,SAACT,EAAMqG,GAAP,OAAiB,cAACF,GAAD,CAEnCE,MAAOA,EACPD,OAAQO,IAAaN,EACrBgB,IAAKtY,EAAMuY,UAJwB,SAMlCtH,EAAKhO,WALDqU,QAOV,CACCpV,EAAMgW,KACNN,EACA5X,EAAMuY,YAIV,OACI,gCACI,cAACC,GAAA,EAAD,CACIC,0BAAwB,EACxB9U,MAAOiU,EACP1G,SAAU4G,EACVY,eAAe,UACfjX,QAAQ,aACRG,GAAI,CAAEmT,aAAc,EAAG4D,YAAa,WANxC,SAQKV,IAEL,uBACA,cAAC,KAAD,CACIW,KAA0B,QAApB5Y,EAAMuY,UAAsB,YAAc,IAChDjB,MAAOM,EACPiB,cAAeb,EAHnB,SAKKK,O,IClDXS,G,4MACFrP,MAAQ,Y,wCAER,WACI,OAAO/E,KAAK+E,Q,oBAGhB,WACI,OAAO/E,KAAK2D,IAAI,e,oBAGpB,SAAcY,GACV,OAAOvE,KAAKsE,OACRC,EAAE,UAAMvE,KAAKuC,KAAX,YAAmBgC,GAAOvE,KAAKuC,Q,oBAIzC,SAAcgC,EAAY1E,GACtB,OAAOG,KAAKgF,MAAL,UAAchF,KAAKuC,KAAnB,YAA2BgC,GAAM1E,K,oBAG5C,SAAcA,GACV,OAAOG,KAAKoD,KAAKpD,KAAKuC,KAAM1C,O,GAtBRO,GA0Bb,OAAIgU,G,8BC3CJ,SAASC,GAAY7W,GAChC,OACI,eAACwK,EAAA,EAAD,CAAY3K,MAAM,iBAAiBN,QAAQ,QAAQuX,SAAS,UAA5D,wBACgBhF,GAAY9R,EAAM+W,MAAM5C,UAAU,uBADlD,0BAE4BrC,GAAY9R,EAAM+W,MAAMC,a,uDCK7C,SAASC,GAAT,GAMa,IALxBjC,EAKuB,EALvBA,MACAkC,EAIuB,EAJvBA,SACAC,EAGuB,EAHvBA,SACAC,EAEuB,EAFvBA,SACAlX,EACuB,EADvBA,SAIMmX,EAAe7W,IAAMU,aAAY,SAACC,GACpCA,EAAMsQ,iBACN0F,MACD,CACCA,IAIJ,OACI,eAAC7I,GAAA,EAAD,CAAOgJ,OAAQ,EAAf,UACI,iCACI,cAAC9M,EAAA,EAAD,CAAYjL,QAAQ,KAAKM,MAAM,eAA/B,SACKmV,IAGJkC,GAAY,cAAC1M,EAAA,EAAD,CAAYjL,QAAQ,QAAQM,MAAM,iBAAiB0X,GAAG,MAAtD,SACRL,OAIT,eAACxF,GAAA,EAAD,CAAMC,WAAS,EAACpD,QAAS,EAAGxN,UAAU,OAAOoW,SAAUE,EAAvD,UACKnX,EACD,cAACwR,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,eAACtD,GAAA,EAAD,CAAO+H,UAAU,MAAM5H,eAAe,eAAe8I,GAAI,IAAzD,UACI,cAACC,GAAA,EAAD,CACI,aAAW,UACXxC,MAAM,UACNyC,UAAW,cAAC,KAAD,IACXzE,QAASoE,EAJb,qBAQA,cAACI,GAAA,EAAD,CACI,aAAW,iBACXxC,MAAM,iBACNyC,UAAW,cAAC,KAAD,CAAU5X,MAAM,YAC3ByE,KAAK,SACLzE,MAAM,UALV,uC,wBC7CT,SAAS6X,GAAT,GAEQ,IADrBxX,EACoB,EADpBA,SAAUS,EACU,EADVA,KAAMjB,EACI,EADJA,GAAIqC,EACA,EADAA,QAGpB,OACE,cAAC4V,GAAA,EAAD,CACEhX,KAAMA,EACNoB,QAASA,EACT6V,sBAAoB,EACpBC,kBAAmB3N,IACnB4N,cAAe,CACbjE,QAAS,KAEXnU,GAAI,CACFyK,QAAS,OACTsE,eAAgB,SAChBE,WAAY,aACZoJ,SAAU,QAZd,SAeE,cAACC,GAAA,EAAD,CAAMpE,GAAIjT,EAAV,SACE,cAACmU,GAAA,EAAD,CAAOpV,GAAE,aACP2R,QAAS,mBACT4G,SAAU,WAEVhW,MAAO,MACPsV,GAAI,MACJpI,SAAU,QAEV+I,UAAW,GACX9G,EAAG,GACA1R,GAVL,SAYGQ,QC3BX,IAAMiY,GAAS,CACX,CACInR,KAAM,QACNuI,MAAO,wBACR,CACCvI,KAAM,cACNuI,MAAO,mCACR,CACCvI,KAAM,gBACNuI,MAAO,4BACR,CACCvI,KAAM,YACNuI,MAAO,wBACR,CACCvI,KAAM,oBACNuI,MAAO,6BACR,CACCvI,KAAM,sBACNuI,MAAO,uCACR,CACCvI,KAAM,YACNuI,MAAO,0BACR,CACCvI,KAAM,cACNuI,MAAO,6BAKA,SAAS6I,GAAT,GAKW,IAAD,EAJrBC,EAIqB,EAJrBA,OACA1X,EAGqB,EAHrBA,KACAoB,EAEqB,EAFrBA,QACAoV,EACqB,EADrBA,SAGA,EAAwB3W,IAAMC,SAA6B,IAA3D,mBAAO4B,EAAP,KAAaiW,EAAb,KAGM9G,EAAehR,IAAMU,aAAY,SAACC,GACpC,IAAIM,EAEJ,GACS,SADDN,EAAMkN,OAAOrH,KAEbvF,EAAQN,EAAMkN,OAAO5M,WAGrBA,EAAQN,EAAMkN,OAAOkK,QAI7BD,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAOvF,SAE1B,IAGG+W,EAAQhY,IAAMU,aAAY,WAC5Ba,IACAuW,EAAQ,MACT,CACCvW,IAIEsV,EAAe7W,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,sEACzBwR,EAASkB,EAAOtR,GAAI1E,GADK,kCAE/BN,IACAuW,EAAQ,IAHuB,2CAKpC,CACCvW,EACAoV,EACAkB,EAAOtR,GACP1E,IAIJ,OACI,cAACqV,GAAD,CACI/W,KAAMA,EACNoB,QAASyW,EAFb,SAII,eAACvB,GAAD,CACIE,SAAUE,EACVD,SAAUoB,EACVxD,MAAM,4BACNkC,SAAS,+HAJb,UAMI,cAACxF,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACR1R,KAAK,OACLuI,MAAM,QACNxI,GAAG,QACHtF,MAAK,UAAEY,EAAK2E,YAAP,QAAeqR,EAAOrR,KAC3BgI,SAAUwC,MAKd2G,GAAO3I,KAAI,SAACmJ,EAAOvD,GAAR,OACP,cAAC1D,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACgH,GAAA,EAAD,CACIC,eAAe,QACfC,QAAS,cAACC,GAAA,EAAD,CACLhS,GAAE,iBAAY4R,EAAM3R,MACpBA,KAAM2R,EAAM3R,KACZsK,WAAY,CAAE,aAAcqH,EAAMpJ,OAClCP,SAAUwC,EACV+G,QAAUI,EAAM3R,QAAQ3E,EAAQA,EAAKsW,EAAM3R,MAASqR,EAAOM,EAAM3R,QAErEuI,MAAOoJ,EAAMpJ,SAVG6F,MAehC,cAAC1D,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIoH,GAAI,EAAvB,SACI,cAACnC,GAAD,CAAaE,MAAOsB,WC5HzB,SAASY,GAAT,GAIa,IAHxBtY,EAGuB,EAHvBA,KACAoB,EAEuB,EAFvBA,QACAoV,EACuB,EADvBA,SAGA,EAAwB3W,IAAMC,SAAiB,IAA/C,mBAAOuG,EAAP,KAAakS,EAAb,KAGM1H,EAAehR,IAAMU,aAAY,SAACC,GACpC+X,EAAQ/X,EAAMkN,OAAO5M,SACtB,IAGG+W,EAAQhY,IAAMU,aAAY,WAC5Ba,IACAmX,EAAQ,MACT,CACCnX,IAIEsV,EAAe7W,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,sEACzBwR,EAAS,CACfnQ,KAAMA,IAFyB,kCAI/BjF,IACAmX,EAAQ,IALuB,2CAOpC,CACCnX,EACAoV,EACAnQ,IAIJ,OACI,cAAC0Q,GAAD,CACI/W,KAAMA,EACNoB,QAASyW,EAFb,SAII,cAACvB,GAAD,CACIE,SAAUE,EACVD,SAAUoB,EACVxD,MAAM,+BACNkC,SAAS,oKAJb,SAMI,cAACxF,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIU,WAAS,EACTT,UAAQ,EACR1R,KAAK,OACLuI,MAAM,QACNxI,GAAG,QACHtF,MAAOuF,EACPgI,SAAUwC,UC9D3B,IAAM4H,GAAqB5Y,IAAMF,cAAc,MAQvC,SAAS+Y,GAAsBrZ,GAC1C,IAAMoM,EAASlK,IAEf,EAAkC1B,IAAMC,UAAkB,GAA1D,mBAAO6Y,EAAP,KAAkBC,EAAlB,KACA,EAAgD/Y,IAAMC,WAAtD,mBAAO+Y,EAAP,KAAyBC,EAAzB,KACA,EAAwCjZ,IAAMC,WAA9C,mBAAOiZ,EAAP,KAAqBC,EAArB,KAGMlJ,EAAOjQ,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,+EAEJiR,GAAcgD,SAFV,OAEjBtT,EAFiB,OAGvBqT,EAAgBrT,EAAKjE,MAHE,gDAKvB+J,EAAO,KAAI7J,YAAa,SACxBoX,EAAgB,IANO,yDAQ5B,CAACvN,IAGJ5L,IAAMyM,WAAU,WACZwD,MACD,CAACA,IAGJ,IAAMoJ,EAAerZ,IAAMU,YAAN,uCAAkB,WAAOuG,EAAkBpF,GAAzB,SAAAsD,EAAA,+EAErBiR,GAAc1O,OAAOT,EAAUpF,GAFV,kCAG3BsX,GAAgB,SAAA3L,GACZ,GAAIA,EACA,OAAOA,EAAIwB,KAAI,SAAA6I,GAOX,OANIA,EAAOtR,KAAOU,IACd4Q,EAAM,2BACCA,GACAhW,IAGJgW,QAInBjM,EAAO,iDAAwC,WAhBpB,iCAkBxB,GAlBwB,gCAoB/BA,EAAO,KAAI7J,YAAa,SApBO,kCAsB5B,GAtB4B,yDAAlB,wDAuBlB,CAAC6J,IAGE0N,EAAetZ,IAAMU,YAAN,uCAAkB,WAAO6F,GAAP,SAAApB,EAAA,+EAEzBiR,GAAcmD,OAAOhT,GAFI,cAI/B4S,GAAgB,SAAA3L,GACZ,GAAKA,EACL,OAAOA,EAAItF,QAAO,SAAA2P,GAAM,OAAIA,EAAOtR,KAAOA,QAG9CqF,EAAO,gDAAkC,WATV,mBAUxB,GAVwB,gCAY/BA,EAAO,KAAI7J,YAAa,SAZO,kCAc5B,GAd4B,yDAAlB,sDAelB,CAAC6J,IAGE4N,EAAexZ,IAAMU,YAAN,uCAAkB,WAAOmB,GAAP,eAAAsD,EAAA,+EAEZiR,GAAcqD,OAAO5X,GAFT,cAEzBiE,EAFyB,OAI/BqT,GAAgB,SAAA3L,GAOZ,OANG,OAAHA,QAAG,IAAHA,KAAKkM,QAAL,2BACO7X,GADP,IAEI0E,GAAIT,EAAKjE,KACT8R,UAAW,IAAIjL,MAAQiR,cACvBnD,UAAW,IAAI9N,MAAQiR,iBAEpBxV,OAAOyV,OAAO,GAAIpM,MAG7B5B,EAAO,4CAAmC,WAdX,mBAexB,GAfwB,gCAiB/BA,EAAO,KAAI7J,YAAa,SAjBO,kCAmB5B,GAnB4B,yDAAlB,sDAoBlB,CAAC6J,IAGEiO,EAAiB7Z,IAAM8U,SAAQ,WACjC,cAAOoE,QAAP,IAAOA,OAAP,EAAOA,EAAcjR,MAAK,qBAAG1B,KAAgByS,OAC9C,CAACA,EAAkBE,IAGhBY,EAAa9Z,IAAMU,aAAY,SAAC6F,GAClC0S,EAAoB1S,GACpBwS,GAAa,KACd,IAGH,OAAKG,EAGD,eAACN,GAAc5X,SAAf,CAAwBC,MAAO,CAC3BiY,eACAG,eACAC,eACAE,eACAM,cALJ,UAOKta,EAAME,SAEHma,GACA,cAAC,GAAD,CACI1Z,KAAM2Y,EACNnC,SAAU0C,EACV9X,QAAS,kBAAMwX,GAAa,IAC5BlB,OAAQgC,OAjBE,KClHf,SAASE,KACpB,OAAO/Z,IAAM2B,WAAWiX,I,wBCSb,SAASoB,GAAT,GAEO,IADlB7Z,EACiB,EADjBA,KAAM8Z,EACW,EADXA,UAAW1Y,EACA,EADAA,QAAS2Y,EACT,EADSA,WAEpBtO,EAASlK,IACf,EAA0B1B,IAAMC,SAAiB,IAAjD,mBAAOka,EAAP,KAAcC,EAAd,KAGMC,EAAgBra,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,yDAChCgV,IAAUD,EADsB,uBAEhCtO,EAAO,iCAAkC,SAFT,0BAKpCqO,IACAG,EAAS,IAN2B,2CAOrC,CAACF,EAAYC,EAAOF,EAAWrO,IAG5BoM,EAAQhY,IAAMU,aAAY,WAC5B0Z,EAAS,IACT7Y,MACD,CAACA,IAGJ,OACI,cAAC2V,GAAD,CACI/W,KAAMA,EACNoB,QAASyW,EACT,aAAW,2BACX9Y,GAAI,CACAyP,SAAU,SALlB,SAQI,eAACb,GAAA,EAAD,CAAO+H,UAAU,SAAS9H,QAAS,EAAnC,UACI,cAAC/D,EAAA,EAAD,CAAYjL,QAAQ,KAAKM,MAAM,eAA/B,8BAGA,eAAC2K,EAAA,EAAD,CAAYjL,QAAQ,QAAQM,MAAM,iBAAlC,2DAEI,uBAFJ,0BAGsB,4BAAI6a,IAAe,uBAHzC,uCAMA,cAACjC,GAAA,EAAD,CACI1R,GAAG,gBACHwI,MAAM,QACNhQ,QAAQ,WACRkC,MAAOkZ,EACP3L,SAAU,SAAC8B,GAAD,OAAS8J,EAAS9J,EAAIzC,OAAO5M,UAE3C,eAAC6M,GAAA,EAAD,CAAO+H,UAAU,MAAM5H,eAAe,eAAtC,UACI,cAAC+I,GAAA,EAAD,CAAQC,UAAW,cAAC,KAAD,IAAgBzE,QAASwF,EAA5C,oBACA,cAAChB,GAAA,EAAD,CAAQC,UAAW,cAAC,KAAD,CAAY5X,MAAM,YAAcmT,QAAS6H,EAAehb,MAAM,QAAjF,oCCxDL,SAASib,GAAY9a,GAChC,OACI,iCACI,cAACwK,EAAA,EAAD,CAAYjL,QAAQ,KAAKwB,UAAU,KAAKlB,MAAM,eAA9C,SACKG,EAAMgV,QAGPhV,EAAMkX,UACN,cAAC1M,EAAA,EAAD,CAAYjL,QAAQ,QAAQM,MAAM,iBAAiB0X,GAAG,MAAtD,SACKvX,EAAMkX,c,wBCPZ,SAAS6D,GAAQ/a,GAC5B,OACI,cAAC2S,GAAA,EAAD,CACIjT,GAAI,CAAE,mCAAoC,CAAEsb,OAAQ,IADxD,SAGI,cAAClI,GAAA,EAAD,CAAWY,QAAS,GAAIR,MAAM,OAA9B,SACI,cAACH,GAAA,EAAD,CACIiC,MAAM,gCACN,aAAW,gCACXhC,QAAShT,EAAMgT,QAHnB,SAKI,cAAC,KAAD,CAAe8D,SAAS,gB,yBCP7B,SAASmE,GAAQjb,GAC5B,OACI,eAAC2S,GAAA,EAAD,CACIjT,GAAI,CAAE,mCAAoC,CAAEsb,OAAQ,IADxD,UAGI,cAAClI,GAAA,EAAD,CAAW/R,UAAU,KAAKkS,MAAM,MAAhC,SAAuCjT,EAAM+G,KAC7C,cAAC+L,GAAA,EAAD,CAAWI,MAAM,OAAjB,SAAyBlT,EAAMgH,OAC/B,eAAC8L,GAAA,EAAD,CAAWI,MAAM,SAAjB,UACI,cAACH,GAAA,EAAD,CACAiC,MAAM,oCACN,aAAW,oCACXnV,MAAM,QACNmT,QAAShT,EAAMkb,SAJf,SAMI,cAAC,KAAD,MAEJ,cAACnI,GAAA,EAAD,CACIiC,MAAM,oBACN,aAAW,oBACXhC,QAAShT,EAAMmb,SAHnB,SAKI,cAAC,KAAD,YCnBL,SAASC,KAAgB,IAAD,EACnC,EAAiEb,KAAzDb,EAAR,EAAQA,aAAcY,EAAtB,EAAsBA,WAAYN,EAAlC,EAAkCA,aAAcF,EAAhD,EAAgDA,aAEhD,EAA8CtZ,IAAMC,UAAS,GAA7D,mBAAO4a,EAAP,KAAwBC,EAAxB,KACA,EAA8C9a,IAAMC,UAAS,GAA7D,mBAAO8a,EAAP,KAAwBC,EAAxB,KAEA,EAAgChb,IAAMC,SAA8C,MAApF,mBAAOgb,EAAP,KAAiBC,EAAjB,KAEMC,EAAenb,IAAM8U,SAAQ,WAC/B,OAAOoE,EAAalK,KAAI,gBAAGzI,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACpB,cAACiU,GAAD,CAEIlU,GAAIA,EACJC,KAAMA,EACNmU,SAAU,kBAAMb,EAAWvT,IAC3BmU,SAAU,WACNQ,EAAY,CAAE3U,GAAIA,EAAIC,KAAMA,IAC5BwU,GAAmB,KANlBzU,MAQL6U,YAET,CACClC,EACAY,IAIEuB,EAAerb,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,yDAC9B8V,EAD8B,iEAGzB3B,EAAa2B,EAAS1U,IAHG,kCAI/ByU,GAAmB,GAJY,2CAMpC,CAACC,EAAU3B,IAGd,OACI,qCAEI,cAAC,GAAD,CACInZ,KAAM0a,EACNtZ,QAAS,kBAAMuZ,GAAmB,IAClCnE,SAAU6C,IAGd,cAACQ,GAAD,CACIE,WAAU,iBAAEe,QAAF,IAAEA,OAAF,EAAEA,EAAUzU,YAAZ,QAAoB,GAC9BrG,KAAM4a,EACNxZ,QAAS,WACL2Z,EAAY,MACZF,GAAmB,IAEvBf,UAAWoB,IAGf,eAACvN,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACI,cAACuM,GAAD,CACI9F,MAAM,0BACNkC,SAAS,kDAGb,cAAC3C,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAO9U,GAAI,CAAEyP,SAAU,KAAO7P,KAAK,QAAQ,aAAW,+BAAtD,UACI,cAACmV,GAAA,EAAD,UACI,eAAC9B,GAAA,EAAD,WACI,cAACG,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,CAAWI,MAAM,OAAjB,mBACA,cAACJ,GAAA,EAAD,CAAWI,MAAM,SAAjB,wBAGR,eAACwB,GAAA,EAAD,WAEKiH,EAED,cAACZ,GAAD,CAAS/H,QAAS,kBAAMsI,GAAmB,oBCvFvE,IAAMQ,GAAe,CACjB,CACInD,MAAO,qBACPjO,KAAM,sHAEV,CACIiO,MAAO,eACPjO,KAAM,4BACP,CACCiO,MAAO,+BACPjO,KAAM,uTAGP,CACCiO,MAAO,gDACPjO,KAAM,2KACP,CACCiO,MAAO,2CACPjO,KAAM,2GACP,CACCiO,MAAO,mCACPjO,KAAM,4GACP,CACCiO,MAAO,4DACPjO,KAAM,oEACP,CACCiO,MAAO,+CACPjO,KAAM,kIACP,CACCiO,MAAO,qCACPjO,KAAM,qFACP,CACCiO,MAAO,yCACPjO,KAAM,8HAMC,SAASqR,KAIpB,IAAMC,EAAWxb,IAAM8U,SAAQ,WAC3B,OAAOwG,GAAatM,KAAI,WAAkBzI,GAAlB,IAAG4R,EAAH,EAAGA,MAAOjO,EAAV,EAAUA,KAAV,OACpB,+BACI,cAACF,EAAA,EAAD,CAAYjL,QAAQ,YAAYwB,UAAU,KAA1C,SACK4X,IAEL,cAACnO,EAAA,EAAD,CAAYjL,QAAQ,QAAQM,MAAM,iBAAiBoc,GAAI,EAAvD,SACKvR,MALA3D,QASd,IAGH,OACI,eAACuH,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACI,iCACI,cAAC/D,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,KAAKM,MAAM,eAA9C,gCAGA,eAAC2K,EAAA,EAAD,CAAYjL,QAAQ,QAAQM,MAAM,iBAAiB0X,GAAG,MAAtD,gHAC8E,uBAD9E,kLAGyB,mBAAGlJ,OAAO,SAAS6N,IAAI,aAAaC,KAAK,6DAAzC,6BAHzB,UAQJ,iCACI,cAAC3R,EAAA,EAAD,CAAYjL,QAAQ,KAAKwB,UAAU,KAAnC,uDAGA,6BACKib,U,yHCvEN,SAASI,GAAQpc,GAC5B,IAAQqc,EAA2Brc,EAA3Bqc,SAAaC,EAArB,aAAmCtc,EAAnC,IACA,OACI,eAACiU,GAAA,EAAD,yBACIlT,UAAWmT,KACXqI,UAAU,QACVpS,QAAQ,eACJmS,GAJR,cAMKD,GAAY,qCAAE,cAAC,KAAD,CAAUvF,SAAS,UAArB,UACZwF,EAAUpc,aCKvB,SAASsc,GAAc7W,EAAoB4C,GACvC,OAAO5C,EAAE+C,QAAO,SAAA+T,GAAE,YAAuCpI,IAAlC9L,EAAEE,MAAK,SAAAiU,GAAE,OAAIA,EAAG3V,KAAO0V,EAAG1V,SAGrD,SAAS4V,GAAUhX,EAAsB4C,GACrC,OAAO5C,EAAE+C,QAAO,SAACjH,GAAD,OAAiC,IAAtB8G,EAAEqU,QAAQnb,MAIzC,SAASob,GAAalX,EAAsB4C,GACxC,OAAO5C,EAAE+C,QAAO,SAACjH,GAAD,OAAW8G,EAAEE,MAAK,qBAAG1B,KAAgBtF,QAI1C,SAASqb,KAAmB,IAAD,IAC9BpD,EAAiBa,KAAjBb,aACFtN,EAASlK,IAEf,EAA8B1B,WAAkC,IAAhE,mBAAO+X,EAAP,KAAgBwE,EAAhB,KAEA,EAAkCvc,WAAuB,IAAzD,mBAAOwc,EAAP,KAAkBC,EAAlB,KACA,EAAoCzc,WAAuB,IAA3D,mBAAO0c,EAAP,KAAmBC,EAAnB,KAEA,EAA4B3c,WAIzB,CAAE4c,KAAI,UAAE1D,EAAa,UAAf,aAAE,EAAiB3S,GAAIsW,MAAK,UAAE3D,EAAa,UAAf,aAAE,EAAiB3S,KAJxD,mBAAOsR,EAAP,KAAeiF,EAAf,KAOMC,EAAoB/c,cAAA,uCAAkB,WAAOgd,EAAe/V,GAAtB,iBAAA9B,EAAA,6DAClC8X,EAAQD,EAAMhO,IAAN,uCAAU,WAAOjD,GAAP,SAAA5G,EAAA,+EAEV2B,EAAYuS,aAAatN,EAAKxF,GAAIU,GAFxB,gCAGT8E,GAHS,uCAKhBH,EAAO,KAAI7J,YAAa,SALR,mBAMT,GANS,yDAAV,uDAD0B,SAUpBmb,QAAQC,IAAIF,GAVQ,cAUpCG,EAVoC,yBAWjCA,EAAQlV,QAAO,SAAAN,GAAI,OAAa,IAATA,MAXU,2CAAlB,wDAYvB,CAACgE,IAGEyR,EAAYrd,cAAA,uCAAkB,WAAOiH,GAAP,eAAA9B,EAAA,+EAET2B,EAAYwW,SAAS,CAAErW,SAAUA,EAAUsW,SAAS,IAF3C,cAEtBzX,EAFsB,yBAGrBA,EAAKjE,MAHgB,gCAK5B+J,EAAO,KAAI7J,YAAa,SALI,iCAOzB,IAPyB,yDAAlB,sDAQf,CAAC6J,IAGJ5L,aAAgB,WACZqd,EAAUxF,EAAO+E,MAAMY,MAAK,SAAA3b,GAAI,OAAI4a,EAAa5a,QAClD,CACCgW,EAAO+E,KACPS,IAIJrd,aAAgB,WACZqd,EAAUxF,EAAOgF,OAAOW,MAAK,SAAA3b,GAAI,OAAI8a,EAAc9a,QACpD,CACCgW,EAAOgF,MACPQ,IAKJ,IAAMI,EAAczd,WAAc,kBAAMqc,GAAatE,EAASyE,KAAY,CAACzE,EAASyE,IAC9EkB,EAAe1d,WAAc,kBAAMqc,GAAatE,EAAS2E,KAAa,CAAC3E,EAAS2E,IAGhFiB,EAAe3d,eAAkB,SAACiB,GAAD,OAAmB,WACtDsb,GAAW,SAAA/O,GACP,IAAMoQ,EAAepQ,EAAI4O,QAAQnb,GAC3B8W,EAAU5T,OAAOyV,OAAO,GAAIpM,GAOlC,OALsB,IAAlBoQ,EACA7F,EAAQlQ,KAAK5G,GAEb8W,EAAQ8F,OAAOD,EAAc,GAE1B7F,QAEZ,IAIG+F,EAAqB9d,cAAA,sBAAkB,8BAAAmF,EAAA,6DACnC4Y,EAAcvB,EAAUtU,QAAO,gBAAG3B,EAAH,EAAGA,GAAH,OAAyC,IAA7BkX,EAAYrB,QAAQ7V,MAD5B,SAGrBwW,EAAkBgB,EAAalG,EAAOgF,OAHjB,OAGnCmB,EAHmC,OAIzCrB,EAAcD,EAAWuB,OAAOD,IAEhCvB,EAAaT,GAAcQ,EAAWwB,IACtCzB,EAAWJ,GAAUpE,EAAS0F,IAPW,2CAQ1C,CACCA,EACAf,EACAF,EACAzE,EACAF,EAAOgF,MACPE,IAKEmB,EAAoBle,cAAA,sBAAkB,gCAAAmF,EAAA,6DAClC4Y,EAAcrB,EAAWxU,QAAO,gBAAG3B,EAAH,EAAGA,GAAH,OAA0C,IAA9BmX,EAAatB,QAAQ7V,MAD/B,SAGpBwW,EAAkBgB,EAAalG,EAAO+E,MAHlB,OAGlCoB,EAHkC,OAIxCvB,EAAaD,EAAUyB,OAAOD,IAE1BG,EAAInC,GAAcU,EAAYsB,GAClCza,QAAQyE,IAAImW,GACZxB,EAAcwB,GACd5B,EAAWJ,GAAUpE,EAAS2F,IATU,2CAWzC,CACCA,EACAlB,EACAE,EACA3E,EACAF,EAAO+E,KACPG,IAIEqB,EAAqBpe,eAAkB,SAACW,GAC1C,IAAMM,EAAQ9B,OAAOwB,EAAMkN,OAAO5M,OAElC6b,GAAU,SAAAtP,GACN,OAAIA,EAAIoP,OAAS3b,GAASuM,EAAIqP,QAAU5b,EAAcuM,EAE/C,2BACAA,GADP,mBAEK7M,EAAMkN,OAAOrH,KAAOrH,OAAOwB,EAAMkN,OAAO5M,cAGlD,IAGGod,EAAare,eAAkB,SAAC6V,EAAmBmH,GAApB,OACjC,eAACsB,GAAA,EAAD,WACI,cAAC/K,EAAA,EAAD,CAAKrU,GAAI,CAAE0R,EAAG,GAAd,SACI,eAACnC,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,cAACE,GAAA,EAAD,CAAYrI,GAAG,6BAAf,gCACA,cAACsI,GAAA,EAAD,CACIC,QAAQ,6BACRtI,KAAMqP,EACN5U,MAAO4W,EAAOhC,GACd9G,MAAM,qBACNP,SAAU4P,EALd,SAOKlF,EAAalK,KAAI,gBAAGxI,EAAH,EAAGA,KAAMD,EAAT,EAASA,GAAT,OAAkB,eAAC2I,GAAA,EAAD,CAAqBjO,MAAOsF,EAA5B,UAAkCC,EAAlC,MAAeA,aAK/D,cAAC+X,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,CACItf,GAAI,CAGAuf,OAAQ,IACR5N,QAAS,mBACT0G,SAAU,QAEdmH,OAAK,EACLne,UAAU,MACVwU,KAAK,OAVT,UAYKiI,EAAMhO,KAAI,SAACjD,GACR,IAAM+C,EAAO,iCAA6B/C,EAAKxF,GAAlC,UAEb,OACI,eAACoY,GAAA,EAAD,CAEI5J,KAAK,WACL6J,QAAM,EACNpM,QAASmL,EAAa5R,EAAKxF,IAJ/B,UAMI,cAACsY,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACI/G,SAAuC,IAA9BA,EAAQqE,QAAQrQ,EAAKxF,IAC9B2O,UAAW,EACX6J,eAAa,EACbjO,WAAY,CACR,kBAAmBhC,OAI/B,cAACkQ,GAAA,EAAD,CAAczY,GAAIuI,EAASrR,QAASsO,EAAK1G,QAEzC,cAACwZ,GAAA,EAAD,CAAcrM,QAAS,SAACyM,GAAD,OAAaA,EAAGC,mBAAmB7f,MAAM,UAAhE,SACI,cAACuc,GAAD,CAASrP,GAAIlB,EAAaI,OAAOM,EAAKxF,IAAtC,SACI,cAAC,KAAD,UAnBHwF,EAAKxF,OAyBtB,cAACoY,GAAA,EAAD,YAGT,CAAChB,EAAc5F,EAASqG,EAAoBvG,EAAQqB,IAEvD,OACI,eAAChI,GAAA,EAAD,CAAMC,WAAS,EAACpD,QAAS,EAAGE,eAAe,SAASE,WAAW,SAA/D,UACI,cAAC+C,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACkJ,GAAD,CACI9F,MAAM,qCACNkC,SAAS,uFAIjB,cAACxF,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SAA2Bd,EAAW,OAAQ7B,KAC9C,cAACtL,GAAA,EAAD,CAAMtJ,MAAI,EAAV,SACI,eAACsJ,GAAA,EAAD,CAAMC,WAAS,EAAC0E,UAAU,SAAS1H,WAAW,SAA9C,UACI,cAAC6I,GAAA,EAAD,CACI9X,GAAI,CAAEkgB,GAAI,IACVrgB,QAAQ,WACRD,KAAK,QACL0T,QAASsL,EACTuB,SAAiC,IAAvB5B,EAAYpZ,OACtB,aAAW,sBANf,eAUA,cAAC2S,GAAA,EAAD,CACI9X,GAAI,CAAEkgB,GAAI,IACVrgB,QAAQ,WACRD,KAAK,QACL0T,QAAS0L,EACTmB,SAAkC,IAAxB3B,EAAarZ,OACvB,aAAW,qBANf,oBAYR,cAAC6M,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SAA2Bd,EAAW,QAAS3B,QCtQ5C,SAAS4C,KAGpB,IAAMC,EAAQvf,IAAM8U,SAAQ,WACxB,IAAI0K,EAAW,GAMf,OALAA,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACgb,GAAD,MAC1CiE,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACqa,GAAD,MAC1C4E,EAAI3X,KAAK,CAAErB,KAAM,gBAAiBjG,UAAW,cAAE+b,GAAF,MAC7CkD,EAAI3X,KAAK,CAAErB,KAAM,OAAQjG,UAAW,cAAC6T,GAAD,MAE7BoL,IACR,IAGH,OACI,cAAC,GAAD,UACI,cAACxK,GAAD,CAAeQ,KAAM+J,MCnBlB,SAASE,KACtB,OAAO9d,qBAAW+J,I,ICwBdgU,G,4MACF3Y,MAAQ,G,wCAER,WACI,OAAO/E,KAAK+E,Q,qBAGhB,YAAmE,IAAlDrC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,OACpC5C,KAAK+E,MAAL,qBAA2BrC,EAA3B,sBAAkDC,EAAlD,kBAAsEC,K,qBAG1E,WACI,OAAO5C,KAAK2D,IAAI3D,KAAKuC,Q,oBAGzB,WAA6D1C,GAAyB,IAAtE6C,EAAqE,EAArEA,UAAWC,EAA0D,EAA1DA,WACvB,OAAO3C,KAAKoD,KAAL,qBAAwBV,EAAxB,sBAA+CC,EAA/C,UAAmE9C,K,oBAG9E,WACI,OAAOG,KAAKsE,OAAOtE,KAAKuC,Q,oBAG5B,SAAchG,GACV,OAAOyD,KAAKgF,MAAMhF,KAAKuC,KAAMhG,K,wBAGjC,SAAkB+J,GACd,OAAOtG,KAAKgF,MAAL,UAAchF,KAAKuC,KAAnB,SAAgC,CACnC,QAAW+D,M,2BAInB,WACI,OAAOtG,KAAKsE,OAAL,UAAetE,KAAKuC,KAApB,c,GAlCWnC,GAsCX,OAAIsd,GC1CbC,G,4MACF5Y,MAAQ,G,wCAER,WACI,OAAO/E,KAAK+E,Q,qBAGhB,SAAe6Y,GACX5d,KAAK+E,MAAQ/E,KAAKqE,YAAYuZ,K,2BAGlC,WACI,OAAO5d,KAAK2D,IAAI3D,KAAKuC,Q,oBAGzB,WACI,OAAOvC,KAAKsE,OAAOtE,KAAKuC,Q,oBAG5B,SAAc1C,GACV,OAAOG,KAAKgF,MAAMhF,KAAKuC,KAAM1C,K,oBAGjC,SAAcA,GACV,OAAOG,KAAKoD,KAAK,aAAcvD,K,0BAGnC,WACI,OAAOG,KAAK2D,IAAL,UAAY3D,KAAKuC,KAAjB,iB,6BAGX,WACI,OAAOvC,KAAK2D,IAAI,4B,GAhCKvD,GAqCd,OAAIud,GCrDNE,GAA0B7f,IAAMF,cAAc,MAQ5C,SAASggB,GAA2BtgB,GAC/C,MAAoCQ,IAAMC,SAAuB,IAAjE,mBAAO8f,EAAP,KAAoBC,EAApB,KACA,EAA4BhgB,IAAMC,UAAkB,GAApD,mBAAOggB,EAAP,KAAeC,EAAf,KACMpQ,EAAUV,GAAW,KAEnBrD,EAAS0T,KAAT1T,KACFH,EAASlK,IAETye,EAAkBngB,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,+EAEfwa,GAAeS,kBAFA,QAG9B,QADEta,EAF4B,cAG9B,IAAJA,OAAA,EAAAA,EAAMjE,OAAQme,EAAala,EAAKjE,MAHE,gDAKlC+J,EAAO,KAAI7J,YAAa,SALU,yDAOvC,CAAC6J,IAMJ5L,IAAMyM,WAAU,WACZV,GAAQoU,IACRD,GAAU,KACX,CACCnU,EACAoU,EACArQ,IAIJ,IAAMuQ,EAAcrgB,IAAMU,aAAY,SAACkE,GAA4B,IAAD,IAC9D,iBAAO,kBAASmb,EAAY/Q,KAAI,SAAAsR,GAAI,OAAIA,EAAKC,UAAUvR,KAAI,SAAAwR,GAAG,OAAIA,EAAIC,YACjEC,KAAK,GACLzY,MAAK,SAAAL,GAAI,OAAIA,EAAKrB,KAAO3B,YAFvB,aAAS,EAGV+W,aAHN,QAGc,KACf,CAACoE,IAGEY,EAAW3gB,IAAM8U,SAAQ,WAC3B,OAAOiL,EAAY/Q,KAAI,SAAAsR,GAAI,OAAIA,EAAKC,UAAUvR,KAAI,SAAAwR,GAAG,OAAIA,EAAIC,YAAQC,KAAK,KAC3E,CAACX,IAGEa,EAAe5gB,IAAM8U,SAAQ,WAC/B,OAAOiL,EAAY/Q,KAAI,SAAAsR,GAAI,OAAIA,EAAKC,UAAUvR,KAAI,kBAAyB,CAAExI,KAA3B,EAAGA,KAA8BmV,KAAjC,EAASA,KAA8BpV,GAAvC,EAAeA,UAAgCma,KAAK,KACvG,CAACX,IAGEc,EAAe7gB,IAAM8U,SAAQ,WAC/B,OAAOiL,EAAY/Q,KAAI,kBAAyB,CAAExI,KAA3B,EAAGA,KAA8BmV,KAAjC,EAASA,KAA8BpV,GAAvC,EAAeA,SACvC,CAACwZ,IAGEe,EAAkB9gB,IAAMU,aAAY,SAACiE,GAAgC,IAAD,IACtE,iBAAO,kBAASob,EAAY/Q,KAAI,SAAAsR,GAAI,OAAIA,EAAKC,aACxCG,KAAK,GACLzY,MAAK,SAAAL,GAAI,OAAIA,EAAKrB,KAAO5B,YAFvB,aAAS,EAGVgX,aAHN,QAGc,KACf,CAACoE,IAGJ,OAAe,IAAXE,EAAyB,KAGzB,cAACJ,GAAmB7e,SAApB,CAA6BC,MAAO,CAChC8e,cACAgB,UAlDU,WACdZ,KAkDIQ,WACAN,cACAS,kBACAD,eACAD,gBAPJ,SASKphB,EAAME,WCxFJ,SAASshB,KACpB,OAAOhhB,IAAM2B,WAAWke,ICQrB,IAAMoB,GAAmBnhB,wBAAc,MAG/B,SAASohB,GAAT,GAEe,IAD1BxhB,EACyB,EADzBA,SAEA,EAAuCshB,KAA/BF,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,UACnBnV,EAASlK,IACTqC,EAAY8L,cAClB,EAAwB7P,IAAMC,WAA9B,mBAAOkhB,EAAP,KAAaC,EAAb,KACMtR,EAAUV,GAAW,KAE3BpP,IAAMqhB,iBAAgB,WAClB3B,GAAYjY,QAAQ1D,KACrB,CAACA,IAGJ,IAAMud,EAAUthB,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,sEACXua,GAAY6B,UADD,OACxBzb,EADwB,OAE9Bsb,EAAQtb,EAAKjE,MAFiB,2CAK/B,CACCkC,EACA+L,IAIE0R,EAAcxhB,IAAMU,aAAY,SAAC+gB,GACnCL,GAAQ,SAAA5T,GACJ,GAAIA,EACA,OAAO,2BAAKA,GAAZ,IAAiBkU,SAAUD,SAEpC,IAGGE,EAAa3hB,IAAMU,YAAN,uCAAkB,WAAOnC,GAAP,SAAA4G,EAAA,yDAC5Bgc,EAD4B,0CACf,GADe,gCAIvBzB,GAAYhY,OAAOnJ,GAJI,cAK7B6iB,GAAQ,SAAA5T,GACJ,GAAIA,EACA,OAAO,2BAAKA,GAAQjP,MAE5BqN,EAAO,mCAA+B,YAEjC,SAAUrN,GAAQA,EAAKiI,OAAS2a,EAAK3a,MAClC,eAAgBjI,GAAQA,EAAKoG,cAAL,OAAoBwc,QAApB,IAAoBA,OAApB,EAAoBA,EAAMS,SAASrb,MAE/Dwa,IAdyB,mBAgBtB,GAhBsB,kCAkB7BnV,EAAO,KAAI7J,YAAa,SAlBK,kCAoB1B,GApB0B,0DAAlB,sDAqBhB,CACC6J,EACAmV,EACAI,IAIEU,EAAa7hB,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,yDAC5Bgc,EAD4B,0EAIvBzB,GAAYnG,SAJW,OAK7BwH,IACAnV,EAAO,kCAAyB,WAAW,kBAAM,cAAC,IAAD,CAAUW,GAAIuU,EAAgBK,EAAKS,SAASrb,SANhE,gDAS7BqF,EAAO,KAAI7J,YAAa,SATK,yDAWlC,CACC6J,EACAuV,EACAJ,EACAD,IAIEgB,EAAgB9hB,IAAMU,YAAN,uCAAkB,WAAO4H,GAAP,SAAAnD,EAAA,+EAE1Bua,GAAYqC,WAAWzZ,GAFG,cAGhC8Y,GAAQ,SAAA5T,GACJ,GAAIA,EACA,OAAO,2BAAKA,GAAZ,IAAiBjF,QAASD,OAGlCsD,EAAO,6BAAyB,WARA,mBASzB,GATyB,uCAWhCA,EAAO,KAAI7J,YAAa,SAXQ,mBAYzB,GAZyB,yDAAlB,sDAcnB,CAAC6J,IAGEoW,EAAgBhiB,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,+EAE1Bua,GAAYsC,gBAFc,OAGhCZ,GAAQ,SAAA5T,GACJ,GAAIA,EACA,OAAO,2BAAKA,GAAZ,IAAiBjF,QAAS,UAElCqD,EAAO,gCAAuB,WAPE,gDAShCA,EAAO,KAAI7J,YAAa,SATQ,yDAWrC,CAAC6J,IASJ,OANA5L,IAAMyM,WAAU,WAEZ,OADA6U,IACO,eACR,CAACA,IAIC7b,QAAQ0b,GAAe,cAACF,GAAYjgB,SAAb,CAAsBC,MAAO,CACjDkgB,OACAQ,aACAE,aACAC,gBACAE,gBACAR,eANoB,SAQnB9hB,IARY,KClIV,SAASuiB,KACpB,OAAOjiB,IAAM2B,WAAWsf,I,uDCOb,SAASiB,GAAT,GAAkE,IAAnCnW,EAAkC,EAAlCA,KAC1C,OACI,eAACuS,GAAA,EAAD,CAAM,aAAW,mCAAyBpf,GAAI,CAAEijB,UAAW,SAA3D,UACI,cAACC,GAAA,EAAD,CACIC,OAAQ,cAACC,GAAA,EAAD,CACJpjB,GAAI,CAAEuC,MAAO,GAAIgd,OAAQ,IACzB8D,IAAG,UAAKxW,EAAKvF,KAAV,YAAkBuF,EAAKyW,SAC1BC,IAAK7c,EAAa8c,QAAQ3W,EAAKhG,SAEnCyO,MAAK,UAAKzI,EAAKvF,KAAV,YAAkBuF,EAAKyW,SAC5BG,UACI,cAAClP,GAAA,EAAD,CACI,aAAW,oBACXe,MAAM,oBACNmH,KAAI,iBAAY5P,EAAK1G,OAHzB,SAKK0G,EAAK1G,QAGdud,OACI,cAAC,KAAD,CACIrW,GAAIlB,EAAaI,OAAOM,EAAKxF,IAC7B,aAAW,8BACXiO,MAAM,8BAHV,SAKI,cAAC,KAAD,QAIZ,cAACqO,GAAA,EAAD,UACI,eAAC7Y,EAAA,EAAD,CACIjL,QAAQ,QACRuX,SAAS,UACTjX,MAAM,iBACN,aAAW,iCACXmV,MAAM,iCALV,2CAOyBlD,GAAYvF,EAAK+W,sB,cCpC3C,SAASC,GAAT,GAAkE,IAAnC5B,EAAkC,EAAlCA,KAC1C,EAAyCH,KAAjCX,EAAR,EAAQA,YAAaS,EAArB,EAAqBA,gBAEfkC,EAAWhjB,IAAM8U,SAAQ,kBAAMuL,EAAYc,EAAK5a,MAAK,CAAC4a,EAAK5a,GAAI8Z,IAC/D4C,EAAejjB,IAAM8U,SAAQ,kBAAMgM,EAAgBK,EAAKS,YAAW,CAACT,EAAKS,SAAUd,IAEzF,OACI,eAACxC,GAAA,EAAD,CAAMpf,GAAI,CAAEyK,QAAS,OAAQwY,UAAW,SAAxC,UACI,cAACe,GAAA,EAAD,CACI3iB,UAAU,MACVwF,MAAOH,EAAa8c,QAAQvB,EAAKpb,OACjCwc,IAAG,4BAAkBpB,EAAK3a,MAC1BtH,GAAI,CACAyP,SAAU,MACVwU,UAAW,UAGnB,eAAC5P,EAAA,EAAD,CAAKrU,GAAI,CAAEuC,MAAO,OAAlB,UACI,cAAC2gB,GAAA,EAAD,CACI5N,MAAK,eAAU2M,EAAK3a,MACpBmc,UAAWxB,EAAKiC,SAChBlkB,GAAI,CACAmkB,GAAI,EAAGpZ,GAAI,GAEf2Y,OACI,cAAChH,GAAD,CACIrP,GAAIyW,EACJ,aAAW,+BACXxO,MAAM,+BAHV,SAKI,cAAC,KAAD,QAIZ,cAACqO,GAAA,EAAD,UACI,eAAC7Y,EAAA,EAAD,CAAYjL,QAAQ,QAAQM,MAAM,iBAAlC,UACI,cAACuc,GAAD,CACIC,UAAQ,EACRtP,GAAI0W,EACJ,aAAW,qBACXzO,MAAM,qBAJV,gCADJ,IAQe,uBARf,aASe2M,EAAKO,SAAW,cAAW,QAAQ,kC,cCtDvD,SAAS4B,KACpB,OAAOtjB,IAAM2B,WAAW4hB,ICiBb,SAASC,GAAchkB,GAA4B,IAAD,UACrDikB,EAAsBH,KAAtBG,kBACA9C,EAAaK,KAAbL,SAER,EAAwB3gB,IAAMC,SAAgC,IAA9D,mBAAO4B,EAAP,KAAaiW,EAAb,KAGM4L,EAAY1jB,IAAMU,aAAY,WAChClB,EAAM+B,UACNuW,EAAQ,MACT,CAACtY,IAGEqX,EAAe7W,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,sEACzBse,EAAkBjkB,EAAMgJ,YAAYjC,GAAI1E,GADf,kCAE/B6hB,IACA5L,EAAQ,IAHuB,2CAMpC,CAACtY,EAAOqC,EAAM6hB,EAAWD,IAGtBzS,EAAehR,IAAMU,aAAY,SAACC,GACpCmX,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAO7F,EAAMkN,OAAO5M,aAEvC,IAGH,OACI,cAACiW,GAAD,CACI/W,KAAMX,EAAMW,KACZoB,QAASmiB,EACT,aAAW,4BAHf,SAKI,eAACjN,GAAD,CACIjC,MAAM,oBACNkC,SAAS,wEACTC,SAAUE,EACVD,SAAUpX,EAAM+B,QAJpB,UAMI,cAAC2P,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,8BACHwI,MAAM,aACN4U,WAAS,EACTC,QAAS,EACTpd,KAAK,QACLvF,MAAK,UAAEY,EAAK2S,aAAP,QAAgBhV,EAAMgJ,YAAYgM,MACvChG,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,8BACHwI,MAAM,OACN4U,WAAS,EACTC,QAAS,GACTpd,KAAK,cACLvF,MAAK,UAAEY,EAAKE,mBAAP,QAAsBvC,EAAMgJ,YAAYzG,YAC7CyM,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SACI,cAAC0E,GAAA,EAAD,CACIC,QAAS,IAAIpb,KACbqG,MAAM,gBACNgV,YAAY,mBACZ9iB,MAAK,UAAEY,EAAKkH,oBAAP,QAAuBvJ,EAAMgJ,YAAYO,aAC9CyF,SAAU,SAACvN,GAAD,OAAgB6W,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,IAAezE,aAAc9H,QAClE+iB,YAAa,SAACpE,GAAD,OAAiB,cAAC3H,GAAA,EAAD,aAAW/Y,GAAI,CAAEuC,MAAO,SAAcme,SAI5E,cAAC1O,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SACI,cAAC0E,GAAA,EAAD,CACIC,QAAS,IAAIpb,KACbqG,MAAM,SACNgV,YAAY,mBACZ9iB,MAAK,UAAEY,EAAKoH,kBAAP,QAAqBzJ,EAAMgJ,YAAYS,WAC5CuF,SAAU,SAACvN,GAAD,OAAgB6W,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,IAAevE,WAAYhI,QAChE+iB,YAAa,SAACpE,GAAD,OAAY,cAAC3H,GAAA,EAAD,aAAW/Y,GAAI,CAAEuC,MAAO,SAAcme,SAIvE,cAAC1O,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,eAAC3C,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,cAACE,GAAA,EAAD,CAAYrI,GAAG,oBAAf,kBACA,cAACsI,GAAA,EAAD,CACIqJ,UAAQ,EACRpJ,QAAQ,oBACRtI,KAAK,SACLvF,MAAK,UAAEY,EAAK+C,cAAP,QAAiBpF,EAAMgJ,YAAY2Y,KAAK5a,GAC7CwI,MAAM,OACNP,SAAU,SAAC8B,GAAD,OAAcwH,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,IAAe5I,OAAQzF,OAAOmR,EAAIzC,OAAO5M,aANhF,SAQK0f,EAAS3R,KAAI,gBAAGxI,EAAH,EAAGA,KAAMD,EAAT,EAASA,GAAT,OAAkB,eAAC2I,GAAA,EAAD,CAAqBjO,MAAOsF,EAA5B,sBAA6CC,EAA7C,MAAeA,kBClF5D,SAASyd,GAAczkB,GAA4B,IAAD,QACrD0kB,EAAsBZ,KAAtBY,kBACAvD,EAAaK,KAAbL,SACF/U,EAASlK,IAEf,EAA0B1B,IAAMC,SAAuB,CACnDZ,MAAO,GACP8kB,KAAM,IAAIzb,KAAKlJ,EAAMgJ,YAAYO,cACjCwD,GAAI,IAAI7D,KAAKlJ,EAAMgJ,YAAYS,cAHnC,mBAAOmb,EAAP,KAAcC,EAAd,KAMA,EAAkCrkB,IAAMC,SAAyB,IAAjE,mBAAOqkB,EAAP,KAAkBC,EAAlB,KACA,EAAwBvkB,IAAMC,SAA8B,CACxDuU,MAAOhV,EAAMgJ,YAAYgM,MACzBzS,YAAavC,EAAMgJ,YAAYzG,YAC/B6C,OAAM,UAAEpF,EAAMgJ,YAAY2Y,KAAK5a,UAAzB,QAA+B,IAHzC,mBAAO1E,EAAP,KAAaiW,EAAb,KAOM4L,EAAY1jB,IAAMU,aAAY,WAChClB,EAAM+B,YAEP,CAAC/B,IAGEqX,EAAe7W,IAAMU,YAAN,sBAAkB,8BAAAyE,EAAA,6DAE7Bqf,EAAcF,EAAUtV,IAAV,uCAAc,WAAOwC,GAAP,eAAArM,EAAA,sEACR+e,EAAkB,2BACjCriB,GADgC,IAEnCkH,aAAcyI,EAAK2S,KACnBlb,WAAYuI,EAAKjF,MAJS,cACxB/C,EADwB,OAM9BgI,EAAKnS,MAAQmK,EAAU,QAAU,MANH,kBAOvBgI,GAPuB,2CAAd,uDAFe,SAWX0L,QAAQC,IAAIqH,GAXD,OAW7BC,EAX6B,OAYnCF,EAAaE,GAZsB,2CAcpC,CAAC5iB,EAAMyiB,EAAWJ,IAGfQ,EAAuB1kB,IAAMU,aAAY,SAACkU,GAC5C2P,GAAa,SAAA/W,GAET,OADAA,EAAIqQ,OAAOjJ,EAAO,GACXzQ,OAAOyV,OAAO,GAAIpM,QAE9B,IAGGmX,EAAgB3kB,IAAMU,aAAY,WAChC4jB,EAAUrc,MAAK,gBAAGkc,EAAH,EAAGA,KAAM5X,EAAT,EAASA,GAAT,OAAkB4X,IAASC,EAAMD,MAAQ5X,IAAO6X,EAAM7X,MACrEX,EAAO,4CAA2B,SAItC2Y,GAAa,SAAA/W,GAKT,OAJAA,EAAI3F,KAAJ,2BACOuc,GADP,IAEI/kB,MAAO,MAEJ8E,OAAOyV,OAAO,GAAIpM,QAE9B,CACC4W,EACAxY,EACA0Y,IAIEtT,EAAehR,IAAMU,aAAY,SAACC,GACpCmX,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAO7F,EAAMkN,OAAO5M,aAEvC,IAEH,OACI,cAACiW,GAAD,CACI/W,KAAMX,EAAMW,KACZoB,QAASmiB,EACT,aAAW,gCAHf,SAMI,eAACjN,GAAD,CACIjC,MAAM,wBACNkC,SAAS,iEACTC,SAAUE,EACVD,SAAUpX,EAAM+B,QAJpB,UAMI,cAAC2P,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,8BACHwI,MAAM,aACN4U,WAAS,EACTC,QAAS,EACTpd,KAAK,QACLvF,MAAK,UAAEY,EAAK2S,aAAP,QAAgBhV,EAAMgJ,YAAYgM,MACvChG,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,8BACHwI,MAAM,OACN4U,WAAS,EACTC,QAAS,GACTpd,KAAK,cACLvF,MAAK,UAAEY,EAAKE,mBAAP,QAAsBvC,EAAMgJ,YAAYzG,YAC7CyM,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SACI,cAAC0E,GAAA,EAAD,CACIC,QAAS,IAAIpb,KACbqG,MAAM,gBACNgV,YAAY,mBACZ9iB,MAAOmjB,EAAMD,KACb3V,SAAU,SAACvN,GAAD,OAAgBojB,GAAS,SAAA7W,GAAG,kCAAUA,GAAV,IAAe2W,KAAMljB,QAC3D+iB,YAAa,SAACpE,GAAD,OAAiB,cAAC3H,GAAA,EAAD,aAAW/Y,GAAI,CAAEuC,MAAO,SAAcme,SAI5E,cAAC1O,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SACI,cAAC0E,GAAA,EAAD,CACIC,QAAS,IAAIpb,KACbqG,MAAM,SACNgV,YAAY,mBACZ9iB,MAAOmjB,EAAM7X,GACbiC,SAAU,SAACvN,GAAD,OAAgBojB,GAAS,SAAA7W,GAAG,kCAAUA,GAAV,IAAejB,GAAItL,QACzD+iB,YAAa,SAACpE,GAAD,OAAY,cAAC3H,GAAA,EAAD,aAAW/Y,GAAI,CAAEuC,MAAO,SAAcme,SAIvE,cAAC1O,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SACI,cAACnI,GAAA,EAAD,CACIlY,KAAK,QACLI,GAAI,CACAuf,OAAQ,OACRhd,MAAO,QAEX1C,QAAQ,WACRyT,QAASmS,EAPb,qBAaJ,cAACzT,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,eAACtD,GAAA,EAAD,CACIC,QAAS,EACT7O,GAAI,CACAsb,OAAQ,YACRvE,YAAa,UACb9X,aAAc,EACdymB,QAAS,GACT/T,QAAS,qBACTsS,UAAW,QACX5L,SAAU,QATlB,UAW0B,IAArB+M,EAAUjgB,QAAgB,cAAC2F,EAAA,EAAD,CAAYmK,UAAU,SAAS5T,UAAU,IAAzC,sBAIvB+jB,EAAUtV,KAAI,WAAsB4F,GAAtB,IAAGvV,EAAH,EAAGA,MAAO8kB,EAAV,EAAUA,KAAM5X,EAAhB,EAAgBA,GAAhB,OACV,eAACgH,EAAA,EAAD,CAEIrU,GAAI,CACAyK,QAAS,OACTwE,WAAY,SACZF,eAAgB,gBAChB4W,GAAI,OANZ,UAQI,eAAC7a,EAAA,EAAD,CAAYzJ,UAAU,IAAIrB,GAAI,CAAEG,MAAOA,GAAvC,UACKiS,GAAY6S,EAAKrf,YADtB,YACgDwM,GAAY/E,EAAGzH,eAE/D,cAACyN,GAAA,EAAD,CACIC,QAAS,kBAAMkS,EAAqB9P,IADxC,SAGI,cAAC,KAAD,QAbCA,WAqBzB,cAAC1D,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,eAAC3C,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,cAACE,GAAA,EAAD,CAAYrI,GAAG,oBAAf,kBACA,cAACsI,GAAA,EAAD,CACIqJ,UAAQ,EACRpJ,QAAQ,oBACRtI,KAAK,SACLvF,MAAK,UAAEY,EAAK+C,cAAP,QAAiBpF,EAAMgJ,YAAY2Y,KAAK5a,GAC7CwI,MAAM,OACNP,SAAU,SAAC8B,GAAD,OAAcwH,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,IAAe5I,OAAQzF,OAAOmR,EAAIzC,OAAO5M,aANhF,SAQK0f,EAAS3R,KAAI,gBAAGxI,EAAH,EAAGA,KAAMD,EAAT,EAASA,GAAT,OAAkB,eAAC2I,GAAA,EAAD,CAAqBjO,MAAOsF,EAA5B,sBAA6CC,EAA7C,MAAeA,kB,mCCzOrEse,GAAcC,aAAO,QAAPA,CAAgB,CAChCtN,SAAU,WACVmF,KAAM,UACNvd,MAAO,gBAII,SAAS2lB,GAASxlB,GAC7B,MAAwBQ,IAAMC,SAAiB,IAA/C,mBAAOiK,EAAP,KAAa+a,EAAb,KACA,EAA0BjlB,IAAMC,SAAiB,WAAjD,mBAAOZ,EAAP,KAAc6lB,EAAd,KACM/K,EAAQna,IAAMmlB,OAAgC,MAE9CtO,EAAY,uCAAG,WAAOvG,GAAP,SAAAnL,EAAA,6DACjBmL,EAAIW,iBADa,SAEKzR,EAAM4lB,OAAOlb,GAFlB,eAIbgb,EAAS,WACTzU,WAAW4U,EAAe,MAE1BH,EAAS,SAEbD,EAAQ,IATS,2CAAH,sDAYZI,EAAgB,WAClB7lB,EAAM+B,UACN0jB,EAAQ,IACRC,EAAS,YAOb,OACI,eAACpX,GAAA,EAAD,CACI0E,QANa,WACjB2H,EAAMmL,SAAW/hB,QAAQyE,IAAImS,EAAMmL,QAAQC,UAMvChlB,UAAU,OACVsV,UAAU,SACV9H,QAAS,EACT4I,SAAUE,EALd,UAOI,cAAC,KAAD,CACI3X,GAAI,CAAEoX,SAAU,IAAKkP,UAAW,UAChCnmB,MAAOA,IAEX,cAACylB,GAAD,CACIW,IAAKtL,EACLxB,WAAS,EACT7U,KAAK,OACL7C,MAAOiJ,EACPsE,SAAU,SAAC8B,GAAD,OAAc2U,EAAQ3U,EAAIzC,OAAO5M,UAE/C,eAACsS,EAAA,EAAD,CAAKhT,UAAU,OAAO4T,UAAU,SAAhC,UACI,cAACnK,EAAA,EAAD,CAAYjL,QAAQ,KAAKM,MAAM,eAA/B,SACKG,EAAMkmB,WAEX,cAAC1b,EAAA,EAAD,CAAYjL,QAAQ,QAAQM,MAAM,iBAAiB0X,GAAG,MAAtD,SACKvX,EAAMmmB,cAIf,cAAC3O,GAAA,EAAD,CAAQC,UAAW,cAAC,KAAD,IACfzE,QAAS6S,EACThmB,MAAM,QAFV,wBC/DG,SAASumB,GAAiBpmB,GACrC,IAAQqmB,EAA0BvC,KAA1BuC,sBAEFC,EAAgB9lB,IAAMU,YAAN,uCAClB,WAAO4H,GAAP,SAAAnD,EAAA,+EAAuB0gB,EAAsBrmB,EAAMumB,cAAezd,IAAlE,2CADkB,sDAEhB,CAAC9I,EAAOqmB,IAGd,OACI,cAAC3O,GAAD,CACI/W,KAAMX,EAAMW,KACZoB,QAAS/B,EAAM+B,QACf,aAAW,4BACXrC,GAAI,CAAEyP,SAAU,SAJpB,SAMI,cAACqW,GAAD,CACIU,SAAS,6BACTC,SAAS,uGACTP,OAAQU,EACRvkB,QAAS/B,EAAM+B,Y,uFCtBhB,SAASykB,GAAaxmB,GACjC,MAAgCQ,IAAMC,SAA6B,MAAnE,mBAAOgmB,EAAP,KAAiBC,EAAjB,KACM/lB,EAAOsF,QAAQwgB,GAGfE,EAAcnmB,IAAMU,aAAY,SAACC,GACnCulB,EAAYvlB,EAAMylB,iBACpB,IAEIC,EAAc,WAChBH,EAAY,OAGhB,OACI,gCACI,cAAC3T,GAAA,EAAD,CACI,aAAW,mBACX,gBAAc,YACd,gBAAepS,EAAO,YAAS0T,EAC/B,gBAAc,OACdrB,QAAS2T,EALb,SAOI,cAAC,KAAD,MAEJ,cAACG,GAAA,EAAD,CACIC,cAAe,CACX,kBAAmB,oBAEvBN,SAAUA,EACV1f,GAAG,YACHpG,KAAMA,EACNoB,QAAS8kB,EACTG,WAAY,CACRzT,MAAO,CACHtR,MAAO,SAVnB,SAeQjC,EAAMinB,QAAQzX,KAAI,SAAC0X,EAAKngB,GAAN,OAAa,eAAC2I,GAAA,EAAD,CAE3BsD,QAAS6T,EAFkB,UAI3B,cAACxH,GAAA,EAAD,UACK6H,EAAIC,OAET,cAAC3c,EAAA,EAAD,CAAYwI,QAASkU,EAAI9D,OAAzB,SAAkC8D,EAAI3X,UANjCxI,WCtB7B,SAASqgB,GAAYpnB,GAGjB,OACI,iCACI,cAACwK,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,YAAnC,SAAgDS,EAAMgV,QACtD,cAACxK,EAAA,EAAD,CACIjL,QAAQ,QACRM,MAAM,iBACN8U,UAAU,UAHd,SAKK3U,EAAME,cAOR,SAASmnB,GAAqBrnB,GACzC,IAAQsnB,EAAsBxD,KAAtBwD,kBAER,EAA8C9mB,IAAMC,UAAkB,GAAtE,mBAAO8a,EAAP,KAAwBC,EAAxB,KACA,EAA0Chb,IAAMC,UAAkB,GAAlE,mBAAO8mB,EAAP,KAAsBC,EAAtB,KACA,EAAwChnB,IAAMC,UAAkB,GAAhE,mBAAOgnB,EAAP,KAAqBC,EAArB,KACA,EAA0ClnB,IAAMC,UAAkB,GAAlE,mBAAOknB,EAAP,KAAsBC,EAAtB,KAGM1M,EAAW1a,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,sEACrB2hB,EAAkBtnB,EAAMgJ,YAAYjC,IADf,kCAE3ByU,GAAmB,GAFQ,2CAIhC,CACCxb,EAAMgJ,YAAYjC,GAClBugB,IAIEO,EAAcrnB,IAAM8U,SAAQ,WAoB9B,MAnBY,CACR,CACI6R,KAAM,cAAC,KAAD,CAAStnB,MAAM,YACrB0P,MAAO,cACP6T,OAAQ,kBAAMsE,GAAgB,KAC/B,CACCP,KAAM,cAAC,KAAD,CAAUtnB,MAAM,YACtB0P,MAAO,SACP6T,OAAQ,kBAAMwE,GAAiB,KAChC,CACCT,KAAM,cAACW,GAAA,EAAD,CAAMjoB,MAAM,YAClB0P,MAAO,SACP6T,OAAQ,kBAAMoE,GAAiB,KAChC,CACCL,KAAM,cAAC,KAAD,CAAYtnB,MAAM,UACxB0P,MAAO,YACP6T,OAAQ,kBAAM5H,GAAmB,QAI1C,IAGH,OACI,qCACI,cAAChB,GAAD,CACI7Z,KAAM4a,EACNxZ,QAAS,kBAAMyZ,GAAmB,IAClCd,WAAY1a,EAAMgJ,YAAYgM,MAC9ByF,UAAWS,IAGf,cAAC,GAAD,CACIva,KAAM4mB,EACNxlB,QAAS,kBAAMylB,GAAiB,IAChCxe,YAAahJ,EAAMgJ,cAGvB,cAAC,GAAD,CACIrI,KAAMgnB,EACN5lB,QAAS,kBAAM6lB,GAAiB,IAChC5e,YAAahJ,EAAMgJ,cAGvB,cAAC,GAAD,CACIrI,KAAM8mB,EACN1lB,QAAS,kBAAM2lB,GAAgB,IAC/BnB,cAAevmB,EAAMgJ,YAAYjC,KAIrC,cAAC2Q,GAAD,CACI/W,KAAMX,EAAMW,KACZoB,QAAS/B,EAAM+B,QACf,aAAW,mBACXrC,GAAI,CACAyP,SAAU,QACVoI,GAAI,OANZ,SASI,eAACjJ,GAAA,EAAD,CAAOC,QAAS,EAAGI,WAAW,UAA9B,UAEI,eAACL,GAAA,EAAD,CAAO+H,UAAU,MAAM5H,eAAe,gBAAtC,UACI,cAACjE,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,KAAnC,SACKS,EAAMgJ,YAAYgM,QAEvB,cAACjC,GAAA,EAAD,CAAYC,QAAShT,EAAM+B,QAA3B,SACI,cAAC,KAAD,SAIR,eAACuM,GAAA,EAAD,CAAO+H,UAAU,MAAM5H,eAAe,gBAAtC,UACI,cAAC+I,GAAA,EAAD,CACI3X,MAAM,UACN4X,UAAW,cAAC,KAAD,IACXzE,QAAS,kBAAM0U,GAAgB,IAC/B1S,MAAM,cACN,aAAW,cALf,yBAUA,cAACwR,GAAD,CAAcS,QAASY,OAG3B,cAACT,GAAD,CAAapS,MAAM,kBAAnB,mBACQlD,GAAY9R,EAAMgJ,YAAYO,cADtC,cACyDuI,GAAY9R,EAAMgJ,YAAYS,eAGvF,eAAC2d,GAAD,CAAapS,MAAM,kBAAnB,8BACiBhV,EAAMgJ,YAAYM,YAC3BwI,GAAY9R,EAAMgJ,YAAYM,aAC5B,MACL,uBAJL,oBAKiBtJ,EAAMgJ,YAAYQ,UAC3BsI,GAAY9R,EAAMgJ,YAAYQ,WAC5B,SAIV,cAAC4d,GAAD,CAAapS,MAAM,QAAnB,SACKhV,EAAMgJ,YAAYzG,cAGvB,cAACmP,GAAA,EAAD,CAAMC,WAAS,EAAf,SAEQ,CACI,CAAEqD,MAAO,mBAAejU,UAAW,cAAC2hB,GAAD,CAAqBnW,KAAMvM,EAAMgJ,YAAYuD,QAChF,CAAEyI,MAAO,sBAAuBjU,UAAW,cAACwiB,GAAD,CAAqB5B,KAAM3hB,EAAMgJ,YAAY2Y,SAC1FnS,KAAI,WAAuB4F,GAAvB,IAAGJ,EAAH,EAAGA,MAAOjU,EAAV,EAAUA,UAAV,OACF,eAAC2Q,GAAA,EAAD,CAAkBtJ,MAAI,EAACwJ,GAAI,GAAImW,GAAI,EAAGC,GAAG,OAAzC,UACI,cAACxd,EAAA,EAAD,CAAY9K,GAAI,CAAE0R,EAAG,oBAAqBvR,MAAO,kBAAoBN,QAAQ,YAA7E,SAA0FyV,IACzFjU,IAFMqU,gBC1KpC,IAAM6S,GAA8BznB,IAAMF,cAAiC,CAC9E4nB,gBAAiB,SAACnhB,KAClBiC,YAAa,OAQF,SAASmf,GAAqBnoB,GAAmC,IAAD,EACnEooB,EAAiBtE,KAAjBsE,aAER,EAAkC5nB,IAAMC,UAAkB,GAA1D,mBAAO6Y,EAAP,KAAkBC,EAAlB,KACA,EAA0C/Y,IAAMC,SAAwB,MAAxE,mBAAO8lB,EAAP,KAAsB8B,EAAtB,KAGMrf,EAAW,UAAGxI,IAAM8U,SAAQ,WAC9B,GAAIiR,EACA,OAAO6B,EAAa3f,MAAK,qBAAG1B,KAAgBwf,OAEjD,CAAC6B,EAAc7B,WAJD,QAIoB,KAG/B2B,EAAkB1nB,IAAMU,aAAY,SAAC6F,GACvCshB,EAAiBthB,GACjBwS,GAAa,KACd,IAGH,OACI,eAAC0O,GAA4BzmB,SAA7B,CAAsCC,MAAO,CAAEuH,cAAakf,mBAA5D,UACKloB,EAAME,SAEN8I,GACG,cAACqe,GAAD,CACIre,YAAaA,EACbrI,KAAM2Y,EACNvX,QAAS,kBAAMwX,GAAa,SC3BzC,IAAMwK,GAA2BvjB,IAAMF,cAAc,MAS7C,SAASgoB,GAA4BtoB,GAChD,MAAwC6N,KAAhChF,EAAR,EAAQA,YAAa0E,EAArB,EAAqBA,eACfnB,EAASlK,IACP2e,EAAgBW,KAAhBX,YACF0H,EAAc9F,KACZlW,EAAS0T,KAAT1T,KACFhI,EAAY8L,cACZC,EAAUV,GAAW,KAE3B,EAAwCpP,IAAMC,WAA9C,mBAAO2nB,EAAP,KAAqBI,EAArB,KAGM/X,EAAOjQ,IAAMU,YAAN,sBAAkB,gCAAAyE,EAAA,sEAEnBya,EAAS7b,EACyB,IAAlCI,OAAOC,KAAKL,GAAWM,QAAgB7B,OAAOmB,SAASO,WAAakG,GAAMG,OAC1EqV,EAAS,CAAE/a,OAAQ,OAJA,SAMJsD,EAAmB8f,gBAAgBrI,EAAQvX,GANvC,QAMjBvC,EANiB,QAQlBoK,YAAcnD,GAAe,SAACS,GAAD,yBAAC,eAC5BA,GAD2B,IAE9Bc,WAAU,UAAExI,EAAKoK,kBAAP,aAAE,EAAiB5B,gBAEjC0Z,EAAgBliB,EAAKjE,MAZE,kDAcvB+J,EAAM,UAAC,KAAI7J,mBAAL,QAAoB,KAAInC,QAAS,SAdhB,0DAkB5B,CACCyI,EAAYoF,YACZpF,EAAYuF,YACZvF,EAAY8b,KACZ9b,EAAY6f,OACZnb,EACAhJ,EACA6H,EACAG,IAKJ/L,IAAMyM,WAAU,WACZwD,MAGD,CACCA,EACAH,IAIJ,IAAMqY,EAAgBnoB,IAAMU,aAAY,kBAAMqM,GAAe,SAAAS,GAAG,OAAIrJ,OAAOyV,OAAO,GAAIpM,QAAO,CACzFT,IAIE8Y,EAAwB7lB,IAAMU,YAAN,uCAAkB,WAAO6F,EAAY+B,GAAnB,iBAAAnD,EAAA,yDACvCyiB,EADuC,6DAGlCpf,EAAcof,EAAa3f,MAAK,SAAAL,GAAI,OAAIA,EAAKrB,KAAOA,KAHlB,0CAIf,GAJe,uBAMrB4B,EAAmBigB,QAAQ7hB,EAAI+B,GANV,OAMlCxC,EANkC,OAQxCkiB,GAAgB,SAAAxa,GAWZ,OAVAA,GAAOA,EAAI6a,SAAQ,SAAAzgB,GACXA,EAAKrB,KAAOA,IAEZqB,EAAKkB,YACLlB,EAAKoB,WAAY,IAAIN,MAAO4f,cAE5B1gB,EAAKkB,aAAc,IAAIJ,MAAO4f,kBAI/BnkB,OAAOyV,OAAO,GAAIpM,MAG7Bua,GAAeA,EAAYvG,aAAahZ,EAAY2Y,KAAKO,WACrD,OAAJ5b,QAAI,IAAJA,OAAA,EAAAA,EAAMjE,OAAQ+J,EAAO9F,EAAKjE,KAAKiD,WAAY,WAvBH,yDAyBxC8G,EAAO,KAAI7J,YAAa,SAzBgB,mBA0BjC,GA1BiC,kCA4BrC,GA5BqC,0DAAlB,wDA6B3B,CACC6lB,EACAG,EACAnc,IAIEsY,EAAoBlkB,IAAMU,YAAN,uCAAkB,WAAOmB,GAAP,SAAAsD,EAAA,+EAE9BgD,EAAmBogB,UAAU1mB,GAFC,OAIpCsmB,IACAvc,EAAO,wCAAoC,WALP,uDAOpCA,EAAO,KAAI7J,YAAa,SAPY,mBAQ7B,GAR6B,kCAUjC,GAViC,yDAAlB,sDAWvB,CACC6J,EACAuc,IAIErB,EAAoB9mB,IAAMU,YAAN,uCAAkB,WAAOqlB,GAAP,SAAA5gB,EAAA,+EAE9BgD,EAAmBoR,OAAOwM,GAFI,OAGpCiC,GAAgB,SAAAxa,GAAG,OAAIA,GAAOA,EAAItF,QAAO,qBAAG3B,KAAgBwf,QAHxB,uDAKpCna,EAAO,KAAI7J,YAAa,SALY,mBAM7B,GAN6B,kCAQjC,GARiC,yDAAlB,sDASvB,CAAC6J,IAGE6X,EAAoBzjB,IAAMU,YAAN,uCAAkB,WAAO6F,EAAY1E,GAAnB,SAAAsD,EAAA,+EAE9BgD,EAAmBT,OAAOnB,EAAI1E,GAFA,OAKpCmmB,GAAgB,SAACxa,GACb,OAAOA,GAAOA,EAAIwB,KAAI,SAAApH,GAQlB,OAPIA,EAAKrB,KAAOA,GACZ,CAAC,eAAgB,aAAc,cAAe,SACzC8hB,SAAQ,SAAAlQ,GACDA,KAAStW,IACT+F,EAAKuQ,GAAStW,EAAKsW,OAG5BvQ,QAKX,WAAY/F,EACZA,EAAK+C,QAAUgH,EACX,4CACA,WACA,kBAAM,cAAC,IAAD,CAAUW,GAAI8T,EAAYlhB,OAAO0C,EAAK+C,cAGhDgH,EAAO,6BAA8B,WA1BL,uDA8BpCA,EAAO,KAAI7J,YAAa,SA9BY,mBA+B7B,GA/B6B,kCAiCjC,GAjCiC,yDAAlB,wDAkCvB,CAACse,EAAazU,IAGjB,OAAKgc,EAGD,cAACrE,GAAoBviB,SAArB,CAA8BC,MAAO,CACjC2mB,eACAnE,oBACAqD,oBACA5C,oBACA2B,yBALJ,SAOI,cAAC,GAAD,UACKrmB,EAAME,aAXO,K,cCxKf,SAAS8oB,GAAT,GAEe,IAAD,EADzB3mB,EACyB,EADzBA,KAAM2Q,EACmB,EADnBA,QAEN,EAA2BrK,EAAmBsgB,cAAc5mB,GAApDjC,EAAR,EAAQA,QAASP,EAAjB,EAAiBA,MAEjB,OACI,eAACsf,GAAA,EAAD,CACIpe,UAAU,KACVqe,QAAM,EACN1f,GAAI,CACAuc,GAAG,MACH5K,QAASxR,EACT,mBAAoB,CAChBwR,QAASxR,EACT6I,OAAQ,oBAGhBsK,QAASA,EAXb,UAaI,cAACkW,GAAA,EAAD,UACI,cAAC9M,GAAD,CAASrP,GAAIlB,EAAaI,OAAO5J,EAAKkK,KAAKxF,IAA3C,SACI,cAAC+b,GAAA,EAAD,CAAQG,IAAK7c,EAAa8c,QAAQ7gB,EAAKkK,KAAKhG,aAIpD,cAACiZ,GAAA,EAAD,CACIvhB,QAASoE,EAAK2S,MACd7W,UAAW2T,GAAW,UAACzP,EAAKiH,mBAAN,QAAqBjH,EAAKkH,cAAgB,MAAQnJ,OCtCzE,SAAS+oB,KACpB,IAAQjB,ECFD1nB,IAAM2B,WAAW8lB,IDEhBC,gBACAE,EAAiBtE,KAAjBsE,aAGR,OACI,cAACpJ,GAAA,EAAD,CAAM,aAAW,mBAAjB,SAC6B,IAAxBoJ,EAAavjB,OACV,cAACsa,GAAA,EAAD,UACI,cAACK,GAAA,EAAD,CAAcvhB,QAAQ,wDAE1BmqB,EAAa5Y,KAAI,SAACpH,EAAMgN,GAAP,OAAiB,cAAC4T,GAAD,CAE9B3mB,KAAM+F,EACN4K,QAAS,kBAAMkV,EAAgB9f,EAAKrB,MAF/BqO,Q,kCENV,SAASgU,GAAT,GAEa,IADxBpa,EACuB,EADvBA,SAAUqa,EACa,EADbA,QAAS5nB,EACI,EADJA,MAGb+P,EAAehR,IAAMU,aAAY,SAACC,GACpC6N,EAAU7N,EAAMkN,OAA4B5M,SAC7C,CAACuN,IAGEsa,EAAkB9oB,IAAM8U,SAAQ,WAClC,OAAO+T,EAAQ7Z,KAAI,gBAAG/N,EAAH,EAAGA,MAAOuF,EAAV,EAAUA,KAAV,OACf,cAAC4R,GAAA,EAAD,CAEInX,MAAOA,EACPqX,QAAS,cAACyQ,GAAA,EAAD,IACTha,MAAOvI,EACP,aAAYA,EACZgO,MAAOhO,GALFA,QAQd,CAACqiB,IAGJ,OACI,cAACpa,GAAA,EAAD,CAAalO,UAAU,WAAvB,SACI,cAACyoB,GAAA,EAAD,CACI9W,KAAG,EACH,aAAW,iBACX1L,KAAK,+BACLvF,MAAOA,EACPuN,SAAUwC,EALd,SAOK8X,MChCjB,IAAMD,GAAU,CACZ,CAAEriB,KAAM,YAAQvF,MAAO,SACvB,CAAEuF,KAAM,mBAAevF,MAAO,aAC9B,CAAEuF,KAAM,aAAcvF,MAAO,cAIlB,SAASgoB,KAAqB,IAAD,MACxC,EAAwC5b,KAAhCN,EAAR,EAAQA,eAAgB1E,EAAxB,EAAwBA,YAExB,EAAoCrI,IAAMC,SAAS,IAAIyI,KAAKqJ,GAAO1J,EAAY8b,MAAnB,UAA2B9b,EAAY8b,YAAvC,QAA+C,MAAQzb,KAAKC,QAAxH,mBAAOugB,EAAP,KAAmBC,EAAnB,KAEMC,EAAqBppB,IAAMU,aAAY,SAACO,GAC1C8L,GAAe,SAACS,GAAD,mBAAC,eAAuCA,GAAxC,IAA6C2W,KAAMljB,SACnE,CAAC8L,IAGEsc,EAAyBrpB,IAAMU,aAAY,SAAC4P,GAC9CA,EAAIW,iBACJlE,GAAe,SAACS,GAAD,mBAAC,eAAuCA,GAAxC,IAA6C2W,KAAM+E,EAAWZ,qBAC9E,CAACY,EAAYnc,IAGVsD,EAA0BrQ,IAAMU,aAAY,SAAC4P,GAC/CvD,GAAe,SAAAS,GAAG,kCAAUA,GAAV,IAAe0a,OAAQ5X,EAAIzC,OAAO5M,aACrD,CAAC8L,IAGJ,OACI,mCACI,eAACmE,GAAA,EAAD,CAAMC,WAAS,EACX5Q,UAAU,OACVoW,SAAU0S,EACVtb,QAAS,EACTI,WAAW,SAJf,UAMI,eAAC+C,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,GAAvB,UACI,cAACuX,GAAD,CACIpa,SAAU4a,EACVP,QAASA,GACT5nB,MAAO8Q,GAAO1J,EAAY8b,MAAQ,GAA3B,iBAAgC9b,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAa8b,YAA7C,QAAqD0E,GAAQ,GAAG5nB,QAE3E,eAACsS,EAAA,EAAD,CAAK5J,QAAQ,cAAb,UACI,cAAC2f,GAAA,EAAD,CACIva,MAAM,UACNgV,YAAY,aACZ9iB,MAAOioB,EACP1a,SAAU,SAACvN,GAAD,OAAwBA,GAASkoB,EAAcloB,IACzD+iB,YAAa,SAACpE,GAAD,OAAY,cAAC3H,GAAA,EAAD,2BAAe2H,GAAf,IAAuB9gB,KAAK,cAEzD,cAACkY,GAAA,EAAD,CACIjY,SAAoB,OAAXsJ,QAAW,IAAXA,OAAA,EAAAA,EAAa8b,QAAS+E,EAAWZ,cAAgB,YAAc,WACxExkB,KAAK,SACL5E,GAAI,CAAEsZ,GAAI,GAHd,sBASR,cAACtH,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACjB,GAAD,CACI3J,KAAK,SACLuI,MAAM,WACN9N,MAAK,UAAEoH,EAAY6f,cAAd,QAAwB,GAC7B1Z,SAAU6B,WCnEnB,SAASkZ,KACpB,OACI,cAAC,GAAD,CAAoB/iB,KAAK,4BAA4BxI,QAAS,CAC1D4P,YAAa,EACbH,YAAa,EACb0W,KAAM,SAHV,SAKI,cAAC,GAAD,UACI,eAACrW,GAAA,EAAD,CAAOgJ,OAAQ,EAAf,UACI,cAACmS,GAAD,IACA,cAACN,GAAD,IACA,cAACrb,GAAD,WCJb,IAAMkc,GAAsBxpB,IAAMF,cAAc,MAGxC,SAAS2pB,GAAuBjqB,GAC3C,IAAMoM,EAASlK,IACPqf,EAAcC,KAAdD,UAEFhd,EAAY8L,cAElB,EAA8B7P,IAAMC,WAApC,mBAAOypB,EAAP,KAAgBC,EAAhB,KAGA3pB,IAAMqhB,iBAAgB,WAClB1B,GAAelY,QAAQ1D,KACxB,CAACA,IAGJ,IAAM6lB,EAAa5pB,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,sEACdwa,GAAekK,gBADD,OAC3B/jB,EAD2B,OAEjC6jB,EAAW7jB,EAAKjE,MAFiB,2CAKlC,CAACkC,IAGJ/D,IAAMyM,WAAU,WACZmd,MACD,CAACA,IAGJ,IAAME,EAAwB9pB,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,+EAErBwa,GAAeoK,eAFM,cAElCjkB,EAFkC,yBAGjCA,EAAKjE,MAH4B,yDAKjC,IALiC,yDAQ7C,CAACkC,IAGEimB,EAAgBhqB,IAAMU,YAAN,uCAAkB,WAAOmB,GAAP,SAAAsD,EAAA,+EAE1Bwa,GAAejY,OAAO7F,GAFI,cAIhC8nB,GAAW,SAAAnc,GACP,OAAO,2BACAA,GACA3L,MAIXkf,IAEAnV,EAAO,uBAAwB,WAbC,mBAczB,GAdyB,gCAiBhCA,EAAO,KAAI7J,YAAa,SAjBQ,kCAmB7B,GAnB6B,yDAAlB,sDAoBnB,CACC6J,EACAmV,IAKEkJ,EAAgBjqB,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,+EAE1Bwa,GAAepG,SAFW,OAGhCwH,IACAnV,EAAO,kCAAyB,WAAW,kBAAM,cAAC,IAAD,CAAUW,GAAInC,GAAMG,UAJrC,gDAMhCmf,GACI9d,EAAO,KAAI7J,YAAa,SAPI,yDASrC,CACC6J,EACA8d,EACA3I,IAIJ,OAAKtb,QAAQikB,GAGT,cAACF,GAAexoB,SAAhB,CAAyBC,MAAO,CAC5ByoB,UACAO,gBACAH,wBACAE,iBAJJ,SAOKxqB,EAAME,WAVe,KChGnB,SAASwqB,KACpB,OAAOlqB,IAAM2B,WAAW6nB,ICM5B,IAAMW,GAAepF,aAAO,SAAPA,CAAiB,CAClCtjB,MAAO,OACPgd,OAAQ,OACR0E,UAAW,QACXhB,UAAW,UAIA,SAASiI,GAAT,GAAyC,IAA1BV,EAAyB,EAAzBA,QAASxqB,EAAgB,EAAhBA,GAE7B+E,EAAMjE,IAAM8U,SAAQ,WACtB,IAAQuV,EAAkCX,EAAlCW,OAAQC,EAA0BZ,EAA1BY,OAAQC,EAAkBb,EAAlBa,KAAMC,EAAYd,EAAZc,QAExBC,EAAO,IAAIC,IAAI,gCACf9K,EAAS,IAAI3a,gBAAgB,CAC/B6H,EAAE,GAAD,OAAKud,EAAS,IAAMC,EAAS,IAAMC,EAAO,IAAMC,GACjDG,GAAI,OACJC,EAAG,KACHC,MAAO,GACPC,OAAQ,UAIZ,OAFAL,EAAKvC,OAAStI,EAAO9a,WAEd2lB,EAAK3lB,aACb,CAAC4kB,IAEJ,OACI,cAACnW,EAAA,EAAD,UACI,cAAC4W,GAAD,CACI1H,IAAKxe,EACL8mB,YAAY,IACZ7rB,GAAE,eAAOA,O,wBC1BV,SAAS8rB,GAAT,GAGW,IAAD,UAFrB7qB,EAEqB,EAFrBA,KACAoB,EACqB,EADrBA,QAEA,EAAmC2oB,KAA3BR,EAAR,EAAQA,QAASM,EAAjB,EAAiBA,cAEjB,EAAwBhqB,IAAMC,SAA8B,IAA5D,mBAAO4B,EAAP,KAAaiW,EAAb,KAGME,EAAQhY,IAAMU,aAAY,WAC5Ba,IACAuW,EAAQ,MACT,CACCvW,IAIEyP,EAAehR,IAAMU,aAAY,SAACC,GACpCmX,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAO7F,EAAMkN,OAAO5M,aAEvC,IAGG4V,EAAe7W,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,sEACzB6kB,EAAcnoB,GADW,kCAE/BmW,IAF+B,2CAIpC,CACCnW,EACAmW,EACAgS,IAIJ,OACI,cAAC9S,GAAD,CACI/W,KAAMA,EACNoB,QAASA,EACT,aAAW,yBAHf,SAKI,eAACkV,GAAD,CACIjC,MAAM,gBACNkC,SAAS,wEACTC,SAAUE,EACVD,SAAUrV,EAJd,UAMI,cAAC2P,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,UACHwI,MAAM,OACNvI,KAAK,UACLvF,MAAK,UAAEY,EAAK2oB,eAAP,QAAkBd,EAAQc,QAC/Bhc,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIU,WAAS,EACTT,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,OACHwI,MAAM,SACNvI,KAAK,OACLvF,MAAK,UAAEY,EAAK0oB,YAAP,QAAeb,EAAQa,KAC5B/b,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,aACHwI,MAAM,eACNvI,KAAK,aACLvF,MAAK,UAAEY,EAAKopB,kBAAP,QAAqBvB,EAAQuB,WAClCzc,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,SACHwI,MAAM,QACNvI,KAAK,SACLvF,MAAK,UAAEY,EAAKwoB,cAAP,QAAiBX,EAAQW,OAC9B7b,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,SACHwI,MAAM,SACNvI,KAAK,SACLvF,MAAK,UAAEY,EAAKyoB,cAAP,QAAiBZ,EAAQY,OAC9B9b,SAAUwC,W,cCzGnB,SAASka,GAAT,GAIc,IAHzB/qB,EAGwB,EAHxBA,KACAoB,EAEwB,EAFxBA,QACA4pB,EACwB,EADxBA,qBAEA,EAAwBnrB,IAAMC,SAA+B,CACzDuG,KAAM,GACN4kB,SAAW,IAAI1iB,KAAK,EAAG,EAAG,EAAG,EAAG,GAAI5D,WACpCumB,UAAY,IAAI3iB,KAAK,EAAG,EAAG,EAAG,GAAI,GAAI5D,aAH1C,mBAAOjD,EAAP,KAAaiW,EAAb,KAOM9G,EAAehR,IAAMU,aAAY,SAACC,GACpC,IAAIM,EAAyBN,EAAMkN,OAAO5M,MAE1C,GACS,SADDN,EAAMkN,OAAOrH,KAEbvF,EAAQqqB,OAAOrqB,QAGfA,EAAQ9B,OAAO8B,GAGvB6W,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAOvF,SAE1B,IAGG4V,EAAe7W,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,sEACbgmB,EAAqB,2BACpCtpB,GADmC,IAEtCwpB,UAAWvZ,GAAWD,OAAO,IAAInJ,KAAK7G,EAAKwpB,YAC3CD,SAAUtZ,GAAWD,OAAO,IAAInJ,KAAK7G,EAAKupB,cAJX,eAQ/B7pB,IAR+B,2CAWpC,CACCM,EACAN,EACA4pB,IAIJ,OACI,cAACjU,GAAD,CACI/W,KAAMA,EACNoB,QAASA,EACT,aAAW,4BAHf,SAKI,eAACkV,GAAD,CACIjC,MAAM,sBACNkC,SAAS,8DACTC,SAAUE,EACVD,SAAUrV,EAJd,UAMI,cAAC2P,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,OACHwI,MAAM,QACNvI,KAAK,OACLmS,WAAS,EACT1X,MAAOY,EAAK2E,KACZgI,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAACma,GAAA,EAAD,CACIxc,MAAM,mBACNgV,YAAY,QACZ9iB,MAAOY,EAAKupB,SACZ5c,SAAU,SAACvN,GAAD,OAAgB6W,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,IAAe4d,SAAUnqB,QAC9D+iB,YAAa,SAACpE,GAAD,OAAiB,cAAC3H,GAAA,EAAD,aAAW/Y,GAAI,CAAEuC,MAAO,SAAcme,SAI5E,cAAC1O,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAACma,GAAA,EAAD,CACIxc,MAAM,0BACNgV,YAAY,QACZ9iB,MAAOY,EAAKwpB,UACZ7c,SAAU,SAACvN,GAAD,OAAgB6W,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,IAAe6d,UAAWpqB,QAC/D+iB,YAAa,SAACpE,GAAD,OAAiB,cAAC3H,GAAA,EAAD,aAAW/Y,GAAI,CAAEuC,MAAO,SAAcme,cC1F7E,SAAS4L,GAAT,GAGa,IAFxBrrB,EAEuB,EAFvBA,KACAoB,EACuB,EADvBA,QAEMqK,EAASlK,IACPqf,EAAcC,KAAdD,UAER,EAAwB/gB,IAAMC,SAA8B,CACxDuqB,QAAS,SACTD,KAAM,GACNF,OAAQ,GACRC,OAAQ,GACRW,WAAY,KALhB,mBAAOppB,EAAP,KAAaiW,EAAb,KASM9G,EAAehR,IAAMU,aAAY,SAACC,GACpCmX,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAO7F,EAAMkN,OAAO5M,aAEvC,IAGG4V,EAAe7W,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,+EAEzBwa,GAAelG,OAAO5X,GAFG,OAG/Bkf,IACAnV,EAAO,2BAAuB,WAC9BrK,IAL+B,gDAO/BqK,EAAO,KAAI7J,YAAa,SAPO,yDASpC,CACCF,EACA+J,EACArK,EACAwf,IAIJ,OACI,cAAC7J,GAAD,CACI/W,KAAMA,EACNoB,QAASA,EACT,aAAW,2BAHf,SAKI,eAACkV,GAAD,CACIjC,MAAM,oBACNkC,SAAS,6DACTC,SAAUE,EACVD,SAAUrV,EAJd,UAMI,cAAC2P,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,UACHwI,MAAM,OACNvI,KAAK,UACLvF,MAAOY,EAAK2oB,QACZhc,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,OACHwI,MAAM,SACNvI,KAAK,OACLmS,WAAS,EACT1X,MAAOY,EAAK0oB,KACZ/b,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,aACHwI,MAAM,eACNvI,KAAK,aACLvF,MAAOY,EAAKopB,WACZzc,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,SACHwI,MAAM,QACNvI,KAAK,SACLvF,MAAOY,EAAKwoB,OACZ7b,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,SACHwI,MAAM,SACNvI,KAAK,SACLvF,MAAOY,EAAKyoB,OACZ9b,SAAUwC,WChHnB,SAASya,KACpB,MAAmCvB,KAA3BR,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,cAEjB,EAA8CjqB,IAAMC,UAAS,GAA7D,mBAAO8a,EAAP,KAAwBC,EAAxB,KACA,EAA0Chb,IAAMC,UAAS,GAAzD,mBAAO8mB,EAAP,KAAsBC,EAAtB,KAEMP,EAAUzmB,IAAM8U,SAAQ,iBAAM,CAChC,CACI/F,MAAO,SACP6T,OAAQ,kBAAMoE,GAAiB,IAC/BL,KAAM,cAAC,KAAD,CAAUtnB,MAAM,aACvB,CACC0P,MAAO,YACP6T,OAAQ,kBAAM5H,GAAmB,IACjC2L,KAAM,cAAC,KAAD,CAAYtnB,MAAM,cAE7B,IAEH,OACI,qCACI,cAAC2a,GAAD,CACIE,WAAU,UAAKwP,EAAQW,OAAb,YAAuBX,EAAQY,QACzCnqB,KAAM4a,EACNxZ,QAAS,kBAAMyZ,GAAmB,IAClCf,UAAWgQ,IAGf,cAACe,GAAD,CACI7qB,KAAM4mB,EACNxlB,QAAS,kBAAMylB,GAAiB,MAGpC,eAAC1I,GAAA,EAAD,CAAM/J,UAAW,EAAjB,UACI,cAAC6N,GAAA,EAAD,CACIQ,OAAQ,cAACoD,GAAD,CAAcS,QAASA,IAC/BjS,MAAO,qCAAGkV,EAAQc,QAAX,KAAsBd,EAAQa,QACrC5H,UAAW,qCAAG+G,EAAQW,OAAX,IAAoBX,EAAQY,YAE3C,cAACpH,GAAA,EAAD,CAAW3iB,UAAU,MAArB,SACI,cAAC6pB,GAAD,CAAKV,QAASA,MAElB,eAAC7G,GAAA,EAAD,WACI,eAAC7Y,EAAA,EAAD,CAAYzJ,UAAU,IAAtB,iBACSmpB,EAAQW,OADjB,IAC0BX,EAAQY,OAAO,uBACpCZ,EAAQuB,WAFb,IAE0BvB,EAAQa,KAFlC,KAEyC,uBACpCb,EAAQc,WAEb,uBACA,cAACnU,GAAD,CAAaE,MAAOmT,aCtDxC,IAAMgC,GAA6C,CAC/C,CAAEllB,KAAM,eAAWvF,MAAO,cAC1B,CAAEuF,KAAM,eAAWvF,MAAO,eAC1B,CAAEuF,KAAM,kBAAcvF,MAAO,eAC7B,CAAEuF,KAAM,MAAOvF,MAAO,eAKX,SAAS0qB,KACpB,MAAwCte,KAAhChF,EAAR,EAAQA,YAAa0E,EAArB,EAAqBA,eAErB,EAAsC/M,IAAMC,SAAmC,CAC3EkkB,KAAM,IAAIzb,KACV6D,GAAI,IAAI7D,OAFZ,mBAAOkjB,EAAP,KAAoBC,EAApB,KAKMzC,EAAqBppB,IAAMU,YAAN,uCAAkB,WAAOorB,GAAP,SAAA3mB,EAAA,sDACzC4H,EAAe,CACXoX,KAAM2H,EACNvf,GAAI,QAHiC,2CAAlB,sDAKxB,CACCQ,IAIEsc,EAAyBrpB,IAAMU,YAAN,uCAAkB,WAAO4P,GAAP,iBAAAnL,EAAA,sDAC7CmL,EAAIW,iBACJlE,EAAe,CACXoX,KAAI,UAAEyH,EAAYzH,YAAd,aAAE,EAAkBmE,cACxB/b,GAAE,UAAEqf,EAAYrf,UAAd,aAAE,EAAgB+b,gBAJqB,2CAAlB,sDAM5B,CACCsD,EAAYzH,KACZyH,EAAYrf,GACZQ,IAIJ,OACI,eAACe,GAAA,EAAD,CAAO+H,UAAU,SAAS9H,QAAS,EAAnC,UACI,eAACwF,EAAA,EAAD,WACI,cAACvJ,EAAA,EAAD,CAAYjL,QAAQ,YAApB,2BAGA,cAAC6pB,GAAD,CACIpa,SAAU4a,EACVP,QAAS6C,GACTzqB,MAAOoH,EAAY8b,UAI3B,eAAC5Q,EAAA,EAAD,CAAKhT,UAAU,OAAOoW,SAAU0S,EAAhC,UACI,cAACrf,EAAA,EAAD,CAAYjL,QAAQ,YAApB,wCAGA,eAAC+O,GAAA,EAAD,CAAO+H,UAAU,MAAM9H,QAAS,EAAhC,UACI,cAACub,GAAA,EAAD,CACIva,MAAM,KACNgV,YAAY,aACZ9iB,MAAO2qB,EAAYzH,KACnB3V,SAAU,SAACvN,GAAD,OAAW4qB,EAAe,2BAAKD,GAAN,IAAmBzH,KAAI,OAAEljB,QAAF,IAAEA,IAAS,IAAIyH,SACzEsb,YAAa,SAACpE,GAAD,OAAY,cAAC3H,GAAA,EAAD,2BAAe2H,GAAf,IAAuB9gB,KAAK,cAEzD,cAACwqB,GAAA,EAAD,CACIva,MAAM,KACNgV,YAAY,aACZ9iB,MAAO2qB,EAAYrf,GACnBiC,SAAU,SAACvN,GAAD,OAAW4qB,EAAe,2BAAKD,GAAN,IAAmBrf,GAAE,OAAEtL,QAAF,IAAEA,IAAS,IAAIyH,SACvEsb,YAAa,SAACpE,GAAD,OAAY,cAAC3H,GAAA,EAAD,2BAAe2H,GAAf,IAAuB9gB,KAAK,cAEzD,cAACkY,GAAA,EAAD,CAAQlT,KAAK,SAAS/E,QAAQ,WAA9B,0B,IC5DdgtB,G,iKAEF,SAAsBhoB,GAClB,IAAIC,EAAO,GACPC,EAAMzB,OAAOmB,SAASO,SAO1B,GAAsC,IAAlCC,OAAOC,KAAKL,GAAWM,OACvB,cAA8BF,OAAOG,QAN7B,CACR,YAAa,YACb,SAAU,WAIV,eAAmD,CAA9C,0BAAOC,EAAP,KAAaC,EAAb,KACGP,EAAIQ,SAASF,KACbP,EAAOQ,OAGR,cAAeT,GACtBC,GAAI,qBAAkBD,EAAUW,UAA5B,cAEA,eAAgBX,IAChBC,GAAI,WAAQD,EAAUY,YAElB,WAAYZ,IAAWC,GAAI,iBAAcD,EAAUa,WAEpD,WAAYb,IACnBC,GAAI,iBAAcD,EAAUc,SAEhC,OAAOb,I,uBAGX,SAAiBD,EAAyBsE,GACtC,OAAOrG,KAAK2D,IAAI3D,KAAKqE,YAAYtC,GAAa,SAAUsE,O,GAhCrCjG,GAuCZ,OAAI2pB,GCjDNC,GAAqBhsB,IAAMF,cAAc,MAUvC,SAASmsB,GAAsBzsB,GAC1C,IAAMoM,EAASlK,IACTqC,EAAY8L,cACZC,EAAUV,GAAW,KAEnBrD,EAAS0T,KAAT1T,KACA1D,EAAgBgF,KAAhBhF,YAER,EAA8BrI,IAAMC,SAA0B,IAA9D,mBAAOisB,EAAP,KAAmBpU,EAAnB,KAGM7H,EAAOjQ,IAAMU,YAAN,sBAAkB,8BAAAyE,EAAA,6DACvBya,EAAS7b,EACT,WAAYA,GAAkC,OAArBA,EAAUc,SACnC+a,EAAS,CAAE/a,OAAO,GAAD,cAAKkH,QAAL,IAAKA,OAAL,EAAKA,EAAMxF,MAHL,kBAOJwlB,GAAaI,UAAUvM,EAAQvX,GAP3B,OAOjBvC,EAPiB,OAQvBgS,EAAQhS,EAAKjE,MARU,gDAUvB+J,EAAO,KAAI7J,YAAa,SACxB+V,EAAQ,IAXe,yDAa5B,CACClM,EACAvD,EACAtE,EAHD,OAICgI,QAJD,IAICA,OAJD,EAICA,EAAMxF,KAWV,OARAvG,IAAMyM,WAAU,WACZwD,MACD,CACCA,EACAH,IAImC,IAAnC3L,OAAOC,KAAK8nB,GAAY7nB,OAAqB,KAG7C,cAAC2nB,GAAchrB,SAAf,CAAwBC,MAAO,CAC3BirB,cADJ,SAGK1sB,EAAME,WC5DJ,SAAS0sB,KACpB,OAAOpsB,IAAM2B,WAAWqqB,ICMb,SAASK,GAAU7sB,GAC9B,OACI,cAAC,GAAD,CACIgH,KAAK,sBACLxI,QAAS,CAAEmmB,KAAM,cAAe5X,GAAI,OAFxC,SAII,cAAC,GAAD,UACI,eAACuB,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACI,cAAC4d,GAAD,IACCnsB,EAAME,gB,yBCDZ,SAAS4sB,GAAa9sB,GACjC,MAAwBQ,IAAMC,YAAuB,OAALT,QAAK,IAALA,OAAA,EAAAA,EAAO+sB,cAAvD,mBAAOpsB,EAAP,KAAaC,EAAb,KAEA,OACI,eAACmT,EAAA,EAAD,WACI,eAACA,EAAA,EAAD,CAAKrU,GAAI,CACLyK,QAAS,OACTwE,WAAY,SACZF,eAAgB,iBAHpB,UAKI,eAACjE,EAAA,EAAD,CAAYjL,QAAQ,KAAKwB,UAAU,KAAKgG,GAAI/G,EAAMgV,MAAMgY,QAAQ,IAAK,KAArE,UACKhtB,EAAMgV,MACP,cAACjC,GAAA,EAAD,CAAYC,QAAS,kBAAMpS,GAAQ,SAAAoN,GAAG,OAAKA,MAA3C,SACKrN,EAAO,cAAC,KAAD,IAA0B,cAAC,KAAD,SAG1C,cAACoS,GAAA,EAAD,CACIC,QAAShT,EAAMgT,QADnB,SAGI,cAAC,KAAD,SAGR,eAACW,GAAA,EAAD,CAAUC,GAAIjT,EAAMkT,QAAQ,OAA5B,UACI,cAACnC,GAAA,EAAD,CAAMC,WAAS,EAACpD,QAAS,EAAzB,SACKvO,EAAME,WAEX,uBACA,cAAC6e,GAAA,EAAD,U,mCCpCHkO,GAAW,CACpB,YACA,oBACA,SACA,aACA,WACA,cACA,UAoBW,SAASC,GAAgBltB,GAEpC,IAAMmtB,EAAc3sB,IAAM8U,SAAQ,iBAAiC,CAC/D8X,SAAU,SAAAhlB,GAAI,OAAIpI,EAAMqtB,WAAaJ,GAASttB,OAAOyI,EAAKklB,IAAMllB,EAAKklB,GACrEC,IAAK,KACL,CAACvtB,EAAMqtB,aAGLG,EAAgBhtB,IAAM8U,SAAQ,iBAAkC,CAClE,CACI8X,SAAU,SAAAhlB,GAAI,OAAIA,EAAKqlB,GACvBxV,SAAU,OACVyV,YAAa,MACbC,gBAAiB,GACjBC,QAAS,EACTC,UAAW,SACXC,mBAAmB,MAExB,IAGGzrB,EAAO7B,IAAM8U,SAAQ,WACvB,IAAMyY,EAAgD/tB,EAAMytB,EAAEje,KAAI,kBAAgB,CAAED,MAAlB,EAAGA,MAA6BlN,KAAM,OAUxG,OARArC,EAAMqC,KAAKwmB,SAAQ,SAACzgB,GAChBpI,EAAMytB,EAAE5E,SAAQ,WAAUzT,GAAW,IAAlBtM,EAAiB,EAAjBA,IACfilB,EAAI3Y,GAAO/S,KAAKgG,KAAK,CACjBilB,EAAGllB,EAAKpI,EAAMguB,MACdP,EAAG9tB,OAAOyI,EAAKU,YAIpBilB,IACR,CACC/tB,EAAMytB,EACNztB,EAAMguB,KACNhuB,EAAMqC,OAIV,OACI,eAACqP,GAAA,EAAD,CAAMtJ,MAAI,EACNwJ,GAAI,GACJmW,GAAI/nB,EAAMkP,UAAY,GAAK,EAF/B,UAII,eAACZ,GAAA,EAAD,CAAO+H,UAAU,MAAM9H,QAAS,EAAGI,WAAW,SAA9C,UACI,cAACnE,EAAA,EAAD,CAAYjL,QAAQ,QAAQwB,UAAU,KAAKlB,MAAM,iBAAjD,SACKG,EAAMgV,QAEX,cAAC,KAAD,CAAcnV,MAAM,eAGD,IAAtBG,EAAMqC,KAAKwC,OACR,cAAC2F,EAAA,EAAD,CAAYzJ,UAAU,IAAIlB,MAAM,iBAAhC,qDAGE,cAACkU,EAAA,EAAD,CACErU,GAAI,CACAikB,UAAW,QACX1E,OAAQ,OACR0D,UAAW,QACX1gB,MAAO,QALb,SAQE,cAAC,KAAD,CACIglB,QAAS,CACL5kB,OACA8qB,cACAK,wBCrGb,SAASS,KACpB,OACI,cAACpB,GAAD,UACI,cAACqB,GAAD,MAKZ,SAASA,KACL,IAAQxB,EAAeE,KAAfF,WAER,OACI,eAACI,GAAD,CAAcC,aAAW,EAAC/X,MAAM,yBAAhC,UACI,cAACkY,GAAD,CACIhe,WAAS,EACT8F,MAAM,6BACN3S,KAAMqqB,EAAWyB,gBACjBH,KAAK,OACLP,EAAG,CACC,CAAEle,MAAO,6BAAoBzG,IAAK,wBAG1C,cAACokB,GAAD,CACIhe,WAAS,EACT8F,MAAM,6BACN3S,KAAMqqB,EAAWyB,gBACjBH,KAAK,OACLP,EAAG,CACC,CAAEle,MAAO,sBAAkBzG,IAAK,qBAGxC,cAACokB,GAAD,CACIhe,WAAS,EACT8F,MAAM,gCACN3S,KAAMqqB,EAAWyB,gBACjBH,KAAK,OACLP,EAAG,CACC,CAAEle,MAAO,6BAAyBzG,IAAK,yBACvC,CAAEyG,MAAO,6BAAyBzG,IAAK,8B,ICjBrDslB,G,4MACF7mB,MAAQ,G,wCAER,WACI,OAAO/E,KAAK+E,Q,qBAGhB,YAA+D,IAA9CrC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,WACxB3C,KAAK+E,MAAL,qBAA2BrC,EAA3B,sBAAkDC,K,2BAGtD,WACI,OAAO3C,KAAK2D,IAAI3D,KAAKuC,Q,oBAGzB,WACI,OAAOvC,KAAKsE,OAAOtE,KAAKuC,Q,oBAG5B,SAAc1C,GACV,OAAOG,KAAKgF,MAAMhF,KAAKuC,KAAM1C,K,oBAGjC,WAAgDA,GAA6B,IAA7D6C,EAA4D,EAA5DA,UACZ,OAAO1C,KAAKoD,KAAL,qBAAwBV,EAAxB,cAA+C7C,K,gCAG1D,WACI,OAAOG,KAAK2D,IAAL,UAAY3D,KAAKuC,KAAjB,e,GA5BenC,GAgCf,OAAIwrB,GC9CJ,SAASC,GAAeruB,GACnC,OACI,cAAC,KAAD,UACI,eAACgf,GAAA,EAAD,CAAMtf,GAAI,CACNijB,UAAW,QACXgB,UAAW,SAFf,UAII,eAACxE,GAAA,EAAD,CAAUC,QAAM,EAACpM,QAAShT,EAAMsuB,UAAhC,UACI,cAACjP,GAAA,EAAD,UACI,cAAC,KAAD,CAAexf,MAAM,cAEzB,cAAC2f,GAAA,EAAD,CAAcvhB,QAAQ,qBAEzB+B,EAAME,c,yBCdR,SAASquB,GAAmBvuB,GACvC,OACI,eAACmf,GAAA,EAAD,CAAUzf,GAAI,CAAE8uB,GAAI,OAApB,UACI,cAACnP,GAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACG,GAAA,EAAD,CAAcvhB,QAAS,cAACme,GAAD,CAASC,UAAQ,EAACtP,GAAI/M,EAAMyuB,KAA5B,SAAmCzuB,EAAM/B,eCJ7D,SAASywB,KACpB,IAAQpE,EAA0BI,KAA1BJ,sBACA/I,EAAcC,KAAdD,UACFnV,EAASlK,IAETqC,EAAY8L,cAElB,EAA8D7P,IAAMC,UAAkB,GAAtF,mBAAOkuB,EAAP,KAAgCC,EAAhC,KACA,EAAkCpuB,IAAMC,WAAxC,mBAAOsgB,EAAP,KAAkB8N,EAAlB,KAGMpe,EAAOjQ,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,sEACH2kB,IADG,OACrBvJ,EADqB,OAE3B8N,EAAa9N,GAFc,2CAG5B,CAACuJ,IAGJ9pB,IAAMyM,WAAU,WACZwD,MACD,CAACA,IAGJ,IAAMqe,EAAiBtuB,IAAMU,YAAN,uCAAkB,WAAOmB,GAAP,SAAAsD,EAAA,+EAE3ByoB,GAAgBnU,OAAO1V,EAAWlC,GAFP,cAGjCoO,IACA8Q,IACAnV,EAAO,uBAAwB,WALE,mBAM1B,GAN0B,gCAQjCA,EAAO,KAAI7J,YAAa,SARS,kCAU9B,GAV8B,yDAAlB,sDAWpB,CACC6J,EACAmV,EACA9Q,EACAlM,IAIEwqB,EAAoBvuB,IAAM8U,SAAQ,WACpC,cAAOyL,QAAP,IAAOA,OAAP,EAAOA,EAAWvR,KAAI,SAAApH,GAAI,OAAI,cAACmmB,GAAD,CAC1BtwB,QAAO,kBAAamK,EAAKpB,MACzBynB,KAAI,YAAOrmB,EAAK8hB,QAAZ,sBAAiC9hB,EAAKrB,KAFSqB,EAAKrB,SAI7D,CAACga,IAGJ,OACI,qCACI,cAAC2K,GAAD,CACI/qB,KAAMguB,EACN5sB,QAAS,kBAAM6sB,GAA2B,IAC1CjD,qBAAsBmD,IAG1B,cAACja,GAAD,CAAWG,MAAM,sBAAjB,SACI,cAACqZ,GAAD,CACIC,UAAW,kBAAMM,GAA2B,IADhD,SAGKG,MAGT,0BClEG,SAASC,KAEpB,IAAMjP,EAAQvf,IAAM8U,SAAQ,WACxB,IAAI0K,EAAM,GAKV,OAJAA,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACgpB,GAAD,MAC1C/J,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACktB,GAAD,MAC1CjO,EAAI3X,KAAK,CAAErB,KAAM,OAAQjG,UAAW,cAAC6T,GAAD,MAE7BoL,IACR,IAGH,OACI,cAAC,GAAD,UACI,eAACtO,GAAA,EAAD,CAAMC,WAAS,EAACpD,QAAS,EAAGC,SAAS,eAArC,UACI,cAACkD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAGkW,GAAI,EAA9B,SACI,cAACvS,GAAD,CAAeQ,KAAM+J,MAEzB,eAACrO,GAAA,EAAD,CAAMtJ,MAAI,EAACuJ,WAAS,EAACpD,QAAS,EAAGG,aAAa,aAAakD,GAAI,GAAIC,GAAI,EAAGkW,GAAI,EAA9E,UACI,cAACrW,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACqa,GAAD,MAEJ,cAACva,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC8c,GAAD,cCzBT,SAASO,GAAqBjvB,GACzC,OACI,eAAC8sB,GAAD,CAAc9X,MAAM,6BAApB,UACI,cAACkY,GAAD,CACIhe,WAAS,EACT8F,MAAM,yDACN3S,KAAMrC,EAAMqC,KACZ2rB,KAAK,MACLP,EAAG,CACC,CAAEle,MAAO,6BAAoBzG,IAAK,wBAG1C,cAACokB,GAAD,CACIhe,WAAS,EACT8F,MAAM,uCACN3S,KAAMrC,EAAMqC,KACZ2rB,KAAK,MACLP,EAAG,CACC,CAAEle,MAAO,0BAAsBzG,IAAK,qBAG5C,cAACokB,GAAD,CACIhe,WAAS,EACT8F,MAAM,8BACN3S,KAAMrC,EAAMqC,KACZ2rB,KAAK,MACLP,EAAG,CACC,CAAEle,MAAO,iCAA6BzG,IAAK,yBAC3C,CAAEyG,MAAO,iCAA6BzG,IAAK,8BC5BhD,SAASomB,GAAoBlvB,GACxC,OACI,eAAC8sB,GAAD,CAAc9X,MAAM,wBAApB,UACI,cAACkY,GAAD,CACIhe,WAAS,EACTme,YAAU,EACVrY,MAAM,oDACN3S,KAAMrC,EAAMqC,KACZ2rB,KAAK,MACLP,EAAG,CACC,CAAEle,MAAO,6BAAoBzG,IAAK,wBAG1C,cAACokB,GAAD,CACIhe,WAAS,EACTme,YAAU,EACVrY,MAAM,uCACN3S,KAAMrC,EAAMqC,KACZ2rB,KAAK,MACLP,EAAG,CACC,CAAEle,MAAO,0BAAsBzG,IAAK,qBAG5C,cAACokB,GAAD,CACIhe,WAAS,EACTme,YAAU,EACVrY,MAAM,8BACN3S,KAAMrC,EAAMqC,KACZ2rB,KAAK,MACLP,EAAG,CACC,CAAEle,MAAO,iCAA6BzG,IAAK,yBAC3C,CAAEyG,MAAO,iCAA6BzG,IAAK,8BCjChD,SAASqmB,KACpB,OACI,cAACtC,GAAD,UACI,cAAC,GAAD,MAMZ,SAASqB,KACL,IAAQxB,EAAeE,KAAfF,WAER,OACI,qCACI,cAACwC,GAAD,CAAqB7sB,KAAMqqB,EAAW0C,SAEtC,cAACH,GAAD,CAAsB5sB,KAAMqqB,EAAW2C,UAEvC,eAACvC,GAAD,CAAcC,aAAW,EAAC/X,MAAM,6CAAhC,UACI,cAACkY,GAAD,CACIhe,WAAS,EACT8F,MAAM,gCACN3S,KAAMqqB,EAAWlP,MACjBwQ,KAAK,QACLP,EAAG,CACC,CAAEle,MAAO,6BAAyBzG,IAAK,yBACvC,CAAEyG,MAAO,6BAAyBzG,IAAK,2BAG/C,cAACokB,GAAD,CACIhe,WAAS,EACT8F,MAAM,kDACN3S,KAAMqqB,EAAWlP,MACjBwQ,KAAK,QACLP,EAAG,CACC,CAAEle,MAAO,6BAAoBzG,IAAK,wBAG1C,cAACokB,GAAD,CACIhe,WAAS,EACT8F,MAAM,qDACN3S,KAAMqqB,EAAWlP,MACjBwQ,KAAK,QACLP,EAAG,CACC,CAAEle,MAAO,sBAAkBzG,IAAK,2BCnCjD,IAAMwmB,GAAuB9uB,IAAMF,cAAc,MAGzC,SAASivB,GAAwBvvB,GAC5C,IAAMoM,EAASlK,IACPqf,EAAcC,KAAdD,UACFhd,EAAY8L,cAElB,EAAgC7P,IAAMC,WAAtC,mBAAO2hB,EAAP,KAAiBoN,EAAjB,KAGAhvB,IAAMqhB,iBAAgB,WAClBuM,GAAgBnmB,QAAQ1D,KACzB,CAACA,IAGJ,IAAMkrB,EAAcjvB,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,sEACfyoB,GAAgB/D,gBADD,OAC5B/jB,EAD4B,OAElCkpB,EAAYlpB,EAAKjE,MAFiB,2CAKnC,CAACkC,IAGJ/D,IAAMyM,WAAU,WACZwiB,MACD,CAACA,IAGJ,IAAMC,EAAqBlvB,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,+EAElByoB,GAAgBsB,qBAFE,cAE/BppB,EAF+B,yBAG9BA,EAAKjE,MAHyB,yDAK9B,IAL8B,yDAS1C,CAACkC,IAGEorB,EAAiBnvB,IAAMU,YAAN,uCAAkB,WAAOmB,GAAP,SAAAsD,EAAA,+EAEvByoB,GAAgBlmB,OAAO7F,GAFA,yCAKzB+f,IAEK,cAAe/f,GAAQ+f,EAAS8H,QAAQnjB,KAAO1E,EAAK6C,WACjD,SAAU7C,IAGlBkf,IAGJiO,GAAY,SAACxhB,GAWT,OAVAA,GAAOrJ,OAAOC,KAAKvC,GAAMwmB,SAAQ,SAAC/f,GAC9B,GACS,cADDA,EAEAkF,EAAIkc,QAAQnjB,GAAKpH,OAAO0C,EAAKyG,SAG7BkF,EAAIlF,GAAOzG,EAAKyG,MAIrBnE,OAAOyV,OAAO,GAAIpM,MAE7B5B,EAAO,yBAA0B,WA3BJ,mBA4BtB,GA5BsB,yDA+BjCA,EAAO,KAAI7J,YAAa,SA/BS,kCAiC9B,GAjC8B,0DAAlB,sDAkCpB,CAAC6J,EAAQgW,EAAUb,IAGhBqO,EAAiBpvB,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,+EAE3ByoB,GAAgBrU,SAFW,OAGjCqI,GAAYhW,EAAO,wBAAoB,WAAW,kBAAM,cAAC,IAAD,CAAUW,GAAIlB,EAAaC,UAAUsW,EAAS8H,QAAQnjB,SAH7E,+CAKjCqF,EAAO,KAAI7J,YAAa,SALS,wDAOtC,CAAC6J,EAAQgW,IAGZ,OAAKnc,QAAQmc,GAGT,cAACkN,GAAgB9tB,SAAjB,CAA0BC,MAAO,CAC7B2gB,WACAwN,iBACAF,qBACAC,kBAJJ,SAOK3vB,EAAME,WAVgB,KCnGpB,SAAS2vB,KACpB,OAAOrvB,IAAM2B,WAAWmtB,I,ICFhBQ,G,QCSNC,GAAQxK,aAAO,QAAPA,CAAgB,CAC1Bpb,QAAS,SAGP6lB,GAAczK,aAAO,MAAPA,CAAc,CAC9BtjB,MAAO,iBACP0hB,UAAW,UASA,SAASsM,GAAiBjwB,GACrC,IAAMoM,EAASlK,IACTiC,EAAW+rB,cACX3rB,EAAY8L,cAClB,EAA0C7P,IAAMC,WAAhD,mBAAO0vB,EAAP,KAAsBC,EAAtB,KAGM/Y,EAAe7W,IAAMU,YAAN,uCAAkB,WAAO4P,GAAP,SAAAnL,EAAA,yDACnCmL,EAAIW,iBACC0e,EAF8B,uBAG/B/jB,EAAO,mCAA+B,WAHP,mDAOzBhG,EAAaiqB,OAAO9rB,EAAW4rB,GAPN,OAQ/BnwB,EAAMswB,UAAYtwB,EAAMswB,WACxBlkB,EAAO,8BAA0B,WAC7B,kBAAM,cAAC,IAAD,CAAUW,GAAI5I,EAASO,cAVF,kDAc/B0H,EAAO,KAAI7J,YAAa,SAdO,0DAAlB,sDAgBlB,CACC4tB,EACAnwB,EACAoM,EACAjI,EACAI,IAIEgsB,EAAoB/vB,IAAMU,aAAY,SAAC4P,GACzC,GAAIA,EAAIzC,OAAOmiB,OAAS1f,EAAIzC,OAAOmiB,MAAM,GAAI,CACzC,IAAMC,EAAM3f,EAAIzC,OAAOmiB,MAAM,GAC7BJ,EAAiBK,MAEtB,IAGGC,EAAoBlwB,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,+EAE9BS,EAAa2T,OAAOxV,GAFU,OAGpCvE,EAAMkb,UAAYlb,EAAMkb,WACxB9O,EAAO,wFAAuE,WAC1E,kBAAM,cAAC,IAAD,CAAUW,GAAI5I,EAASO,cALG,gDASpC0H,EAAO,KAAI7J,YAAa,SATY,yDAWzC,CACCvC,EACAoM,EACAjI,EACAI,IAIJ,OACI,eAACmN,GAAA,EAAD,CAAMC,WAAS,EAAC5Q,UAAU,OACtBoW,SAAUE,EACVhB,UAAU,MACV1H,WAAW,UACXJ,QAAS,EAJb,UAMI,cAACmD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SACI,cAACqQ,GAAD,CACI/M,IAAKkN,EAAgBjF,IAAIyF,gBAAgBR,GAAiB/pB,EAAa8c,QAAQljB,EAAMuG,OACrFwc,IAAI,iBAGZ,eAACrR,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAGjgB,GAAI,CAC1ByK,QAAS,OACTqE,SAAU,OACVG,WAAY,SACZF,eAAgB,iBAJpB,UAMI,wBAAOmiB,QAAQ,gBAAf,UACI,cAACb,GAAD,CACIc,OAAO,cACP9pB,GAAG,gBACHzC,KAAK,OACL0K,SAAUuhB,IAEd,cAAC/Y,GAAA,EAAD,CACI3X,MAAM,UACNN,QAAQ,WACRwB,UAAU,OAHd,qCAQJ,cAACyW,GAAA,EAAD,CAAQ3X,MAAM,QACV4X,UAAW,cAAC,KAAD,IACXzE,QAAS0d,EAFb,uBAOA,cAAClZ,GAAA,EAAD,CACIlT,KAAK,SACLzE,MAAM,UACN4X,UAAW,cAAC,KAAD,IAHf,0BCpGhB,SAASqZ,GAAWrvB,GAChB,MAAeA,EAAMsvB,MAAM,KAA3B,mBAAOC,EAAP,KAAUC,EAAV,KACA,OAAO,IAAI/nB,KAAK,EAAG,EAAG,EAAGvJ,OAAOqxB,GAAIrxB,OAAOsxB,IAIhC,SAASC,GAAT,GAGY,IAAD,QAFtBvwB,EAEsB,EAFtBA,KACAoB,EACsB,EADtBA,QAEQsf,EAAiBG,KAAjBH,aACR,EAAqCwO,KAA7BF,EAAR,EAAQA,eAAgBvN,EAAxB,EAAwBA,SAExB,EAAwB5hB,IAAMC,SAA+B,IAA7D,mBAAO4B,EAAP,KAAaiW,EAAb,KAGME,EAAQhY,IAAMU,aAAY,WAC5Ba,IACAuW,EAAQ,MACT,CACCvW,IAIEyP,EAAehR,IAAMU,aAAY,SAACC,GACpC,IAAIM,EAAyBN,EAAMkN,OAAO5M,MAE1C,GACS,SADDN,EAAMkN,OAAOrH,KAEbvF,EAAQqqB,OAAOrqB,QAGfA,EAAQ9B,OAAO8B,GAIvB6W,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAOvF,SAE1B,IAGG0vB,EAAa3wB,IAAMU,aAAY,SAACyX,EAAiClX,GACnE6W,GAAQ,SAAAtK,GAEJ,OADAA,EAAI2K,GAASrG,GAAWD,OAAO5Q,GACxBkD,OAAOyV,OAAO,GAAIpM,QAE9B,IAGGqJ,EAAe7W,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,sEACzBgqB,EAAettB,GADU,kCAE/BmW,IAF+B,2CAIpC,CACCnW,EACAmW,EACAmX,IAIE/Q,EAAqBpe,IAAMU,aAAY,SAACC,GAC1C,IAAIM,EAAyBN,EAAMkN,OAAO5M,MAChB,cAAtBN,EAAMkN,OAAOrH,OAAsBvF,EAAQ9B,OAAO8B,IAEtDN,EAAMkN,QAAUiK,GAAQ,SAACtK,GAAD,mBAAC,eAClBA,GADiB,mBAEnB7M,EAAMkN,OAAOrH,KAAOvF,SAE1B,IAGH,OACI,cAACiW,GAAD,CACI/W,KAAMA,EACNoB,QAASA,EACT,aAAW,sBAHf,SAKI,eAACuM,GAAA,EAAD,CAAOC,QAAS,EAAhB,UAEI,cAAC0hB,GAAD,CAAkB1pB,MAAO6b,EAAS7b,QAClC,cAACwY,GAAA,EAAD,IAEA,eAAC9H,GAAD,CACIjC,MAAM,iBACNkC,SAAS,yEACTC,SAAUE,EACVD,SAAUrV,EAJd,UAMI,cAAC2P,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,OACHwI,MAAM,QACNvI,KAAK,OACLmS,WAAS,EACT1X,MAAK,UAAEY,EAAK2E,YAAP,QAAeob,EAASpb,KAC7BgI,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAACma,GAAA,EAAD,CACIxc,MAAM,mBACNgV,YAAY,QACZ9iB,MAAOqvB,GAAU,UAACzuB,EAAKupB,gBAAN,QAAkBxJ,EAASwJ,UAC5C5c,SAAU,SAACvN,GAAD,OAAgB0vB,EAAW,WAAY1vB,IACjD+iB,YAAa,SAACpE,GAAD,OAAiB,cAAC3H,GAAA,EAAD,aAAW/Y,GAAI,CAAEuC,MAAO,SAAcme,SAI5E,cAAC1O,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAACma,GAAA,EAAD,CACIxc,MAAM,0BACNgV,YAAY,QACZ9iB,MAAOqvB,GAAU,UAACzuB,EAAKwpB,iBAAN,QAAmBzJ,EAASyJ,WAC7C7c,SAAU,SAACvN,GAAD,OAAgB0vB,EAAW,YAAa1vB,IAClD+iB,YAAa,SAACpE,GAAD,OAAiB,cAAC3H,GAAA,EAAD,aAAW/Y,GAAI,CAAEuC,MAAO,SAAcme,SAI5E,cAAC1O,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,eAAC3C,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,cAACE,GAAA,EAAD,CAAYrI,GAAG,gBAAf,mBACA,cAACsI,GAAA,EAAD,CACIC,QAAQ,gBACRtI,KAAK,YACLvF,MAAK,UAAEY,EAAK6C,iBAAP,QAAoBkd,EAAS8H,QAAQnjB,GAC1CwI,MAAM,QACNP,SAAU4P,EALd,SAOKyC,EAAa7R,KAAI,gBAAGxI,EAAH,EAAGA,KAAMD,EAAT,EAASA,GAAT,OAAkB,eAAC2I,GAAA,EAAD,CAAqBjO,MAAOsF,EAA5B,UAAkCC,EAAlC,MAAeA,qBC7IpE,SAASoqB,GAAT,GAIU,IAHrBzwB,EAGoB,EAHpBA,KACAoB,EAEoB,EAFpBA,QACAsvB,EACoB,EADpBA,iBAGA,EAAwB7wB,IAAMC,SAA2B,CACrDuG,KAAM,GACN4c,SAAUkM,GAAUwB,QACpBC,WAAY,GACZC,MAAO,IAJX,mBAAOnvB,EAAP,KAAaiW,EAAb,KAOM9G,EAAehR,IAAMU,aAAY,SAACC,GACpC,IAAIM,EAAyBN,EAAMkN,OAAO5M,MAE1C,GACS,SADDN,EAAMkN,OAAOrH,KAEbvF,EAAQqqB,OAAOrqB,QAGfA,EAAQ9B,OAAO8B,GAGvB6W,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAOvF,SAE1B,IAGGmd,EAAqBpe,IAAMU,aAAY,SAACC,GAC1C,IAAIM,EAAyBN,EAAMkN,OAAO5M,MAChB,eAAtBN,EAAMkN,OAAOrH,OAAuBvF,EAAQ9B,OAAO8B,IAEvDN,EAAMkN,QAAUiK,GAAQ,SAACtK,GAAD,mBAAC,eAClBA,GADiB,mBAEnB7M,EAAMkN,OAAOrH,KAAOvF,SAE1B,IAGG4V,EAAe7W,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,sEACzB0rB,EAAiBhvB,GADQ,kCAE/BN,IAF+B,2CAKpC,CACCM,EACAgvB,EACAtvB,IAIJ,OACI,cAAC2V,GAAD,CACI/W,KAAMA,EACNoB,QAASA,EACT,aAAW,sBAHf,SAKI,eAACkV,GAAD,CACIjC,MAAM,4BACNkC,SAAS,0DACTC,SAAUE,EACVD,SAAUrV,EAJd,UAMI,cAAC2P,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,OACHwI,MAAM,QACNvI,KAAK,OACLmS,WAAS,EACT1X,MAAOY,EAAK2E,KACZgI,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,eAAC3C,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,cAACE,GAAA,EAAD,CAAYrI,GAAG,YAAf,sBACA,cAACsI,GAAA,EAAD,CACIqJ,UAAQ,EACRpJ,QAAQ,YACRvI,GAAG,WACHtF,MAAOY,EAAKuhB,SACZ5c,KAAK,WACLuI,MAAM,WACNP,SAAU4P,EAPd,SASKja,OAAO8sB,OAAO3B,IAAWtgB,KAAI,SAAAkiB,GAAG,OAAI,cAAChiB,GAAA,EAAD,CAAoBjO,MAAOiwB,EAA3B,SAAiCA,GAAlBA,aAMhE,cAAChgB,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACR1R,KAAK,aACLuI,MAAM,yBACNjL,KAAK,SACLyC,GAAG,aACHtF,MAAOY,EAAKkvB,WACZviB,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACR1R,KAAK,QACLuI,MAAM,cACNjL,KAAK,SACLyC,GAAG,QACHtF,MAAOY,EAAKmvB,MACZxiB,SAAUwC,Y,SHrItBse,K,gCAAAA,E,gCAAAA,E,+BAAAA,Q,SIDA6B,G,0CCWG,SAASC,GAAgB5xB,GACpC,MAA4BQ,IAAMC,UAAS,GAA3C,mBAAOoxB,EAAP,KAAeC,EAAf,KAEAtxB,IAAMyM,WAAU,WACZ6kB,EAAUpqB,EAAgBqqB,YAAY/xB,EAAMqC,SAC7C,CAACrC,EAAMqC,OAGV,IAAM2vB,EAAkBxxB,IAAMU,aAAY,WAClC2wB,EACAnqB,EAAgBuqB,gBAAgBjyB,EAAMqC,MAEtCqF,EAAgBwqB,aAAalyB,EAAMqC,MAGvCyvB,GAAU,SAAA9jB,GAAG,OAAKA,OACnB,CACC6jB,EACA7xB,EAAMqC,OAIV,OACI,cAAC0Q,GAAA,EAAD,CAAYrT,GAAI,CAACyK,QAAQ,UAAW6I,QAASgf,EAAiBnyB,MAAM,UAApE,SACKgyB,EAAS,cAAC,KAAD,IAAe,cAAC,KAAD,MCpBtB,SAASM,KACpB,MAAqCtC,KAA7BzN,EAAR,EAAQA,SAAUwN,EAAlB,EAAkBA,eAElB,EAA8CpvB,IAAMC,UAAkB,GAAtE,mBAAO8a,EAAP,KAAwBC,EAAxB,KACA,EAA0Chb,IAAMC,UAAkB,GAAlE,mBAAO8mB,EAAP,KAAsBC,EAAtB,KAGMP,EAAUzmB,IAAM8U,SAAQ,iBAAM,CAChC,CACI/F,MAAO,SACP6T,OAAQ,kBAAMoE,GAAiB,IAC/BL,KAAM,cAAC,KAAD,CAAUtnB,MAAM,aACvB,CACC0P,MAAO,YACP6T,OAAQ,kBAAM5H,GAAmB,IACjC2L,KAAM,cAAC,KAAD,CAAYtnB,MAAM,cAE7B,IAGH,OAAKoG,QAAQmc,GAGT,qCACI,cAAC5H,GAAD,CACIE,WAAY0H,EAASpb,KACrBrG,KAAM4a,EACNxZ,QAAS,kBAAMyZ,GAAmB,IAClCf,UAAWmV,IAGf,cAACsB,GAAD,CACIvwB,KAAM4mB,EACNxlB,QAAS,kBAAMylB,GAAiB,MAGpC,eAAC1I,GAAA,EAAD,CAAM/J,UAAW,EAAjB,UACI,cAAC6N,GAAA,EAAD,CACIQ,OAAQ,cAACoD,GAAD,CAAcS,QAASA,IAC/BjS,MACI,gDACaoN,EAASpb,KAClB,cAAC4qB,GAAD,CAAiBvvB,KAAM,CACnB0E,GAAIqb,EAASrb,GACbC,KAAMob,EAASpb,KACf1C,KAAMqtB,GAAQS,SACdltB,UAAWkd,EAAS8H,QAAQnjB,SAIxCoc,UAAW,qCAAGf,EAASwJ,SAAZ,MAAyBxJ,EAASyJ,eAEjD,cAACnI,GAAA,EAAD,CACI3iB,UAAU,MACVke,OAAO,MACP1Y,MAAOH,EAAa8c,QAAQd,EAAS7b,OACrCwc,IAAKX,EAASpb,OAElB,eAACqc,GAAA,EAAD,WACI,eAACjH,GAAD,CAASC,UAAQ,EAACtP,GAAIlB,EAAaC,UAAUsW,EAAS8H,QAAQnjB,IAA9D,UACKqb,EAAS8H,QAAQa,KADtB,QACmC3I,EAAS8H,QAAQW,OADpD,OACkEzI,EAAS8H,QAAQY,UAEnF,uBACA,cAACjU,GAAD,CAAaE,MAAOqL,aA3CL,KCxBpB,SAASiQ,KACpB,IAAQ3C,EAAuBG,KAAvBH,mBACAnO,EAAcC,KAAdD,UAEFhd,EAAY8L,cACZjE,EAASlK,IAEf,EAAsD1B,IAAMC,UAAkB,GAA9E,mBAAO6xB,EAAP,KAA4BC,EAA5B,KACA,EAA0B/xB,IAAMC,WAAhC,mBAAOwgB,EAAP,KAAcuR,EAAd,KAGM/hB,EAAOjQ,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,sEACP+pB,IADO,OACrBzO,EADqB,OAE3BuR,EAASvR,GAFkB,2CAG5B,CACCyO,IAIJlvB,IAAMyM,WAAU,WACZwD,MACD,CAACA,IAGJ,IAAMgiB,EAAajyB,IAAMU,YAAN,uCAAkB,WAAOmB,GAAP,SAAAsD,EAAA,+EAEvBua,GAAYjG,OAAO1V,EAAWlC,GAFP,cAG7B+J,EAAO,uBAAwB,WAC/BqE,IACA8Q,IAL6B,mBAMtB,GANsB,gCAQ7BnV,EAAO,KAAI7J,YAAa,SARK,kCAU1B,GAV0B,yDAAlB,sDAWhB,CACC6J,EACAmV,EACA9Q,EACAlM,IAIEmuB,EAAgBlyB,IAAM8U,SAAQ,WAChC,cAAO2L,QAAP,IAAOA,OAAP,EAAOA,EAAOzR,KAAI,SAAApH,GAAI,OAAI,cAACmmB,GAAD,CAEtBtwB,QAAO,eAAUmK,EAAKpB,MACtBynB,KAAI,YAAOrmB,EAAKga,SAAZ,kBAA8Bha,EAAKrB,KAFlCqB,EAAKrB,SAIf,CAACka,IAGJ,OACI,qCACI,cAACmQ,GAAD,CACIC,iBAAkBoB,EAClB9xB,KAAM2xB,EACNvwB,QAAS,kBAAMwwB,GAAuB,MAG1C,cAAC1d,GAAD,CAAWG,MAAM,iBAAjB,SACI,cAACqZ,GAAD,CAAgBC,UAAW,kBAAMiE,GAAuB,IAAxD,SACKG,MAGT,0BCpEG,SAASC,KAEpB,IAAM5S,EAAQvf,IAAM8U,SAAQ,WACxB,IAAI0K,EAAM,GAKV,OAJAA,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACgpB,GAAD,MAC1C/J,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACouB,GAAD,MAC1CnP,EAAI3X,KAAK,CAAErB,KAAM,OAAQjG,UAAW,cAAC6T,GAAD,MAE7BoL,IACR,IAGH,OACI,cAAC,GAAD,UACI,eAACtO,GAAA,EAAD,CAAMC,WAAS,EAACpD,QAAS,EAAGC,SAAS,eAArC,UACI,cAACkD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAGkW,GAAI,EAA9B,SACI,cAACvS,GAAD,CAAeQ,KAAM+J,MAEzB,eAACrO,GAAA,EAAD,CAAMtJ,MAAI,EAACuJ,WAAS,EAACpD,QAAS,EAAGG,aAAa,aAAakD,GAAI,GAAIC,GAAI,EAAGkW,GAAI,EAA9E,UACI,cAACrW,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC,GAAD,MAEJ,cAACF,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACygB,GAAD,cCPT,SAASO,KACpB,IAAQrmB,EAAS0T,KAAT1T,KAER,EAAwB/L,IAAMC,WAA9B,mBAAO4B,EAAP,KAAaiW,EAAb,KAQA,OALA9X,IAAMyM,WAAU,WACZqL,EAAQ5Q,EAAgBK,cACzB,CAACwE,IAIA,cAACsI,GAAD,CAAWG,MAAM,WAAjB,SACI,eAACgK,GAAA,EAAD,kBAEQ3c,QAFR,IAEQA,OAFR,EAEQA,EAAMmN,KAAI,SAAApH,GAAI,OA9BlC,SAA4B/F,GACxB,OAAQA,EAAKiC,MACT,KAAKqtB,GAAQS,SACT,MAAgC/vB,EAAxB6C,EAAR,EAAQA,UAAW6B,EAAnB,EAAmBA,GAAIC,EAAvB,EAAuBA,KACvB,OAAO,cAACwY,GAAA,EAAD,CAA8BvhB,QAAS,eAACme,GAAD,CAASC,UAAQ,EAACtP,GAAIlB,EAAaE,WAAW7G,EAAW6B,GAAzD,qBAAuEC,MAA3FA,EAAOD,GAErC,KAAK4qB,GAAQkB,KACT,MAA4CxwB,EAApC6C,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAY4B,EAA/B,EAA+BA,GAAIC,EAAnC,EAAmCA,KACnC,OAAO,cAACwY,GAAA,EAAD,CAA8BvhB,QAAS,eAACme,GAAD,CAASC,UAAQ,EAACtP,GAAIlB,EAAaG,OAAO9G,EAAWC,EAAY4B,GAAjE,kBAA4EC,MAAhGA,EAAOD,GAErC,QAAS,OAAO,MAoBc+rB,CAAmB1qB,MAGpB,KAAb,OAAJ/F,QAAI,IAAJA,OAAA,EAAAA,EAAMwC,SACN,cAAC2a,GAAA,EAAD,CAAc3f,MAAM,iBAAiB5B,QAAQ,yBCpClD,SAAS80B,KAAY,IAAD,EACzB3mB,EAASlK,IAEf,EAAwB1B,IAAMC,WAA9B,mBAAO4B,EAAP,KAAaiW,EAAb,KAGA9X,IAAMyM,WAAU,WACZqL,EAAQ5Q,EAAgBI,SACzB,IAGH,IAAMuP,EAAe7W,IAAMU,YAAN,uCAAkB,WAAOC,GAAP,SAAAwE,EAAA,yDACnCxE,EAAMsQ,iBACDpP,EAF8B,iDAInC,IACIqF,EAAgBI,MAAQzF,EAExB+J,EAAO,gCAA4B,WACnCkM,OAAQjE,GACV,MAAO2e,GACL5mB,EAAO4mB,EAAIzwB,YAAa,SAVO,2CAAlB,sDAYlB,CACCF,EACA+J,IAIEoF,EAAehR,IAAMU,YAAN,uCAAkB,WAAOC,GAAP,SAAAwE,EAAA,sDACnC2S,EAAQnX,EAAMkN,OAAO5M,OADc,2CAAlB,sDAElB,IAGH,OACI,cAACoT,GAAD,CAAWG,MAAM,WAAjB,SACI,eAAC,KAAD,CAAKjU,UAAU,OAAOoW,SAAUE,EAAc3X,GAAI,CAAEyK,QAAS,OAAQsE,eAAgB,WAAYrE,cAAe,UAAhH,UACI,cAAC8G,GAAA,EAAD,CACI,aAAW,gBACX8D,MAAM,gBAENmP,WAAS,EACT8O,QAAS,EACT7O,QAAS,GACTpd,KAAK,SACLvF,MAAK,iBAAEY,QAAF,IAAEA,IAAQqF,EAAgBI,aAA1B,QAAmC,GACxCkH,SAAUwC,EACVL,YAAY,gBACZzR,GAAI,CAAEuC,MAAO,OAAQgd,OAAQ,OAAQ7N,EAAG,EAAGC,QAAS,sBACpDC,WAAY,CAAE,aAAc,mBAEhC,cAACkG,GAAA,EAAD,CACIxC,MAAM,iBACN,aAAW,iBACXtV,GAAI,CAAEwzB,GAAI,MAAOla,GAAI,QACrBvB,UAAW,cAAC,KAAD,IACXnT,KAAK,SALT,yBCxDD,SAAS6uB,KACpB,OACI,cAACte,GAAD,CAAWG,MAAM,aAAjB,SACI,cAAC+U,GAAD,MCDG,SAASqJ,KACpB,OACI,eAAC1hB,GAAA,EAAD,CAAMC,WAAS,EAACpD,QAAS,EAAzB,UACI,cAACmD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAImW,GAAI,EAAvB,SACI,cAACoL,GAAD,MAEJ,eAACzhB,GAAA,EAAD,CAAMtJ,MAAI,EAACuJ,WAAS,EAACpD,QAAS,EAAGqD,GAAI,GAAImW,GAAI,EACzCrZ,aAAa,aADjB,UAGI,cAACgD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACmhB,GAAD,MAEJ,cAACrhB,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACghB,GAAD,a,SRjBRjB,K,yBAAAA,E,kBAAAA,Q,qDSQG,SAAS0B,GAAUrzB,GAC9B,IAAQyB,EAAmBzB,EAAnByB,MAAU6xB,EAAlB,aAA2BtzB,EAA3B,IAEA,OACIyB,EACI,cAAC,KAAD,aAAwB5B,MAAM,WAAcyzB,IAC1C,cAAC,KAAD,aAAY5zB,GAAI,CAAEG,MAAO,QAAayzB,ICIrC,SAASC,GAAT,GAGQ,IAAD,YAFlB5yB,EAEkB,EAFlBA,KACAoB,EACkB,EADlBA,QAEA,EAA6B0gB,KAArBd,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,WACNf,EAAiBI,KAAjBJ,aAER,EAAwB5gB,WAAiC,IAAzD,mBAAO6B,EAAP,KAAaiW,EAAb,KAGM9G,EAAehR,eAAkB,SAACW,GACpC,IAAIM,EAAmCN,EAAMkN,OAAO5M,MAEpD,OAAQN,EAAMkN,OAAOrH,MACjB,IAAK,OACDvF,EAAQqqB,OAAOrqB,GACf,MACJ,IAAK,UACDA,GAASN,EAAMkN,OAAOkK,QACtB,MACJ,QACI9W,EAAQ9B,OAAO8B,GAIvB6W,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAOvF,SAE1B,IAGGmd,EAAqBpe,eAAkB,SAACW,GAC1C,IAAIM,EAAyBN,EAAMkN,OAAO5M,MAChB,eAAtBN,EAAMkN,OAAOrH,OAAuBvF,EAAQ9B,OAAO8B,IAEvDN,EAAMkN,QAAUiK,GAAQ,SAACtK,GAAD,mBAAC,eAClBA,GADiB,mBAEnB7M,EAAMkN,OAAOrH,KAAOvF,SAE1B,IAGG4V,EAAe7W,cAAA,sBAAkB,sBAAAmF,EAAA,sEACzBwc,EAAW9f,GADc,kCAE/BN,IAF+B,2CAIpC,CACCM,EACA8f,EACApgB,IAIJ,OACI,cAAC2V,GAAD,CACI/W,KAAMA,EACNoB,QAASA,EACT,aAAW,wBACXrC,GAAI,CACAyP,SAAU,SALlB,SAQI,eAACb,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACI,cAAC0hB,GAAD,CAAkB1pB,MAAOob,EAAKpb,QAC9B,cAACwY,GAAA,EAAD,IAEA,eAAC9H,GAAD,CACIjC,MAAM,cACNkC,SAAS,wEACTC,SAAUE,EACVD,SAAUrV,EAJd,UAOI,cAAC2P,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,OACHwI,MAAM,QACNvI,KAAK,OACLmS,WAAS,EACT1X,MAAK,UAAEY,EAAK2E,YAAP,QAAe2a,EAAK3a,KACzBgI,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,eAAC3C,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,cAACE,GAAA,EAAD,CAAYrI,GAAG,YAAf,sBACA,cAACsI,GAAA,EAAD,CACIC,QAAQ,YACRvI,GAAG,WACHtF,MAAK,UAAEY,EAAKuhB,gBAAP,QAAmBjC,EAAKiC,SAC7B5c,KAAK,WACLuI,MAAM,WACNP,SAAU4P,EANd,SAQKja,OAAO8sB,OAAO3B,IAAWtgB,KAAI,SAAAkiB,GAAG,OAAI,cAAChiB,GAAA,EAAD,CAAoBjO,MAAOiwB,EAA3B,SAAiCA,GAAlBA,aAMhE,cAAChgB,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACR1R,KAAK,aACLuI,MAAM,yBACNjL,KAAK,SACLyC,GAAG,aACHtF,MAAK,UAAEY,EAAKkvB,kBAAP,QAAqB5P,EAAK4P,WAC/BviB,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,EAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACR1R,KAAK,QACLuI,MAAM,cACNjL,KAAK,SACLyC,GAAG,QACHtF,MAAK,UAAEY,EAAKmvB,aAAP,QAAgB7P,EAAK6P,MAC1BxiB,SAAUwC,MAIlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,eAAC3C,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,cAACE,GAAA,EAAD,CAAYrI,GAAG,kBAAf,qBACA,cAACsI,GAAA,EAAD,CACIC,QAAQ,kBACRtI,KAAK,aACLvF,MAAK,UAAEY,EAAK8C,kBAAP,QAAqBwc,EAAKS,SAASrb,GACxCwI,MAAM,UACNP,SAAU4P,EALd,SAOKwC,EAAa5R,KAAI,gBAAGxI,EAAH,EAAGA,KAAMD,EAAT,EAASA,GAAT,OAAkB,eAAC2I,GAAA,EAAD,CAAqBjO,MAAOsF,EAA5B,yBAAgDC,EAAhD,MAAeA,aAK/D,cAAC0K,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACgH,GAAA,EAAD,CACIC,eAAe,QACfC,QAAS,cAACC,GAAA,EAAD,CAAQhS,GAAG,eAAeC,KAAK,UACpCsK,WAAY,CAAE,aAAc,cAC5BtC,SAAUwC,EACV+G,UAAS,UAAElW,EAAKmxB,eAAP,QAAkB7R,EAAK6R,WAEpCjkB,MAAM,6CClKnB,SAASkkB,GAAczzB,GAClC,IAAQsiB,EAAkBG,KAAlBH,cAER,OACI,cAAC5K,GAAD,CACI/W,KAAMX,EAAMW,KACZoB,QAAS/B,EAAM+B,QACf,aAAW,6BACXrC,GAAI,CACAyP,SAAU,SALlB,SAQI,cAACqW,GAAD,CACIU,SAAS,+CACTC,SAAS,uEACTP,OAAQtD,EACRvgB,QAAS/B,EAAM+B,YCVhB,SAAS2xB,GAAT,GAES,IADpB/R,EACmB,EADnBA,KAAMgS,EACa,EADbA,UAEErS,EAAoBE,KAApBF,gBACR,EAAgD9gB,IAAMC,UAAkB,GAAxE,mBAAOmzB,EAAP,KAAyBC,EAAzB,KAEMC,EAAYtzB,IAAM8U,SAAQ,WAC5B,MAAO,CACH,CACI/F,MAAO,yBACP9N,MAAOkgB,EAAK4P,YACb,CACChiB,MAAO,cACP9N,MAAsB,IAAfkgB,EAAK6P,MAAc,SAAW7P,EAAK6P,OAC3C,CACCjiB,MAAO,yBACP9N,MAAOkgB,EAAK4P,YACb,CACChiB,MAAO,UACP9N,MAAO,eAAC2a,GAAD,CAASC,UAAQ,EAACtP,GAAIuU,EAAgBK,EAAKS,SAASrb,IAApD,cAA2D4a,EAAKS,SAASpb,KAAzE,QACR,CACCuI,MAAO,kBACP9N,MAAO,cAAC4xB,GAAD,CAAW5xB,OAAQkgB,EAAKO,YAChC,CACC3S,MAAO,WACP9N,MAAOkgB,EAAK5Y,QACR,cAACgrB,GAAA,EAAD,CAAMxkB,MAAOoS,EAAK5Y,QAASmS,SAAUyY,IACnC,cAAC5gB,GAAA,EAAD,CAAYzT,KAAK,QACf0T,QAAS,kBAAM6gB,GAAoB,IACnCn0B,GAAI,CAAE0R,EAAG,OAFX,SAIE,cAAC,KAAD,OAET,CACC7B,MAAO,8BACP9N,MAAO,cAAC4xB,GAAD,CAAW5xB,OAAQkgB,EAAK6R,cAGxC,CACC7R,EACAgS,EACArS,IAIE0S,EAAexzB,IAAM8U,SAAQ,WAC/B,OAAOwe,EAAUtkB,KAAI,WAAmB4F,GAAnB,IAAG7F,EAAH,EAAGA,MAAO9N,EAAV,EAAUA,MAAV,OACjB,eAACkR,GAAA,EAAD,CAAUC,OAAK,EAAf,UACI,cAACE,GAAA,EAAD,CAAWpT,GAAI,CAAEG,MAAO,kBAAoBqT,MAAM,OAAlD,SAA0D3D,IAC1D,cAACuD,GAAA,EAAD,CAAWpT,GAAI,CAAEG,MAAO,eAAgBo0B,WAAY,QAAU/gB,MAAM,OAApE,SAA4EzR,MAF3D2T,QAK1B,CAAC0e,IAGJ,OACI,qCACI,cAAC,GAAD,CACInzB,KAAMizB,EACN7xB,QAAS,kBAAM8xB,GAAoB,MAGvC,cAACtf,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAO,aAAW,kBAAkBlV,KAAK,QAAzC,UACI,cAACmV,GAAA,EAAD,CAAW/U,GAAI,CAAEyK,QAAS,QAA1B,SACI,eAACwI,GAAA,EAAD,WACI,cAACG,GAAA,EAAD,CAAWI,MAAM,OAAjB,4CACA,cAACJ,GAAA,EAAD,CAAWI,MAAM,OAAjB,uBAGR,cAACwB,GAAA,EAAD,UACKsf,YClFV,SAASE,KACtB,OACE,cAACngB,EAAA,EAAD,CAAKrU,GAAI,CACPyK,QAAS,QADX,SAGE,cAACQ,EAAA,EAAD,MCWS,SAASwpB,GAAsBn0B,GAAoC,IAAD,EACvEoM,EAASlK,IACPif,EAAaK,KAAbL,SACR,EAAwB3gB,IAAMC,SAAgC,CAC1DuU,MAAO,GACPzS,YAAa,GACbgH,aAAc,IAAIL,KAClBO,WAAY,IAAIP,KAChB9D,OAAM,UAAEpF,EAAMoF,cAAR,QAAkB,IAL5B,mBAAO/C,EAAP,KAAaiW,EAAb,KASM9G,EAAehR,IAAMU,aAAY,SAACC,GACpCmX,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAO7F,EAAMkN,OAAO5M,aAEvC,IAGG4V,EAAe7W,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,+EAEzBgD,EAAmBogB,UAAU1mB,GAFJ,OAG/B+J,EAAO,wCAAoC,WAC3CpM,EAAMoX,WAJyB,gDAM/BhL,EAAO,KAAI7J,YAAa,SANO,yDAQpC,CAACF,EAAM+J,EAAQpM,IAGlB,OACI,eAACiX,GAAD,CACIjC,MAAM,uBACNkC,SAAS,qGACTC,SAAUE,EACVD,SAAUpX,EAAMoX,SAJpB,UAMI,cAAC1F,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIzD,MAAM,wBACN1D,WAAY,CAAE0D,MAAO,yBACrBmE,WAAS,EACTT,UAAQ,EACRxJ,WAAS,EAETkV,QAAS,EACT7U,MAAM,aACNxI,GAAG,8BACHC,KAAK,QACLvF,MAAOY,EAAK2S,MACZhG,SAAUwC,MAGlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTiV,WAAS,EACTC,QAAS,GACT7U,MAAM,OACNxI,GAAG,8BACHC,KAAK,cACLvF,MAAOY,EAAKE,YACZyM,SAAUwC,MAGlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SACI,cAAC0E,GAAA,EAAD,CACIC,QAAS,IAAIpb,KACbqG,MAAM,gBACNgV,YAAY,mBACZ9iB,MAAOY,EAAKkH,aACZyF,SAAU,SAACvN,GAAD,OAAgB6W,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,IAAezE,aAAc9H,QAClE+iB,YAAa,SAACpE,GAAD,OAAiB,cAAC3H,GAAA,EAAD,aAAW/Y,GAAI,CAAEuC,MAAO,SAAcme,SAG5E,cAAC1O,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SACI,cAAC0E,GAAA,EAAD,CACIC,QAAS,IAAIpb,KACbqG,MAAM,SACNgV,YAAY,mBACZ9iB,MAAOY,EAAKoH,WACZuF,SAAU,SAACvN,GAAD,OAAgB6W,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,IAAevE,WAAYhI,QAChE+iB,YAAa,SAACpE,GAAD,OAAY,cAAC3H,GAAA,EAAD,aAAW/Y,GAAI,CAAEuC,MAAO,SAAcme,SAGvE,cAAC1O,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,eAAC3C,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,cAACE,GAAA,EAAD,CAAYrI,GAAG,oBAAf,kBACA,cAACsI,GAAA,EAAD,CACIqJ,UAAQ,EACRpJ,QAAQ,kBACRtI,KAAK,aACLvF,MAAOY,EAAK+C,OACZmK,MAAM,UACNP,SAAU,SAAC8B,GAAD,OAAcwH,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,IAAe5I,OAAQzF,OAAOmR,EAAIzC,OAAO5M,aANhF,SAQK0f,EAAS3R,KAAI,gBAAGxI,EAAH,EAAGA,KAAMD,EAAT,EAASA,GAAT,OAAkB,eAAC2I,GAAA,EAAD,CAAqBjO,MAAOsF,EAA5B,sBAA6CC,EAA7C,MAAeA,gBC7GxD,SAASotB,GAAuBp0B,GAC3C,OACI,cAAC0X,GAAD,CACI/W,KAAMX,EAAMW,KACZ,aAAW,+BACXoB,QAAS/B,EAAM+B,QAHnB,SAKI,cAACoyB,GAAD,CACI/uB,OAAQpF,EAAMoF,OACdgS,SAAUpX,EAAM+B,YCAjB,SAASsyB,KACpB,MAA4C5R,KAApCd,EAAR,EAAQA,KAAMU,EAAd,EAAcA,WAAYG,EAA1B,EAA0BA,cAE1B,EAA8ChiB,IAAMC,UAAkB,GAAtE,mBAAO8a,EAAP,KAAwBC,EAAxB,KACA,EAA0Chb,IAAMC,UAAkB,GAAlE,mBAAO8mB,EAAP,KAAsBC,EAAtB,KACA,EAAoEhnB,IAAMC,UAAkB,GAA5F,mBAAO6zB,EAAP,KAAmCC,EAAnC,KAGMtN,EAAUzmB,IAAM8U,SAAQ,iBAAM,CAChC,CACI/F,MAAO,aACP4X,KAAM,cAAC,KAAD,CAAetnB,MAAM,YAC3BujB,OAAQ,kBAAMmR,GAA8B,KAC7C,CACChlB,MAAO,SACP6T,OAAQ,kBAAMoE,GAAiB,IAC/BL,KAAM,cAAC,KAAD,CAAUtnB,MAAM,aACvB,CACC0P,MAAO,YACP6T,OAAQ,kBAAM5H,GAAmB,IACjC2L,KAAM,cAAC,KAAD,CAAYtnB,MAAM,cAE7B,IAGH,OACKoG,QAAQ0b,GACL,qCACI,cAACnH,GAAD,CACIE,WAAYiH,EAAK3a,KACjBrG,KAAM4a,EACNxZ,QAAS,kBAAMyZ,GAAmB,IAClCf,UAAW4H,IAGf,cAACkR,GAAD,CACI5yB,KAAM4mB,EACNxlB,QAAS,kBAAMylB,GAAiB,MAGpC,cAAC4M,GAAD,CACIhvB,OAAQuc,GAAQA,EAAK5a,GACrBpG,KAAM2zB,EACNvyB,QAAS,kBAAMwyB,GAA8B,MAGjD,eAACzV,GAAA,EAAD,CAAM/J,UAAW,EAAjB,UACI,cAAC6N,GAAA,EAAD,CACIQ,OAAQ,cAACoD,GAAD,CAAcS,QAASA,IAC/BjS,MACI,qCACK2M,EAAK3a,KACN,cAAC4qB,GAAD,CAAiBvvB,KAAM,CACnB0E,GAAI4a,EAAK5a,GACTC,KAAM2a,EAAK3a,KACX1C,KAAMqtB,GAAQkB,KACd3tB,UAAWyc,EAAKS,SAAS8H,QACzB/kB,WAAYwc,EAAKS,SAASrb,SAItCoc,UAAW,mCACNxB,EAAKiC,aAGd,cAACF,GAAA,EAAD,CACI3iB,UAAU,MACVke,OAAO,MACP1Y,MAAOH,EAAa8c,QAAQvB,EAAKpb,OACjCwc,IAAKpB,EAAK3a,OAEd,eAACqc,GAAA,EAAD,WACI,cAACqQ,GAAD,CAAe/R,KAAMA,EAAMgS,UAAWnR,IACtC,uBACA,cAAC3L,GAAD,CAAaE,MAAO4K,aAhDnB,cAACuS,GAAD,IClCV,SAASM,KAEpB,IAAMzU,EAAQvf,IAAM8U,SAAQ,WACxB,IAAI0K,EAAM,GAKV,OAJAA,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACgpB,GAAD,MAC1C/J,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACouB,GAAD,MAC1CnP,EAAI3X,KAAK,CAAErB,KAAM,OAAQjG,UAAW,cAAC6T,GAAD,MAE7BoL,IACR,IAGH,OACI,cAAC0B,GAAD,UACI,eAAChQ,GAAA,EAAD,CAAMC,WAAS,EAACpD,QAAS,EAAGC,SAAS,eAArC,UACI,cAACkD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAGkW,GAAI,EAA9B,SACI,cAACvS,GAAD,CAAeQ,KAAM+J,MAEzB,cAACrO,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAGkW,GAAI,EAA9B,SACI,cAACsM,GAAD,W,ICjBdI,G,4JAEF,WACI,OAAOjyB,KAAK2D,IAAI,qB,oBAGpB,SAAc9D,GACV,OAAOG,KAAKgF,MAAM,kBAAmBnF,O,GAPfO,GAWf,OAAI6xB,GChBNC,GAAuBl0B,IAAMF,cAAc,MAQzC,SAASq0B,GAAwB30B,GAC5C,IAAMoM,EAASlK,IAEf,EAAgC1B,IAAMC,WAAtC,mBAAOm0B,EAAP,KAAiBC,EAAjB,KAEMpkB,EAAOjQ,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,+EAEJ8uB,GAAgB7a,SAFZ,OAEjBtT,EAFiB,OAGvBuuB,EAAYvuB,EAAKjE,MAHM,gDAKvB+J,EAAO,KAAI7J,YAAa,SALD,yDAO5B,CAAC6J,IAGJ5L,IAAMyM,WAAU,WACZwD,MACD,CAACA,IAGJ,IAAMqkB,EAAiBt0B,IAAMU,YAAN,uCAAkB,WAAOmB,GAAP,SAAAsD,EAAA,+EAE3B8uB,GAAgBvsB,OAAO7F,GAFI,cAGjCwyB,GAAY,SAAA7mB,GAAG,kCACRA,GACA3L,MAEP+J,EAAO,yCAAqC,WAPX,mBAQ1B,GAR0B,gCAUjCA,EAAO,KAAI7J,YAAa,SAVS,kCAY9B,GAZ8B,yDAAlB,sDAapB,CAAC6J,IAGJ,OAAKwoB,EAGD,cAACF,GAAgBlzB,SAAjB,CAA0BC,MAAO,CAC7BmzB,WACAE,kBAFJ,SAIK90B,EAAME,WAPO,K,kCChCpB60B,GAAiC,CACnC,CACIhuB,GAAI,SACJiuB,SAAS,EACTC,gBAAgB,EAChB1lB,MAAO,UAEX,CACIxI,GAAI,kBACJiuB,SAAS,EACTC,gBAAgB,EAChB1lB,MAAO,qBAEX,CACIxI,GAAI,QACJiuB,SAAS,EACTC,gBAAgB,EAChB1lB,MAAO,uBAEX,CACIxI,GAAI,kBACJiuB,SAAS,EACTC,gBAAgB,EAChB1lB,MAAO,uBAEX,CACIxI,GAAI,UACJiuB,SAAS,EACTC,gBAAgB,EAChB1lB,MAAO,4BAcA,SAAS2lB,GAAkBl1B,GACtC,IAAQm1B,EAAkCn1B,EAAlCm1B,MAAOC,EAA2Bp1B,EAA3Bo1B,QAASC,EAAkBr1B,EAAlBq1B,cAKxB,OACI,cAAC5gB,GAAA,EAAD,UACI,cAAC9B,GAAA,EAAD,UACKoiB,GAAUvlB,KAAI,SAAC8lB,GAAD,OACX,cAACxiB,GAAA,EAAD,CAEIsS,QAAS,SACTmQ,cAAeH,IAAYE,EAASvuB,IAAKouB,EAH7C,SAKI,eAACK,GAAA,EAAD,CACIr2B,OAAQi2B,IAAYE,EAASvuB,GAC7BsP,UAAW+e,IAAYE,EAASvuB,GAAKouB,EAAQ,MAC7CniB,SAhBGyiB,EAgBwBH,EAASvuB,GAhBI,SAAC5F,GAC7Dk0B,EAAcl0B,EAAOs0B,KAYL,UAKKH,EAAS/lB,MACT6lB,IAAYE,EAASvuB,GAClB,cAACgN,EAAA,EAAD,CAAKhT,UAAU,OAAOrB,GAAIg2B,KAA1B,SACe,SAAVP,EAAmB,oBAAsB,qBAE9C,SAdHG,EAASvuB,IATR,IAAC0uB,SCnD/B,SAASE,GAAwBhwB,EAAM4C,EAAM6sB,GACzC,OAAI7sB,EAAE6sB,GAAWzvB,EAAEyvB,IACP,EAER7sB,EAAE6sB,GAAWzvB,EAAEyvB,GACR,EAEJ,EAKX,SAASQ,GACLT,EACAC,GAKA,MAAiB,SAAVD,EACD,SAACxvB,EAAG4C,GAAJ,OAAUotB,GAAqBhwB,EAAG4C,EAAG6sB,IACrC,SAACzvB,EAAG4C,GAAJ,OAAWotB,GAAqBhwB,EAAG4C,EAAG6sB,IAKjC,SAASS,KACpB,IAAQnJ,EAAeE,KAAfF,WAER,EAAsClsB,WAAe,GAArD,mBAAOs1B,EAAP,KAAoBC,EAApB,KACA,EAAwBv1B,WAAe,GAAvC,mBAAOuO,EAAP,KAAainB,EAAb,KAEA,EAA0Bx1B,WAAsB,OAAhD,mBAAO20B,EAAP,KAAcc,EAAd,KACA,EAA8Bz1B,WAAuC,mBAArE,mBAAO40B,EAAP,KAAgBc,EAAhB,KAsBA,OACI,qCACI,cAAC3hB,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CACI9U,GAAI,CAAEy2B,SAAU,KAChB,kBAAgB,sBAChB72B,KAAK,SAHT,UAKI,cAAC41B,GAAD,CACIC,MAAOA,EACPC,QAASA,EACTC,cA9BM,SACtBl0B,EACAs0B,GAGAQ,EADcb,IAAYK,GAAsB,QAAVN,EACrB,OAAS,OAC1Be,EAAWT,MA2BC,cAAC/gB,GAAA,EAAD,UACKgY,EAAW0J,UAAU5vB,QAAQ8B,KAAKstB,GAAcT,EAAOC,IACnD5uB,MAAMuI,EAAO+mB,EAAa/mB,EAAO+mB,EAAcA,GAC/CtmB,KAAI,SAACkD,EAAK0C,GAAN,OACD,eAACzC,GAAA,EAAD,CACIC,OAAK,EADT,UAII,cAACE,GAAA,EAAD,UAAaJ,EAAIpP,SACjB,cAACwP,GAAA,EAAD,UAAYJ,EAAI2jB,kBAChB,cAACvjB,GAAA,EAAD,UAAaJ,EAAI+K,QACjB,cAAC3K,GAAA,EAAD,UAAaK,KAAKmjB,MAA4B,IAAtB5jB,EAAI6jB,iBAA0B,MACtD,cAACzjB,GAAA,EAAD,UAAaK,KAAKmjB,MAAoB,IAAd5jB,EAAI8jB,SAAkB,QANzCphB,aAY7B,cAACqhB,GAAA,EAAD,CACIC,mBAAoB,CAAC,EAAG,GAAI,IAC5B31B,UAAU,MACV8N,MAAO6d,EAAW0J,UAAUvxB,OAC5BixB,YAAaA,EACb/mB,KAAMA,EACN4nB,aAhDa,SAACx1B,EAAgBy1B,GACtCZ,EAAQY,IAgDAC,oBA7CoB,SAAC11B,GAC7B40B,EAAee,SAAS31B,EAAMkN,OAAO5M,MAAO,KAC5Cu0B,EAAQ,SC1DD,SAASe,KACvB,OACC,cAAChjB,EAAA,EAAD,CAAKrU,GAAI,CAAEuC,MAAO,QAAlB,SACC,eAAC,GAAD,WACC,cAAC6Y,GAAD,CACC9F,MAAM,0BACNkC,SAAS,0QAIV,cAAC2e,GAAD,SCKJ,SAASmB,GAAUh3B,GACf,OACI,eAAC+T,EAAA,EAAD,CAAKmf,GAAI,EAAT,UACI,cAAC1oB,EAAA,EAAD,CAAYjL,QAAQ,QAApB,SACKS,EAAM0K,OAEX,cAAC+N,GAAA,EAAD,CACIC,UAAQ,EACRpU,KAAK,SACL0P,OAAO,QACPhN,KAAMhH,EAAMgH,KACZD,GAAE,UAAK/G,EAAMuP,MAAX,SACFA,MAAOvP,EAAMuP,MACb9N,MAAOzB,EAAMyB,MACbuN,SAAUhP,EAAMgP,cAQjB,SAASioB,KAAgB,IAAD,YACnC,ECxCOz2B,IAAM2B,WAAWuyB,IDwChBE,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,eAElB,EAAwBt0B,IAAMC,SAA+B,IAA7D,mBAAO4B,EAAP,KAAaiW,EAAb,KAEMjB,EAAe7W,IAAMU,YAAN,uCAAkB,WAAOC,GAAP,SAAAwE,EAAA,6DACnCxE,EAAMsQ,iBAD6B,SAE7BqjB,EAAezyB,GAFc,OAGnCiW,EAAQ,IAH2B,2CAAlB,sDAIlB,CACCjW,EACAyyB,IAIEtjB,EAAehR,IAAMU,aAAY,SAACC,GACpCmX,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAOrH,OAAOwB,EAAMkN,OAAO5M,cAE9C,IAGH,OACI,+BACI,eAAC6M,GAAA,EAAD,CAAOC,QAAS,EAAGxN,UAAU,OAAOoW,SAAUE,EAA9C,UACI,cAAC7M,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,KAAnC,wBAIA,iCACI,cAACiL,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,KAAK0c,GAAI,EAA5C,wCAGA,cAAC+a,GAAD,CACItsB,KAAM,6EAAuC,0CAAvC,4DACN1D,KAAK,eACLuI,MAAM,eACN9N,MAAK,UAAEY,EAAK60B,oBAAP,QAAuBtC,EAASsC,aACrCloB,SAAUwC,OAIlB,iCACI,cAAChH,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,KAAK0c,GAAI,EAA5C,8BAGA,cAAC+a,GAAD,CACItsB,KAAM,yJACF,cAAC0R,GAAD,CAASC,UAAQ,EAACtP,GAAInC,GAAMQ,OAA5B,mCACJpE,KAAK,oBACLuI,MAAM,WACN9N,MAAK,UAAEY,EAAK80B,yBAAP,QAA4BvC,EAASuC,kBAC1CnoB,SAAUwC,OAIlB,eAACE,GAAA,EAAD,CAAMC,WAAS,EAACylB,WAAY,EAA5B,UACI,cAAC1lB,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACpH,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,KAAnC,wCAIJ,cAACmS,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACmlB,GAAD,CACItsB,KAAM,2EAAqC,2CAArC,wEAEN1D,KAAK,qBACLuI,MAAM,YACN9N,MAAK,UAAEY,EAAKg1B,0BAAP,QAA6BzC,EAASyC,mBAC3CroB,SAAUwC,MAGlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACmlB,GAAD,CACItsB,KAAM,0EAAoC,2CAApC,wEAEN1D,KAAK,qBACLuI,MAAM,YACN9N,MAAK,UAAEY,EAAKi1B,0BAAP,QAA6B1C,EAAS0C,mBAC3CtoB,SAAUwC,SAKtB,eAACE,GAAA,EAAD,CAAMC,WAAS,EAACylB,WAAY,EAA5B,UACI,cAAC1lB,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACpH,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,KAAnC,2CAIJ,cAACmS,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACmlB,GAAD,CACItsB,KAAM,8DAAc,yCAAd,wIAEN1D,KAAK,qBACLuI,MAAM,sBACN9N,MAAK,UAAEY,EAAKk1B,0BAAP,QAA6B3C,EAAS2C,mBAC3CvoB,SAAUwC,MAGlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACmlB,GAAD,CACItsB,KAAM,8DAAc,yCAAd,oDACN1D,KAAK,iBACLuI,MAAM,sBACN9N,MAAK,UAAEY,EAAKm1B,sBAAP,QAAyB5C,EAAS4C,eACvCxoB,SAAUwC,SAItB,eAAClD,GAAA,EAAD,CAAO+H,UAAU,MAAM5H,eAAe,eAAe8I,GAAI,IAAzD,UACI,cAACC,GAAA,EAAD,CACI3X,MAAM,QADV,8BAKA,cAAC2X,GAAA,EAAD,CACI3X,MAAM,UACNyE,KAAK,SAFT,oCE5JL,SAASmzB,KACpB,OACI,eAACnpB,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACI,iCACI,cAAC/D,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,KAAKM,MAAM,eAA9C,kCAGA,eAAC2K,EAAA,EAAD,CAAYjL,QAAQ,QAAQM,MAAM,iBAAiB0X,GAAG,MAAtD,gHAC8E,uBAD9E,sGAMJ,cAAC0f,GAAD,OCTG,SAASS,KAGpB,IAAM3X,EAAQvf,IAAM8U,SAAQ,WACxB,MAAO,CACH,CAAEtO,KAAM,aAAcjG,UAAW,cAAE02B,GAAF,KACjC,CAAEzwB,KAAM,OAAQjG,UAAW,cAAC6T,GAAD,KAC3B,CAAE5N,KAAM,YAAajG,UAAW,cAACg2B,GAAD,QAErC,IAGH,OACI,cAAC,GAAD,UACI,cAACvhB,GAAD,CAAeQ,KAAM+J,MCb1B,IAAM4X,GAAmBn3B,IAAMF,cAAc,MAQrC,SAASs3B,GAAoB53B,GACxC,IAAMuE,EAAY8L,cACZjE,EAASlK,IACT21B,EAAU5X,KAEhB,EAAwBzf,IAAMC,WAA9B,mBAAO8L,EAAP,KAAaC,EAAb,KAGAhM,IAAMqhB,iBAAgB,WAClB,IAAIzB,EAA+B,OAArB7b,EAAUc,QAAmBwyB,EAAQtrB,KAAQ,CAAElH,OAAQwyB,EAAQtrB,KAAKxF,GAAGzB,YAAef,EACpG+C,EAAYW,QAAQmY,KACrB,CACC7b,EACAszB,IAIJ,IAAMpnB,EAAOjQ,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,+EAEJ2B,EAAY+iB,gBAFR,OAEjB/jB,EAFiB,OAGvBkG,EAAQlG,EAAKjE,MAHU,uGAQ5B,CAACkC,IAGJ/D,IAAMyM,WAAU,WACZwD,MACD,CACCA,IAIJ,IAAMqnB,EAAat3B,IAAMU,YAAN,sBAAkB,8BAAAyE,EAAA,+EAEvB2B,EAAYyS,SAFW,cAIzBqJ,EAAS,kBAAuB,MAEhCyU,IAAW,UAAAA,EAAQtrB,YAAR,eAAcxF,OAAd,OAAqBwF,QAArB,IAAqBA,OAArB,EAAqBA,EAAMxF,IACtC8wB,EAAQzqB,SAERgW,EAAS,kBAAM,cAAC,IAAD,CAAUrW,GAAInC,GAAMU,SAGvCc,EAAO,4CAA8B,UAAWgX,GAZnB,mBAatB,GAbsB,gCAe7BhX,EAAO,KAAI7J,YAAa,SAfK,kCAiB1B,GAjB0B,yDAkBlC,CACC6J,EACAyrB,EAFD,OAGCtrB,QAHD,IAGCA,OAHD,EAGCA,EAAMxF,KAIJgxB,EAAav3B,IAAMU,YAAN,uCAAkB,WAAOmB,GAAP,SAAAsD,EAAA,+EAEnB2B,EAAYY,OAAO7F,GAFA,kCAGzBmK,GAAQ,SAAAwB,GACJ,OAAO,2BAAKA,GAAQ3L,MAGxB+J,EAAO,6CAAoC,WAPlB,iCAStB,GATsB,gCAW7BA,EAAO,KAAI7J,YAAa,SAXK,kCAa1B,GAb0B,yDAAlB,sDAchB,CAAC6J,IAGJ,OAAKG,EAGD,cAACorB,GAAYn2B,SAAb,CAAsBC,MAAO,CACzB8K,OACAurB,aACAC,cAHJ,SAKK/3B,EAAME,WARG,KCzFP,SAAS83B,KACpB,OAAOx3B,IAAM2B,WAAWw1B,I,8CCUrB,SAASM,GAAchW,EAAqBmB,GAC/C,OAAQA,EAAO3gB,YACX,KAAK,IACL,KAAK,IACD,MAAO,CACHuH,SAAS,EACT5J,QAAS,gDAEjB,KAAK,IACL,KAAK,IACL,KAAK,IAoBL,QACI,MAAO,CACH4J,SAAS,EACT5J,QAASgjB,EAAOhP,SAlBxB,KAAK,IACD,MAAO,CACHpK,SAAS,EACT5J,QAAS,sCAEjB,KAAK,IACD,MAAO,CACH4J,SAAS,EACT5J,QAAS,gCAEjB,IAAK,aACD,MAAO,CACH4J,SAAS,EACT5J,QAAS,kCCvBV,SAAS83B,GAAiBl4B,GACrC,IARkByB,EAQlB,EAAiCjB,IAAM23B,WAAWF,GAAe,CAC7DjuB,QAAS,KACT5J,QAASJ,EAAM0K,OAFnB,mBAAO0tB,EAAP,KAAeC,EAAf,KAKMhhB,EAAY,uCAAG,4BAAA1R,EAAA,6DACZ3F,EAAM6F,OACPwyB,EAAe,CAAE51B,WAAY,eAFhB,kBAKM6E,EAAYgxB,YAAYt4B,EAAM6F,OALpC,OAKPS,EALO,OAMb+xB,EAAe/xB,GANF,gDASb+xB,EAAe,CACX51B,WAAY,KAAI0K,KAChBiH,QAAS,KAAI7R,cAXJ,yDAAH,qDAgBlB,OACI,eAAC,KAAD,CACIxB,UAAU,MACVoJ,QAAQ,OAFZ,UAII,cAACqN,GAAA,EAAD,CAAQ9X,GAAI,CACR2R,QAAS,aACT,UAAW,CACPA,QAAS,gBAGb2B,QAASqE,EANb,SAOI,cAAC,KAAD,CAAUP,SAAS,YAGvB,cAAC,KAAD,CACIpX,GAAI,CACAyK,QAAS,OACTwE,WAAY,SACZqK,GAAI,GAJZ,SAOI,cAACxO,EAAA,EAAD,CACIjL,QAAQ,QACRwB,UAAU,IACVlB,OAtDE4B,EAsDkB22B,EAAOpuB,QArD7B,OAAVvI,EAAuB,WACb,IAAVA,EAAuB,QACpB,SAgDK,SAKK22B,EAAOh4B,eC9Db,SAASm4B,GAASv4B,GAC7B,OACI,qCACI,cAACwK,EAAA,EAAD,CAAYjL,QAAQ,KAAKG,GAAI,CAAE6X,GAAI,GAAnC,SACKvX,EAAMgV,QAEX,cAACxK,EAAA,EAAD,CAAYjL,QAAQ,QAAQG,GAAI,CAAE6X,GAAI,GAAtC,SACKvX,EAAM0K,OAEV1K,EAAME,YCFJ,SAASs4B,GAAKx4B,GAAmB,IAAD,IACrCoM,EAASlK,IAEf,EAAwB1B,IAAMC,SAA6B,CACvDoF,MAAK,oBAAE5C,aAAaC,QAAQ,gBAAvB,aAAE,EAA+BoC,kBAAjC,QAA+C,GACpDmzB,YAAa,GACbtrB,KAAM,KAHV,mBAAO9K,EAAP,KAAaiW,EAAb,KAOMtJ,EAAWxO,IAAMU,aAAY,SAACw3B,GAChCpgB,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,mBAAgB0qB,EAAErqB,OAAOrH,KAAO0xB,EAAErqB,OAAO5M,aACrD,IAGG4V,EAAe7W,IAAMU,YAAN,uCAAkB,WAAOC,GAAP,eAAAwE,EAAA,6DACnCxE,EAAMsQ,iBAD6B,kBAIzBnK,EAAYqxB,eAAet2B,GAJF,OAM/B+J,EAAO,oCAA2B,WAC9B,kBAAM6E,YAAW,WAEb,OADIjR,EAAMya,WAAWza,EAAMya,YACpB,cAAC,IAAD,CAAU1N,GAAInC,GAAMI,UAC5B,QAVwB,gDAa3B5K,EAAU,KAAImC,YACD,MAAb,KAAI4K,OAAc/M,EAAU,qCAEhCgM,EAAOhM,EAAS,SAhBe,yDAAlB,sDAkBlB,CACCiC,EACA+J,EACApM,IAGJ,OACI,eAAC,KAAD,CAAKe,UAAU,OAAOoW,SAAUE,EAAc3X,GAAI,CAAE6X,GAAI,GAAxD,UACI,eAACghB,GAAD,CACIvjB,MAAM,mBACNtK,KAAK,qFAFT,UAII,cAAC+N,GAAA,EAAD,CACIzE,OAAO,SACP0E,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,QACHwI,MAAM,cACNvI,KAAK,QACL4xB,aAAa,QACbzf,WAAS,EACT1X,MAAOY,EAAKwD,MACZmJ,SAAUA,IAEd,cAACkpB,GAAD,CACIxtB,KAAK,yCACL7E,MAAOxD,EAAKwD,WAGpB,eAAC0yB,GAAD,CACIvjB,MAAM,iCACNtK,KAAK,mGAFT,UAII,cAAC+N,GAAA,EAAD,CACIzE,OAAO,SACP0E,UAAQ,EACRxJ,WAAS,EACTlI,KAAK,cACLuI,MAAM,aACNjL,KAAK,WACLyC,GAAG,WACHtF,MAAOY,EAAKo2B,YACZzpB,SAAUA,EACV4pB,aAAa,qBAEjB,cAACngB,GAAA,EAAD,CACIzE,OAAO,SACP0E,UAAQ,EACRxJ,WAAS,EACTlI,KAAK,OACLuI,MAAM,MACNjL,KAAK,OACLyC,GAAG,OACHtF,MAAOY,EAAK8K,KACZ6B,SAAUA,EACV4pB,aAAa,kBAGrB,cAACphB,GAAA,EAAD,CACIlT,KAAK,SACL4K,WAAS,EACT3P,QAAQ,YACRG,GAAI,CAAE6X,GAAI,EAAG0E,GAAI,GAJrB,sCAQA,cAACvK,GAAA,EAAD,CAAMC,WAAS,EAAClD,eAAe,WAA/B,SACI,cAACiD,GAAA,EAAD,CAAMtJ,MAAI,EAAV,SACI,cAACgU,GAAD,CAASrP,GAAInC,GAAMI,MAAnB,4DC3GL,SAAS6tB,GAAT,GAGQ,IAFnBl4B,EAEkB,EAFlBA,KACAoB,EACkB,EADlBA,QAEQqL,EAAW6S,KAAX7S,OAEFoL,EAAQhY,IAAMU,aAAY,WAC5Ba,MAED,CAACA,IAEE0Y,EAAYja,IAAMU,aAAY,WAChCkM,MACD,CAACA,IAEJ,OACI,cAACsK,GAAD,CACI/W,KAAMA,EACNoB,QAASyW,EACT9Y,GAAI,CACAyP,SAAU,SAJlB,SAOI,cAAC,GAAD,CAAoBsL,UAAWA,MCZ5B,SAASqe,GAAT,GAIQ,IAAD,IAHlBn4B,EAGkB,EAHlBA,KACAoB,EAEkB,EAFlBA,QACAwK,EACkB,EADlBA,KAEQwrB,EAAeC,KAAfD,WAER,EAAwBv3B,IAAMC,SAA2B,IAAzD,mBAAO4B,EAAP,KAAaiW,EAAb,KAGME,EAAQhY,IAAMU,aAAY,WAC5Ba,IACAuW,EAAQ,MACT,CACCvW,IAIEoV,EAAW3W,IAAMU,YAAN,sBAAkB,sBAAAyE,EAAA,sEACrBoyB,EAAW11B,GADU,kCAE3BmW,IAF2B,2CAIhC,CACCnW,EACAmW,EACAuf,IAIEvmB,EAAehR,IAAMU,aAAY,SAACC,GACpCmX,GAAQ,SAACtK,GAAD,mBAAC,eACFA,GADC,mBAEH7M,EAAMkN,OAAOrH,KAAO7F,EAAMkN,OAAO5M,aAEvC,IAGH,OACI,cAACiW,GAAD,CACI/W,KAAMA,EACNoB,QAASyW,EACT9Y,GAAI,CACAyP,SAAU,SAJlB,SAOI,eAACb,GAAA,EAAD,CAAOC,QAAS,EAAhB,UAEI,cAAC0hB,GAAD,CAAkB1pB,MAAOgG,EAAKhG,QAE9B,cAACwY,GAAA,EAAD,IAEA,eAAC9H,GAAD,CACIjC,MAAM,0BACNkC,SAAS,oIACTC,SAAUA,EACVC,SAAUoB,EAJd,UAMI,cAAC9G,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,OACHwI,MAAM,YACNvI,KAAK,OACLmS,WAAS,EACT1X,MAAK,UAAEY,EAAK2E,YAAP,QAAeuF,EAAKvF,KACzBgI,SAAUwC,MAGlB,cAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,UACHwI,MAAM,WACNvI,KAAK,UACLvF,MAAK,UAAEY,EAAK2gB,eAAP,QAAkBzW,EAAKyW,QAC5BhU,SAAUwC,cC7EvB,SAASunB,KACpB,MAA6Bf,KAArBzrB,EAAR,EAAQA,KAAMurB,EAAd,EAAcA,WAEd,EAAkCt3B,IAAMC,UAAS,GAAjD,mBAAOu4B,EAAP,KAAkBC,EAAlB,KACA,EAAkCz4B,IAAMC,UAAS,GAAjD,mBAAOy4B,EAAP,KAAkBC,EAAlB,KACA,EAAsC34B,IAAMC,UAAS,GAArD,mBAAO24B,EAAP,KAAoBC,EAApB,KAGMpS,EAAUzmB,IAAM8U,SAAQ,iBAAM,CAChC,CACI/F,MAAO,SACP6T,OAAQ,kBAAM6V,GAAa,IAC3B9R,KAAM,cAAC,KAAD,CAAUtnB,MAAM,aACvB,CACC0P,MAAO,wBACP6T,OAAQ,kBAAM+V,GAAa,IAC3BhS,KAAM,cAAC,KAAD,CAActnB,MAAM,aAC3B,CACC0P,MAAO,kBACP6T,OAAQ,kBAAMiW,GAAe,IAC7BlS,KAAM,cAAC,KAAD,CAAYtnB,MAAM,cAE7B,IAGH,OACI,qCAEI,cAAC2a,GAAD,CACIE,WAAU,UAAKnO,EAAK1G,OACpBlF,KAAMy4B,EACNr3B,QAAS,kBAAMs3B,GAAe,IAC9B5e,UAAWqd,IAGf,cAAC,GAAD,CACIvrB,KAAMA,EACN5L,KAAMq4B,EACNj3B,QAAS,kBAAMk3B,GAAa,MAGhC,cAAC,GAAD,CACIt4B,KAAMu4B,EACNn3B,QAAS,kBAAMo3B,GAAa,MAIhC,eAACra,GAAA,EAAD,CAAM/J,UAAW,EAAjB,UACI,cAAC6N,GAAA,EAAD,CACIQ,OAAQ,cAACoD,GAAD,CAAcS,QAASA,IAC/BjS,MAAO,qCAAGzI,EAAKvF,KAAR,IAAeuF,EAAKyW,WAC3BG,UAAW,cAAClP,GAAA,EAAD,CAAMkI,KAAI,iBAAY5P,EAAK1G,OAA3B,SACN0G,EAAK1G,UAGd,cAAC6d,GAAA,EAAD,CACI3iB,UAAU,MACVke,OAAO,MACP1Y,MAAOH,EAAa8c,QAAQ3W,EAAKhG,OACjCwc,IAAKxW,EAAK1G,QAEd,eAACwd,GAAA,EAAD,WACI,eAAC7Y,EAAA,EAAD,CAAY3K,MAAM,iBAAiBN,QAAQ,YAA3C,+BACuBuS,GAAYvF,EAAK+W,cAAc,uBADtD,uBAEoB,cAAClH,GAAD,CAASrP,GAAInC,GAAMQ,OAAnB,SAA4BmB,EAAK8L,OAAOrR,UAE5D,uBACA,cAAC6P,GAAD,CAAaE,MAAOxK,aClFzB,SAAS+sB,KACpB,OACI,cAACzM,GAAD,UACI,cAAC,GAAD,MAMZ,SAASqB,KACL,IAAQxB,EAAeE,KAAfF,WAER,OACI,qCACI,eAACI,GAAD,CAAcC,aAAW,EAAC/X,MAAM,mBAAhC,UACI,cAACkY,GAAD,CACIhe,WAAS,EACT8F,MAAM,oDACN3S,KAAMqqB,EAAW6M,cACjBvL,KAAK,WACLP,EAAG,CACC,CAAEle,MAAO,6BAAoBzG,IAAK,wBAG1C,cAACokB,GAAD,CACIhe,WAAS,EACT8F,MAAM,gCACN3S,KAAMqqB,EAAW6M,cACjBvL,KAAK,WACLP,EAAG,CACC,CAAEle,MAAO,6BAAyBzG,IAAK,yBACvC,CAAEyG,MAAO,6BAAyBzG,IAAK,2BAG/C,cAACokB,GAAD,CACIhe,WAAS,EACT8F,MAAM,0CACN3S,KAAMqqB,EAAW6M,cACjBvL,KAAK,WACLP,EAAG,CACC,CAAEle,MAAO,sBAAkBzG,IAAK,wBAK5C,cAAComB,GAAD,CAAqB7sB,KAAMqqB,EAAW0C,SAEtC,cAACH,GAAD,CAAsB5sB,KAAMqqB,EAAW2C,aCxCpC,SAASmK,KAGpB,IAAMzZ,EAAQvf,IAAM8U,SAAQ,WACxB,IAAI0K,EAAW,GAKf,OAJAA,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACgpB,GAAD,MAC1C/J,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACu4B,GAAD,MAC1CtZ,EAAI3X,KAAK,CAAErB,KAAM,OAAQjG,UAAW,cAAC6T,GAAD,MAE7BoL,IACR,IAGH,OACI,cAAC,GAAD,UACI,eAACtO,GAAA,EAAD,CAAMC,WAAS,EAACpD,QAAS,EAAGC,SAAS,eAArC,UACI,cAACkD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAGkW,GAAI,EAA9B,SACI,cAACvS,GAAD,CAAeQ,KAAM+J,MAEzB,cAACrO,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAGkW,GAAI,EAA9B,SACI,cAACgR,GAAD,WCxBb,IAAMU,GAAoBj5B,IAAMF,cAAc,MAOtC,SAASo5B,GAAqB15B,GACzC,IAAMoM,EAASlK,IACf,EAAwC2L,KAAhChF,EAAR,EAAQA,YAAa0E,EAArB,EAAqBA,eAErB,EAA0B/M,IAAMC,WAAhC,mBAAO+c,EAAP,KAAcmc,EAAd,KAGMlpB,EAAOjQ,IAAMU,YAAN,sBAAkB,4BAAAyE,EAAA,+EAEJ2B,EAAYwW,SAASjV,GAFjB,OAEjBvC,EAFiB,OAGvBiH,GAAe,SAAAS,GAAG,wCACXA,GADW,IAEdc,WAAU,UAAExI,EAAKoK,kBAAP,aAAE,EAAiB5B,gBAEjC6qB,EAASrzB,EAAKjE,MAPS,gDASvB+J,EAAO,KAAI7J,YAAa,SACxBo3B,EAAS,IAVc,yDAc5B,CACCvtB,EACAvD,EAAYuF,YACZvF,EAAYoF,YACZpF,EAAY6f,OACZ7f,EAAYkV,QACZlV,EAAY+wB,YAShB,OALAp5B,IAAMyM,WAAU,WACZwD,MACD,CAACA,IAGC+M,EAGD,cAACic,GAAaj4B,SAAd,CAAuBC,MAAO,CAC1B+b,SADJ,SAGKxd,EAAME,WANI,KC7CR,SAAS25B,KAAa,IAAD,EAChC,EAAwChsB,KAAhCN,EAAR,EAAQA,eAAgB1E,EAAxB,EAAwBA,YAGlB2I,EAAehR,IAAMU,aAAY,SAACC,GACpC,IAAIM,EAAmCN,EAAMkN,OAAO5M,MAEpD,OAAQN,EAAMkN,OAAOrH,MACjB,IAAK,UACL,IAAK,YACDvF,EAAQwE,QAAQ9E,EAAMkN,OAAOkK,SAQrChL,GAAe,SAACS,GAAD,mBAAC,eACTA,GADQ,mBAEV7M,EAAMkN,OAAOrH,KAAOvF,SAE1B,CAAC8L,IAGJ,OACI,eAACmE,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAClB,GAAD,CACIpB,MAAM,WACNvI,KAAK,SACLvF,MAAK,UAAEoH,EAAY6f,cAAd,QAAwB,GAC7B1Z,SAAUwC,MAGlB,eAACE,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAIC,GAAI,EAAG1H,QAAQ,OAAOsE,eAAe,QAAQD,SAAS,OAAO3O,MAAM,iBAAtF,UACI,cAAC+Y,GAAA,EAAD,CACIC,eAAe,QACfC,QAAS,cAACC,GAAA,EAAD,CAAQhS,GAAG,2BAAsBC,KAAK,YAC3CsK,WAAY,CAAE,aAAc,4BAC5BtC,SAAUwC,EACV+G,QAAS1P,EAAY+wB,YAEzBrqB,MAAM,kBAEV,cAACqJ,GAAA,EAAD,CACIC,eAAe,QACfC,QAAS,cAACC,GAAA,EAAD,CAAQhS,GAAG,kCAAwBC,KAAK,UAC7CsK,WAAY,CAAE,aAAc,mCAC5BtC,SAAUwC,EACV+G,QAAS1P,EAAYkV,UAEzBxO,MAAM,8BCzCX,SAASuqB,GAAT,GAAoD,IAA5BvtB,EAA2B,EAA3BA,KACnC,OACI,eAACoG,GAAA,EAAD,WACI,cAACG,GAAA,EAAD,CAAWI,MAAM,OAAjB,SACI,eAACiM,GAAA,EAAD,CAAUpe,UAAU,MAApB,UACI,cAACmoB,GAAA,EAAD,CACIlU,MAAOzI,EAAK1G,MACZ,aAAY0G,EAAK1G,MAFrB,SAII,cAACuW,GAAD,CAASrP,GAAIlB,EAAaI,OAAOM,EAAKxF,IAAtC,SACI,cAAC+b,GAAA,EAAD,CAAQG,IAAK7c,EAAa8c,QAAQ3W,EAAKhG,aAG/C,cAACiZ,GAAA,EAAD,CACIvhB,QAAS,eAACme,GAAD,CAASrP,GAAIlB,EAAaI,OAAOM,EAAKxF,IAAtC,UACJwF,EAAKvF,KADD,IACQuF,EAAKyW,WAGtB7kB,UAAWoO,EAAK1G,aAI5B,cAACiN,GAAA,EAAD,CAAWpT,GAAI,CACXuC,MAAO,eADX,SAGK6P,GAAYvF,EAAK+W,mBC9BnB,SAASyW,KACpB,IAAQvc,ECPDhd,IAAM2B,WAAWs3B,IDOhBjc,MAER,OACI,cAACjJ,GAAA,EAAD,CAAgBxT,UAAWgT,IAA3B,SACI,eAACS,GAAA,EAAD,CAAO,aAAW,oBAAoBlV,KAAK,QAA3C,UACI,cAACmV,GAAA,EAAD,UACI,eAAC9B,GAAA,EAAD,WACI,cAACG,GAAA,EAAD,+BACA,cAACA,GAAA,EAAD,uCAGR,eAAC4B,GAAA,EAAD,WAEyB,IAAjB8I,EAAM3Y,QAAgB,cAAC8N,GAAA,EAAD,UAClB,cAACG,GAAA,EAAD,CAAWY,QAAS,GAApB,SACI,cAAClJ,EAAA,EAAD,CAAYmK,UAAU,SAAtB,4EAOR6I,EAAMhO,KAAI,SAACpH,EAAMgN,GAAP,OAAiB,cAAC0kB,GAAD,CAA0BvtB,KAAMnE,GAAbgN,cE5BvD,SAAS4kB,KACpB,OACI,eAAC1rB,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACI,cAACuM,GAAD,CACI9F,MAAM,6BACNkC,SAAS,qEAGb,cAAC2iB,GAAD,IAEA,cAACE,GAAD,IAEA,cAACjsB,GAAD,OCfG,SAASmsB,KACpB,OACI,cAACpN,GAAD,UACI,cAAC,GAAD,MAMZ,SAASqB,KACL,IAAQxB,EAAeE,KAAfF,WAER,OACI,eAACI,GAAD,CAAcC,aAAW,EAAC/X,MAAM,kCAAhC,UACI,cAACkY,GAAD,CACIhe,UAAWwd,EAAWlP,MAAM3Y,QAAU,EACtCmQ,MAAM,iDACN3S,KAAMqqB,EAAWlP,MACjBwQ,KAAK,QACLP,EAAG,CACC,CAAEle,MAAO,6BAAoBzG,IAAK,wBAG1C,cAACokB,GAAD,CACIhe,UAAWwd,EAAWlP,MAAM3Y,QAAU,EACtCmQ,MAAM,+CACN3S,KAAMqqB,EAAWlP,MACjBwQ,KAAK,QACLP,EAAG,CACC,CAAEle,MAAO,sBAAkBzG,IAAK,qBAGxC,cAACokB,GAAD,CACIhe,WAAS,EACT8F,MAAM,gCACN3S,KAAMqqB,EAAWlP,MACjBwQ,KAAK,QACLP,EAAG,CACC,CAAEle,MAAO,6BAAyBzG,IAAK,yBACvC,CAAEyG,MAAO,6BAAyBzG,IAAK,8BClC5C,SAASoxB,KAEpB,IAAMna,EAAQvf,IAAM8U,SAAQ,WACxB,IAAI0K,EAAM,GAIV,OAHAA,EAAI3X,KAAK,CAAErB,KAAM,mBAAejG,UAAW,cAACi5B,GAAD,MAC3Cha,EAAI3X,KAAK,CAAErB,KAAM,aAAcjG,UAAW,cAACk5B,GAAD,MAEnCja,IACR,IAGH,OACI,cAAC,GAAD,CACIhZ,KAAK,qBACLxI,QAAS,CACLuf,SAAS,EACT6b,WAAW,EACXlR,OAAQ,GACRta,YAAa,GACbH,YAAa,GAPrB,SAUI,cAAC,GAAD,UACI,cAACuH,GAAD,CAAeQ,KAAM+J,QCpBtB,SAASoa,KAEpB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOp1B,KAAM6F,GAAMgB,KAAM7K,UAAWyzB,KACpC,cAAC,IAAD,CAAOzvB,KAAM6F,GAAMe,SAAU5K,UAAW4xB,KACxC,cAAC,IAAD,CAAO5tB,KAAM6F,GAAMc,QAAS3K,UAAWiuB,KAEvC,cAAC,IAAD,CAAOjqB,KAAM6F,GAAMS,SAAUtK,UAAW22B,KACxC,cAAC,IAAD,CAAO3yB,KAAM6F,GAAMQ,OAAQrK,UAAW+e,KACtC,cAAC,IAAD,CAAO/a,KAAM6F,GAAMW,KAAMxK,UAAWy4B,KACpC,cAAC,IAAD,CAAOz0B,KAAM6F,GAAMU,MAAOvK,UAAWm5B,KACrC,cAAC,IAAD,CAAOn1B,KAAM6F,GAAMG,KAAMhK,UAAWqyB,KAEpC,cAAC,IAAD,CAAOruB,KAAM6F,GAAMa,eAAnB,oBAGA,cAAC,IAAD,CAAO1G,KAAM6F,GAAMG,KAAO,KAA1B,SACI,cAAC,IAAD,CAAUgC,GAAInC,GAAMG,YCpBrB,SAASqvB,GAASp6B,GAC7B,OACI,cAACq6B,EAAA,EAAD,CAAWt5B,UAAU,MAAMoO,SAAS,KAApC,SACI,eAAC,KAAD,CACIzP,GAAI,CACA46B,UAAW,EACXnwB,QAAS,OACTC,cAAe,SACfuE,WAAY,SACZpE,gBAAiB,mBACjB6a,QAAS,OACTzmB,aAAc,QARtB,UAWI,cAACmkB,GAAA,EAAD,CAAQpjB,GAAI,CAAEuxB,EAAG,EAAG5f,QAAS,gBAA7B,SACKrR,EAAMmnB,OAEX,cAAC3c,EAAA,EAAD,CAAYzJ,UAAU,KAAKxB,QAAQ,KAAnC,SACKS,EAAMgV,QAEVhV,EAAME,c,yBCjBR,SAASs4B,KAAQ,IAAD,IACrBpsB,EAASlK,IAEf,EAAwB1B,WAA+B,CACnDqF,MAAK,oBAAE5C,aAAaC,QAAQ,gBAAvB,aAAE,EAA+BoC,kBAAjC,QAA+C,GACpDQ,SAAU,GACVqH,KAAM,KAHV,mBAAO9K,EAAP,KAAaiW,EAAb,KAMMjB,EAAe7W,cAAA,uCAAkB,WAAOW,GAAP,eAAAwE,EAAA,6DACnCxE,EAAMsQ,iBAD6B,kBAGzBnK,EAAYizB,SAASl4B,GAHI,OAI/B+J,EAAO,sCAAkC,WACrC,kBAAM6E,YAAW,kBAAM,cAAC,IAAD,CAAUlE,GAAInC,GAAMI,UAAW,QAL3B,gDAQ3B5K,EAAU,KAAImC,YACD,MAAb,KAAI4K,OAAc/M,EAAU,qCAEhCgM,EAAOhM,EAAS,SAXe,yDAAlB,sDAalB,CAACgM,EAAQ/J,IAEN2M,EAAWxO,eAAkB,SAACk4B,GAChCpgB,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,mBAAgB0qB,EAAErqB,OAAOrH,KAAO0xB,EAAErqB,OAAO5M,aACrD,IAEH,OACI,eAACsS,EAAA,EAAD,CAAKhT,UAAU,OAAOoW,SAAUE,EAAc3X,GAAI,CAAE6X,GAAI,GAAxD,UACI,cAACkB,GAAA,EAAD,CACIzE,OAAO,SACP0E,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,QACHwI,MAAM,eACNvI,KAAK,QACL4xB,aAAa,QACbzf,WAAS,EACT1X,MAAOY,EAAKwD,MACZmJ,SAAUA,IAEd,cAACyJ,GAAA,EAAD,CACIzE,OAAO,SACP0E,UAAQ,EACRxJ,WAAS,EACTlI,KAAK,WACLuI,MAAM,aACNjL,KAAK,WACLyC,GAAG,WACHtF,MAAOY,EAAKyD,SACZkJ,SAAUA,EACV4pB,aAAa,qBAEjB,cAACngB,GAAA,EAAD,CACIzE,OAAO,SACP0E,UAAQ,EACRxJ,WAAS,EACTlI,KAAK,OACLuI,MAAM,MACNjL,KAAK,OACLyC,GAAG,OACHtF,MAAOY,EAAK8K,KACZ6B,SAAUA,EACV4pB,aAAa,eAEjB,cAACV,GAAD,CACIryB,MAAOxD,EAAKwD,MACZ6E,KAAK,8EAET,cAAC8M,GAAA,EAAD,CACIlT,KAAK,SACL4K,WAAS,EACT3P,QAAQ,YACRG,GAAI,CAAE6X,GAAI,EAAG0E,GAAI,GAJrB,qBAQA,cAACvK,GAAA,EAAD,CAAMC,WAAS,EAAClD,eAAe,WAA/B,SACI,cAACiD,GAAA,EAAD,CAAMtJ,MAAI,EAAV,SACI,cAAC6L,GAAA,EAAD,CAAMlT,UAAWy5B,KAAiBztB,GAAInC,GAAMI,MAAOzL,QAAQ,QAA3D,2DCzFL,SAASk7B,KACpB,OACI,cAACL,GAAD,CACAplB,MAAM,kBACNmS,KAAM,cAAC,KAAD,IAFN,SAIA,cAAC,GAAD,MCIO,SAASqR,KAAQ,IAAD,IACnBtrB,EAAU+S,KAAV/S,MAER,EAAgC1M,YAAwB,GAAxD,mBAAOk6B,EAAP,KAAiBC,EAAjB,KACA,EAAwBn6B,WAA8B,CAClDqF,MAAK,oBAAE5C,aAAaC,QAAQ,gBAAvB,aAAE,EAA+BoC,kBAAjC,QAA+C,GACpDQ,SAAU,KAFd,mBAAOzD,EAAP,KAAaiW,EAAb,KAMMtJ,EAAWxO,eAAkB,SAACk4B,GAChCpgB,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,mBAAgB0qB,EAAErqB,OAAOrH,KAAO0xB,EAAErqB,OAAO5M,aACrD,IAGG4V,EAAe7W,eAAkB,SAACW,GACpCA,EAAMsQ,iBAEFipB,GAAUz3B,aAAa8C,QAAQ,QAAS1D,EAAKwD,OACjDqH,EAAM7K,KACP,CAACA,EAAM6K,EAAOwtB,IAGjB,OACI,eAAC3mB,EAAA,EAAD,CAAKhT,UAAU,OAAOoW,SAAUE,EAAc3X,GAAI,CAAE6X,GAAI,GAAxD,UACI,cAACkB,GAAA,EAAD,CACIzE,OAAO,SACP0E,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,QACHwI,MAAM,cACNvI,KAAK,QACL4xB,aAAa,QACbzf,WAAS,EACT1X,MAAOY,EAAKwD,MACZmJ,SAAUA,IAEd,cAACyJ,GAAA,EAAD,CACIzE,OAAO,SACP0E,UAAQ,EACRxJ,WAAS,EACTlI,KAAK,WACLuI,MAAM,aACNjL,KAAK,WACLyC,GAAG,WACHtF,MAAOY,EAAKyD,SACZkJ,SAAUA,EACV4pB,aAAa,qBAEjB,cAAChgB,GAAA,EAAD,CACIE,QAAS,cAACwG,GAAA,EAAD,CACLtQ,SAAU,kBAAM2rB,GAAaD,IAC7B1zB,KAAK,WACLuR,QAASmiB,EACT76B,MAAM,YAEV0P,MAAM,yBAEV,cAACiI,GAAA,EAAD,CACIlT,KAAK,SACL4K,WAAS,EACT3P,QAAQ,YACRG,GAAI,CAAE6X,GAAI,EAAG0E,GAAI,GAJrB,qBAQA,eAACvK,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,IAAE,EAAb,SACI,cAACqC,GAAA,EAAD,CAAMlT,UAAWy5B,KAAiBztB,GAAInC,GAAMO,gBAAiB5L,QAAQ,QAArE,iDAIJ,cAACmS,GAAA,EAAD,CAAMtJ,MAAI,EAAV,SACI,cAAC6L,GAAA,EAAD,CAAMlT,UAAWy5B,KAAiBztB,GAAInC,GAAMK,SAAU1L,QAAQ,QAA9D,qCAIJ,cAACmS,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACqC,GAAA,EAAD,CAAMlT,UAAWy5B,KAAiBztB,GAAInC,GAAMM,SAAU3L,QAAQ,QAA9D,mC,yBCvFL,SAASq7B,KACpB,OACI,cAACR,GAAD,CACIplB,MAAM,YACNmS,KAAM,cAAC,KAAD,IAFV,SAII,cAAC,GAAD,M,yBCEG,SAASqR,KACpB,IAAMpsB,EAASlK,IAEf,EAAwB1B,WAAiC,CACrDqF,MAAO,GACPC,SAAU,GACVkB,KAAM,GACNgc,QAAS,KAJb,mBAAO3gB,EAAP,KAAaiW,EAAb,KAQMtJ,EAAWxO,eAAkB,SAACk4B,GAChCpgB,GAAQ,SAAAtK,GAAG,kCAAUA,GAAV,mBAAgB0qB,EAAErqB,OAAOrH,KAAO0xB,EAAErqB,OAAO5M,aACrD,IAGG4V,EAAe7W,cAAA,uCAAkB,WAAOW,GAAP,eAAAwE,EAAA,6DACnCxE,EAAMsQ,iBAD6B,kBAGzBnK,EAAYuzB,SAASx4B,GAHI,OAI/B+J,EAAO,iBAAkB,WAAW,kBAAM,cAAC,IAAD,CAAUW,GAAInC,GAAMM,cAJ/B,gDAM3B9K,EAAU,KAAImC,YAGlB6J,EAAOhM,EAAS,SATe,yDAAlB,sDAWlB,CAACiC,EAAM+J,IAGV,OACI,eAAC2H,EAAA,EAAD,CAAKhT,UAAU,OAAOoW,SAAUE,EAAc3X,GAAI,CAAE6X,GAAI,GAAxD,UACI,eAAC7F,GAAA,EAAD,CAAMC,WAAS,EAACpD,QAAS,EAAzB,UACI,cAACmD,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SACI,cAAClH,GAAA,EAAD,CACImgB,aAAa,aACb5xB,KAAK,OACL0R,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,OACHwI,MAAM,YACN4J,WAAS,EACT1X,MAAOY,EAAK2E,KACZgI,SAAUA,MAGlB,cAAC0C,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAI+N,GAAI,EAAvB,SACI,cAAClH,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,UACHwI,MAAM,WACNvI,KAAK,UACL4xB,aAAa,cACbn3B,MAAOY,EAAK2gB,QACZhU,SAAUA,MAGlB,cAAC0C,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTnI,GAAG,QACHwI,MAAM,cACNvI,KAAK,QACL4xB,aAAa,QACbn3B,MAAOY,EAAKwD,MACZmJ,SAAUA,MAGlB,cAAC0C,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAAC6G,GAAA,EAAD,CACIC,UAAQ,EACRxJ,WAAS,EACTlI,KAAK,WACLuI,MAAM,aACNjL,KAAK,WACLyC,GAAG,WACH6xB,aAAa,eACbn3B,MAAOY,EAAKyD,SACZkJ,SAAUA,MAGlB,cAAC0C,GAAA,EAAD,CAAMtJ,MAAI,EAACwJ,GAAI,GAAf,SACI,cAACgH,GAAA,EAAD,CACIE,QAAS,cAACwG,GAAA,EAAD,CAAU5G,UAAQ,EAACjX,MAAM,mBAAmB5B,MAAM,YAC3D0P,MAAM,gCAIlB,cAACiI,GAAA,EAAD,CACIlT,KAAK,SACL4K,WAAS,EACT3P,QAAQ,YACRG,GAAI,CAAE6X,GAAI,EAAG0E,GAAI,GAJrB,uCAQA,cAACvK,GAAA,EAAD,CAAMC,WAAS,EAAClD,eAAe,WAA/B,SACI,cAACiD,GAAA,EAAD,CAAMtJ,MAAI,EAAV,SACI,cAAC6L,GAAA,EAAD,CAAMlT,UAAWy5B,KAAiBztB,GAAInC,GAAMI,MAAOzL,QAAQ,QAA3D,2DC7GL,SAASu7B,KACpB,OACI,cAACV,GAAD,CACIplB,MAAM,cACNmS,KAAM,cAAC,KAAD,IAFV,SAII,cAAC,GAAD,M,yBCLG,SAAS4T,KACpB,OACI,cAACX,GAAD,CACIplB,MAAM,oBACNmS,KAAM,cAAC,KAAD,IAFV,SAII,cAAC,GAAD,MCVG,SAAS6T,KACpB,OACI,oDCMO,SAASC,KAEpB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOl2B,KAAM6F,GAAMI,MAAOjK,UAAW65B,KACrC,cAAC,IAAD,CAAO71B,KAAM6F,GAAMK,SAAUlK,UAAW+5B,KACxC,cAAC,IAAD,CAAO/1B,KAAM6F,GAAMM,SAAUnK,UAAWm6B,KACxC,cAAC,IAAD,CAAOn2B,KAAM6F,GAAMO,gBAAiBpK,UAAWg6B,KAC/C,cAAC,IAAD,CAAOh2B,KAAM6F,GAAMC,OAAQ9J,UAAWi6B,KAEtC,cAAC,IAAD,CAAOj2B,KAAK,IAAZ,SACI,cAAC,IAAD,CAAUgI,GAAInC,GAAMC,cCPpC,IAAMswB,GAAW,CACbxY,UAAW,OACXyC,QAAS,aAIE,SAAS9O,KACpB,OACI,cAAC,KAAD,CAAK5W,GAAIy7B,GAAT,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOp2B,KAAM6F,GAAMG,KAAMhK,UAAWo5B,KACpC,cAAC,IAAD,CAAOp1B,KAAM6F,GAAMC,OAAQ9J,UAAWk6B,KACtC,cAAC,IAAD,CAAOl2B,KAAM6F,GAAME,IAAnB,kDAGA,cAAC,IAAD,CAAO/F,KAAK,IAAZ,SACI,cAAC,IAAD,CAAUgI,GAAInC,GAAMC,gBC3BzB,SAASuwB,KACpB,OACI,cAAC5wB,EAAA,EAAD,CACI0I,MAAM,SACNxT,GAAI,CACA6K,gBAAiB,eACjB6a,QAAS,EACTvlB,MAAO,iBALf,0CCOR,IAAMw7B,GAA8B,CAChC,CACI,CAAEr0B,KAAM,MAAOynB,KAAM7jB,GAAME,KAC3B,CAAE9D,KAAM,YAAaynB,KAAM7jB,GAAMI,OACjC,CAAEhE,KAAM,cAAeynB,KAAM7jB,GAAMK,UACnC,CAAEjE,KAAM,kBAAmBynB,KAAM7jB,GAAMM,WAG3C,CACI,CAAElE,KAAM,OAAQynB,KAAM7jB,GAAMG,MAC5B,CAAE/D,KAAM,SAAUynB,KAAM7jB,GAAMY,YAC9B,CAAExE,KAAM,SAAUynB,KAAM7jB,GAAMa,kBAMvB,SAAS6vB,KAEpB,IAAMC,EAAQ/6B,IAAM8U,SAAQ,kBACxB+lB,GAAU7rB,KAAI,SAACgsB,EAAMpmB,GAAP,OAAiB,cAAC1D,GAAA,EAAD,CAAkBtJ,MAAI,EAAtB,SAC3B,cAAC4W,GAAA,EAAD,UACKwc,EAAKhsB,KAAI,gBAAGxI,EAAH,EAAGA,KAAMynB,EAAT,EAASA,KAAT,OAAoB,cAACtP,GAAA,EAAD,UAC1B,cAAC/C,GAAD,CACIrP,GAAI0hB,EACJpS,UAAQ,EACR3c,GAAI,CAAEG,MAAO,sBAHjB,SAKKmH,KANoCA,SAFXoO,QAYhC,IAEd,OACI,cAAC1D,GAAA,EAAD,CACIhS,GAAI,CACA6K,gBAAiB,gBAGrBoH,WAAS,EACT0E,UAAU,MACV5H,eAAe,eACfE,WAAW,aARf,SAUK4sB,IC7CE,SAASE,KAEpB,OACI,cAAC,KAAD,UACI,eAAC/pB,GAAA,EAAD,CAAMC,WAAS,EACX0E,UAAU,SACV1H,WAAW,UAFf,UAII,cAAC+C,GAAA,EAAD,CAAMtJ,MAAI,EAAV,SACI,cAACkzB,GAAD,MAEJ,cAAC5pB,GAAA,EAAD,CAAMtJ,MAAI,EAAV,SACI,cAACgzB,GAAD,W,gICFdM,GAA8B,CAClC,CACEnsB,MAAO,uBACP4M,KAAMvR,GAAMG,KACZoc,KAAMwU,MACL,CACDpsB,MAAO,aACP4M,KAAMvR,GAAMY,WACZ2b,KAAMyU,OAKJC,GAA4B,CAChCtsB,MAAO,uBACP4M,KAAMvR,GAAMS,SACZ8b,KAAM2U,MAIFC,GAA8B,CAClCxsB,MAAO,qBACP4M,KAAMvR,GAAMQ,OACZ+b,KAAM6U,MAIFC,GAA6B,CACjC1sB,MAAO,mBACP4M,KAAMvR,GAAMU,MACZ6b,KAAM+U,MAIO,SAASC,GAAen8B,GAErC,IAAMo4B,EAAS53B,IAAM8U,SAAQ,WAC3B,IAAIkmB,EAAO72B,OAAOyV,OAAO,GAAIshB,IAM7B,OAJAF,EAAKnzB,KAAK4zB,IACVT,EAAKnzB,KAAK0zB,IACVP,EAAKnzB,KAAKwzB,IAEHL,IACN,IAGH,OACE,cAACxc,GAAA,EAAD,UAEIoZ,EAAO5oB,KAAI,SAACpH,EAAMU,GAAP,OACT,eAACszB,GAAA,EAAD,CAA0Br7B,UAAU,KAApC,UACE,cAACse,GAAA,EAAD,CAAcxf,MAAM,UAApB,SACG,cAACuI,EAAK+e,KAAN,CAAWtnB,MAAM,cAEpB,cAAC2f,GAAA,EAAD,CAAcvhB,QAAS,cAACme,GAAD,CAASvc,MAAM,eAAekN,GAAI3E,EAAK+T,KAAvC,SAA8C/T,EAAKmH,YAJvDzG,QChEhB,SAASuzB,GAAT,GAGO,IAFlBn8B,EAEiB,EAFjBA,SACAo8B,EACiB,EADjBA,WAEA,OACI,cAACvoB,EAAA,EAAD,CACIrU,GAAI,CAAEuC,MAAO,KACbsT,KAAK,eACLvC,QAASspB,EACTC,UAAWD,EAJf,SAMKp8B,ICTE,SAASs8B,GAAT,GAEM,IADjBjwB,EACgB,EADhBA,KAEA,OACI,eAAC,KAAD,CACIyG,QAAS,SAACyM,GAAD,OAAQA,EAAGC,mBACpBhgB,GAAI,CACAyK,QAAS,OACTC,cAAe,SACfuE,WAAY,SACZyW,QAAS,EACTvlB,MAAO,gBAPf,UAUI,cAACijB,GAAA,EAAD,CACIC,IAAG,iBAAKxW,QAAL,IAAKA,OAAL,EAAKA,EAAMvF,KAAX,mBAAmBuF,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMyW,SAC5BC,IAAK7c,EAAa8c,QAAb,OAAqB3W,QAArB,IAAqBA,OAArB,EAAqBA,EAAMhG,OAChC7G,GAAI,CACAuC,MAAO,QACPgd,OAAQ,QACRnI,SAAU,OACVS,GAAI,EACJ0E,GAAI,KAGZ,eAACzR,EAAA,EAAD,kBACK+B,QADL,IACKA,OADL,EACKA,EAAMvF,KADX,cACuBuF,QADvB,IACuBA,OADvB,EACuBA,EAAMyW,WAE7B,cAACxY,EAAA,EAAD,UACI,cAACyJ,GAAA,EAAD,CAAMkI,KAAI,wBAAY5P,QAAZ,IAAYA,OAAZ,EAAYA,EAAM1G,OAA5B,gBACK0G,QADL,IACKA,OADL,EACKA,EAAM1G,a,kECxBZ,SAAS42B,GAAqBz8B,GACzC,MAAwBQ,IAAMC,UAAkB,GAAhD,mBAAOE,EAAP,KAAaC,EAAb,KAEM87B,EAAcl8B,IAAM8U,SAAQ,2BAAStV,EAAMgH,KAAf,eAAgC,CAAChH,EAAMgH,OAEzExG,IAAMyM,WAAU,WACZrM,EAAQgH,EAAeC,KAAK60B,MAC7B,CAACA,IAEJ,IAMMntB,EAAQvP,EAAMmc,KAAO,cAACC,GAAD,CAASrP,GAAI/M,EAAMmc,KAAMzc,GAAI,CAAEG,MAAO,gBAAtC,SAAyDG,EAAMgH,OAAkBhH,EAAMgH,KAElH,OACI,eAACmY,GAAA,EAAD,CAAU8V,gBAAc,EAACl0B,UAAU,KAAKrB,GAAI,CAAE0K,cAAe,SAAUuE,WAAY,cAAnF,UACI,eAACytB,GAAA,EAAD,CAAgB18B,GAAIM,EAAMN,GAA1B,UACKM,EAAMmnB,MACH,cAAC9H,GAAA,EAAD,UACKrf,EAAMmnB,OAEf,cAAC3H,GAAA,EAAD,CAAcvhB,QAASsR,IACvB,cAACwE,EAAA,EAAD,CAAKhT,UAAU,OAAOiS,QAhBf,SAACyM,GAChBA,EAAGC,kBACH9X,EAAeI,KAAK00B,GAAc/7B,GAClCC,GAAQ,SAAAoN,GAAG,OAAKA,MAaR,SACKrN,EAAO,cAACg8B,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,SAIjC,cAACjpB,GAAA,EAAD,CAAUC,GAAIjT,EAAMkT,QAAQ,OAAOnU,GAAIM,EAAMN,GAA7C,SACI,cAACsf,GAAA,EAAD,CAAMiW,gBAAc,EAApB,SACKj1B,EAAME,gBCzCZ,SAAS28B,GAAa78B,GACjC,OACI,cAACo8B,GAAA,EAAD,CAAgBr7B,UAAU,KAA1B,SACI,eAACgT,EAAA,EAAD,CAAKrU,GAAI,CAAEuC,MAAO,QAAUlB,UAAWqb,GAASrP,GAAE,UAAKnC,GAAMG,MAAX,OAAkB/K,EAAMmc,MAA1E,UACI,cAACkD,GAAA,EAAD,UACI,cAAC,KAAD,MAEHrf,EAAMgH,UCLR,SAAS81B,KACpB,IAAQvc,EAAgBiB,KAAhBjB,YAEFvE,EAAWxb,IAAM8U,SAAQ,WAC3B,cAAOiL,QAAP,IAAOA,OAAP,EAAOA,EAAa/Q,KAAI,gBAAGzI,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMmV,EAAb,EAAaA,KAAM4E,EAAnB,EAAmBA,UAAnB,OACpB,cAAC0b,GAAD,CAEIz1B,KAAMA,EACNmV,KAAI,UAAKvR,GAAMG,MAAX,OAAkBoR,GACtBgL,KAAM,cAAC,KAAD,CAAStnB,MAAM,YACrBH,GAAI,CAAEuC,MAAO,QALjB,SAOK8e,EAAUvR,KAAI,gBAAGzI,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMmV,EAAb,EAAaA,KAAM8E,EAAnB,EAAmBA,MAAnB,OACX,cAACwb,GAAD,CAEIz1B,KAAMA,EACNmV,KAAI,UAAKvR,GAAMG,MAAX,OAAkBoR,GACtBgL,KAAM,cAAC,KAAD,CAActnB,MAAM,YAC1BH,GAAI,CACA2lB,GAAI,EACJpjB,MAAO,UACPsI,gBAAiB,sBARzB,SAWK0W,EAAMzR,KAAI,SAACutB,EAAWj0B,GAAZ,OAAoB,cAAC+zB,GAAD,eAA4BE,GAATj0B,OAV7C/B,OARRA,QAsBd,CAACwZ,IAEJ,OACI,cAACvB,GAAA,EAAD,UACKhD,I,yBCjCE,SAASghB,KACpB,MAAgCx8B,IAAMC,UAAkB,GAAxD,mBAAOw8B,EAAP,KAAiBC,EAAjB,KAEMvW,EAAcnmB,IAAMU,aAAY,SAACue,GACnCA,EAAGC,kBACHwd,GAAY,KACb,IAEH,OACI,qCACI,cAAClR,GAAD,CACIrrB,KAAMs8B,EACNl7B,QAAS,kBAAMm7B,GAAY,MAE/B,cAAC/d,GAAA,EAAD,CACIpe,UAAU,MACVk0B,gBAAc,EACdjiB,QAAS2T,EACTjnB,GAAI,CAAEG,MAAO,gBAJjB,SAKI,eAACu8B,GAAA,EAAD,WACI,cAAC/c,GAAA,EAAD,UACI,cAAC,KAAD,CAASxf,MAAM,cAFvB,sBCbD,SAASs9B,GAAT,GAA0D,IAArCb,EAAoC,EAApCA,WAAY37B,EAAwB,EAAxBA,KACpC4L,EAAS0T,KAAT1T,KAER,OACI,eAAC6wB,GAAA,EAAD,CACI79B,QAAQ,YACR89B,WAAY,CACRC,aAAa,GAEjBC,OAAO,OACP58B,KAAMA,EACNoB,QAASu6B,EAPb,UASI,eAACD,GAAD,CAAaC,WAAaA,EAA1B,UACI,cAACE,GAAD,CAAYjwB,KAAMA,IAElB,cAACwS,GAAA,EAAD,IACA,cAACod,GAAD,CAAgB9jB,OAAM,OAAE9L,QAAF,IAAEA,OAAF,EAAEA,EAAM8L,SAE9B,cAAC0G,GAAA,EAAD,IACA,cAACI,GAAA,EAAD,CACInM,QAAS,SAACyM,GAAD,OAA0BA,EAAGC,mBACtC3e,UAAU,MACVrB,GAAI,CAAE+K,GAAI,EAAG5K,MAAO,iBAHxB,SAKI,cAAC2f,GAAA,EAAD,wBAIJ,cAACsd,GAAD,OAGJ,cAACE,GAAD,O,6CClCNzB,GAAQ,CACV,CAAEv0B,KAAM,gBAAcynB,KAAM7jB,GAAMY,YAClC,CAAExE,KAAM,uBAAgBynB,KAAM7jB,GAAMG,OAIzB,SAASyyB,GAAT,GAAkE,IAA3C1tB,EAA0C,EAA1CA,QAAS+W,EAAiC,EAAjCA,YACnCzZ,EAAW6S,KAAX7S,OAEFqwB,EAAYj9B,IAAM8U,SAAQ,WAC5B,OAAOimB,GAAM/rB,KAAI,WAAiBkuB,GAAjB,IAAG12B,EAAH,EAAGA,KAAMynB,EAAT,EAASA,KAAT,OACb,cAAC/e,GAAA,EAAD,CAAkBsD,QAAS6T,EAA3B,SACI,cAACzK,GAAD,CAASrP,GAAI0hB,EAAb,SACKznB,KAFM02B,QAKpB,CAAC7W,IAGJ,OACI,eAACC,GAAA,EAAD,CACI/f,GAAG,cACH0f,SAAU3W,EACVnO,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBy7B,aAAW,EACXK,gBAAiB,CACb/7B,SAAU,MACVC,WAAY,SAEhBlB,KAAMsF,QAAQ6J,GACd/N,QAAS8kB,EAbb,UAeK4W,EAED,cAAC/tB,GAAA,EAAD,CAAUsD,QAAS,WACf6T,IACAzZ,KAFJ,wBC5BG,SAASwwB,GAAc59B,GACrC,IAAQuM,EAAS0T,KAAT1T,KACR,EAAgC/L,WAAmC,MAAnE,mBAAOimB,EAAP,KAAiBC,EAAjB,KAEMmX,EAAar9B,eAAkB,SAACW,GACrCulB,EAAYvlB,EAAMylB,iBAChB,IAEGC,EAAcrmB,eAAkB,WACrCkmB,EAAY,QACV,IAEH,OACC,cAAC3S,EAAA,EAAD,CAAKrU,GAAI,CAAEo+B,SAAU,GAArB,SACC,cAACC,GAAA,EAAD,CAAQ9lB,SAAS,SAAjB,SACC,eAAC+lB,GAAA,EAAD,WACEzxB,GACA,cAACwG,GAAA,EAAD,CACCC,QAAShT,EAAMi+B,aACf3+B,KAAK,QACL4+B,KAAK,QACL,aAAW,OACXx+B,GAAI,CAAEwzB,GAAI,EAAGrzB,MAAO,sBALrB,SAOC,cAAC,KAAD,CAAUA,MAAM,cAGlB,cAAC2K,EAAA,EAAD,CAAYjL,QAAQ,KAAKwB,UAAU,OAAOrB,GAAI,CAC7Co+B,SAAU,EACVK,WAAY,2BAFb,SAIC,cAAC/hB,GAAD,CACCrP,GAAIR,EAAO3B,GAAMG,KAAOH,GAAMC,OAC9BnL,GAAI,CACHuC,MAAO,cACPpC,MAAO,qBACP,UAAW,CACVu+B,eAAgB,SANnB,0BAaA7xB,GACA,gCACC,cAACwG,GAAA,EAAD,CACCzT,KAAK,QACL,aAAW,0BACX,gBAAc,cACd,gBAAc,OACd0T,QAAS6qB,EACTh+B,MAAM,UANP,SAQC,cAACijB,GAAA,EAAD,CACCC,IAAKxW,EAAKvF,KACVic,IAAK7c,EAAa8c,QAAQ3W,EAAKhG,OAC/B7G,GAAI,CAAEuC,MAAO,GAAIgd,OAAQ,QAG3B,cAACue,GAAD,CACC1tB,QAAS2W,EACTI,YAAaA,cC/EN,SAASwX,KACvB,MAAwB79B,IAAMC,UAAS,GAAvC,mBAAOE,EAAP,KAAaC,EAAb,KAEMq9B,EAAez9B,IAAMU,aAAY,SACtCC,GAEK,IADLm9B,IACI,yDACJn9B,EAAMue,oBAEL4e,GACe,YAAfn9B,EAAMmD,MACkC,QAAtCnD,EAA8B2H,KACQ,UAAtC3H,EAA8B2H,MAIjClI,GAAQ,SAAAoN,GAAG,OAAKA,OACd,IAEH,OAAO,qCACN,cAAC4vB,GAAD,CAAeK,aAAcA,IAC7B,cAACd,GAAD,CACCx8B,KAAMA,EACN27B,WAAY2B,OCmBAM,OAzBf,WACC,OACC,cAACx+B,EAAD,UACC,eAACy+B,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,UACC,cAACC,EAAA,EAAD,IACA,cAAC5qB,EAAA,EAAD,CAAKhT,UAAU,MAAM69B,UAAU,MAAMl/B,GAAI,CAAE6K,gBAAiB,sBAA5D,SACC,cAAC,KAAD,CAAes0B,SAAS,IAAxB,SACC,cAACt+B,EAAD,UACC,cAAC4L,GAAD,UACC,eAACmU,GAAD,WACC,cAAC+d,GAAD,IACA,cAAChE,EAAA,EAAD,UACC,cAAC,GAAD,MAED,cAACoB,GAAD,qBC9BTqD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0bc3ea8d.chunk.js","sourcesContent":["import { createTheme } from '@mui/material/styles';\nimport { indigo } from '@mui/material/colors';\nimport { darkScrollbar as scrollbar } from '@mui/material';\n\n\nconst light = {\n  track: '#f5f5f5',\n  thumb: '#adadad',\n  active: '#959595'\n};\n\nconst theme = createTheme({\n  palette: {\n    primary: indigo,\n    secondary: {\n      dark: \"#f5f5f5\",\n      main: \"#304ffe\",\n      light: \"#fff\"\n    },\n    background: {\n      default: '#f5f5f5',\n      paper: '#fff'\n    }\n  },\n  // spacing: 10,\n  shape: {\n    borderRadius: 4\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        body: scrollbar(light),\n      },\n    },\n    MuiTextField: {\n      defaultProps: {\n        size: 'medium',\n        variant: 'outlined',\n      }\n    },\n    MuiSelect: {\n      defaultProps: {\n        size: 'medium'\n      }\n    },\n    MuiButton: {\n      defaultProps: {\n        sx: {\n          borderRadius: ({ shape }) => Number(shape.borderRadius)/2\n        }\n      },\n    },\n\n    MuiSvgIcon: {\n      defaultProps: {\n        color: 'inherit',\n      }\n    },\n    MuiIconButton: {\n      defaultProps: {\n        color: 'primary'\n      }\n    }\n  },\n  // typography:{\n\n  // }\n})\n\nexport default theme;","import React from 'react';\nimport { ThemeProvider } from '@mui/material/styles';\n\n\nimport theme from './theme';\n\n\ninterface ThemeProps {\n    children: React.ReactNode\n}\n\n\nexport default function Theme(props: ThemeProps) {\n    return (\n        <ThemeProvider theme={theme}>\n            {props.children}\n        </ThemeProvider>\n    );\n}","import { AlertProps } from \"@mui/material/Alert\";\n\ntype NotificationContextValue = (message: string,\n    _severity: AlertProps[\"severity\"],\n    componentCallback?: () => null | React.ReactNode\n) => void;\n\nexport default NotificationContextValue;\n\n\nexport const NotificationContextDefault = (\n    message: string,\n    _severity: AlertProps[\"severity\"] = \"error\",\n    componentCallback: () => null | React.ReactNode = () => null\n) => { }","import { Alert, AlertProps, Snackbar, SnackbarCloseReason } from \"@mui/material\";\nimport React, { createContext } from \"react\";\nimport NotificationContextValue, { NotificationContextDefault } from \"./NotificationContextValue\";\n\n\n\ninterface NotificationContextProviderProps {\n    children?: React.ReactChild\n}\n\n\nexport const notificationContext: any = createContext<NotificationContextValue>(NotificationContextDefault);\n\n\nexport default function NotificationContextProvider({\n    children\n}: NotificationContextProviderProps) {\n    const [message, setMessage] = React.useState<string | null>();\n    const [open, setOpen] = React.useState<boolean>(false);\n    const [severity, setSeverity] = React.useState<AlertProps[\"severity\"]>(\"error\");\n    const [component, setComponent] = React.useState<React.ReactNode>();\n\n\n    const closeSnack = React.useCallback((\n        event?: Event | React.SyntheticEvent<any, Event>,\n        reason?: SnackbarCloseReason\n    ) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n        setMessage('');\n        setComponent(null);\n    }, []);\n\n\n    const setSnack = React.useCallback((\n        message: string,\n        _severity: AlertProps[\"severity\"] = \"error\",\n        componentCallback: () => null | React.ReactNode = () => null\n    ) => {\n        setSeverity(_severity);\n        setMessage(message);\n        setOpen(true);\n        setComponent(componentCallback());\n    }, []);\n\n\n    return (\n        <notificationContext.Provider value={setSnack}>\n            {children}\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={open} autoHideDuration={6000} onClose={closeSnack}>\n                <Alert onClose={closeSnack} severity={severity} sx={{ width: '100%' }}>\n                    {message}\n                </Alert>\n            </Snackbar>\n\n            {component}\n        </notificationContext.Provider>\n    );\n}","import { useContext } from \"react\";\nimport { notificationContext } from \"./NotificationContextProvider\";\nimport NotificationContextValue from \"./NotificationContextValue\";\n\n\n\nexport default function useNotification() {\n    return useContext(notificationContext) as NotificationContextValue;\n}","import { ResponseData } from \"./Service\";\n\n\n\n\nexport default class APIServiceError extends Error {\n\n    private data: ResponseData;\n\n    get code() {\n        return this.data.statusCode;\n    }\n\n    get description() {\n        return this.data.error?.description;\n    }\n\n    constructor(data: ResponseData) {\n        super(data.error?.description);\n        this.data = data;\n    }\n}\n","import Reservation from \"../models/Reservation\";\nimport { AppURLParams, PaginationQueryParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface ReservationsQueryParams extends PaginationQueryParams {\n    from?: string,\n    search?: string\n}\n\nexport interface CreateReservationData {\n    title: string,\n    description: string,\n    plannedStart: Date,\n    plannedEnd: Date,\n    roomId?: number\n}\n\nexport interface UpdateReservationData {\n    [index: string]: any,\n    title?: string,\n    description?: string,\n    plannedStart?: Date,\n    plannedEnd?: Date,\n    roomId?: number\n}\n\nenum Colors {\n    success = '#edf7ed',\n    error = '#fdeded',\n    info = '#e5f6fd',\n    warning = '#fff4e5',\n    inert = '#f5f5f5'\n}\n\ninterface ReservationStatus {\n    message: string,\n    color: Colors\n}\n\n\n\nclass ReservationService extends Service {\n\n    private emitStatus(mess: string, color: Colors): ReservationStatus {\n        return { message: mess, color: color };\n    }\n\n    public getReservations(\n        urlParams: AppURLParams,\n        queryParams: ReservationsQueryParams\n    ) {\n        return this.get(`${this.preparePath(urlParams)}/reservations`, queryParams);\n    }\n\n\n    public createOne(data: CreateReservationData) {\n        return this.post('/reservations', data)\n    }\n\n    public update(id: number, data: UpdateReservationData) {\n        return this.patch(`/reservations/${id}`, data);\n    }\n\n    public pingKey(id: number, key: string) {\n        return this.patch(`/reservations/${id}/keys`, {\n            RFIDTag: key\n        });\n    }\n\n    public remove(id: number) {\n        return this.delete(`/reservations/${id}`);\n    }\n\n    public resolveStatus(reservation: Reservation): ReservationStatus {\n\n        const nowTimestamp = Date.now();\n\n        const now = new Date(nowTimestamp);\n        const now_minus15 = new Date(nowTimestamp - 900);\n        const now_plus15 = new Date(nowTimestamp + 900);\n\n        const { actualStart, plannedStart, actualEnd, plannedEnd } = reservation;\n\n        const start = new Date(actualStart ? actualStart : plannedStart);\n        const end = new Date(actualEnd ? actualEnd : plannedEnd);\n\n\n        // nie rozpoczęła się\n        if (!actualStart) {\n            // jest już po czasie, i czeka do +15 minut na odbiór\n            if (start < now && start > now_minus15) return this.emitStatus('Powinna zostać już odebrana', Colors.warning);\n\n            // za 15 minut zaczyna się rezerwacja\n            if (start > now && start < now_plus15) return this.emitStatus('Za chwilę zostanie odebrana', Colors.info);\n\n            // nie została odbrana w czasie <planowany start + 15 minut>\n            if (start < now_plus15) return this.emitStatus('Nieodebrana.', Colors.error)\n\n            return this.emitStatus('Oczekuje', Colors.inert)\n\n            // rozpoczęła się\n        } else if (actualStart) {\n            // zakończyła się\n            if (actualEnd) return this.emitStatus('Rezerwacja zakończona.', Colors.inert);\n\n            // nie zakończyła się\n            if (!actualEnd) {\n                // kończy się w ciągu 15 minut\n                if (now < end && now_minus15 > end) return this.emitStatus('Za chwilę się kończy.', Colors.info);\n\n                // powinna się już zakończyć, ale dajemy +15 minut na zkończenie \n                if (now > end && end > now_plus15) return this.emitStatus('Powinna się zakończyć.', Colors.warning);\n\n                // powinna się już zakończyć, ale dajemy +15 minut na zkończenie \n                if (now > end && end < now_plus15) return this.emitStatus('Czas minął, klucz nie oddany.', Colors.error);\n\n                return this.emitStatus('Rezerwacja trwa.', Colors.success);\n            }\n        }\n\n        return this.emitStatus(\"Status nieznany\", Colors.warning);\n    }\n}\n\nexport default new ReservationService()","import APIServiceError from \"./APIServiceError\";\nimport { APIResponse, AppURLParams } from \"./interfaces\";\n\n\nexport interface ServiceFormData {\n    [index: string]: string | number | boolean | undefined | object\n}\n\n\n\n\ninterface FetchData {\n    endpoint: string\n    method: string,\n    body?: object\n}\n\ninterface ErrorData {\n    type: string,\n    description: string\n}\n\nexport interface ResponseData {\n    statusCode: number,\n    data?: any,\n    error?: ErrorData\n}\n\n\n\nexport interface StatusMessages {\n    [index: number]: string\n}\n\n\nfunction getBackendUrl(): string {\n    switch (process.env.NODE_ENV) {\n        case 'development':\n            return 'http://localhost:8081/v1';\n        case 'test':\n            return 'https://ravsapi-dev.herokuapp.com/v1';\n        case 'production':\n            return 'https://ravsapi.herokuapp.com/v1';\n        default:\n            throw new Error('Nie rozpoznano środowiska');\n    }\n}\n\n\nexport default abstract class Service {\n\n    _BASE_URL: string = getBackendUrl();\n    _TOKEN_NAME: string = 'auth_token';\n    _userId: number = -1;\n\n    public set userId(value: number) {\n        this._userId = value\n    }\n\n    public get userId(): number {\n        return this._userId;\n    }\n\n    protected get authToken() {\n        return 'Bearer ' + window.localStorage.getItem(this._TOKEN_NAME);\n    }\n\n    private async _fetch(fetchObject: FetchData): Promise<APIResponse> {\n        const response = await fetch(\n            this._BASE_URL + fetchObject.endpoint,\n            {\n                method: fetchObject.method,\n                cache: 'no-cache',\n                mode: 'cors',\n                // credentials: 'omit',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.authToken,\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: JSON.stringify(fetchObject.body)\n            }\n        );\n        const data = await response.json() as ResponseData;\n\n        console.debug(data);\n\n        // if user is not authenticated - \n        // redirect to let sessionContext to resolve redirections\n        if (response.status === 401 && !fetchObject.endpoint.match('/auth|me|activate')) {\n            window.location.reload();\n        }\n\n        if (!response.ok) {\n            console.error(`${response.status} ${data?.error?.type} ${data?.error?.description}`);\n            throw new APIServiceError(data);\n        }\n\n        return data as APIResponse;\n    }\n\n    protected preparePath(urlParams: AppURLParams): string {\n        let endp = '';\n        let url = window.location.pathname;\n        const map = {\n            '/accesses': '/accesses',\n            '/settings': '/configurations',\n            '/users': '/users'\n        }\n\n        if (Object.keys(urlParams).length === 0) {\n            for (const [path, newPath] of Object.entries(map)) {\n                if (url.includes(path)) {\n                    endp = newPath;\n                }\n            }\n        } else if ('addressId' in urlParams) {\n            endp += `/addresses/${urlParams.addressId}`;\n\n            if ('buildingId' in urlParams) {\n                endp += `/buildings/${urlParams.buildingId}`;\n\n                if ('roomId' in urlParams) endp += `/rooms/${urlParams.roomId}`;\n            }\n        } else if ('userId' in urlParams) {\n            if (urlParams.userId === 'me') {\n                endp += '/users/' + this.userId.toString();\n            } else {\n                endp += '/users/' + urlParams.userId;\n            }\n        }\n        return endp;\n    }\n\n    protected get(endpoint: string, query = {}) {\n        return this._fetch({\n            method: 'GET',\n            endpoint: endpoint + '?' + new URLSearchParams(query).toString()\n        });\n    }\n\n    protected post(endpoint: string, body: object) {\n        return this._fetch({\n            method: 'POST',\n            endpoint: endpoint,\n            body: body\n        });\n    }\n\n    protected patch(endpoint: string, body: object) {\n        if (Object.keys(body).length === 0) return;\n\n        return this._fetch({\n            method: 'PATCH',\n            endpoint: endpoint,\n            body: body\n        });\n    }\n\n    protected delete(endpoint: string) {\n        return this._fetch({\n            method: 'DELETE',\n            endpoint: endpoint\n        });\n    }\n}","import { APIResponse } from \"./interfaces\";\nimport Service, { ServiceFormData } from \"./Service\";\n\n\n\nexport interface LoginFormData extends ServiceFormData {\n    email: string,\n    password: string\n}\n\n\n\nclass AuthService extends Service {\n\n    async login(data: LoginFormData): Promise<APIResponse> {\n        const response = await this.post(\n            '/users/auth',\n            {\n                'email': data.email,\n                'password': data.password\n            }\n        );\n\n        // set the token to local storage\n        if (response.data) {\n            localStorage.setItem(this._TOKEN_NAME, response.data.toString());\n        }\n\n        return response;\n    }\n\n    logout(): void {\n        localStorage.removeItem(this._TOKEN_NAME);\n    }\n\n    hasToken(): boolean {\n        return Boolean(localStorage.getItem(this._TOKEN_NAME));\n    }\n\n    async hasSession(): Promise<boolean> {\n        try {\n            if (this.hasToken()) {\n                await this.get('/users/me'); // change to ping\n                return true\n            }\n        } catch (err: any) {\n            // localStorage.removeItem(this._TOKEN_NAME);\n            \n        }\n        return false\n    }\n}\n\nexport default new AuthService();","import Image from \"../models/Image\";\nimport APIServiceError from \"./APIServiceError\";\nimport { BuildingViewParams } from \"./BuildingService\";\nimport { APIResponse } from \"./interfaces\";\nimport { RoomViewParams } from \"./RoomService\";\nimport Service, { ResponseData } from \"./Service\";\nimport { UserViewParams } from \"./UserService\";\n\n\n\nclass ImageService extends Service {\n\n    private async sendImage(endpoint: string, formBody: FormData) {\n        const resp = await fetch(\n            this._BASE_URL + endpoint,\n            {\n                method: \"POST\",\n                cache: 'no-cache',\n                mode: 'cors',\n                body: formBody,\n                headers: {\n                    'Authorization': this.authToken,\n                }\n            }\n        );\n\n        const data = await resp.json() as ResponseData;\n        console.debug(data);\n\n        if (!resp.ok) {\n            console.error(`${resp.status}\\t${data?.error?.type}\\t${data?.error?.description}`);\n            throw new APIServiceError(data);\n        }\n\n        return data as APIResponse;\n    }\n\n    public getLink(image?: Image): string {\n        if (image?.url.includes('http')) return image.url;\n\n        return this._BASE_URL.slice(0, this._BASE_URL.length - 3) + image?.url;\n    }\n\n    public upload(\n        urlParams: (UserViewParams | BuildingViewParams | RoomViewParams),\n        image: Blob\n    ) {\n        const formData = new FormData();\n        formData.append(\n            'file',\n            image\n        );\n        return this.sendImage(this.preparePath(urlParams) + '/image', formData);\n    }\n\n    public remove(urlParams: (UserViewParams | BuildingViewParams | RoomViewParams)) {\n        return this.delete(this.preparePath(urlParams) + '/image');\n    }\n}\n\n\nexport default new ImageService();","\n\n\nclass StorageService {\n\n    private id: string = '';\n\n    public setIdentity(value: string | number) {\n        this.id = value.toString();\n    }\n\n    private codeName(name: string) {\n        return btoa(encodeURI(name + this.id));\n    }\n\n    public save(name: string, value: any) {\n        const str = JSON.stringify(value);\n        localStorage.setItem(this.codeName(name), str);\n    }\n\n    public delete(name: string) {\n        localStorage.removeItem(this.codeName(name));\n    }\n\n    public read(name: string) {\n        const str = localStorage.getItem(this.codeName(name));\n        if (!str) return null;\n\n        try {\n            return JSON.parse(str);\n        } catch {\n            return null;\n        }\n    }\n\n}\n\nexport default new StorageService();","import { SessionUser } from \"../models/User\";\nimport { PaginationQueryParams } from \"./interfaces\";\nimport Service, { ServiceFormData } from \"./Service\";\n\n\nexport interface RegisterUserData extends ServiceFormData {\n    email: string,\n    password: string,\n    name: string,\n    surname: string\n}\n\nexport interface ActivationData extends ServiceFormData {\n    email: string,\n    password: string,\n    code: string,\n}\n\nexport interface ChangePasswordData extends ServiceFormData {\n    code: string,\n    newPassword: string,\n    email: string\n}\n\nexport interface UpdateUserParams extends ServiceFormData {\n    name?: string,\n    surname?: string,\n    metadata?: object\n}\n\nexport interface UserViewParams {\n    userId: string;\n}\n\nexport interface UserQueryParams extends PaginationQueryParams {\n    [index: string]: any,\n    accessId?: number,\n    deleted?: boolean,\n    search?: string,\n    activated?: boolean,\n}\n\n\nclass UserService extends Service {\n    _path = '/users';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath(urlParams: UserViewParams) {\n        this._path = this.preparePath(urlParams);\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public async getMe() {\n        const resp = await this.get('/users/me');\n        return resp.data as SessionUser;\n    }\n\n    public getUsers(data?: UserQueryParams) {\n        return this.get('/users', data);\n    }\n\n    public register(data: RegisterUserData) {\n        return this.post('/users', data);\n    }\n\n    public activate(data: ActivationData) {\n        return this.patch('/users/activate', data);\n    }\n\n    public generateKey(email: string) {\n        return this.post('/users/key', {\n            email: email\n        });\n    }\n\n    public updateAccess(userId: number, accessId: number) {\n        return this.patch(`/users/${userId}/access`, {\n            accessId: accessId\n        })\n    }\n\n    public update(data: UpdateUserParams) {\n        return this.patch(this.path, data);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public changePassword(data: ChangePasswordData) {\n        return this.patch('/users/password', data);\n    }\n}\n\n\nexport default new UserService();","import Metadata, { FavouriteBuilding, FavouriteRoom } from \"../models/Metadata\";\nimport StorageService from \"./StorageService\";\nimport UserService from \"./UserService\";\n\n\n\n\nclass MetadataService {\n    private STORAGE_NAME = 'user-metadata';\n\n    private data: Metadata;\n    private _userId: number | undefined;\n\n\n    constructor() {\n        this.data = StorageService.read(this.STORAGE_NAME) ?? {\n            notes: '',\n            favourites: []\n        };\n    }\n\n    private async save(): Promise<void> {\n        StorageService.save(this.STORAGE_NAME, this.data);\n\n        if (!this._userId) return;\n\n        UserService.setPath({ userId: this._userId?.toString() });\n        try {\n            await UserService.update({\n                metadata: this.data\n            });\n        } catch (err: any) { console.error(err) }\n    }\n\n    public set userId(id: number) {\n        this._userId = id;\n    }\n\n    public set metadata(value: Metadata) {\n        this.data = {\n            ...this.data,\n            ...value\n        };\n    }\n\n    public get notes() {\n        return this.data.notes ?? '';\n    }\n\n    public get favourites() {\n        return this.data.favourites ?? [];\n    }\n\n    public set notes(value: string) {\n        this.data.notes = value;\n        this.save();\n    }\n\n    public addFavourite(item: FavouriteBuilding | FavouriteRoom): void {\n        this.data.favourites?.push(item);\n        this.data.favourites?.sort((a, b) => {\n            if (a.type >= b.type) {\n                if (a.type === b.type) {\n                    return a.name > b.name ? 1 : -1;\n                }\n                return 1;\n            }\n            return -1;\n        });\n        console.log(this.data);\n        this.save();\n    }\n\n    public isFavourite(item: FavouriteBuilding | FavouriteRoom): boolean {\n        return Boolean(this.data.favourites?.find(({ id, type }) => (type === item.type && id === item.id)));\n    }\n\n    public removeFavourite(item: FavouriteBuilding | FavouriteRoom): void {\n        this.data.favourites = this.data.favourites?.filter(({ id, type }) => id + type !== item.id + item.type)\n        this.save();\n    }\n}\n\n\nexport default new MetadataService();","import Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport { SxProps } from \"@mui/system\";\n\n\ninterface ContextLoaderProps {\n    open: boolean,\n    text?: string,\n    sx?: SxProps\n}\n\nexport default function LoadingView(props: ContextLoaderProps) {\n    return (\n        <Backdrop\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                color: 'primary.main',\n                zIndex: (theme) => theme.zIndex.drawer + 1,\n                backgroundColor:'background.default',\n                ...props.sx\n            }}\n            open={props.open}\n        >\n            <Typography variant=\"h5\" pb={2}>\n                {props.text}\n            </Typography>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    );\n}","\ninterface AppPathsInterface {\n    readonly [index: string]: string\n    PUBLIC: string,\n    LOGIN: string,\n    REGISTER: string,\n    ACTIVATE: string,\n    REMIND_PASSWORD: string,\n    FAQ: string,\n\n    HOME: string,\n    SETTINGS: string,\n    MY_PROFILE: string,\n    INFRASTRUCTURE: string,\n    ADDRESS: string,\n    BUILDING: string,\n    ROOM: string,\n    USERS: string,\n    ACCESS: string,\n};\n\n\ninterface AppDynamicPaths {\n    readonly [indes: string]: (...params: any) => string,\n\n    toRoom: (addressId: number, buildingId: number, roomId: number) => string,\n    toBuilding: (addressId: number, buildingId: number) => string,\n    toAddress: (addressId: number) => string,\n    toUser: (userId: number) => string\n}\n\n\nconst paths: { [index: string]: string } = {\n    PUBLIC: '/public',\n    FAQ: '/faq',\n    HOME: '/app',\n}\n\n\npaths.LOGIN = paths.PUBLIC + '/login';\npaths.REGISTER = paths.PUBLIC + '/register';\npaths.ACTIVATE = paths.PUBLIC + '/activate';\npaths.REMIND_PASSWORD = paths.PUBLIC + '/passwd';\n\npaths.ACCESS = paths.HOME + '/accesses'\npaths.SETTINGS = paths.HOME + '/settings';\n\npaths.USERS = paths.HOME + '/users';\npaths.USER = paths.USERS + '/:userId';\npaths.MY_PROFILE = paths.USERS + '/me';\npaths.INFRASTRUCTURE = paths.HOME + '/infrastructure';\npaths.ADDRESS = paths.HOME + '/addresses/:addressId';\npaths.BUILDING = paths.ADDRESS + '/buildings/:buildingId';\npaths.ROOM = paths.BUILDING + '/rooms/:roomId';\n\n\nexport const dynamicPaths: AppDynamicPaths = {\n    toAddress: (addressId: number) => `/app/addresses/${addressId}`,\n    toBuilding: (addressId: number, buildingId: number) => dynamicPaths.toAddress(addressId) + `/buildings/${buildingId}`,\n    toRoom: (addressId: number, buildingId: number, roomId: number) => dynamicPaths.toBuilding(addressId, buildingId) + `/rooms/${roomId}`,\n    toUser: (userId: number) => paths.USERS + `/${userId}`\n}\n\nexport default paths as AppPathsInterface;","import React, { createContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport useNotification from \"../contexts/NotificationContext/useNotification\";\n\nimport { SessionUser } from \"../models/User\";\n\nimport AuthService, { LoginFormData } from \"../services/AuthService\";\nimport ImageService from \"../services/ImageService\";\nimport MetadataService from \"../services/MetadataService\";\nimport ReservationService from \"../services/ReservationService\";\nimport StorageService from \"../services/StorageService\";\nimport UserService from \"../services/UserService\";\nimport LoadingView from \"../shared/components/LoadingView\";\nimport paths from \"../shared/path\";\nimport SessionValue from \"./SessionValue\";\n\n\ninterface SessionProviderProps {\n    children?: React.ReactNode\n}\n\n\nexport const sessionContext: any = createContext(null);\n\n\nexport default function SessionProvider({ children }: SessionProviderProps) {\n    const notify = useNotification();\n    const [loading, setLoading] = React.useState(true);\n    const [user, setUser] = useState<SessionUser | null>(null);\n\n\n    const setUpUser = React.useCallback((user: SessionUser) => {\n        setUser(user);\n\n        // config services which require identity data\n        StorageService.setIdentity(user.id);\n        MetadataService.metadata = user.metadata;\n        MetadataService.userId = user.id;\n        ReservationService.userId = user.id;\n        ImageService.userId = user.id;\n        UserService.userId = user.id;\n    }, []);\n\n\n    const checkIfUserHasSession = React.useCallback(async () => {\n        setLoading(true);\n        if (AuthService.hasToken()) {\n            try {\n                if (await AuthService.hasSession()) {\n                    const sessionUser = await UserService.getMe();\n                    setUpUser(sessionUser);\n                    notify(\"Witaj ponownie!\", 'info');\n                } else {\n                    notify('Twoja sesja wygasła', 'info', () => <Redirect to={paths.LOGIN} />);\n                }\n            } catch (err: any) {\n                notify(err.description, 'error', () => <Redirect to={paths.WELCOME} />);\n            }\n        } else {\n            notify('Witaj!', 'info', () => <Redirect to={paths.WELCOME} />);\n        }\n        setLoading(false)\n    }, [\n        notify,\n        setUpUser\n    ]);\n\n\n    React.useEffect(() => {\n        checkIfUserHasSession();\n        return () => { }\n    }, [checkIfUserHasSession]);\n\n\n    const login = React.useCallback(async (data: LoginFormData): Promise<void> => {\n        try {\n            await AuthService.login(data);\n            const sessionUser = await UserService.getMe();\n            setUpUser(sessionUser);\n\n            notify(\"Pomyślnie zalogowano!\", \"success\", () => <Redirect to={paths.HOME} />);\n\n        } catch (err: any) {\n            let message = err.description;\n\n            if (err.code === 404) message = \"Użytkownik nie istnieje\";\n\n            notify(message, \"error\");\n        }\n    }, [\n        notify,\n        setUpUser\n    ]);\n\n\n    const logout = React.useCallback(() => {\n        notify(\"Pomyślnie wylogowano!\", \"success\", () => <Redirect to={paths.WELCOME} />);\n        AuthService.logout();\n        setUser(null);\n    }, [notify]);\n\n\n    return (\n        <>\n            <LoadingView\n                open={loading}\n                text=\"Ładowanie Sesji...\"\n            />\n            <sessionContext.Provider value={{ user, login, logout } as SessionValue}>\n                {!loading && children}\n            </sessionContext.Provider>\n        </>\n    );\n}\n","\nexport default interface QueryParamsContextValue<T> {\n    setQueryParams: React.Dispatch<React.SetStateAction<T>>\n    queryParams: T,\n}\n\n\nexport const queryParamsContextDefaults = {\n    queryParams: { q: 1 },\n    setQueryParams: (param: { q: number }) => { }\n}","import React from \"react\";\nimport StorageService from \"../../services/StorageService\";\nimport QueryParamsContextValue, { queryParamsContextDefaults } from \"./QueryParamsContextValue\";\n\n\nexport const queryParamsContext = React.createContext<QueryParamsContextValue<any>>(queryParamsContextDefaults);\n\n\nfunction initQueryParams<T>(keyName: string, defaultValue: T): T {\n    const confString = StorageService.read(keyName);\n    if (confString) {\n        return confString;\n    }\n    return defaultValue;\n};\n\n\ninterface QueryParamsContextProviderProps<T> {\n    default: T,\n    name: string,\n    children: React.ReactNode[] | React.ReactNode\n}\n\n\nexport default function QueryParamsContextProvider<T>(props: QueryParamsContextProviderProps<T>) {\n\n    const [queryParams, setQueryParams] = React.useState<T>(\n       ()=> initQueryParams<T>(props.name, props.default)\n    );\n\n    React.useEffect(() => {\n        StorageService.save(props.name, queryParams);\n    }, [queryParams, props.name]);\n\n    if(!queryParams) return null;\n\n    return (\n        <queryParamsContext.Provider value={{ queryParams, setQueryParams }}>\n            {props.children}\n        </queryParamsContext.Provider>\n    );\n}","import React from \"react\";\nimport { queryParamsContext } from \"./QueryParamsContextProvider\";\nimport QueryParamsContextValue from \"./QueryParamsContextValue\";\n\n\nexport default function useQueryParams<T>() {\n    return React.useContext(queryParamsContext) as QueryParamsContextValue<T>;\n}","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent } from '@mui/material';\nimport { useQueryParams } from '../../contexts/QueryParamsContext';\nimport { APIPagination } from '../../services/interfaces';\n\n\nexport default function ListPagination() {\n    const { queryParams, setQueryParams } = useQueryParams<APIPagination>();\n\n\n    const handlePageChange = React.useCallback((event: React.ChangeEvent<unknown>, value: number) => {\n        setQueryParams(old => ({\n            ...old,\n            currentPage: value\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n    const handleCountChange = React.useCallback((event: SelectChangeEvent<number>, child: React.ReactNode) => {\n        setQueryParams(old => ({\n            ...old,\n            itemsOnPage: Number(event.target.value)\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n\n    return (\n        <Stack spacing={2} sx={{\n            flexWrap: 'wrap',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center'\n        }}>\n            <Pagination\n                count={queryParams.pagesCount}\n                size='small'\n                page={queryParams.currentPage}\n                onChange={handlePageChange}\n            />\n            <FormControl fullWidth sx={{ maxWidth: '100px' }}>\n                <InputLabel id=\"items-on-page-label\">Na stronie</InputLabel>\n                <Select\n                    size='small'\n                    labelId=\"items-on-page-label\"\n                    id=\"items-on-page\"\n                    label=\"Na stronie\"\n                    value={queryParams.itemsOnPage ?? 5}\n                    onChange={handleCountChange}\n                >\n                    {\n                        [5, 10, 15, 20].map(num => <MenuItem key={num} value={num}>{num}</MenuItem>)\n                    }\n                    <MenuItem value={10000}>wszystko</MenuItem>\n                </Select>\n            </FormControl>\n        </Stack>\n    );\n}\n","import { AppURLParams, PaginationQueryParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface LogsQueryParams extends PaginationQueryParams {\n    method?: \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\",\n    userId?: string | number\n}\n\n\nclass LogService extends Service {\n\n    fetch(urlParams: AppURLParams, queryParams: LogsQueryParams) {\n        return this.get(\n            this.preparePath(urlParams) + '/requests',\n            queryParams\n        );\n    }\n\n    async getStats() {\n        return await this.get(`/requests/stats`);\n    }\n}\n\n\nexport default new LogService();","import React from \"react\";\n\n\nexport default function useTrigger(timeInterval: number) {\n    const [trigger, setTrigger] = React.useState<boolean>();\n\n\n    React.useEffect(() => {\n        const int = setInterval(() => setTrigger(old => !old), timeInterval);\n\n        return () => clearInterval(int);\n    }, [\n        timeInterval\n    ]);\n\n    return trigger;\n}","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport Log from \"../../../../../models/Log\";\nimport LogService, { LogsQueryParams } from \"../../../../../services/LogService\";\nimport useTrigger from \"../../../hooks/useTrigger\";\nimport LogsContextValue from \"./LogsContextValue\";\n\n\n\n\nexport const logsContext: any = React.createContext(null);\n\n\ninterface LogsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function LogsContextProvider(props: LogsContextProviderProps) {\n    const urlParams = useParams();\n    const { queryParams, setQueryParams } = useQueryParams<LogsQueryParams>();\n    const notify = useNotification();\n    const refresh = useTrigger(60_000);\n\n    const [logs, setLogs] = React.useState<Log[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await LogService.fetch(urlParams, queryParams);\n            setLogs(resp.data as Log[]);\n\n            resp.pagination && setQueryParams(old => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount,\n            }));\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setLogs([]);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        setQueryParams,\n        queryParams.currentPage,\n        queryParams.itemsOnPage,\n        queryParams.method,\n        queryParams.userId,\n        notify,\n        urlParams,\n    ]);\n\n\n    React.useEffect(() => {\n        load()\n    }, [\n        load,\n        refresh\n    ])\n\n\n    if (!logs) return null;\n\n    return (\n        <logsContext.Provider value={{\n            logs\n        } as LogsContextValue}>\n            {props.children}\n        </logsContext.Provider>\n    )\n}","import InputBase from \"@mui/material/InputBase\";\nimport { SxProps } from \"@mui/system\";\nimport React from \"react\";\n\n\ninterface SimpleInputProps {\n    value: string,\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    label: string,\n    name: string,\n    sx?: SxProps\n}\n\nexport default function LazyInput({\n    value,\n    onChange,\n    label,\n    name,\n    sx,\n}: SimpleInputProps) {\n    const [trigger, setTrigger] = React.useState<any>();\n    const [str, setStr] = React.useState<string>(value);\n\n\n    const handleSearchFieldChange = React.useCallback((evt) => {\n        setStr(evt.target.value);\n        clearTimeout(trigger);\n\n        let timer = setTimeout(() => {\n            onChange(evt);\n        }, 1000);\n        setTrigger(timer);\n    }, [\n        trigger,\n        onChange,\n    ]);\n\n\n    return <InputBase\n        name={name}\n        value={str}\n        onChange={handleSearchFieldChange}\n        placeholder={label}\n        sx={{\n            width: '100%',\n            maxWidth: '600px',\n            p: 1,\n            bgcolor: 'background.default',\n            ...sx\n        }}\n        inputProps={{ 'aria-label': label }}\n    />;\n}","import { Grid, FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport { useQueryParams } from \"../../../../contexts/QueryParamsContext\";\nimport { LogsQueryParams } from \"../../../../services/LogService\";\nimport LazyInput from \"../../../../shared/components/LazyInput\";\n\n\n\nexport function LogsTabBar() {\n    const { queryParams, setQueryParams } = useQueryParams<LogsQueryParams>();\n\n\n    const handleChange = React.useCallback((evt: any) => {\n        evt.preventDefault();\n        setQueryParams(old => ({ ...old, [evt.target.name]: evt.target.value }));\n    }, [setQueryParams])\n\n\n    return (\n        <Grid container component=\"form\" spacing={3}>\n            <Grid item xs={6} md={2}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-metode\">Metoda</InputLabel>\n                    <Select\n                        size=\"small\"\n                        labelId=\"wybierz-metode\"\n                        id=\"metoda\"\n                        value={queryParams.method}\n                        name=\"method\"\n                        label=\"wybierz-metode\"\n                        onChange={handleChange}\n                    >\n                        <MenuItem value=\"\">brak</MenuItem>\n                        <MenuItem value=\"GET\">GET</MenuItem>\n                        <MenuItem value=\"POST\">POST</MenuItem>\n                        <MenuItem value=\"PATCH\">PATCH</MenuItem>\n                        <MenuItem value=\"DELETE\">DELETE</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6} md={3}>\n                <LazyInput\n                    label=\"id użytkownika\"\n                    name='userId'\n                    value={queryParams.userId?.toString() ?? ''}\n                    onChange={(evt) => setQueryParams(old => ({ ...old, userId: evt.target.value }))}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\n","\n\n\nexport function displayDate(dateString: string): string {\n    const date = new Date(dateString);\n    const format = new Intl.DateTimeFormat('pl-PL', {\n        dateStyle: \"medium\",\n        timeStyle: \"medium\"\n    })\n\n    return format.format(date);\n}\n\n\nexport const timeFormat = new Intl.DateTimeFormat('pl-PL', {\n    timeStyle: \"medium\"\n});\n\n\nexport function isDate(str: string | undefined): boolean {\n    if (!str) return false;\n\n    let date = new Date(str);\n    return Boolean(date.getDate())\n}\n\nexport function urlToId(): string {\n    let url = window.location.pathname.toLocaleLowerCase()\n    return url.replaceAll(/\\d/gi, '*')\n}","import { TableRow, TableCell, IconButton, Collapse, Box } from \"@mui/material\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Link } from \"@mui/material\";\nimport Log from \"../../../../models/Log\";\nimport { displayDate } from \"../../../../shared/utils\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\n\ninterface LogRowProps {\n    row: Log\n}\n\nexport default function LogRow(props: LogRowProps) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <>\n            <TableRow hover sx={{ '& > *': { borderBottom: 'unset' } }}>\n                <TableCell>\n                    <IconButton\n                        aria-label=\"szczegóły zapytania\"\n                        size=\"small\"\n                        onClick={() => setOpen(!open)}\n                    >\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">{row.id}</TableCell>\n                {/* <TableCell align=\"left\">{row.method}</TableCell> */}\n                <TableCell align=\"left\">{row.endpoint}</TableCell>\n                <TableCell align=\"left\">{Math.fround(row.time * 1000).toPrecision(6)}</TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box component=\"pre\" sx={{ margin: 1 }}>\n                            <Link component={RouterLink} to={`/users/${row.user}`}>Pokaż użytkownika</Link> <br />\n                            {displayDate(row._created)}&nbsp;|&nbsp;{row.method}&nbsp;{row.endpoint}<br />\n                            czas przetwarzania: {row.time} [s]<br />\n                            Ciało zapytania <br />\n                            {JSON.stringify(\n                                JSON.parse(row.payload),\n                                undefined,\n                                3\n                            )}\n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </>\n    );\n}","import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { Typography } from '@mui/material';\nimport LogRow from './LogRow';\nimport { useLogs } from './LogsContext';\n\n\n\n\nexport default function LogsTable() {\n    const { logs } = useLogs();\n\n    return (\n        <TableContainer>\n            <Table aria-label=\"tabela logów\" size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell />\n                        <TableCell align=\"left\">Id</TableCell>\n                        {/* <TableCell align=\"left\">Metoda</TableCell> */}\n                        <TableCell align=\"left\">Cel/endpoint</TableCell>\n                        <TableCell align=\"left\">Czas wykonania&nbsp;[ms]</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {logs.length === 0 &&\n                        <TableRow>\n                            <TableCell colSpan={6}>\n                                <Typography textAlign=\"center\" p=\"15px 0px\">\n                                    Brak elementów do wyświetlenia\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    }\n\n                    {logs.map((log) => <LogRow key={log.id} row={log} />)}\n                </TableBody>\n            </Table>\n        </TableContainer>\n\n    );\n}\n\n\n\n\n","import React from \"react\";\nimport { logsContext } from \"./LogsContextProvider\";\nimport LogsContextValue from \"./LogsContextValue\";\n\nexport default function useLogs() {\n    return React.useContext(logsContext) as LogsContextValue;\n}","import Stack from \"@mui/material/Stack\";\nimport QueryParamsContextProvider from \"../../../../contexts/QueryParamsContext/QueryParamsContextProvider\";\nimport ListPagination from \"../../../../shared/components/ListPagination\";\nimport { LogsContext } from \"./LogsContext\";\nimport { LogsTabBar } from \"./LogsTabBar\";\nimport LogsTable from \"./LogsTable\";\n\n\n\nexport default function GenericLogsTab() {\n    return (\n        <QueryParamsContextProvider name=\"logs-query-params\" default={{ method: 'PATCH', itemsOnPage: 5 }}>\n            <LogsContext>\n                <Stack spacing={3}>\n                    <LogsTabBar />\n                    <LogsTable />\n                    <ListPagination />\n                </Stack>\n            </LogsContext>\n        </QueryParamsContextProvider>\n    );\n}","import Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { SxProps } from \"@mui/system\";\n\n\n\ninterface SmallCardProps {\n    children: React.ReactNode | React.ReactNode[];\n    title?: string,\n    titleComponent?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6',\n    sx?: SxProps\n}\n\n\nexport default function SmallCard(props: SmallCardProps) {\n    return (\n        <Paper elevation={0} sx={{\n            p: 2,\n            ...props.sx\n        }}>\n            {props?.title && <Typography variant='body2' component={props.titleComponent ?? 'h2'} color='text.secondary'>\n                {props.title}\n            </Typography>}\n            {props.children}\n        </Paper>\n    )\n}","import { Box } from \"@mui/material\";\nimport React from \"react\";\nimport SmallCard from \"../../../../shared/components/SmallCard\";\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    hidden: boolean,\n    index: number\n}\n\n\nexport default function SwipeablePanel(props: TabPanelProps) {\n    const { children, hidden, index, ...other } = props;\n\n    // should component update\n    const render = React.useMemo(() =>\n        <Box\n            role=\"tabpanel\"\n            hidden={hidden}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            <SmallCard>{children}</SmallCard>\n        </Box>\n        , [hidden, index, children, other]);\n\n    return render;\n}","import { Tab, Tabs, Typography, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport SwipeablePanel from \"./SwipeablePanel\";\n\n\ninterface SwipeableTabsProps {\n    tabs: { name: string, component: React.ReactNode }[],\n}\n\n\nfunction a11yProps(index: number) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\n\nexport default function SwipeableTabs(props: SwipeableTabsProps) {\n    const theme = useTheme();\n    const [tabIndex, setTabIndex] = React.useState(0);\n\n\n    const handleTabChange = React.useCallback((event: React.SyntheticEvent, newValue: number) => {\n        setTabIndex(newValue);\n    }, []);\n\n\n    const handleChangeIndex = React.useCallback((index: number) => {\n        setTabIndex(index);\n    }, []);\n\n\n    const renderedTabs = React.useMemo(() => {\n        return props.tabs.map((page, index) => <Tab\n            key={index}\n            label={<Typography component='h2' variant='button'>{page.name}</Typography>}\n            {...a11yProps(index)}\n        />)\n    }, [props.tabs]);\n\n\n    const renderedTabPanels = React.useMemo(() => {\n        return props.tabs.map((page, index) => <SwipeablePanel\n            key={index}\n            index={index}\n            hidden={tabIndex !== index}\n            dir={theme.direction}\n        >\n            {page.component}\n        </SwipeablePanel>)\n    }, [\n        props.tabs,\n        tabIndex,\n        theme.direction,\n    ]);\n\n\n    return (\n        <div>\n            <Tabs\n                allowScrollButtonsMobile\n                value={tabIndex}\n                onChange={handleTabChange}\n                indicatorColor=\"primary\"\n                variant=\"scrollable\"\n                sx={{ borderBottom: 2, borderColor: 'divider' }}\n            >\n                {renderedTabs}\n            </Tabs>\n            <br />\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={tabIndex}\n                onChangeIndex={handleChangeIndex}\n            >\n                {renderedTabPanels}\n            </SwipeableViews>\n        </div>\n    );\n}","import Service from \"./Service\";\n\n\n\nexport interface AccessViewParams {\n    addressId: string,\n}\n\n\nexport interface AccessUpdateParams {\n    [index: string]: string | boolean | undefined,\n    name?: string,\n    owner?: boolean,\n    accessAdmin?: boolean,\n    premisesAdmin?: boolean,\n    keysAdmin?: boolean,\n    reservationsAdmin?: boolean,\n    reservationsAbility?: boolean,\n    logsAdmin?: boolean,\n    statsViewer?: boolean,\n}\n\nexport interface AccessCreateParams {\n    name: string,\n}\n\n\nclass AccessService extends Service {\n    _path = '/accesses';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public getAll() {\n        return this.get('/accesses');\n    }\n\n    public remove(id?: number) {\n        return this.delete(\n            id ? `${this.path}/${id}` : this.path\n        );\n    }\n\n    public update(id: number, data: AccessUpdateParams) {\n        return this.patch(`${this.path}/${id}`, data);\n    }\n\n    public create(data: AccessCreateParams) {\n        return this.post(this.path, data)\n    }\n}\n\nexport default new AccessService()","import Typography from \"@mui/material/Typography\";\nimport Model from \"../../models/Model\";\nimport { displayDate } from \"../utils\";\n\n\n\ninterface DatesFooterProps {\n    model: Model\n}\n\nexport default function DatesFooter(props: DatesFooterProps) {\n    return (\n        <Typography color=\"text.secondary\" variant='body2' fontSize='smaller'>\n            Utworzono: {displayDate(props.model._created)}<br />\n            Ostatnia aktualizacja: {displayDate(props.model._updated)}\n        </Typography>\n    )\n}","import Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SaveIcon from '@mui/icons-material/Save';\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\n\n\ninterface FormGridContainerProps {\n    title: string,\n    subtitle?: string,\n    onSubmit: () => void,\n    onCancel: () => void,\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function FormGridContainer({\n    title,\n    subtitle,\n    onSubmit,\n    onCancel,\n    children,\n}: FormGridContainerProps) {\n\n\n    const handleSubmit = React.useCallback((event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        onSubmit();\n    }, [\n        onSubmit\n    ]);\n\n\n    return (\n        <Stack rowGap={3}>\n            <span>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    {title}\n                </Typography>\n\n                {subtitle && <Typography variant=\"body2\" color='text.secondary' mt='5px'>\n                    {subtitle}\n                </Typography>}\n            </span>\n\n            <Grid container spacing={2} component=\"form\" onSubmit={handleSubmit} >\n                {children}\n                <Grid item xs={12}>\n                    <Stack direction=\"row\" justifyContent=\"space-around\" mt={1.5}>\n                        <Button\n                            aria-label=\"Zamknij\"\n                            title='Zamknij'\n                            startIcon={<CancelIcon />}\n                            onClick={onCancel}\n                        >\n                            Zamknij\n                        </Button>\n                        <Button\n                            aria-label=\"Zatwierdź\"\n                            title='Zatwierdź'\n                            startIcon={<SaveIcon color='inherit' />}\n                            type=\"submit\"\n                            color=\"success\"\n                        >\n                            Zatwierdź\n                        </Button>\n                    </Stack>\n                </Grid>\n            </Grid>\n        </Stack>\n    );\n}","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport { SxProps } from '@mui/system';\nimport { Paper } from '@mui/material';\n\n\ninterface GenericModalProps {\n  children: React.ReactNode | React.ReactNode[],\n  open: boolean,\n  sx?: SxProps,\n  onClose: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function GenericModal({\n  children, open, sx, onClose\n}: GenericModalProps) {\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        overflow: 'auto'\n      }}\n    >\n      <Fade in={open}>\n        <Paper sx={{\n          bgcolor: 'background.paper',\n          position: 'absolute' as 'absolute',\n          // borderRadius: (theme) => theme.shape.borderRadius,\n          width: '95%',\n          mt: '5vw',\n          maxWidth: '500px',\n          // overflow: 'auto',\n          boxShadow: 24,\n          p: 3,\n          ...sx\n        }}>\n          {children}\n        </Paper>\n      </Fade>\n    </Modal >\n  );\n}\n","import FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Grid from \"@mui/material/Grid\";\nimport Switch from \"@mui/material/Switch\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport Access from \"../../../../models/Access\";\nimport { AccessUpdateParams } from \"../../../../services/AccessService\";\nimport DatesFooter from \"../../../../shared/components/DatesFooter\";\nimport FormGridContainer from \"../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../../../shared/components/GenericModal\";\n\n\n\ninterface AccessEditModalProps {\n    access: Access,\n    open: boolean,\n    onClose: () => void,\n    onSubmit: (accessId: number, data: AccessUpdateParams) => Promise<boolean>\n}\n\n\nconst fields = [\n    {\n        name: 'owner',\n        label: 'Właściciel'\n    }, {\n        name: 'accessAdmin',\n        label: 'Administrator klas dostępu'\n    }, {\n        name: 'premisesAdmin',\n        label: 'Administrator inwentarza'\n    }, {\n        name: 'keysAdmin',\n        label: 'Administrator kluczy'\n    }, {\n        name: 'reservationsAdmin',\n        label: 'Administrator rezerwacji '\n    }, {\n        name: 'reservationsAbility',\n        label: 'Możliwość rezerwacji'\n    }, {\n        name: 'logsAdmin',\n        label: 'Administrator logów'\n    }, {\n        name: 'statsViewer',\n        label: 'Dostęp do statystyk'\n    },\n];\n\n\nexport default function AccessEditModal({\n    access,\n    open,\n    onClose,\n    onSubmit,\n}: AccessEditModalProps) {\n\n    const [data, setData] = React.useState<AccessUpdateParams>({});\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | boolean;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = event.target.value;\n                break;\n            default:\n                value = event.target.checked;\n                break;\n        }\n\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await onSubmit(access.id, data)) {\n            onClose();\n            setData({});\n        }\n    }, [\n        onClose,\n        onSubmit,\n        access.id,\n        data\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n        >\n            <FormGridContainer\n                onSubmit={handleSubmit}\n                onCancel={close}\n                title=\"Edycja klasy dostępu\"\n                subtitle=\"Edycja klasy dostępu. Wprowadzone zmiany w sposób istotny wpływają na zakres funkcji użytkowników.\"\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        name=\"name\"\n                        label=\"nazwa\"\n                        id=\"nazwa\"\n                        value={data.name ?? access.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                {\n                    fields.map((field, index) =>\n                        <Grid item xs={12} key={index}>\n                            <FormControlLabel\n                                labelPlacement=\"start\"\n                                control={<Switch\n                                    id={`access-${field.name}`}\n                                    name={field.name}\n                                    inputProps={{ 'aria-label': field.label }}\n                                    onChange={handleChange}\n                                    checked={(field.name in data) ? data[field.name] : (access[field.name])}\n                                />}\n                                label={field.label}\n                            />\n                        </Grid>\n                    )\n                }\n                <Grid item xs={12} ml={2}>\n                    <DatesFooter model={access} />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    )\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { AccessCreateParams } from \"../../../../services/AccessService\";\nimport FormGridContainer from \"../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../../../shared/components/GenericModal\";\n\n\n\ninterface CreateAccessModalProps {\n    open: boolean,\n    onClose: () => void,\n    onSubmit: (data: AccessCreateParams) => Promise<boolean>\n}\n\n\nexport default function CreateAccessModal({\n    open,\n    onClose,\n    onSubmit,\n}: CreateAccessModalProps) {\n\n    const [name, setName] = React.useState<string>('');\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setName(event.target.value);\n    }, []);\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setName('');\n    }, [\n        onClose\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await onSubmit({\n            name: name\n        })) {\n            onClose();\n            setName('');\n        }\n    }, [\n        onClose,\n        onSubmit,\n        name\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n        >\n            <FormGridContainer\n                onSubmit={handleSubmit}\n                onCancel={close}\n                title=\"Tworzenie klasy dostępu\"\n                subtitle=\"Podaj nazwę dla nowej klasy dostępu. Stworzona zostanie klasa bez żadnych uprawnień - pamiętaj aby dostosować ja do swoich potrzeb.\"\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        autoFocus\n                        required\n                        name=\"name\"\n                        label=\"nazwa\"\n                        id=\"nazwa\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n            </FormGridContainer>\n        </GenericModal>\n    )\n}","import React from \"react\";\nimport { AccessContextValue } from \".\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport Access from \"../../../../models/Access\";\nimport AccessService, { AccessCreateParams, AccessUpdateParams } from \"../../../../services/AccessService\";\nimport { EditForm } from \"../Forms\";\n\n\n\nexport const accessContext: any = React.createContext(null);\n\n\ninterface AccessContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function AccessContextProvider(props: AccessContextProviderProps) {\n    const notify = useNotification();\n\n    const [modalOpen, setModalOpen] = React.useState<boolean>(false);\n    const [selectedAccessId, setSelectedAccessId] = React.useState<number>();\n    const [accessesList, setAccessesList] = React.useState<Access[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await AccessService.getAll();\n            setAccessesList(resp.data as Access[]);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setAccessesList([]);\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const updateAccess = React.useCallback(async (accessId: number, data: AccessUpdateParams) => {\n        try {\n            if (await AccessService.update(accessId, data)) {\n                setAccessesList(old => {\n                    if (old)\n                        return old.map(access => {\n                            if (access.id === accessId) {\n                                access = {\n                                    ...access,\n                                    ...data\n                                }\n                            }\n                            return access;\n                        });\n\n                });\n                notify('Klasa dostępu została zaktualizowana', 'success');\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const deleteAccess = React.useCallback(async (id?: number) => {\n        try {\n            await AccessService.remove(id);\n\n            setAccessesList(old => {\n                if (!old) return;\n                return old.filter(access => access.id !== id);\n            });\n\n            notify('Klasa dostępu została usunięta', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const createAccess = React.useCallback(async (data: AccessCreateParams) => {\n        try {\n            const resp = await AccessService.create(data);\n\n            setAccessesList(old => {\n                old?.unshift({\n                    ...data,\n                    id: resp.data,\n                    _created: (new Date()).toUTCString(),\n                    _updated: (new Date()).toUTCString(),\n                } as Access)\n                return Object.assign([], old);\n            });\n\n            notify('Klasa dostępu została utworzona', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const selectedAccess = React.useMemo(() => {\n        return accessesList?.find(({ id }) => id === selectedAccessId);\n    }, [selectedAccessId, accessesList]);\n\n\n    const openAccess = React.useCallback((id: number) => {\n        setSelectedAccessId(id);\n        setModalOpen(true);\n    }, []);\n\n\n    if (!accessesList) return null;\n\n    return (\n        <accessContext.Provider value={{\n            accessesList,\n            updateAccess,\n            deleteAccess,\n            createAccess,\n            openAccess,\n        } as AccessContextValue}>\n            {props.children}\n            {\n                selectedAccess &&\n                <EditForm\n                    open={modalOpen}\n                    onSubmit={updateAccess}\n                    onClose={() => setModalOpen(false)}\n                    access={selectedAccess}\n                />\n            }\n        </accessContext.Provider>\n    );\n}","import React from \"react\";\nimport { accessContext } from \"./AccessContextProvider\";\nimport AccessContextValue from \"./AccessContextValue\";\n\n\nexport default function useAccess() {\n    return React.useContext(accessContext) as AccessContextValue;\n}","import { Button, Stack, TextField, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport useNotification from \"../../../contexts/NotificationContext/useNotification\";\nimport GenericModal from \"../GenericModal\";\n\n\ninterface DeleteModalProps {\n    open: boolean,\n    onClose: () => void,\n    objectName: string,\n    onSuccess: () => void\n}\n\nexport default function DeleteModal({\n    open, onSuccess, onClose, objectName\n}: DeleteModalProps) {\n    const notify = useNotification();\n    const [input, setInput] = React.useState<string>('');\n\n\n    const handleConfirm = React.useCallback(async () => {\n        if (input !== objectName) {\n            notify(\"Wpisana nazwa jest niepoprawna\", 'error');\n            return;\n        }\n        onSuccess();\n        setInput('');\n    }, [objectName, input, onSuccess, notify]);\n\n\n    const close = React.useCallback(() => {\n        setInput('');\n        onClose();\n    }, [onClose]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            aria-label=\"Okno do usuwania obiektu\"\n            sx={{\n                maxWidth: \"400px\",\n            }}\n        >\n            <Stack direction=\"column\" spacing={3}>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    Usuwanie obiektu\n                </Typography>\n                <Typography variant=\"body1\" color='text.secondary'>\n                    Tej operacji nie da się cofnąć.\n                    <br />\n                    1. Przepisz nazwę <b>{objectName}</b><br />\n                    2. Naciśnij 'Zatwierdź'\n                </Typography>\n                <TextField\n                    id=\"resource-name\"\n                    label=\"nazwa\"\n                    variant=\"outlined\"\n                    value={input}\n                    onChange={(evt) => setInput(evt.target.value)}\n                />\n                <Stack direction=\"row\" justifyContent=\"space-around\">\n                    <Button startIcon={<CancelIcon />} onClick={close}>Anuluj</Button>\n                    <Button startIcon={<DeleteIcon color=\"inherit\" />} onClick={handleConfirm} color=\"error\">Zatwierdź</Button>\n                </Stack>\n            </Stack>\n        </GenericModal>\n    );\n}","import Typography from \"@mui/material/Typography\";\n\n\n\ninterface TabHeadLineProps {\n    title: string | React.ReactNode,\n    subtitle?: string | React.ReactNode,\n}\n\n\nexport default function TabHeadLine(props: TabHeadLineProps) {\n    return (\n        <span>\n            <Typography variant='h4' component='h2' color='primary.dark'>\n                {props.title}\n            </Typography>\n            {\n                props.subtitle &&\n                <Typography variant=\"body1\" color='text.secondary' mt='5px'>\n                    {props.subtitle}\n                </Typography>\n            }\n        </span>\n    )\n}","import TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport IconButton from '@mui/material/IconButton';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\n\n\ninterface AddItemProps {\n    onClick: () => void\n}\n\n\nexport default function AddItem(props: AddItemProps) {\n    return (\n        <TableRow\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        >\n            <TableCell colSpan={12} align=\"left\">\n                <IconButton\n                    title=\"Dodaj klasę dostępu\"\n                    aria-label='Dodaj klasę dostępu'\n                    onClick={props.onClick}\n                >\n                    <AddCircleIcon fontSize='large' />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}","import TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport IconButton from '@mui/material/IconButton';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\n\ninterface RowItemProps {\n    id: number,\n    name: string,\n    onSelect: () => void,\n    onDelete: () => void\n}\n\n\nexport default function RowItem(props: RowItemProps) {\n    return (\n        <TableRow\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        >\n            <TableCell component=\"th\" scope=\"row\">{props.id}</TableCell>\n            <TableCell align=\"left\">{props.name}</TableCell>\n            <TableCell align=\"center\">\n                <IconButton \n                title='Usuń klasę dostępu'\n                aria-label='Usuń klasę dostępu'\n                color='error' \n                onClick={props.onDelete}\n                >\n                    <DeleteIcon />\n                </IconButton>\n                <IconButton\n                    title='Otwórz w oknie'\n                    aria-label='Otwórz w oknie'\n                    onClick={props.onSelect}\n                >\n                    <OpenInNewIcon />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}","import Stack from \"@mui/material/Stack\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport React from \"react\";\nimport DeleteModal from \"../../../../../shared/components/DeleteModal\";\nimport TabHeadLine from \"../../../../../shared/components/TabHeadLine\";\n\nimport { useAccess } from \"../../AccessContext\";\nimport { CreateForm } from \"../../Forms\";\nimport AddItem from \"./AddItem\";\nimport RowItem from \"./RowItem\";\n\n\n\nexport default function AccessesList() {\n    const { accessesList, openAccess, createAccess, deleteAccess } = useAccess();\n\n    const [createModalOpen, setCreateModalOpen] = React.useState(false);\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);\n\n    const [toDelete, setToDelete] = React.useState<{ id: number, name: string } | null>(null);\n\n    const renderedRows = React.useMemo(() => {\n        return accessesList.map(({ id, name }) =>\n            <RowItem\n                key={id}\n                id={id}\n                name={name}\n                onSelect={() => openAccess(id)}\n                onDelete={() => {\n                    setToDelete({ id: id, name: name })\n                    setDeleteModalOpen(true);\n                }}\n            />).reverse();\n\n    }, [\n        accessesList,\n        openAccess,\n    ]);\n\n\n    const handleDelete = React.useCallback(async () => {\n        if (!toDelete) return;\n\n        if (await deleteAccess(toDelete.id)) {\n            setDeleteModalOpen(false);\n        }\n    }, [toDelete, deleteAccess]);\n\n\n    return (\n        <>\n\n            <CreateForm\n                open={createModalOpen}\n                onClose={() => setCreateModalOpen(false)}\n                onSubmit={createAccess}\n            />\n\n            <DeleteModal\n                objectName={toDelete?.name ?? ''}\n                open={deleteModalOpen}\n                onClose={() => {\n                    setToDelete(null);\n                    setDeleteModalOpen(false);\n                }}\n                onSuccess={handleDelete}\n            />\n\n            <Stack spacing={4}>\n                <TabHeadLine\n                    title=\"Lista klas dostępu\"\n                    subtitle=\"Twórz, edytuj i usuwaj klasy dostępu.\"\n                />\n\n                <TableContainer>\n                    <Table sx={{ maxWidth: 550 }} size=\"small\" aria-label=\"tabela klas dostępów\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>nr id</TableCell>\n                                <TableCell align=\"left\">nazwa</TableCell>\n                                <TableCell align=\"center\">opcje</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n\n                            {renderedRows}\n\n                            <AddItem onClick={() => setCreateModalOpen(true)} />\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n            </Stack >\n        </>\n    );\n}","import Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\n\n\nconst explonations = [\n    {\n        field: 'Identyfikator - id',\n        text: 'Numer identyfikacyjny klasy dostępu. Ten numer przypisujesz użytkownikowi podczas zmiany uprawnień.'\n    },\n    {\n        field: 'Nazwa - name',\n        text: 'Nazwa klasy dostępu'\n    }, {\n        field: 'Właściciel - owner',\n        text: <>Najwyższy zestaw uprawnień.\n            Użytkownik ma możliwość zmiany konfiguracji platformy oraz posiada on wszystkie inne uprawnienia włączając w to edytowanie danych innych użytkowników.\n            Jest właścicielem platformy.</>\n    }, {\n        field: 'Administrator klas dostępu - accessAdmin',\n        text: 'Użytkownik ma możliwość tworzenia, edytowania oraz usuwania klas dostępu. Jest odpowiedzialny za przydzielanie dostępu użytkownikom.'\n    }, {\n        field: 'Administrator inwentarza - premisesAdmin',\n        text: 'Użytkownik jest odpowiedzialny za tworzenie, edycję i usuwanie adresów, budynków i sal.'\n    }, {\n        field: 'Administrator kluczy - keysAdmin',\n        text: 'Użytkownik ma możliwość przypisywania i usuwania tagów RFID dla każdej sali.'\n    }, {\n        field: 'Możliwość rezerwacji - reservationsAbility',\n        text: 'Użytkownik ma możliwość tworzenia rezerwacji'\n    }, {\n        field: 'Administrator rezerwacji - reservationsAdmin',\n        text: 'Użytkownik ma możliwość edytowania oraz usuwania rezerwacji stworzonych przez innych użytkowników.'\n    }, {\n        field: 'Administrator logów - logsAdmin',\n        text: 'Użytkownik ma możliwość przeglądania logów aplikacji.'\n    }, {\n        field: 'Dostęp do statystyk - statsViewer',\n        text: 'Użytkownik może przeglądać statystyki wygenerowane dla aplikacji, użytkownika, budynku i pokoju.'\n    },\n];\n\n\n\nexport default function AccessInfo() {\n\n\n\n    const rendered = React.useMemo(() => {\n        return explonations.map(({ field, text }, id) =>\n            <li key={id}>\n                <Typography variant='subtitle1' component='h3'>\n                    {field}\n                </Typography>\n                <Typography variant='body2' color='text.secondary' mb={1}>\n                    {text}\n                </Typography>\n            </li>\n        );\n    }, []);\n\n\n    return (\n        <Stack spacing={3}>\n            <span>\n                <Typography component='h1' variant='h3' color='primary.dark'>\n                    Klasy Dostępu\n                </Typography>\n                <Typography variant='body1' color=\"text.secondary\" mt=\"5px\">\n                    Dostępne tutaj opcje wpływają znacząco na funkcjonowanie całej platformy. <br />\n                    Konigurowanie klas dostępu użytkowników to bardzo odpowiedzialne zadanie. Upewnij się że nadajesz tylko wymagane uprawnienia.\n                    Stosuj się do modelu <a target='_blank' rel=\"noreferrer\" href='https://en.wikipedia.org/wiki/Principle_of_least_privilege'>Least Privilege</a>.\n                </Typography>\n            </span>\n\n\n            <span>\n                <Typography variant='h5' component='h2'>\n                    Pola używane w klasach dostępu:\n                </Typography>\n                <ul>\n                    {rendered}\n\n                </ul>\n            </span>\n\n\n        </Stack>\n    );\n}","import { Link as RouterLink } from \"react-router-dom\";\nimport { Link as LinkIcon } from \"@mui/icons-material\";\nimport { Link, LinkProps } from \"@mui/material\";\n\n\ninterface AppLinkProps extends LinkProps {\n    to: string,\n    withIcon?: boolean,\n}\n\nexport default function AppLink(props: AppLinkProps) {\n    const { withIcon, ...restProps } = props;\n    return (\n        <Link\n            component={RouterLink}\n            underline=\"hover\"\n            display='inline-flex'\n            {...restProps}\n        >\n            {withIcon && <><LinkIcon fontSize=\"small\" />&nbsp;</>}\n            {restProps.children}\n        </Link >\n    );\n}","import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport Card from '@mui/material/Card';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { useAccess } from \"../../AccessContext\";\nimport MenuItem from '@mui/material/MenuItem';\nimport Box from '@mui/material/Box';\nimport User from '../../../../../models/User';\nimport useNotification from '../../../../../contexts/NotificationContext/useNotification';\nimport UserService from '../../../../../services/UserService';\nimport LinkIcon from '@mui/icons-material/Link';\nimport AppLink from '../../../../../shared/components/AppLink';\nimport { dynamicPaths } from '../../../../../shared/path';\nimport TabHeadLine from '../../../../../shared/components/TabHeadLine';\n\n\nfunction usersNotUsers(a: readonly User[], b: readonly User[]) {\n    return a.filter(ai => (b.find(bi => bi.id === ai.id) === undefined));\n}\n\nfunction notNumNum(a: readonly number[], b: readonly number[]) {\n    return a.filter((value) => b.indexOf(value) === -1);\n}\n\n\nfunction intersection(a: readonly number[], b: readonly User[]) {\n    return a.filter((value) => b.find(({ id }) => id === value));\n}\n\n\nexport default function EditUsersAccess() {\n    const { accessesList } = useAccess();\n    const notify = useNotification();\n\n    const [checked, setChecked] = React.useState<readonly number[]>([]);\n\n    const [leftUsers, setLeftUsers] = React.useState<User[]>([]);\n    const [rightUsers, setRightUsers] = React.useState<User[]>([]);\n\n    const [access, setAccess] = React.useState<{\n        [index: string]: number,\n        right: number,\n        left: number\n    }>({ left: accessesList[0]?.id, right: accessesList[1]?.id });\n\n\n    const updateUsersAccess = React.useCallback(async (users: User[], accessId: number) => {\n        const calls = users.map(async (user) => {\n            try {\n                await UserService.updateAccess(user.id, accessId);\n                return user;\n            } catch (err: any) {\n                notify(err.description, 'error');\n                return false;\n            }\n        });\n        let results = await Promise.all(calls);\n        return results.filter(item => item !== false) as User[];\n    }, [notify]);\n\n\n    const loadUsers = React.useCallback(async (accessId: number) => {\n        try {\n            const resp = await UserService.getUsers({ accessId: accessId, deleted: false });\n            return resp.data as User[];\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return [];\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        loadUsers(access.left).then(data => setLeftUsers(data))\n    }, [\n        access.left,\n        loadUsers,\n    ]);\n\n\n    React.useEffect(() => {\n        loadUsers(access.right).then(data => setRightUsers(data))\n    }, [\n        access.right,\n        loadUsers,\n    ]);\n\n\n\n    const leftChecked = React.useMemo(() => intersection(checked, leftUsers), [checked, leftUsers]);\n    const rightChecked = React.useMemo(() => intersection(checked, rightUsers), [checked, rightUsers]);\n\n\n    const handleToggle = React.useCallback((value: number) => () => {\n        setChecked(old => {\n            const currentIndex = old.indexOf(value);\n            const checked = Object.assign([], old) as number[];\n\n            if (currentIndex === -1) {\n                checked.push(value);\n            } else {\n                checked.splice(currentIndex, 1);\n            }\n            return checked\n        });\n    }, []);\n\n\n    // to the right\n    const handleCheckedRight = React.useCallback(async () => {\n        const usersToMove = leftUsers.filter(({ id }) => leftChecked.indexOf(id) !== -1);\n\n        const moved = await updateUsersAccess(usersToMove, access.right);\n        setRightUsers(rightUsers.concat(moved));\n\n        setLeftUsers(usersNotUsers(leftUsers, moved)); //not user who is selected\n        setChecked(notNumNum(checked, leftChecked)); // uncheck checked elements\n    }, [\n        leftChecked,\n        rightUsers,\n        leftUsers,\n        checked,\n        access.right,\n        updateUsersAccess,\n    ]);\n\n\n    // to the left\n    const handleCheckedLeft = React.useCallback(async () => {\n        const usersToMove = rightUsers.filter(({ id }) => rightChecked.indexOf(id) !== -1);\n\n        const moved = await updateUsersAccess(usersToMove, access.left);\n        setLeftUsers(leftUsers.concat(moved));\n\n        let l = usersNotUsers(rightUsers, moved);\n        console.log(l);\n        setRightUsers(l); //not user who is selected\n        setChecked(notNumNum(checked, rightChecked)); // uncheck checked elements\n\n    }, [\n        rightChecked,\n        leftUsers,\n        rightUsers,\n        checked,\n        access.left,\n        updateUsersAccess,\n    ]);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<number>): void => {\n        const value = Number(event.target.value);\n\n        setAccess(old => {\n            if (old.left === value || old.right === value) return old;\n\n            return {\n                ...old,\n                [event.target.name]: Number(event.target.value)\n            }\n        });\n    }, []);\n\n\n    const customList = React.useCallback((direction: string, users: readonly User[]) => (\n        <Card>\n            <Box sx={{ p: 2 }}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-klase-dostępu\">Klasa dostępu</InputLabel>\n                    <Select\n                        labelId=\"wybierz-klase-dostępu\"\n                        name={direction}\n                        value={access[direction]}\n                        label=\"klasa dostępu\"\n                        onChange={handleSelectChange}\n                    >\n                        {accessesList.map(({ name, id }) => <MenuItem key={name} value={id} >{name} </MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Box>\n\n            <Divider />\n            <List\n                sx={{\n                    // maxWidth: 400,\n                    // width: '30vw',\n                    height: 550,\n                    bgcolor: 'background.paper',\n                    overflow: 'auto',\n                }}\n                dense\n                component=\"div\"\n                role=\"list\"\n            >\n                {users.map((user: User) => {\n                    const labelId = `transfer-list-all-item-${user.id}-label`;\n\n                    return (\n                        <ListItem\n                            key={user.id}\n                            role=\"listitem\"\n                            button\n                            onClick={handleToggle(user.id)}\n                        >\n                            <ListItemIcon>\n                                <Checkbox\n                                    checked={checked.indexOf(user.id) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    inputProps={{\n                                        'aria-labelledby': labelId,\n                                    }}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={labelId} primary={user.email} />\n\n                            <ListItemIcon onClick={(ev: any) => ev.stopPropagation()} color='primary'>\n                                <AppLink to={dynamicPaths.toUser(user.id)}>\n                                    <LinkIcon />\n                                </AppLink>\n                            </ListItemIcon>\n                        </ListItem>\n                    );\n                })}\n                <ListItem />\n            </List>\n        </Card>\n    ), [handleToggle, checked, handleSelectChange, access, accessesList]);\n\n    return (\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n                <TabHeadLine\n                    title='Administracja klasami dostępu'\n                    subtitle='Wybierz stworzone klasy dostępu i przydzielaj role dla użytkowników'\n                />\n            </Grid>\n\n            <Grid item xs={12} sm={5}>{customList('left', leftUsers)}</Grid>\n            <Grid item>\n                <Grid container direction=\"column\" alignItems=\"center\">\n                    <Button\n                        sx={{ my: 0.5 }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={handleCheckedRight}\n                        disabled={leftChecked.length === 0}\n                        aria-label=\"move selected right\"\n                    >\n                        &gt;\n                    </Button>\n                    <Button\n                        sx={{ my: 0.5 }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={handleCheckedLeft}\n                        disabled={rightChecked.length === 0}\n                        aria-label=\"move selected left\"\n                    >\n                        &lt;\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm={5}>{customList('right', rightUsers)}</Grid>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport { AccessContext } from \"./AccessContext\";\nimport AccessesList from \"./components/AccessesList\";\nimport AccessInfo from \"./components/AccessInfo\";\nimport EditUsersAccess from \"./components/EditUsersAccess\";\n\n\nexport default function AccessPage() {\n\n\n    const pages = React.useMemo(() => {\n        let arr: any = [];\n        arr.push({ name: 'Informacje', component: <AccessInfo /> });\n        arr.push({ name: 'Lista klas', component: <AccessesList /> });\n        arr.push({ name: 'Administracja', component: < EditUsersAccess /> });\n        arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <AccessContext>\n            <SwipeableTabs tabs={pages} />\n        </AccessContext >\n    );\n}","import { useContext } from \"react\";\nimport { sessionContext } from \"./sessionProvider\";\nimport SessionValue from \"./SessionValue\";\n\n\n\nexport default function useSession() {\n  return useContext(sessionContext) as SessionValue;\n}","import { RoomType } from \"../models/Room\";\nimport { BuildingViewParams } from \"./BuildingService\";\nimport Service from \"./Service\";\n\n\nexport interface RoomViewParams {\n    roomId: string,\n    buildingId: string,\n    addressId: string\n}\n\n\nexport interface RoomUpdateParams {\n    name?: string,\n    roomType?: RoomType,\n    seatsCount?: number,\n    floor?: number,\n    buildingId?: number,\n    blocked?: boolean,\n}\n\n\nexport interface CreateRoomParams {\n    name: string,\n    roomType: RoomType,\n    seatsCount: number,\n    floor:number\n}\n\n\n\nclass RoomService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath({ addressId, buildingId, roomId }: RoomViewParams) {\n        this._path = `/addresses/${addressId}/buildings/${buildingId}/rooms/${roomId}`;\n    }\n\n    public getView() {\n        return this.get(this.path);\n    }\n\n    public create({ addressId, buildingId }: BuildingViewParams, data: CreateRoomParams) {\n        return this.post(`/addresses/${addressId}/buildings/${buildingId}/rooms`, data);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(body: RoomUpdateParams) {\n        return this.patch(this.path, body);\n    }\n\n    public updateRFID(key: string) {\n        return this.patch(`${this.path}/keys`, {\n            \"RFIDTag\": key\n        });\n    }\n\n    public deleteRFIDTag() {\n        return this.delete(`${this.path}/keys`);\n    }\n}\n\nexport default new RoomService()","import Service from \"./Service\";\n\n\nexport interface AddressViewParams {\n    addressId: string,\n}\n\n\nexport interface UpdateAddressParams {\n    [index: string]: string | undefined,\n    country?: string,\n    town?: string,\n    postalCode?: string,\n    street?: string,\n    number?: string\n}\n\n\nexport interface CreateAddressParams {\n    country: string,\n    town: string,\n    postalCode: string,\n    street?: string,\n    number?: string,\n}\n\n\nclass AddressService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath(params: AddressViewParams) {\n        this._path = this.preparePath(params);\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(data: UpdateAddressParams) {\n        return this.patch(this.path, data);\n    }\n\n    public create(data: CreateAddressParams) {\n        return this.post('/addresses', data);\n    }\n\n    public getBuildings() {\n        return this.get(`${this.path}/buildings`);\n    }\n\n    public getResourcesMap() {\n        return this.get('/addresses/resources');\n    }\n}\n\n\nexport default new AddressService();","import React from \"react\";\nimport useSession from \"../../auth/useSession\";\nimport AddressMap from \"../../models/AddressMap\";\nimport useTrigger from \"../../pages/protected/hooks/useTrigger\";\nimport AddressService from \"../../services/AddressService\";\nimport useNotification from \"../NotificationContext/useNotification\";\nimport ResourceMapContextValue from \"./ResourceMapContextValue\";\n\n\n\n\nexport const resourceMapContext: any = React.createContext(null);\n\n\ninterface ResourceMapContextProviderProps {\n    children?: React.ReactNode[]\n}\n\n\nexport default function ResourceMapContextProvider(props: ResourceMapContextProviderProps) {\n    const [resourceMap, setResources] = React.useState<AddressMap[]>([]);\n    const [loaded, setLoaded] = React.useState<boolean>(false);\n    const refresh = useTrigger(300_000);\n\n    const { user } = useSession();\n    const notify = useNotification();\n\n    const loadResourceMap = React.useCallback(async (): Promise<void> => {\n        try {\n            const resp = await AddressService.getResourcesMap();\n            resp?.data && setResources(resp.data as any);\n        } catch (err: any) {\n            notify(err.description, \"error\");\n        }\n    }, [notify]);\n\n    const reloadMap = (): void => {\n        loadResourceMap();\n    }\n\n    React.useEffect(() => {\n        user && loadResourceMap();\n        setLoaded(true);\n    }, [\n        user,\n        loadResourceMap,\n        refresh\n    ]);\n\n\n    const getRoomLink = React.useCallback((roomId: number): string => {\n        return '/app' + resourceMap.map(addr => addr.buildings.map(bld => bld.rooms))\n            .flat(2)\n            .find(item => item.id === roomId)\n            ?.href ?? '';\n    }, [resourceMap]);\n\n\n    const allRooms = React.useMemo(() => {\n        return resourceMap.map(addr => addr.buildings.map(bld => bld.rooms)).flat(2)\n    }, [resourceMap]);\n\n\n    const allBuildings = React.useMemo(() => {\n        return resourceMap.map(addr => addr.buildings.map(({ name, href, id }) => ({ name, href, id }))).flat(2);\n    }, [resourceMap]);\n\n\n    const allAddresses = React.useMemo(() => {\n        return resourceMap.map(({ name, href, id }) => ({ name, href, id }));\n    }, [resourceMap]);\n\n\n    const getBuildingLink = React.useCallback((buildingId: number): string => {\n        return '/app' + resourceMap.map(addr => addr.buildings)\n            .flat(2)\n            .find(item => item.id === buildingId)\n            ?.href ?? '';\n    }, [resourceMap]);\n\n\n    if (loaded === false) return null;\n\n    return (\n        <resourceMapContext.Provider value={{\n            resourceMap,\n            reloadMap,\n            allRooms,\n            getRoomLink,\n            getBuildingLink,\n            allAddresses,\n            allBuildings,\n        } as ResourceMapContextValue}>\n            {props.children}\n        </resourceMapContext.Provider>\n    );\n}","import React from \"react\";\nimport { resourceMapContext } from \"./ResourceMapContextProvider\";\nimport ResourceMapContextValue from \"./ResourceMapContextValue\";\n\n\nexport default function useResourceMap() {\n    return React.useContext(resourceMapContext) as ResourceMapContextValue;\n}","import React, { createContext } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { DetailedRoom } from \"../../../../models/Room\";\nimport RoomService, { RoomUpdateParams, RoomViewParams } from \"../../../../services/RoomService\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport RoomContextValue from \"./RoomContextValue\";\nimport useResourceMap from \"../../../../contexts/ResourceMapContext/useResourceMap\";\nimport useTrigger from \"../../hooks/useTrigger\";\n\n\ninterface RoomContextProviderProps {\n    children?: React.ReactNode\n}\n\nexport const RoomContext: any = createContext(null);\n\n\nexport default function RoomContextProvider({\n    children\n}: RoomContextProviderProps) {\n    const { getBuildingLink, reloadMap } = useResourceMap();\n    const notify = useNotification();\n    const urlParams = useParams<RoomViewParams>();\n    const [room, setRoom] = React.useState<DetailedRoom>();\n    const refresh = useTrigger(60_000);\n\n    React.useLayoutEffect(() => {\n        RoomService.setPath(urlParams);\n    }, [urlParams]); // set new urlParams to service so it get data for propper room\n\n\n    const getRoom = React.useCallback(async () => {\n        const resp = await RoomService.getView();\n        setRoom(resp.data as DetailedRoom);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        urlParams,\n        refresh\n    ]); // recompute after change of room\n\n\n    const setOccupied = React.useCallback((state: boolean) => {\n        setRoom(old => {\n            if (old)\n                return { ...old, occupied: state };\n        });\n    }, []);\n\n\n    const updateRoom = React.useCallback(async (body: RoomUpdateParams) => {\n        if (!room) return false;\n\n        try {\n            await RoomService.update(body);\n            setRoom(old => {\n                if (old)\n                    return { ...old, ...body };\n            });\n            notify(\"Sala została zaktualizowana\", 'success');\n\n            if (('name' in body && body.name !== room.name)\n                || ('buildingId' in body && body.buildingId !== room?.building.id)\n            ) {\n                reloadMap();\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        room\n    ]);\n\n\n    const deleteRoom = React.useCallback(async () => {\n        if (!room) return;\n\n        try {\n            await RoomService.remove();\n            reloadMap();\n            notify(\"Sala została usunięta\", 'success', () => <Redirect to={getBuildingLink(room.building.id)} />);\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        room,\n        reloadMap,\n        getBuildingLink,\n    ]);\n\n\n    const updateRFIDTag = React.useCallback(async (key: string) => {\n        try {\n            await RoomService.updateRFID(key);\n            setRoom(old => {\n                if (old)\n                    return { ...old, RFIDTag: key };\n            });\n\n            notify(\"Tag został przypisany\", 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n    }, [notify]);\n\n\n    const deleteRFIDTag = React.useCallback(async () => {\n        try {\n            await RoomService.deleteRFIDTag();\n            setRoom(old => {\n                if (old)\n                    return { ...old, RFIDTag: null };\n            });\n            notify(\"Tag został usunięty\", \"success\");\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        getRoom();\n        return () => { }\n    }, [getRoom]);\n\n\n    return (\n        !Boolean(room) ? null : <RoomContext.Provider value={{\n            room,\n            updateRoom,\n            deleteRoom,\n            updateRFIDTag,\n            deleteRFIDTag,\n            setOccupied\n        } as RoomContextValue}>\n            {children}\n        </RoomContext.Provider>\n    );\n}\n","import React from \"react\";\nimport { RoomContext } from \"./RoomContextProvider\";\nimport RoomContextValue from \"./RoomContextValue\";\n\n\nexport default function useRoomContext() {\n    return React.useContext(RoomContext) as RoomContextValue\n}","import { Card, CardHeader, Avatar, CardContent, Typography, Link } from \"@mui/material\";\nimport User from \"../../../../models/User\";\nimport ImageService from \"../../../../services/ImageService\";\nimport { displayDate } from \"../../../../shared/utils\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport { dynamicPaths } from \"../../../../shared/path\";\n\n\ninterface ReservationUserCardProps {\n    user: User\n}\n\nexport default function ReservationUserCard({ user }: ReservationUserCardProps) {\n    return (\n        <Card aria-label=\"Rezerwujący użytkownik\" sx={{ minHeight: '150px' }}>\n            <CardHeader\n                avatar={<Avatar\n                    sx={{ width: 56, height: 56 }}\n                    alt={`${user.name} ${user.surname}`}\n                    src={ImageService.getLink(user.image)}\n                />}\n                title={`${user.name} ${user.surname}`}\n                subheader={\n                    <Link\n                        aria-label=\"wyślij email\"\n                        title=\"wyślij email\"\n                        href={`mailto:${user.email}`}\n                    >\n                        {user.email}\n                    </Link>\n                }\n                action={\n                    <RouterLink\n                        to={dynamicPaths.toUser(user.id)}\n                        aria-label='Pokaż użytkownika'\n                        title='Pokaż użytkownika'\n                    >\n                        <LaunchIcon />\n                    </RouterLink>\n                }\n            />\n            <CardContent>\n                <Typography\n                    variant=\"body2\"\n                    fontSize=\"smaller\"\n                    color='text.secondary'\n                    aria-label='Data ostatniej aktywności'\n                    title='Data ostatniej aktywności'\n                >\n                    Ostatnia aktywność: {displayDate(user.lastActivity)}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n","import { Card, CardHeader, CardContent, Typography, Box, CardMedia } from \"@mui/material\";\nimport ImageService from \"../../../../services/ImageService\";\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport Room from \"../../../../models/Room\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../contexts/ResourceMapContext\";\nimport AppLink from \"../../../../shared/components/AppLink\";\n\n\n\ninterface ReservationRoomCardProps {\n    room: Room\n}\n\nexport default function ReservationRoomCard({ room }: ReservationRoomCardProps) {\n    const { getRoomLink, getBuildingLink } = useResourceMap();\n\n    const roomLink = React.useMemo(() => getRoomLink(room.id), [room.id, getRoomLink]);\n    const buildingLink = React.useMemo(() => getBuildingLink(room.building), [room.building, getBuildingLink]);\n\n    return (\n        <Card sx={{ display: 'flex', minHeight: '150px' }}>\n            <CardMedia\n                component='img'\n                image={ImageService.getLink(room.image)}\n                alt={`zdjęcie sali ${room.name}`}\n                sx={{\n                    maxWidth: '40%',\n                    maxHeight: '100%'\n                }}\n            />\n            <Box sx={{ width: '60%' }}>\n                <CardHeader\n                    title={`Sala ${room.name}`}\n                    subheader={room.roomType}\n                    sx={{\n                        pt: 1, pb: 0\n                    }}\n                    action={\n                        <AppLink\n                            to={roomLink}\n                            aria-label='Otwórz stronę Pokoju'\n                            title='Otwórz stronę Pokoju'\n                        >\n                            <LaunchIcon />\n                        </AppLink>\n                    }\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        <AppLink\n                            withIcon\n                            to={buildingLink}\n                            aria-label=\"Pokaż budynek\"\n                            title=\"Pokaż budynek\"\n                        >\n                            pokaż budynek\n                        </AppLink> <br/>\n                        Aktualnie {room.occupied ? 'zajęta' : 'wolna'}<br />\n                    </Typography >\n                </CardContent >\n            </Box >\n        </Card >\n    );\n}","import React from \"react\";\nimport { reservationsContext } from \"./ReservationsContextProvider\";\nimport ReservationsContextValue from \"./ReservationsContextValue\";\n\nexport default function useReservations() {\n    return React.useContext(reservationsContext) as ReservationsContextValue;\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../../../../shared/components/GenericModal\";\nimport { MobileDateTimePicker } from \"@mui/lab\";\nimport Reservation from \"../../../../../models/Reservation\";\nimport { UpdateReservationData } from \"../../../../../services/ReservationService\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\nimport useReservations from \"../../GenericReservationsTab/ReservationsContext/useReservations\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface EditModalFormProps {\n    open: boolean,\n    onClose: () => void,\n    reservation: Reservation\n}\n\nexport default function EditModalForm(props: EditModalFormProps) {\n    const { updateReservation } = useReservations()\n    const { allRooms } = useResourceMap();\n\n    const [data, setData] = React.useState<UpdateReservationData>({});\n\n\n    const closeForm = React.useCallback(() => {\n        props.onClose();\n        setData({});\n    }, [props]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateReservation(props.reservation.id, data)){\n            closeForm();\n            setData({});\n        }\n\n    }, [props, data, closeForm, updateReservation]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={closeForm}\n            aria-label=\"Okno do edycji rezerwacji\"\n        >\n            <FormGridContainer\n                title='Edycja rezerwacji'\n                subtitle=\"Zmień właściwości pokoju i zatwierdź zmiany.\"\n                onSubmit={handleSubmit}\n                onCancel={props.onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Tytuł\"\n                        multiline\n                        maxRows={4}\n                        name='title'\n                        value={data.title ?? props.reservation.title}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Opis\"\n                        multiline\n                        maxRows={20}\n                        name='description'\n                        value={data.description ?? props.reservation.description}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <MobileDateTimePicker\n                        minDate={new Date()}\n                        label=\"Początek\"\n                        inputFormat=\"yyyy-MM-dd HH:mm\"\n                        value={data.plannedStart ?? props.reservation.plannedStart}\n                        onChange={(value: any) => setData(old => ({ ...old, plannedStart: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <MobileDateTimePicker\n                        minDate={new Date()}\n                        label=\"Koniec\"\n                        inputFormat=\"yyyy-MM-dd HH:mm\"\n                        value={data.plannedEnd ?? props.reservation.plannedEnd}\n                        onChange={(value: any) => setData(old => ({ ...old, plannedEnd: value }))}\n                        renderInput={(params) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                        <Select\n                            required\n                            labelId=\"wybierz-salę\"\n                            name=\"roomId\"\n                            value={data.roomId ?? props.reservation.room.id}\n                            label=\"Sala\"\n                            onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                        >\n                            {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../../../../shared/components/GenericModal\";\nimport { MobileDateTimePicker } from \"@mui/lab\";\nimport Reservation from \"../../../../../models/Reservation\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\nimport useReservations from \"../../GenericReservationsTab/ReservationsContext/useReservations\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { IconButton } from \"@mui/material\";\nimport { displayDate } from \"../../../../../shared/utils\";\nimport { CreateReservationData } from \"../../../../../services/ReservationService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CopyModalFormProps {\n    open: boolean,\n    onClose: () => void,\n    reservation: Reservation\n}\n\ninterface DateTimeSlot {\n    color: string | null,\n    from: Date,\n    to: Date,\n}\n\ninterface CopyReservationData {\n    title: string,\n    description: string,\n    roomId?: number\n}\n\n\nexport default function CopyModalForm(props: CopyModalFormProps) {\n    const { createReservation } = useReservations()\n    const { allRooms } = useResourceMap();\n    const notify = useNotification();\n\n    const [dates, setDates] = React.useState<DateTimeSlot>({\n        color: '',\n        from: new Date(props.reservation.plannedStart),\n        to: new Date(props.reservation.plannedEnd),\n    });\n\n    const [copyDates, setCopyDates] = React.useState<DateTimeSlot[]>([]);\n    const [data, setData] = React.useState<CopyReservationData>({\n        title: props.reservation.title,\n        description: props.reservation.description,\n        roomId: props.reservation.room.id ?? 0\n    });\n\n\n    const closeForm = React.useCallback(() => {\n        props.onClose();\n        // setCopyDates([]);\n    }, [props]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n\n        const createCalls = copyDates.map(async (date) => {\n            const success = await createReservation({\n                ...data,\n                plannedStart: date.from,\n                plannedEnd: date.to\n            } as CreateReservationData);\n            date.color = success ? 'green' : 'red';\n            return date;\n        })\n        const processed = await Promise.all(createCalls);\n        setCopyDates(processed);\n\n    }, [data, copyDates, createReservation]);\n\n\n    const handleDeleteCopyDate = React.useCallback((index: number) => {\n        setCopyDates(old => {\n            old.splice(index, 1);\n            return Object.assign([], old);\n        });\n    }, []);\n\n\n    const handleAddDate = React.useCallback(() => {\n        if (copyDates.find(({ from, to }) => from === dates.from || to === dates.to)) {\n            notify(\"Daty powinny się różnić\", 'error');\n            return;\n        };\n\n        setCopyDates(old => {\n            old.push({\n                ...dates,\n                color: ''\n            });\n            return Object.assign([], old);\n        });\n    }, [\n        dates,\n        notify,\n        copyDates,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={closeForm}\n            aria-label=\"Okno do kopiowania rezerwacji\"\n        >\n\n            <FormGridContainer\n                title='Kopiowanie rezerwacji'\n                subtitle=\"Skopiuj rezerwację dla wybranych przez siebie nowych dat.\"\n                onSubmit={handleSubmit}\n                onCancel={props.onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Tytuł\"\n                        multiline\n                        maxRows={4}\n                        name='title'\n                        value={data.title ?? props.reservation.title}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Opis\"\n                        multiline\n                        maxRows={20}\n                        name='description'\n                        value={data.description ?? props.reservation.description}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={5}>\n                    <MobileDateTimePicker\n                        minDate={new Date()}\n                        label=\"Początek\"\n                        inputFormat=\"yyyy-MM-dd HH:mm\"\n                        value={dates.from}\n                        onChange={(value: any) => setDates(old => ({ ...old, from: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={5}>\n                    <MobileDateTimePicker\n                        minDate={new Date()}\n                        label=\"Koniec\"\n                        inputFormat=\"yyyy-MM-dd HH:mm\"\n                        value={dates.to}\n                        onChange={(value: any) => setDates(old => ({ ...old, to: value }))}\n                        renderInput={(params) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={2}>\n                    <Button\n                        size='large'\n                        sx={{\n                            height: '100%',\n                            width: '100%'\n                        }}\n                        variant='outlined'\n                        onClick={handleAddDate}\n                    >\n                        Dodaj\n                    </Button>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Stack\n                        spacing={1}\n                        sx={{\n                            border: '1px solid',\n                            borderColor: 'divider',\n                            borderRadius: 1,\n                            padding: 0.5,\n                            bgcolor: 'background.default',\n                            maxHeight: '200px',\n                            overflow: 'auto',\n                        }}>\n                        {copyDates.length === 0 && <Typography textAlign='center' component='p'>\n                            Brak dat\n                        </Typography>}\n                        {\n                            copyDates.map(({ color, from, to }, index) =>\n                                <Box\n                                    key={index}\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'space-between',\n                                        pl: '3px'\n                                    }}>\n                                    <Typography component='p' sx={{ color: color }}>\n                                        {displayDate(from.toString())}&nbsp;-&nbsp;{displayDate(to.toString())}\n                                    </Typography>\n                                    <IconButton\n                                        onClick={() => handleDeleteCopyDate(index)}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Box>\n                            )\n                        }\n                    </Stack>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                        <Select\n                            required\n                            labelId=\"wybierz-salę\"\n                            name=\"roomId\"\n                            value={data.roomId ?? props.reservation.room.id}\n                            label=\"Sala\"\n                            onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                        >\n                            {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </FormGridContainer>\n\n        </GenericModal >\n    );\n}","import { Box, Button, Stack, Typography } from \"@mui/material\";\nimport NfcIcon from '@mui/icons-material/Nfc';\nimport { styled } from \"@mui/system\";\nimport React from \"react\";\nimport CancelIcon from '@mui/icons-material/Cancel';\n\n\ninterface RfidFormProps {\n    headline: string,\n    bodyText: string,\n    onScan: (keyText: string) => Promise<boolean>,\n    onClose: () => void,\n}\n\nconst HiddenInput = styled('input')({\n    position: \"absolute\",\n    left: \"-1000px\",\n    color: \"transparent\"\n});\n\n\nexport default function RfidForm(props: RfidFormProps) {\n    const [text, setText] = React.useState<string>('');\n    const [color, setColor] = React.useState<string>('primary');\n    const input = React.useRef<HTMLInputElement | null>(null);\n\n    const handleSubmit = async (evt: React.FormEvent) => {\n        evt.preventDefault();\n        const success = await props.onScan(text);\n        if (success) {\n            setColor('success');\n            setTimeout(handleDecline, 2000);\n        } else {\n            setColor('error');\n        }\n        setText('');\n    }\n\n    const handleDecline = () => {\n        props.onClose();\n        setText('');\n        setColor('primary');\n    }\n\n    const focusOnInput = () => {\n        input.current && console.log(input.current.focus())\n    }\n\n    return (\n        <Stack\n            onClick={focusOnInput}\n            component=\"form\"\n            direction=\"column\"\n            spacing={4}\n            onSubmit={handleSubmit}\n        >\n            <NfcIcon\n                sx={{ fontSize: 140, alignSelf: \"center\" }}\n                color={color as any}\n            />\n            <HiddenInput\n                ref={input}\n                autoFocus\n                type=\"text\"\n                value={text}\n                onChange={(evt: any) => setText(evt.target.value)}\n            />\n            <Box component=\"span\" textAlign='center'>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    {props.headline}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" mt='5px'>\n                    {props.bodyText}\n                </Typography>\n            </Box>\n\n            <Button startIcon={<CancelIcon />}\n                onClick={handleDecline}\n                color=\"error\"\n            >\n                Zamknij\n            </Button>\n\n        </Stack>\n    );\n}","import GenericModal from \"../../../../../shared/components/GenericModal\";\nimport RfidForm from \"../../../../../shared/components/RfidForm\";\nimport { useReservations } from \"../../GenericReservationsTab/ReservationsContext\";\nimport React from \"react\";\n\n\ninterface PingKeyModalFormProps {\n    reservationId: number,\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport default function PingKeyModalForm(props: PingKeyModalFormProps) {\n    const { pingKeyForReservation } = useReservations();\n\n    const handleKeyScan = React.useCallback(\n        async (key: string) => pingKeyForReservation(props.reservationId, key)\n        , [props, pingKeyForReservation]);\n\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={props.onClose}\n            aria-label=\"Okno do edycji rezerwacji\"\n            sx={{ maxWidth: '400px' }}\n        >\n            <RfidForm\n                headline=\"Wczytaj klucz z tagiem NFC\"\n                bodyText='Przy pomocy czytnika, wczytaj wydawany klucz. Aby opuścić to okno, naciśnij \"Zamknij\"'\n                onScan={handleKeyScan}\n                onClose={props.onClose}\n            />\n        </GenericModal>\n    );\n}","import React from \"react\";\nimport { ListItemIcon, Menu, MenuItem, Typography } from \"@mui/material\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport IconButton from '@mui/material/IconButton';\n\n\ninterface MoreVertMenuProps {\n    options: { action: () => void, icon?: React.ReactNode, label: string }[]\n}\n\nexport default function MoreVertMenu(props: MoreVertMenuProps) {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n\n    const handleClick = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    },[]);\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <IconButton\n                aria-label='card-more-button'\n                aria-controls=\"card-menu\"\n                aria-expanded={open ? 'true' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Menu\n                MenuListProps={{\n                    'aria-labelledby': 'card-more-button',\n                }}\n                anchorEl={anchorEl}\n                id=\"card-menu\"\n                open={open}\n                onClose={handleClose}\n                PaperProps={{\n                    style: {\n                        width: '20ch',\n                    },\n                }}\n            >\n                {\n                    props.options.map((opt, id) => <MenuItem\n                        key={id}\n                        onClick={handleClose}\n                    >\n                        <ListItemIcon>\n                            {opt.icon}\n                        </ListItemIcon>\n                        <Typography onClick={opt.action}>{opt.label}</Typography>\n                    </MenuItem>)\n                }\n            </Menu>\n        </div>\n    );\n}\n\n","import Reservation from \"../../../../models/Reservation\";\nimport GenericModal from \"../../../../shared/components/GenericModal\";\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { Grid, IconButton, Typography } from '@mui/material';\nimport { displayDate } from '../../../../shared/utils';\nimport React from 'react';\nimport ReservationUserCard from './ReservationUserCard';\nimport ReservationRoomCard from './ReservationRoomCard';\nimport DeleteModal from '../../../../shared/components/DeleteModal';\nimport { CopyForm, EditForm, PingNFCForm } from \"./ModalForms\";\nimport { useReservations } from \"../GenericReservationsTab/ReservationsContext\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CopyIcon from '@mui/icons-material/CopyAll';\nimport NFCIcon from '@mui/icons-material/Nfc';\nimport { Edit } from \"@mui/icons-material\";\nimport MoreVertMenu from \"../../../../shared/components/MoreVertMenu\";\n\n\n\ninterface ReservationViewModalProps {\n    reservation: Reservation,\n    open: boolean,\n    onClose: () => void\n}\n\n\nfunction TextSection(props: {\n    title: string, children: React.ReactNode | React.ReactNode[]\n}) {\n    return (\n        <span>\n            <Typography component=\"h3\" variant=\"subtitle1\">{props.title}</Typography>\n            <Typography\n                variant=\"body1\"\n                color='text.secondary'\n                textAlign='justify'\n            >\n                {props.children}\n            </Typography>\n        </span>\n    );\n}\n\n\nexport default function ReservationViewModal(props: ReservationViewModalProps) {\n    const { deleteReservation } = useReservations();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n    const [nfcModalOpen, setNFCModalOpen] = React.useState<boolean>(false);\n    const [copyModalOpen, setCopyModalOpen] = React.useState<boolean>(false);\n\n\n    const onDelete = React.useCallback(async () => {\n        if (await deleteReservation(props.reservation.id)) {\n            setDeleteModalOpen(false);\n        }\n    }, [\n        props.reservation.id,\n        deleteReservation,\n    ]);\n\n\n    const menuOptions = React.useMemo(() => {\n        const opt = [\n            {\n                icon: <NFCIcon color='primary' />,\n                label: 'Odbij klucz',\n                action: () => setNFCModalOpen(true)\n            }, {\n                icon: <CopyIcon color='primary' />,\n                label: 'Kopiuj',\n                action: () => setCopyModalOpen(true)\n            }, {\n                icon: <Edit color='primary' />,\n                label: 'Edytuj',\n                action: () => setEditModalOpen(true)\n            }, {\n                icon: <DeleteIcon color='error' />,\n                label: 'Usuń',\n                action: () => setDeleteModalOpen(true)\n            },\n        ]\n        return opt;\n    }, []);\n\n\n    return (\n        <>\n            <DeleteModal\n                open={deleteModalOpen}\n                onClose={() => setDeleteModalOpen(false)}\n                objectName={props.reservation.title}\n                onSuccess={onDelete}\n            />\n\n            <EditForm\n                open={editModalOpen}\n                onClose={() => setEditModalOpen(false)}\n                reservation={props.reservation}\n            />\n\n            <CopyForm\n                open={copyModalOpen}\n                onClose={() => setCopyModalOpen(false)}\n                reservation={props.reservation}\n            />\n\n            <PingNFCForm\n                open={nfcModalOpen}\n                onClose={() => setNFCModalOpen(false)}\n                reservationId={props.reservation.id}\n            />\n\n\n            <GenericModal\n                open={props.open}\n                onClose={props.onClose}\n                aria-label=\"Widok Rezerwacji\"\n                sx={{\n                    maxWidth: '800px',\n                    mt: '4vw'\n                }}\n            >\n                <Stack spacing={4} alignItems='stretch'>\n\n                    <Stack direction='row' justifyContent='space-between'>\n                        <Typography component=\"h2\" variant=\"h4\">\n                            {props.reservation.title}\n                        </Typography>\n                        <IconButton onClick={props.onClose}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Stack>\n\n                    <Stack direction='row' justifyContent='space-between'>\n                        <Button\n                            color='success'\n                            startIcon={<NFCIcon />}\n                            onClick={() => setNFCModalOpen(true)}\n                            title=\"Odbij klucz\"\n                            aria-label=\"Odbij klucz\"\n                        >\n                            Odbij klucz\n                        </Button>\n\n                        <MoreVertMenu options={menuOptions} />\n                    </Stack>\n\n                    <TextSection title='Planowany czas:'>\n                        {`${displayDate(props.reservation.plannedStart)} - ${displayDate(props.reservation.plannedEnd)}`}\n                    </TextSection>\n\n                    <TextSection title='Faktyczny czas:'>\n                        Rozpoczęto: {props.reservation.actualStart ?\n                            displayDate(props.reservation.actualStart)\n                            : 'NIE'\n                        }<br />\n                        Zakończono: {props.reservation.actualEnd ?\n                            displayDate(props.reservation.actualEnd)\n                            : 'NIE'\n                        }\n                    </TextSection>\n\n                    <TextSection title='Opis:'>\n                        {props.reservation.description}\n                    </TextSection>\n\n                    <Grid container>\n                        {\n                            [\n                                { title: 'Użytkownik:', component: <ReservationUserCard user={props.reservation.user} /> },\n                                { title: 'Zarezerwowana sala:', component: <ReservationRoomCard room={props.reservation.room} /> },\n                            ].map(({ title, component }, index) =>\n                                <Grid key={index} item xs={12} lg={6} pr='10px'>\n                                    <Typography sx={{ p: '25px 0px 10px 0px', color: 'text.secondary' }} variant='subtitle2'>{title}</Typography>\n                                    {component}\n                                </Grid>)\n                        }\n                    </Grid>\n\n                </Stack>\n            </GenericModal>\n        </>\n    );\n}\n\n\n","import React from \"react\";\nimport ReservationViewModal from \"../../../ReservationViewModal\";\nimport { useReservations } from \"..\";\nimport ModalContextValue from \"./ModalContextValue\";\n\n\nexport const ReservationModalViewContext = React.createContext<ModalContextValue>({\n    showReservation: (id: number) => { },\n    reservation: null\n});\n\n\ninterface ModalContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\nexport default function ModalContextProvider(props: ModalContextProviderProps) {\n    const { reservations } = useReservations();\n\n    const [modalOpen, setModalOpen] = React.useState<boolean>(true);\n    const [reservationId, setReservationId] = React.useState<number | null>(null);\n\n\n    const reservation = React.useMemo(() => {\n        if (reservationId) {\n            return reservations.find(({ id }) => id === reservationId);\n        }\n    }, [reservations, reservationId]) ?? null;\n\n\n    const showReservation = React.useCallback((id: number) => {\n        setReservationId(id);\n        setModalOpen(true);\n    }, []);\n\n\n    return (\n        <ReservationModalViewContext.Provider value={{ reservation, showReservation }}>\n            {props.children}\n\n            {reservation &&\n                <ReservationViewModal\n                    reservation={reservation}\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                />}\n        </ReservationModalViewContext.Provider>\n    );\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../auth/useSession\";\nimport Reservation from \"../../../../../models/Reservation\";\nimport { AppURLParams } from \"../../../../../services/interfaces\";\nimport ReservationService, { CreateReservationData, ReservationsQueryParams, UpdateReservationData } from \"../../../../../services/ReservationService\";\nimport { useRoomContext } from \"../../../RoomPage/RoomContext\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport ReservationModalContext from \"./ModalContext\";\nimport useResourceMap from \"../../../../../contexts/ResourceMapContext/useResourceMap\";\nimport ReservationsContextValue from \"./ReservationsContextValue\";\nimport paths from \"../../../../../shared/path\";\nimport { UserViewParams } from \"../../../../../services/UserService\";\nimport useTrigger from \"../../../hooks/useTrigger\";\n\n\nexport const reservationsContext: any = React.createContext(null);\n\n\ninterface ReservationsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\n\nexport default function ReservationsContextProvider(props: ReservationsContextProviderProps) {\n    const { queryParams, setQueryParams } = useQueryParams<ReservationsQueryParams>();\n    const notify = useNotification();\n    const { getRoomLink } = useResourceMap();\n    const roomContext = useRoomContext();\n    const { user } = useSession();\n    const urlParams = useParams<AppURLParams>();\n    const refresh = useTrigger(30_000);\n\n    const [reservations, setReservations] = React.useState<Reservation[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            let params = urlParams;\n            if (Object.keys(urlParams).length === 0 && window.location.pathname === paths.HOME) {\n                params = { userId: 'me' } as UserViewParams;\n            }\n            const resp = await ReservationService.getReservations(params, queryParams);\n\n            resp.pagination && setQueryParams((old) => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount,\n            }));\n            setReservations(resp.data as Reservation[]);\n        } catch (err: any) {\n            notify(err.description ?? err.message, 'error');\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        queryParams.currentPage,\n        queryParams.itemsOnPage,\n        queryParams.from,\n        queryParams.search,\n        setQueryParams,\n        urlParams,\n        notify,\n        user\n    ]);\n\n\n    // when loading function is recalculated - trigger the loading\n    React.useEffect(() => {\n        load();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        load,\n        refresh\n    ]);\n\n\n    const triggerReload = React.useCallback(() => setQueryParams(old => Object.assign({}, old)), [\n        setQueryParams\n    ]);\n\n\n    const pingKeyForReservation = React.useCallback(async (id: number, key: string) => {\n        if (!reservations) return;\n        try {\n            const reservation = reservations.find(item => item.id === id);\n            if (!reservation) return false;\n\n            const resp = await ReservationService.pingKey(id, key);\n\n            setReservations(old => {\n                old && old.forEach(item => {\n                    if (item.id !== id) return;\n\n                    if (item.actualStart) {\n                        item.actualEnd = new Date().toISOString();\n                    } else {\n                        item.actualStart = new Date().toISOString();\n                    }\n\n                });\n                return Object.assign([], old);\n            });\n\n            roomContext && roomContext.setOccupied(!reservation.room.occupied);\n            resp?.data && notify(resp.data.toString(), 'success');\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [\n        reservations,\n        roomContext,\n        notify,\n    ]);\n\n\n    const createReservation = React.useCallback(async (data: CreateReservationData) => {\n        try {\n            await ReservationService.createOne(data);\n\n            triggerReload();\n            notify(\"Rezerwacja utworzona prawidłowo!\", 'success');\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true\n    }, [\n        notify,\n        triggerReload,\n    ]);\n\n\n    const deleteReservation = React.useCallback(async (reservationId: number) => {\n        try {\n            await ReservationService.remove(reservationId);\n            setReservations(old => old && old.filter(({ id }) => id !== reservationId));\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [notify]);\n\n\n    const updateReservation = React.useCallback(async (id: number, data: UpdateReservationData) => {\n        try {\n            await ReservationService.update(id, data); //call to API\n\n            //update state\n            setReservations((old) => {\n                return old && old.map(item => {\n                    if (item.id === id)\n                        ['plannedStart', 'plannedEnd', 'description', 'title']\n                            .forEach(field => {\n                                if (field in data) {\n                                    item[field] = data[field];\n                                }\n                            });\n                    return item;\n                });\n            });\n\n            // when reservation room is changing\n            if ('roomId' in data) {\n                data.roomId && notify(\n                    'Rezerwacja zaktualizowana i przeniesiona!',\n                    'success',\n                    () => <Redirect to={getRoomLink(Number(data.roomId))} />\n                )\n            } else {\n                notify('Rezerwacja zaktualizowana!', 'success');\n            }\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [getRoomLink, notify]);\n\n\n    if (!reservations) return null;\n\n    return (\n        <reservationsContext.Provider value={{\n            reservations,\n            updateReservation,\n            deleteReservation,\n            createReservation,\n            pingKeyForReservation,\n        } as ReservationsContextValue}>\n            <ReservationModalContext>\n                {props.children}\n            </ReservationModalContext>\n        </reservationsContext.Provider>\n    );\n}","import Avatar from \"@mui/material/Avatar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport AppLink from \"../../../../../shared/components/AppLink\";\nimport Reservation from \"../../../../../models/Reservation\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport { displayDate } from \"../../../../../shared/utils\";\nimport ReservationService from \"../../../../../services/ReservationService\";\n\n\ninterface ReservationListItemProps {\n    data: Reservation,\n    onClick: () => void\n}\n\n\nexport default function ReservationListItem({\n    data, onClick\n}: ReservationListItemProps) {\n    const { message, color } = ReservationService.resolveStatus(data);\n\n    return (\n        <ListItem\n            component='li'\n            button\n            sx={{\n                mb:'2px',\n                bgcolor: color,\n                '&:hover, &:focus': {\n                    bgcolor: color,\n                    filter: 'brightness(97%)',\n                }\n            }}\n            onClick={onClick}\n        >\n            <ListItemAvatar>\n                <AppLink to={dynamicPaths.toUser(data.user.id)}>\n                    <Avatar src={ImageService.getLink(data.user.image)} />\n                </AppLink>\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={data.title}\n                secondary={displayDate(data.actualStart ?? data.plannedStart) + ' - ' + message}\n            />\n        </ListItem>\n    )\n}","import { List, ListItem, ListItemText } from \"@mui/material\";\nimport useReservationModalContext from \"../ReservationsContext/ModalContext/useReservationModalContext\";\nimport { useReservations } from \"../ReservationsContext\";\nimport ReservationListItem from \"./ReservationsListItem\";\n\n\n\nexport default function ReservationsList() {\n    const { showReservation } = useReservationModalContext();\n    const { reservations } = useReservations();\n\n\n    return (\n        <List aria-label='lista rezerwacji'>\n            {reservations.length === 0 ?\n                <ListItem>\n                    <ListItemText primary='Brak rezerwacji spełniających kryteria.' />\n                </ListItem> :\n                reservations.map((item, index) => <ReservationListItem\n                    key={index}\n                    data={item}\n                    onClick={() => showReservation(item.id)}\n                />)}\n        </List>\n    );\n}\n\n\n","import React from \"react\";\nimport { ReservationModalViewContext } from \"./ModalContextProvider\";\nimport ModalContextValue from \"./ModalContextValue\";\n\n\nexport default function useReservationModalContext() {\n    return React.useContext(ReservationModalViewContext) as ModalContextValue;\n}","import { FormControl, FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\nimport React from \"react\";\n\nexport interface SelectButtonInterface {\n    name: string, value: string\n}\n\nexport interface SelectButtonGroupProps {\n    onChange: (value: string) => void,\n    buttons: SelectButtonInterface[],\n    value: string\n}\n\nexport default function SelectButtonGroup({\n    onChange, buttons, value\n}: SelectButtonGroupProps) {\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).value);\n    }, [onChange]);\n\n\n    const renderedButtons = React.useMemo(() => {\n        return buttons.map(({ value, name }) =>\n            <FormControlLabel\n                key={name}\n                value={value}\n                control={<Radio />}\n                label={name}\n                aria-label={name}\n                title={name}\n            />\n        )\n    }, [buttons]);\n\n\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup\n                row\n                aria-label=\"wybór opcji\"\n                name=\"wybór zdefiniowanej opcji\"\n                value={value}\n                onChange={handleChange}\n            >\n                {renderedButtons}\n            </RadioGroup>\n        </FormControl>\n    );\n}","import MobileDatePicker from \"@mui/lab/MobileDatePicker\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useQueryParams } from \"../../../../contexts/QueryParamsContext\";\nimport { ReservationsQueryParams } from \"../../../../services/ReservationService\";\nimport SelectButtonGroup from \"../../../../shared/components/SelectButtonGroup\";\nimport LazyInput from \"../../../../shared/components/LazyInput\";\nimport { isDate } from \"../../../../shared/utils\";\n\n\nconst buttons = [\n    { name: 'Dziś', value: 'today' },\n    { name: 'Ten tydzień', value: 'this week' },\n    { name: 'Od wczoraj', value: 'yesterday' },\n];\n\n\nexport default function ReservationTabBar() {\n    const { setQueryParams, queryParams } = useQueryParams<ReservationsQueryParams>();\n\n    const [customDate, setCustomDate] = React.useState(new Date(isDate(queryParams.from) ? queryParams.from ?? 'xxx' : Date.now()));\n\n    const handleButtonChange = React.useCallback((value: string) => {\n        setQueryParams((old: ReservationsQueryParams) => ({ ...old, from: value }));\n    }, [setQueryParams]);\n\n\n    const handleSubmitCustomDate = React.useCallback((evt: React.FormEvent) => {\n        evt.preventDefault();\n        setQueryParams((old: ReservationsQueryParams) => ({ ...old, from: customDate.toISOString() }))\n    }, [customDate, setQueryParams])\n\n\n    const handleSearchFieldChange = React.useCallback((evt) => {\n        setQueryParams(old => ({ ...old, search: evt.target.value }));\n    }, [setQueryParams]);\n\n\n    return (\n        <>\n            <Grid container\n                component='form'\n                onSubmit={handleSubmitCustomDate}\n                spacing={2}\n                alignItems='center'\n            >\n                <Grid item xs={12} md={12}>\n                    <SelectButtonGroup\n                        onChange={handleButtonChange}\n                        buttons={buttons}\n                        value={isDate(queryParams.from) ? '' : queryParams?.from ?? buttons[0].value}\n                    />\n                    <Box display='inline-flex' >\n                        <MobileDatePicker\n                            label=\"Od daty\"\n                            inputFormat=\"yyyy-MM-dd\"\n                            value={customDate}\n                            onChange={(value: Date | null) => value && setCustomDate(value)}\n                            renderInput={(params) => <TextField {...params} size='small' />}\n                        />\n                        <Button\n                            variant={queryParams?.from === customDate.toISOString() ? 'contained' : 'outlined'}\n                            type='submit'\n                            sx={{ ml: 1 }}\n                        >\n                            OK\n                        </Button>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <LazyInput\n                        name=\"search\"\n                        label='wyszukaj'\n                        value={queryParams.search ?? ''}\n                        onChange={handleSearchFieldChange}\n                    />\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import { Stack } from \"@mui/material\";\nimport { QueryParamsContext } from \"../../../../contexts/QueryParamsContext\";\nimport ReservationsContext from \"./ReservationsContext\";\nimport { ReservationsQueryParams } from \"../../../../services/ReservationService\";\nimport ListPagination from \"../../../../shared/components/ListPagination\";\nimport ReservationsList from \"./ReservationsList\";\nimport ReservationTabBar from \"./ReservationTabBar\";\n\n\n\nexport default function GenericReservationsTab() {\n    return (\n        <QueryParamsContext name='reservations-query-params' default={{\n            itemsOnPage: 5,\n            currentPage: 1,\n            from: 'today'\n        } as ReservationsQueryParams}>\n            <ReservationsContext>\n                <Stack rowGap={5}>\n                    <ReservationTabBar />\n                    <ReservationsList />\n                    <ListPagination />\n                </Stack>\n            </ReservationsContext>\n        </QueryParamsContext>\n    );\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport paths from \"../../../../shared/path\";\nimport AddressService, { AddressViewParams, UpdateAddressParams } from \"../../../../services/AddressService\";\nimport AddressContextValue from \"./AddressContextValue\";\nimport Address from \"../../../../models/Address\";\nimport Building from \"../../../../models/Building\";\nimport { useResourceMap } from \"../../../../contexts/ResourceMapContext\";\n\n\n\ninterface AddressContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport const addressContext: any = React.createContext(null);\n\n\nexport default function AddressContextProvider(props: AddressContextProviderProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n\n    const urlParams = useParams<AddressViewParams>();\n\n    const [address, setAddress] = React.useState<Address>();\n\n\n    React.useLayoutEffect(() => {\n        AddressService.setPath(urlParams);\n    }, [urlParams])\n\n\n    const getAddress = React.useCallback(async () => {\n        const resp = await AddressService.getCurrentOne();\n        setAddress(resp.data as Address);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        getAddress();\n    }, [getAddress]);\n\n\n    const getBuildingsInAddress = React.useCallback(async () => {\n        try {\n            const resp = await AddressService.getBuildings();\n            return resp.data as Building[];\n        } catch (err: any) {\n            return [];\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    const updateAddress = React.useCallback(async (data: UpdateAddressParams) => {\n        try {\n            await AddressService.update(data)\n\n            setAddress(old => {\n                return {\n                    ...old,\n                    ...data as Address\n                }\n            });\n\n            reloadMap()\n\n            notify('Adres zaktualizowany', 'success');\n            return true;\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n    ])\n\n\n\n    const deleteAddress = React.useCallback(async () => {\n        try {\n            await AddressService.remove();\n            reloadMap();\n            notify(\"Adres został usunięty\", 'success', () => <Redirect to={paths.HOME} />);\n        } catch (err: any) {\n            address &&\n                notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        address,\n        reloadMap,\n    ]);\n\n\n    if (!Boolean(address)) return null;\n\n    return (\n        <addressContext.Provider value={{\n            address,\n            deleteAddress,\n            getBuildingsInAddress,\n            updateAddress\n        } as AddressContextValue}>\n\n            {props.children}\n\n        </addressContext.Provider>\n    );\n}","import React from \"react\";\nimport { addressContext } from \"./AddressContextProvider\";\nimport AddressContextValue from \"./AddressContextValue\";\n\n\nexport default function useAddress() {\n    return React.useContext(addressContext) as AddressContextValue;\n}","import { styled, SxProps } from \"@mui/system\";\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Address from \"../../../../models/Address\";\n\n\n\ninterface MapProps {\n    address: Address,\n    sx?: SxProps\n}\n\nconst StyledIframe = styled('iframe')({\n    width: '100%',\n    height: '50vh',\n    maxHeight: '400px',\n    minHeight: '300px'\n});\n\n\nexport default function Map({ address, sx }: MapProps) {\n\n    const url = React.useMemo(() => {\n        const { street, number, town, country } = address;\n\n        const base = new URL('https://maps.google.com/maps');\n        const params = new URLSearchParams({\n            q: `${street + \" \" + number + \" \" + town + \" \" + country}`,\n            ie: 'UTF8',\n            z: '14',\n            iwloc: '',\n            output: 'embed'\n        });\n        base.search = params.toString();\n\n        return base.toString();\n    }, [address]);\n\n    return (\n        <Box>\n            <StyledIframe\n                src={url}\n                frameBorder=\"0\"\n                sx={{ ...sx }}\n            />\n        </Box>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../../../shared/components/GenericModal\";\nimport { useAddress } from \"../AddressContext\";\nimport { UpdateAddressParams } from \"../../../../services/AddressService\";\nimport FormGridContainer from \"../../../../shared/components/FormGridContainer\";\n\n\n\ninterface AddressEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\n\nexport default function AddressEditForm({\n    open,\n    onClose\n}: AddressEditFormProps) {\n    const { address, updateAddress } = useAddress();\n\n    const [data, setData] = React.useState<UpdateAddressParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old: UpdateAddressParams) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateAddress(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateAddress,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do edycji budynku\"\n        >\n            <FormGridContainer\n                title='Edycja adresu'\n                subtitle=\"Zmień właściwości adresu i zatwierdź zmiany.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"country\"\n                        label=\"Kraj\"\n                        name=\"country\"\n                        value={data.country ?? address.country}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        autoFocus\n                        required\n                        fullWidth\n                        id=\"town\"\n                        label=\"Miasto\"\n                        name=\"town\"\n                        value={data.town ?? address.town}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"postalCode\"\n                        label=\"Kod pocztowy\"\n                        name=\"postalCode\"\n                        value={data.postalCode ?? address.postalCode}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={8}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"street\"\n                        label=\"Ulica\"\n                        name=\"street\"\n                        value={data.street ?? address.street}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"number\"\n                        label=\"Number\"\n                        name=\"number\"\n                        value={data.number ?? address.number}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../../../shared/components/GenericModal\";\nimport { BuildingCreateParams } from \"../../../../services/BuildingService\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport { timeFormat } from \"../../../../shared/utils\";\nimport FormGridContainer from \"../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateBuildingFormProps {\n    open: boolean,\n    onClose: () => void,\n    handleCreateBuilding: (data: BuildingCreateParams) => Promise<boolean>\n}\n\n\nexport default function CreateBuildingForm({\n    open,\n    onClose,\n    handleCreateBuilding,\n}: CreateBuildingFormProps) {\n    const [data, setData] = React.useState<BuildingCreateParams>({\n        name: '',\n        openTime: (new Date(0, 0, 0, 7, 0)).toString(),\n        closeTime: (new Date(0, 0, 0, 21, 0)).toString()\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        const success = await handleCreateBuilding({\n            ...data,\n            closeTime: timeFormat.format(new Date(data.closeTime)),\n            openTime: timeFormat.format(new Date(data.openTime))\n        });\n\n        if (success) {\n            onClose();\n        }\n\n    }, [\n        data,\n        onClose,\n        handleCreateBuilding,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do tworzenia budynku\"\n        >\n            <FormGridContainer\n                title='Dodaj nowy budynek!'\n                subtitle=\"Wypełnij dane nowego budynku i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nazwa\"\n                        name=\"name\"\n                        autoFocus\n                        value={data.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6} >\n                    <MobileTimePicker\n                        label=\"Godzina otwarcia\"\n                        inputFormat=\"HH:mm\"\n                        value={data.openTime}\n                        onChange={(value: any) => setData(old => ({ ...old, openTime: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <MobileTimePicker\n                        label=\"Godzina zamknięcia\"\n                        inputFormat=\"HH:mm\"\n                        value={data.closeTime}\n                        onChange={(value: any) => setData(old => ({ ...old, closeTime: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../../../shared/components/GenericModal\";\nimport AddressService, { CreateAddressParams } from \"../../../../services/AddressService\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../contexts/ResourceMapContext\";\nimport FormGridContainer from \"../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateAddressFormProps {\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport default function CreateAddressForm({\n    open,\n    onClose,\n}: CreateAddressFormProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n\n    const [data, setData] = React.useState<CreateAddressParams>({\n        country: 'Polska',\n        town: '',\n        street: '',\n        number: '',\n        postalCode: '',\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old: CreateAddressParams) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        try {\n            await AddressService.create(data);\n            reloadMap();\n            notify('Adres został dodany', 'success');\n            onClose();\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n        onClose,\n        reloadMap,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do tworzenia adresu\"\n        >\n            <FormGridContainer\n                title='Dodaj nowy adres!'\n                subtitle=\"Wypełnij dane nowego adresu i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"country\"\n                        label=\"Kraj\"\n                        name=\"country\"\n                        value={data.country}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"town\"\n                        label=\"Miasto\"\n                        name=\"town\"\n                        autoFocus\n                        value={data.town}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"postalCode\"\n                        label=\"Kod pocztowy\"\n                        name=\"postalCode\"\n                        value={data.postalCode}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={8}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"street\"\n                        label=\"Ulica\"\n                        name=\"street\"\n                        value={data.street}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"number\"\n                        label=\"Number\"\n                        name=\"number\"\n                        value={data.number}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import { Card, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport DeleteModal from \"../../../../shared/components/DeleteModal\";\nimport Map from \"./Map\";\nimport { useAddress } from \"../AddressContext\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { AddressEditForm } from \"../Forms\";\nimport MoreVertMenu from \"../../../../shared/components/MoreVertMenu\";\nimport DatesFooter from \"../../../../shared/components/DatesFooter\";\n\n\n\n\nexport default function AddressCard() {\n    const { address, deleteAddress } = useAddress();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);\n    const [editModalOpen, setEditModalOpen] = React.useState(false);\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n    return (\n        <>\n            <DeleteModal\n                objectName={`${address.street} ${address.number}`}\n                open={deleteModalOpen}\n                onClose={() => setDeleteModalOpen(false)}\n                onSuccess={deleteAddress}\n            />\n\n            <AddressEditForm\n                open={editModalOpen}\n                onClose={() => setEditModalOpen(false)}\n            />\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={<MoreVertMenu options={options} />}\n                    title={<>{address.country}, {address.town}</>}\n                    subheader={<>{address.street} {address.number}</>}\n                />\n                <CardMedia component=\"div\">\n                    <Map address={address}  />\n                </CardMedia>\n                <CardContent>\n                    <Typography component='p'>\n                        ul. {address.street} {address.number}<br />\n                        {address.postalCode} {address.town}, <br />\n                        {address.country}\n                    </Typography>\n                    <br />\n                    <DatesFooter model={address} />\n                </CardContent>\n            </Card>\n        </>\n    )\n}","import { Box, Button, Stack, TextField, Typography } from \"@mui/material\";\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport React from \"react\";\nimport SelectButtonGroup, { SelectButtonInterface } from \"../../../../shared/components/SelectButtonGroup\";\nimport { useQueryParams } from \"../../../../contexts/QueryParamsContext\";\nimport { ChartsQueryData } from \"../../../../services/ChartService\";\n\n\nconst predefinedButtons: SelectButtonInterface[] = [\n    { name: \"tydzień\", value: \"1 week ago\" },\n    { name: \"miesiąc\", value: \"1 month ago\" },\n    { name: \"6 miesięcy\", value: \"6 month ago\" },\n    { name: \"rok\", value: \"1 year ago\" },\n];\n\n\n\nexport default function ChartOptionsBar() {\n    const { queryParams, setQueryParams } = useQueryParams<ChartsQueryData>();\n\n    const [customDates, setCustomDates] = React.useState<{ from: Date, to: Date }>({\n        from: new Date(),\n        to: new Date()\n    });\n\n    const handleButtonChange = React.useCallback(async (buttonValue: string) => {\n        setQueryParams({\n            from: buttonValue,\n            to: \"now\"\n        });\n    }, [\n        setQueryParams\n    ]);\n\n\n    const handleSubmitCustomDate = React.useCallback(async (evt: any) => {\n        evt.preventDefault();\n        setQueryParams({\n            from: customDates.from?.toISOString(),\n            to: customDates.to?.toISOString()\n        });\n    }, [\n        customDates.from,\n        customDates.to,\n        setQueryParams\n    ]);\n\n\n    return (\n        <Stack direction=\"column\" spacing={2}>\n            <Box>\n                <Typography variant=\"subtitle2\">\n                    Zakres czasu:\n                </Typography>\n                <SelectButtonGroup\n                    onChange={handleButtonChange}\n                    buttons={predefinedButtons}\n                    value={queryParams.from}\n                />\n\n            </Box>\n            <Box component=\"form\" onSubmit={handleSubmitCustomDate}>\n                <Typography variant=\"subtitle2\">\n                    Zakres niestandardowy:&nbsp;\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                    <MobileDatePicker\n                        label=\"od\"\n                        inputFormat=\"yyyy-MM-dd\"\n                        value={customDates.from}\n                        onChange={(value) => setCustomDates({ ...customDates, from: value ?? new Date() })}\n                        renderInput={(params) => <TextField {...params} size='small' />}\n                    />\n                    <MobileDatePicker\n                        label=\"do\"\n                        inputFormat=\"yyyy-MM-dd\"\n                        value={customDates.to}\n                        onChange={(value) => setCustomDates({ ...customDates, to: value ?? new Date() })}\n                        renderInput={(params) => <TextField {...params} size='small' />}\n                    />\n                    <Button type=\"submit\" variant=\"outlined\"> OK</Button>\n                </Stack>\n            </Box>\n        </Stack>\n    );\n}\n","import { BuildingOrRoomChartsData, BuildingsOrRoomsChartsData, LogsChartsData, UserChartsData } from \"../models/Stats\";\nimport { AppURLParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface ChartsQueryData {\n    from: string,\n    to: string\n}\n\n\n\nexport type ChartsData = (\n    BuildingOrRoomChartsData |\n    BuildingsOrRoomsChartsData |\n    LogsChartsData |\n    UserChartsData\n);\n\n\nclass ChartService extends Service {\n\n    protected preparePath(urlParams: AppURLParams): string {\n        let endp = '';\n        let url = window.location.pathname;\n\n        const map = {\n            '/settings': '/requests',\n            '/users': '/users'\n        }\n\n        if (Object.keys(urlParams).length === 0) {\n            for (const [path, newPath] of Object.entries(map)) {\n                if (url.includes(path)) {\n                    endp = newPath;\n                }\n            }\n        } else if ('addressId' in urlParams) {\n            endp += `/addresses/${urlParams.addressId}/buildings`;\n\n            if ('buildingId' in urlParams) {\n                endp += `/${urlParams.buildingId}`;\n\n                if ('roomId' in urlParams) endp += `/rooms/${urlParams.roomId}`;\n            }\n        } else if ('userId' in urlParams) {\n            endp += `/users/${urlParams.userId}`\n        }\n        return endp;\n    }\n\n    public fetchData(urlParams: AppURLParams, queryParams: ChartsQueryData) {\n        return this.get(this.preparePath(urlParams) + '/stats', queryParams);\n    }\n\n\n\n}\n\nexport default new ChartService();","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../auth/useSession\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport ChartService, { ChartsData, ChartsQueryData } from \"../../../../../services/ChartService\";\nimport { AppURLParams } from \"../../../../../services/interfaces\";\nimport useTrigger from \"../../../hooks/useTrigger\";\n\n\nexport const chartsContext: any = React.createContext(null);\n\n\n\ninterface ChartsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\n\nexport default function ChartsContextProvider(props: ChartsContextProviderProps) {\n    const notify = useNotification();\n    const urlParams = useParams<AppURLParams>();\n    const refresh = useTrigger(60_000);\n\n    const { user } = useSession();\n    const { queryParams } = useQueryParams<ChartsQueryData>();\n\n    const [chartsData, setData] = React.useState<ChartsData | {}>({});\n\n\n    const load = React.useCallback(async () => {\n        let params = urlParams;\n        if ('userId' in urlParams && urlParams.userId === 'me') {\n            params = { userId: `${user?.id}` }\n        }\n\n        try {\n            const resp = await ChartService.fetchData(params, queryParams);\n            setData(resp.data as ChartsData);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setData({});\n        }\n    }, [\n        notify,\n        queryParams,\n        urlParams,\n        user?.id,\n    ]);\n\n    React.useEffect(() => {\n        load();\n    }, [\n        load,\n        refresh\n    ]);\n\n\n    if (Object.keys(chartsData).length === 0) return null;\n\n    return (\n        <chartsContext.Provider value={{\n            chartsData\n        }}>\n            {props.children}\n        </chartsContext.Provider>\n    );\n}","import React from \"react\";\nimport { chartsContext } from \"./ChartsContextProvider\";\nimport ChartsContextValue from \"./ChartsContextValue\";\n\n\nexport default function useCharts<T>() {\n    return React.useContext(chartsContext) as ChartsContextValue<T>;\n}","import Stack from \"@mui/material/Stack\";\nimport React from \"react\";\nimport { QueryParamsContext } from \"../../../../contexts/QueryParamsContext\";\nimport { ChartsQueryData } from \"../../../../services/ChartService\";\nimport ChartOptionsBar from \"./ChartOptionsBar\";\nimport { ChartsContext } from \"./ChartsContext\";\n\n\ninterface GenericChartsTabProps {\n    children: React.ReactNode[] | React.ReactNode\n}\n\nexport default function ChartsTab(props: GenericChartsTabProps) {\n    return (\n        <QueryParamsContext\n            name=\"charts-query-params\"\n            default={{ from: '1 month ago', to: 'now' } as ChartsQueryData}\n        >\n            <ChartsContext>\n                <Stack spacing={4}>\n                    <ChartOptionsBar />\n                    {props.children}\n                </Stack>\n            </ChartsContext>\n        </QueryParamsContext>\n    )\n}","import Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport IconButton from \"@mui/material/IconButton\";\nimport { Divider } from \"@mui/material\";\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\n\n\ninterface ChartSectionProps {\n    title: string,\n    children: React.ReactNode[] | React.ReactNode,\n    defaultOpen?: boolean,\n    onClick?: () => void\n}\n\n\nexport default function ChartSection(props: ChartSectionProps) {\n    const [open, setOpen] = React.useState<boolean>(props?.defaultOpen ? true : false);\n\n    return (\n        <Box>\n            <Box sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n            }}>\n                <Typography variant='h6' component='h5' id={props.title.replace(' ', '_')}>\n                    {props.title}\n                    <IconButton onClick={() => setOpen(old => !old)}>\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </Typography>\n                <IconButton\n                    onClick={props.onClick}\n                >\n                    <PictureAsPdfIcon />\n                </IconButton>\n            </Box>\n            <Collapse in={open} timeout=\"auto\" >\n                <Grid container spacing={2}>\n                    {props.children}\n                </Grid>\n                <br />\n                <Divider />\n            </Collapse>\n        </Box>\n    );\n}","import Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { AxisOptions } from \"react-charts\";\nimport { Chart as ReactChart } from 'react-charts'\nimport BarChartIcon from '@mui/icons-material/BarChart';\n\n\n\nexport const weekDays = [\n    'Niedziela',\n    'Poniedziałek',\n    'Wtorek',\n    'Środa',\n    'Czwartek',\n    'Piątek',\n    'Sobota',\n];\n\n\ninterface ChartSeries {\n    x: any\n    y: number,\n}\n\n\ninterface ChartProps<T> {\n    data: T[],\n    title: string,\n    fullWidth?: boolean,\n    resolveDay?: boolean\n    xKey: keyof T,\n    y: { label: string, key: keyof T }[]\n}\n\n\nexport default function Chart<DataType>(props: ChartProps<DataType>) {\n\n    const primaryAxis = React.useMemo((): AxisOptions<ChartSeries> => ({\n        getValue: item => props.resolveDay ? weekDays[Number(item.x)] : item.x,\n        min: 0\n    }), [props.resolveDay]);\n\n\n    const secondaryAxes = React.useMemo((): AxisOptions<ChartSeries>[] => [\n        {\n            getValue: item => item.y,\n            position: 'left',\n            elementType: 'bar',\n            minDomainLength: 15,\n            hardMin: 0,\n            scaleType: 'linear',\n            showDatumElements: true\n        }\n    ], []);\n\n\n    const data = React.useMemo(() => {\n        const obj: { label: string, data: ChartSeries[] }[] = props.y.map(({ label }) => ({ label: label, data: [] }))\n\n        props.data.forEach((item) => {\n            props.y.forEach(({ key }, index) => {\n                obj[index].data.push({\n                    x: item[props.xKey],\n                    y: Number(item[key]),\n                });\n            })\n        })\n        return obj;\n    }, [\n        props.y,\n        props.xKey,\n        props.data,\n    ]);\n\n\n    return (\n        <Grid item\n            xs={12}\n            lg={props.fullWidth ? 12 : 6}\n        >\n            <Stack direction='row' spacing={1} alignItems='center'>\n                <Typography variant=\"body2\" component='h4' color='text.secondary'>\n                    {props.title}\n                </Typography>\n                <BarChartIcon color='primary' />\n\n            </Stack>\n            {props.data.length === 0 ?\n                <Typography component='p' color='text.secondary'>\n                    Brak danych do nakreślenia wykresu\n                </Typography>\n                : <Box\n                    sx={{\n                        maxHeight: '400px',\n                        height: '40vh',\n                        minHeight: '300px',\n                        width: '100%',\n                    }}>\n\n                    <ReactChart\n                        options={{\n                            data,\n                            primaryAxis,\n                            secondaryAxes,\n                        }}\n                    />\n                </Box>}\n        </Grid>\n    )\n}","import { BuildingsOrRoomsChartsData } from \"../../../../models/Stats\";\nimport { Chart, ChartSection, ChartsTab, useCharts } from \"../../components/Charts\";\n\n\n\nexport default function AddressCharts() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\nfunction ActualLoader() {\n    const { chartsData } = useCharts<BuildingsOrRoomsChartsData>();\n\n    return (\n        <ChartSection defaultOpen title='Statystyki budynków'>\n            <Chart\n                fullWidth\n                title='Ilość rezerwacji'\n                data={chartsData.allReservations}\n                xKey='name'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Czas wszystkich reserwacji\"\n                data={chartsData.allReservations}\n                xKey='name'\n                y={[\n                    { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Średnie czasy rezerwacji\"\n                data={chartsData.allReservations}\n                xKey='name'\n                y={[\n                    { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n};","import Service from \"./Service\";\nimport { AddressViewParams } from \"./AddressService\";\n\n\n\nexport interface BuildingViewParams {\n    addressId: string,\n    buildingId: string,\n}\n\n\nexport interface BuildingUpdateParams {\n    [index: string]: string | number | undefined,\n    name?: string,\n    closeTime?: string,\n    openTime?: string,\n    addressId?: number\n}\n\nexport interface BuildingCreateParams {\n    name: string,\n    closeTime: string,\n    openTime: string,\n}\n\n\nclass BuildingService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath({ addressId, buildingId }: BuildingViewParams) {\n        this._path = `/addresses/${addressId}/buildings/${buildingId}`;\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(data: BuildingUpdateParams) {\n        return this.patch(this.path, data);\n    }\n\n    public create({ addressId }: AddressViewParams, data: BuildingCreateParams) {\n        return this.post(`/addresses/${addressId}/buildings`, data)\n    }\n\n    public getRoomsInBuilding() {\n        return this.get(`${this.path}/rooms`);\n    }\n}\n\nexport default new BuildingService()","import { List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\n\ninterface ScrollableListProps {\n    onAddItem: () => void,\n    children: React.ReactNode[] | React.ReactNode,\n}\n\n\nexport default function ScrollableList(props: ScrollableListProps) {\n    return (\n        <Box>\n            <List sx={{\n                minHeight: '160px',\n                maxHeight: '400px'\n            }}>\n                <ListItem button onClick={props.onAddItem}>\n                    <ListItemIcon >\n                        <AddCircleIcon color='primary' />\n                    </ListItemIcon>\n                    <ListItemText primary='Dodaj element' />\n                </ListItem>\n                {props.children}\n            </List>\n        </Box>\n    )\n}\n\n\n","import { ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport AppLink from \"../../../../shared/components/AppLink\";\n\n\ninterface ScrollableListItemProps {\n    primary: string | React.ReactNode,\n    link: string,\n}\n\n\nexport default function ScrollableListItem(props: ScrollableListItemProps) {\n    return (\n        <ListItem sx={{ py: '2px' }}>\n            <ListItemIcon>\n                <ArrowRightIcon />\n            </ListItemIcon>\n            <ListItemText primary={<AppLink withIcon to={props.link}>{props.primary}</AppLink>} />\n        </ListItem>\n    );\n}","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../contexts/ResourceMapContext\";\nimport Building from \"../../../../models/Building\";\nimport { AddressViewParams } from \"../../../../services/AddressService\";\nimport BuildingService, { BuildingCreateParams } from \"../../../../services/BuildingService\";\nimport ScrollableList, { ScrollableListItem } from \"../../components/ScrollableList\";\nimport SmallCard from \"../../../../shared/components/SmallCard\";\nimport { useAddress } from \"../AddressContext\";\nimport { CreateBuildingForm } from \"../Forms\";\n\n\nexport default function BuildingsList() {\n    const { getBuildingsInAddress } = useAddress();\n    const { reloadMap } = useResourceMap();\n    const notify = useNotification();\n\n    const urlParams = useParams() as AddressViewParams;\n\n    const [createBuildingModalOpen, setCreateBuildingModalOpen] = React.useState<boolean>(false);\n    const [buildings, setBuildings] = React.useState<Building[]>();\n\n\n    const load = React.useCallback(async () => {\n        const buildings = await getBuildingsInAddress();\n        setBuildings(buildings);\n    }, [getBuildingsInAddress])\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const createBuilding = React.useCallback(async (data: BuildingCreateParams) => {\n        try {\n            await BuildingService.create(urlParams, data);\n            load();\n            reloadMap();\n            notify('Nowa sala utworzona!', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        load,\n        urlParams,\n    ]);\n\n\n    const renderedBuildings = React.useMemo(() => {\n        return buildings?.map(item => <ScrollableListItem key={item.id}\n            primary={`Budynek ${item.name}`}\n            link={`./${item.address}/buildings/${item.id}`}\n        />)\n    }, [buildings]);\n\n\n    return (\n        <>\n            <CreateBuildingForm\n                open={createBuildingModalOpen}\n                onClose={() => setCreateBuildingModalOpen(false)}\n                handleCreateBuilding={createBuilding}\n            />\n\n            <SmallCard title='Budynki pod adresem'>\n                <ScrollableList\n                    onAddItem={() => setCreateBuildingModalOpen(true)}\n                >\n                    {renderedBuildings}\n                </ScrollableList>\n            </SmallCard>\n            <br />\n        </>\n    );\n}\n","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport AddressContext from \"./AddressContext\";\nimport AddressCard from \"./components/AddressCard\";\nimport AddressCharts from \"./components/AddressCharts\";\nimport BuildingsList from \"./components/BuildingsList\";\n\n\nexport default function AddressPage() {\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        arr.push({ name: 'Statystyki', component: <AddressCharts /> });\n        arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <AddressContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item container spacing={2} alignContent='flex-start' xs={12} md={5} lg={4}>\n                    <Grid item xs={12}>\n                        <AddressCard />\n                    </Grid>\n                    <Grid item xs={12} >\n                        <BuildingsList />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </AddressContext>\n    );\n}","import { DayStatsItem } from \"../../../models/Stats\";\nimport { Chart, ChartSection } from \"./Charts\";\n\n\ninterface MonthlyChartsSectionProps {\n    data: DayStatsItem[]\n}\n\n\nexport default function MonthlyChartsSection(props: MonthlyChartsSectionProps) {\n    return (\n        <ChartSection title='Statystyki miesięczne'>\n            <Chart\n                fullWidth\n                title='Ilość rezerwacji na dzień miesiąca'\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Faktyczny czas wszystkich rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Czas całkowity [m]', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Średni czas rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Średni planowany czas [m]', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas [m]', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}","import { DayStatsItem } from \"../../../models/Stats\";\nimport { Chart, ChartSection } from \"./Charts\";\n\n\ninterface WeeklyChartsSectionProps {\n    data: DayStatsItem[]\n}\n\n\nexport default function WeeklyChartsSection(props: WeeklyChartsSectionProps) {\n    return (\n        <ChartSection title='Statystyki tygodniowe'>\n            <Chart\n                fullWidth\n                resolveDay\n                title='Ilość rezerwacji na dzień tygodnia'\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth\n                resolveDay\n                title=\"Faktyczny czas wszystkich rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Czas całkowity [m]', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                resolveDay\n                title=\"Średni czas rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Średni planowany czas [m]', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas [m]', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}","import { BuildingOrRoomChartsData } from \"../../../models/Stats\";\nimport { ChartsTab, Chart, ChartSection, useCharts } from \"./Charts\";\nimport MonthlyChartsSection from \"./MonthlyChartsSection\";\nimport WeeklyChartsSection from \"./WeeklyChartsSection\";\n\n\n\nexport default function RoomOrBuildingChartTab() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n// need to use actual loading component to access charts context in ChartsTab\nfunction ActualLoader() {\n    const { chartsData } = useCharts<BuildingOrRoomChartsData>();\n\n    return (\n        <>\n            <WeeklyChartsSection data={chartsData.weekly} />\n\n            <MonthlyChartsSection data={chartsData.monthly} />\n\n            <ChartSection defaultOpen title='Wykresy odnośnie użytkowników'>\n                <Chart\n                    fullWidth\n                    title=\"Średnie czasy rezerwacji\"\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                        { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title='Ilość rezerwacji użytkowników'\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title=\"Czas wszystkich reserwacji danego użytkownika\"\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                    ]}\n                />\n            </ChartSection>\n        </>\n    )\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport { DetailedBuilding } from \"../../../../models/Building\";\nimport BuildingService, { BuildingUpdateParams, BuildingViewParams } from \"../../../../services/BuildingService\";\nimport BuildingContextValue from \"./BuildingContextValue\";\nimport { dynamicPaths } from \"../../../../shared/path\";\nimport Room from \"../../../../models/Room\";\nimport { useResourceMap } from \"../../../../contexts/ResourceMapContext\";\n\n\ninterface BuildingContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport const buildingContext: any = React.createContext(null);\n\n\nexport default function BuildingContextProvider(props: BuildingContextProviderProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n    const urlParams = useParams<BuildingViewParams>();\n\n    const [building, setBuilding] = React.useState<DetailedBuilding>();\n\n\n    React.useLayoutEffect(() => {\n        BuildingService.setPath(urlParams);\n    }, [urlParams])\n\n\n    const getBuilding = React.useCallback(async () => {\n        const resp = await BuildingService.getCurrentOne();\n        setBuilding(resp.data as DetailedBuilding);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        getBuilding();\n    }, [getBuilding]);\n\n\n    const getRoomsInBuilding = React.useCallback(async () => {\n        try {\n            const resp = await BuildingService.getRoomsInBuilding();\n            return resp.data as Room[];\n        } catch (err: any) {\n            return [];\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams])\n\n\n    const updateBuilding = React.useCallback(async (data: BuildingUpdateParams) => {\n        try {\n            if (await BuildingService.update(data)) {\n\n                if (\n                    building &&\n                    (\n                        ('addressId' in data && building.address.id !== data.addressId)\n                        || ('name' in data)\n                    )\n                ) {\n                    reloadMap();\n                }\n\n                setBuilding((old) => {\n                    old && Object.keys(data).forEach((key) => {\n                        switch (key) {\n                            case 'addressId':\n                                old.address.id = Number(data[key]);\n                                break;\n                            default:\n                                old[key] = data[key];\n                                break;\n                        }\n                    });\n                    return Object.assign({}, old);\n                })\n                notify('Bydynek zaktualizowany', 'success');\n                return true;\n            }\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify, building, reloadMap]);\n\n\n    const deleteBuilding = React.useCallback(async () => {\n        try {\n            await BuildingService.remove();\n            building && notify(\"Budynek usunięty\", 'success', () => <Redirect to={dynamicPaths.toAddress(building.address.id)} />);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify, building]);\n\n\n    if (!Boolean(building)) return null;\n\n    return (\n        <buildingContext.Provider value={{\n            building,\n            deleteBuilding,\n            getRoomsInBuilding,\n            updateBuilding,\n        } as BuildingContextValue}>\n\n            {props.children}\n\n        </buildingContext.Provider>\n    );\n}","import React from \"react\";\nimport { buildingContext } from \"./BuildingContextProvider\";\nimport BuildingContextValue from \"./BuildingContextValue\";\n\n\nexport default function useBuilding() {\n    return React.useContext(buildingContext) as BuildingContextValue;\n}","import Model from './Model';\nimport Image from './Image';\nimport Building from './Building';\n\nexport enum RoomTypes {\n    LABORATORY = \"Sala laboratoryjna\",\n    CONFERENCE = \"Sala konferencyjna\",\n    LECTURE = \"Sala wykładowa\"\n}\n\nexport type RoomType = RoomTypes.LABORATORY | RoomTypes.CONFERENCE | RoomTypes.LECTURE;\n\ninterface BaseRoom extends Model {\n    name: string,\n    image: Image,\n    roomType: RoomType,\n    seatsCount: number,\n    floor: number,\n    blocked: boolean,\n    occupied: boolean,\n    RFIDTag: null | string\n}\n\nexport default interface Room extends BaseRoom {\n    building: number\n}\n\nexport interface DetailedRoom extends BaseRoom {\n    building: Building\n}","import { Button, Grid } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\nimport React from \"react\";\nimport useNotification from \"../../contexts/NotificationContext/useNotification\";\nimport Image from \"../../models/Image\";\nimport ImageService from \"../../services/ImageService\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { Redirect, useLocation, useParams } from \"react-router-dom\";\nimport { UserViewParams } from \"../../services/UserService\";\nimport { BuildingViewParams } from \"../../services/BuildingService\";\nimport { RoomViewParams } from \"../../services/RoomService\";\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst StyledImage = styled('img')({\n    width: \"fill-available\",\n    maxHeight: '350px'\n});\n\ninterface ImageUploadFieldProps {\n    image?: Image,\n    onUpload?: () => void;\n    onDelete?: () => void;\n}\n\nexport default function ImageUploadField(props: ImageUploadFieldProps) {\n    const notify = useNotification();\n    const location = useLocation();\n    const urlParams = useParams<UserViewParams | BuildingViewParams | RoomViewParams>();\n    const [uploadedImage, setUploadedImage] = React.useState<Blob>();\n\n\n    const handleSubmit = React.useCallback(async (evt: React.FormEvent) => {\n        evt.preventDefault();\n        if (!uploadedImage) {\n            notify(\"Najpierw załaduj nowy obraz\", \"warning\");\n            return;\n        }\n        try {\n            await ImageService.upload(urlParams, uploadedImage);\n            props.onUpload && props.onUpload();\n            notify(\"Obraz został zmieniony\", 'success',\n                () => <Redirect to={location.pathname} /> // rerender the current page\n            );\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        uploadedImage,\n        props,\n        notify,\n        location,\n        urlParams,\n    ]);\n\n\n    const handleImageUpload = React.useCallback((evt: any) => {\n        if (evt.target.files && evt.target.files[0]) {\n            const img = evt.target.files[0];\n            setUploadedImage(img);\n        }\n    }, []);\n\n\n    const handleRemoveImgae = React.useCallback(async () => {\n        try {\n            await ImageService.remove(urlParams);\n            props.onDelete && props.onDelete();\n            notify(\"Przywrócono domyślny obraz, załaduj ponownie aby zobaczyć rezultat.\", \"success\",\n                () => <Redirect to={location.pathname} /> // rerender the current page\n            );\n\n        } catch (err: any) {\n            notify(err.description, \"error\");\n        }\n    }, [\n        props,\n        notify,\n        location,\n        urlParams,\n    ]);\n\n\n    return (\n        <Grid container component=\"form\"\n            onSubmit={handleSubmit}\n            direction=\"row\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <Grid item xs={12} sm={9}>\n                <StyledImage\n                    src={uploadedImage ? URL.createObjectURL(uploadedImage) : ImageService.getLink(props.image)}\n                    alt='nowy obraz'\n                />\n            </Grid>\n            <Grid item xs={12} sm={3} sx={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n            }}>\n                <label htmlFor=\"upload-obrazu\">\n                    <Input\n                        accept=\"*.(jpg|png)\"\n                        id=\"upload-obrazu\"\n                        type=\"file\"\n                        onChange={handleImageUpload}\n                    />\n                    <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        component=\"span\">\n                        Wybierz zdjęcie\n                    </Button>\n                </label>\n\n                <Button color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={handleRemoveImgae}\n                >\n                    Usuń\n                </Button>\n\n                <Button\n                    type=\"submit\"\n                    color=\"success\"\n                    startIcon={<SaveIcon />}\n                >\n                    Zapisz\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}","import Grid from \"@mui/material/Grid\";\nimport { SelectChangeEvent } from \"@mui/material/Select/SelectInput\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../../../shared/components/GenericModal\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { BuildingUpdateParams } from \"../../../../services/BuildingService\";\nimport { useResourceMap } from \"../../../../contexts/ResourceMapContext\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useBuilding } from \"../BuildingContext\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport { timeFormat } from \"../../../../shared/utils\";\nimport ImageUploadField from \"../../../../shared/components/ImageUploadField\";\nimport Divider from \"@mui/material/Divider\";\nimport FormGridContainer from \"../../../../shared/components/FormGridContainer\";\n\n\n\ninterface BuildingEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\n\nfunction timeToDate(value: string) {\n    const [h, m] = value.split(':');\n    return new Date(0, 0, 0, Number(h), Number(m));\n}\n\n\nexport default function BuildingEditForm({\n    open,\n    onClose,\n}: BuildingEditFormProps) {\n    const { allAddresses } = useResourceMap();\n    const { updateBuilding, building } = useBuilding();\n\n    const [data, setData] = React.useState<BuildingUpdateParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n\n        setData((old: BuildingUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleTime = React.useCallback((field: 'closeTime' | 'openTime', value: Date) => {\n        setData(old => {\n            old[field] = timeFormat.format(value);\n            return Object.assign({}, old);\n        });\n    }, [])\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateBuilding(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateBuilding,\n    ]);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<string | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'addressId') value = Number(value);\n\n        event.target && setData((old: BuildingUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno edycji budynku\"\n        >\n            <Stack spacing={3}>\n\n                <ImageUploadField image={building.image} />\n                <Divider />\n\n                <FormGridContainer\n                    title='Edycja budynku'\n                    subtitle=\"Zmień właściwości budynku i zatwierdź zmiany.\"\n                    onSubmit={handleSubmit}\n                    onCancel={onClose}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nazwa\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? building.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6} >\n                        <MobileTimePicker\n                            label=\"Godzina otwarcia\"\n                            inputFormat=\"HH:mm\"\n                            value={timeToDate(data.openTime ?? building.openTime)}\n                            onChange={(value: any) => handleTime('openTime', value)}\n                            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <MobileTimePicker\n                            label=\"Godzina zamknięcia\"\n                            inputFormat=\"HH:mm\"\n                            value={timeToDate(data.closeTime ?? building.closeTime)}\n                            onChange={(value: any) => handleTime('closeTime', value)}\n                            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"wybierz-adres\">Adres</InputLabel>\n                            <Select\n                                labelId=\"wybierz-adres\"\n                                name=\"addressId\"\n                                value={data.addressId ?? building.address.id}\n                                label=\"Adres\"\n                                onChange={handleSelectChange}\n                            >\n                                {allAddresses.map(({ name, id }) => <MenuItem key={name} value={id} >{name} </MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    );\n}","import FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { RoomType, RoomTypes } from \"../../../../models/Room\";\nimport { CreateRoomParams } from \"../../../../services/RoomService\";\nimport GenericModal from \"../../../../shared/components/GenericModal\";\nimport FormGridContainer from \"../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateRoomFormProps {\n    open: boolean,\n    onClose: () => void,\n    handleCreateRoom: (data: CreateRoomParams) => Promise<boolean>\n}\n\n\nexport default function CreateRoomForm({\n    open,\n    onClose,\n    handleCreateRoom,\n}: CreateRoomFormProps) {\n\n    const [data, setData] = React.useState<CreateRoomParams>({\n        name: '',\n        roomType: RoomTypes.LECTURE,\n        seatsCount: 50,\n        floor: 0\n    });\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<RoomType | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'buildingId') value = Number(value);\n\n        event.target && setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await handleCreateRoom(data)) {\n            onClose();\n        }\n\n    }, [\n        data,\n        handleCreateRoom,\n        onClose,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno edycji budynku\"\n        >\n            <FormGridContainer\n                title='Dodaj nową salę'\n                subtitle=\"Wypełnij dane nowej sali i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nazwa\"\n                        name=\"name\"\n                        autoFocus\n                        value={data.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"room-type\">Typ Sali</InputLabel>\n                        <Select\n                            required\n                            labelId=\"room-type\"\n                            id=\"roomType\"\n                            value={data.roomType}\n                            name=\"roomType\"\n                            label=\"Typ Sali\"\n                            onChange={handleSelectChange}\n                        >\n                            {Object.values(RoomTypes).map(val => <MenuItem key={val} value={val}>{val}</MenuItem>)}\n\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={6} >\n                    <TextField\n                        required\n                        name=\"seatsCount\"\n                        label=\"Ilość miejsc\"\n                        type=\"number\"\n                        id=\"seatsCount\"\n                        value={data.seatsCount}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        name=\"floor\"\n                        label=\"Piętro\"\n                        type=\"number\"\n                        id=\"floor\"\n                        value={data.floor}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal >\n    );\n}","\n\n\nexport enum FavType {\n    Building = 'building-item',\n    Room = 'room-item'\n}\n\n\ninterface FavouriteItem {\n    id: number,\n    name: string,\n    type: FavType,\n}\n\nexport interface FavouriteBuilding extends FavouriteItem {\n    addressId: number,\n}\n\nexport interface FavouriteRoom extends FavouriteBuilding {\n    buildingId: number,\n}\n\n\nexport default interface Metadata {\n    notes?: string,\n    favourites?: (FavouriteBuilding | FavouriteRoom)[]\n}\n","import StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport IconButton from '@mui/material/IconButton';\nimport React from 'react';\nimport { FavouriteBuilding, FavouriteRoom } from '../../models/Metadata';\nimport MetadataService from '../../services/MetadataService';\n\n\n\ninterface FavouriteButtonProps {\n    data: FavouriteBuilding | FavouriteRoom\n}\n\n\nexport default function FavouriteButton(props: FavouriteButtonProps) {\n    const [marked, setMarked] = React.useState(false);\n\n    React.useEffect(() => {\n        setMarked(MetadataService.isFavourite(props.data));\n    }, [props.data]);\n\n\n    const addToFavourites = React.useCallback(() => {\n        if (marked) {\n            MetadataService.removeFavourite(props.data);\n        } else {\n            MetadataService.addFavourite(props.data);\n        }\n\n        setMarked(old => !old);\n    }, [\n        marked,\n        props.data,\n    ]);\n\n\n    return (\n        <IconButton sx={{display:'inline'}} onClick={addToFavourites} color='warning'>\n            {marked ? <StarIcon /> : <StarBorderIcon />}\n        </IconButton>\n    );\n}","import { Card, CardContent, CardHeader, CardMedia } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport React from \"react\";\nimport DeleteModal from \"../../../../shared/components/DeleteModal\";\nimport { useBuilding } from \"../BuildingContext\";\nimport { BuildingEditForm } from \"../Forms\";\nimport FavouriteButton from \"../../../../shared/components/FavouriteButton\";\nimport { FavType } from \"../../../../models/Metadata\";\nimport MoreVertMenu from \"../../../../shared/components/MoreVertMenu\";\nimport DatesFooter from \"../../../../shared/components/DatesFooter\";\nimport ImageService from \"../../../../services/ImageService\";\nimport AppLink from \"../../../../shared/components/AppLink\";\nimport { dynamicPaths } from \"../../../../shared/path\";\n\n\n\n\nexport default function BuildingView() {\n    const { building, deleteBuilding } = useBuilding();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    if (!Boolean(building)) return null;\n\n    return (\n        <>\n            <DeleteModal\n                objectName={building.name}\n                open={deleteModalOpen}\n                onClose={() => setDeleteModalOpen(false)}\n                onSuccess={deleteBuilding}\n            />\n\n            <BuildingEditForm\n                open={editModalOpen}\n                onClose={() => setEditModalOpen(false)}\n            />\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={<MoreVertMenu options={options} />}\n                    title={\n                        <>\n                            Budynek {building.name}\n                            <FavouriteButton data={{\n                                id: building.id,\n                                name: building.name,\n                                type: FavType.Building,\n                                addressId: building.address.id,\n                            }} />\n                        </>\n                    }\n                    subheader={<>{building.openTime} - {building.closeTime}</>}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"350\"\n                    image={ImageService.getLink(building.image)}\n                    alt={building.name}\n                />\n                <CardContent>\n                    <AppLink withIcon to={dynamicPaths.toAddress(building.address.id)}>\n                        {building.address.town},&nbsp;{building.address.street}&nbsp;{building.address.number}\n                    </AppLink>\n                    <br />\n                    <DatesFooter model={building} />\n                </CardContent>\n            </Card>\n        </>\n    );\n}","import React from \"react\";\nimport Room from \"../../../../models/Room\";\nimport ScrollableList, { ScrollableListItem } from \"../../components/ScrollableList\";\nimport { useBuilding } from \"../BuildingContext\";\nimport { CreateRoomForm } from \"../Forms\";\nimport RoomService, { CreateRoomParams } from \"../../../../services/RoomService\";\nimport { useParams } from \"react-router-dom\";\nimport { BuildingViewParams } from \"../../../../services/BuildingService\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../contexts/ResourceMapContext\";\nimport SmallCard from \"../../../../shared/components/SmallCard\";\n\n\n\nexport default function RoomsList() {\n    const { getRoomsInBuilding } = useBuilding();\n    const { reloadMap } = useResourceMap();\n\n    const urlParams = useParams() as BuildingViewParams;\n    const notify = useNotification();\n\n    const [createRoomModalOpen, setCreateRoomModalOpen] = React.useState<boolean>(false);\n    const [rooms, setRooms] = React.useState<Room[]>();\n\n\n    const load = React.useCallback(async () => {\n        const rooms = await getRoomsInBuilding();\n        setRooms(rooms);\n    }, [\n        getRoomsInBuilding\n    ]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const createRoom = React.useCallback(async (data: CreateRoomParams) => {\n        try {\n            await RoomService.create(urlParams, data);\n            notify('Nowa sala utworzona!', 'success');\n            load();\n            reloadMap();\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        load,\n        urlParams,\n    ]);\n\n\n    const renderedRooms = React.useMemo(() => {\n        return rooms?.map(item => <ScrollableListItem\n            key={item.id}\n            primary={`Sala ${item.name}`}\n            link={`./${item.building}/rooms/${item.id}`}\n        />)\n    }, [rooms])\n\n\n    return (\n        <>\n            <CreateRoomForm\n                handleCreateRoom={createRoom}\n                open={createRoomModalOpen}\n                onClose={() => setCreateRoomModalOpen(false)}\n            />\n\n            <SmallCard title=\"Sale w budynku\">\n                <ScrollableList onAddItem={() => setCreateRoomModalOpen(true)}>\n                    {renderedRooms}\n                </ScrollableList>\n            </SmallCard>\n            <br />\n        </>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport RoomOrBuildingChartTab from \"../components/RoomOrBuildingChartTab\";\nimport BuildingContext from \"./BuildingContext\";\nimport BuildingCard from \"./components/BuildingCard\";\nimport RoomsList from \"./components/RoomsList\";\n\n\nexport default function BuildingPage() {\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        arr.push({ name: 'Statystyki', component: <RoomOrBuildingChartTab /> });\n        arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <BuildingContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item container spacing={2} alignContent='flex-start' xs={12} md={5} lg={4}>\n                    <Grid item xs={12}>\n                        <BuildingCard />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <RoomsList />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </BuildingContext>\n    );\n}","import { List, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport useSession from \"../../../auth/useSession\";\nimport { FavouriteBuilding, FavouriteRoom, FavType } from \"../../../models/Metadata\";\nimport MetadataService from \"../../../services/MetadataService\";\nimport AppLink from \"../../../shared/components/AppLink\";\nimport SmallCard from \"../../../shared/components/SmallCard\";\nimport { dynamicPaths } from \"../../../shared/path\";\n\n\n\n\nfunction getCorrectListItem(data: FavouriteBuilding | FavouriteRoom): React.ReactNode {\n    switch (data.type) {\n        case FavType.Building: {\n            const { addressId, id, name } = data as FavouriteBuilding;\n            return <ListItemText key={name + id} primary={<AppLink withIcon to={dynamicPaths.toBuilding(addressId, id)}>Budynek {name}</AppLink>} />\n        }\n        case FavType.Room: {\n            const { addressId, buildingId, id, name } = data as FavouriteRoom;\n            return <ListItemText key={name + id} primary={<AppLink withIcon to={dynamicPaths.toRoom(addressId, buildingId, id)}>Sala {name}</AppLink>} />\n        }\n        default: return null;\n    }\n}\n\n\nexport default function Favourites() {\n    const { user } = useSession();\n\n    const [data, setData] = React.useState<(FavouriteBuilding | FavouriteRoom)[]>()\n\n\n    React.useEffect(() => {\n        setData(MetadataService.favourites);\n    }, [user])\n\n\n    return (\n        <SmallCard title='Ulubione'>\n            <List>\n                {\n                    data?.map(item => getCorrectListItem(item))\n                }\n                {\n                    data?.length === 0 &&\n                    <ListItemText color='text.secondary' primary='Brak ulubionych' />\n                }\n            </List>\n        </SmallCard>\n    )\n}\n\n\n","import { Button, InputBase } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport SaveIcon from '@mui/icons-material/Save';\nimport useNotification from \"../../../contexts/NotificationContext/useNotification\";\nimport SmallCard from \"../../../shared/components/SmallCard\";\nimport MetadataService from \"../../../services/MetadataService\";\n\n\n\nexport default function Notebook() {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<string>();\n\n\n    React.useEffect(() => {\n        setData(MetadataService.notes)\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (!data) return;\n\n        try {\n            MetadataService.notes = data;\n\n            notify('Notatki zostały zapisane', 'success');\n            setData(undefined);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n    ]);\n\n\n    const handleChange = React.useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n        setData(event.target.value)\n    }, []);\n\n\n    return (\n        <SmallCard title='Notatnik'>\n            <Box component='form' onSubmit={handleSubmit} sx={{ display: 'flex', justifyContent: 'flex-end', flexDirection: 'column' }}>\n                <InputBase\n                    aria-label=\"twoje notatki\"\n                    title='twoje notatki'\n\n                    multiline\n                    minRows={3}\n                    maxRows={10}\n                    name='search'\n                    value={data ?? MetadataService.notes ?? ''}\n                    onChange={handleChange}\n                    placeholder=\"Twoje notatki\"\n                    sx={{ width: '100%', height: '100%', p: 1, bgcolor: 'background.default' }}\n                    inputProps={{ 'aria-label': 'Twoje notatki' }}\n                />\n                <Button\n                    title='Zapisz notatki'\n                    aria-label='Zapisz notatki'\n                    sx={{ mr: '0px', ml: 'auto' }}\n                    startIcon={<SaveIcon />}\n                    type=\"submit\">\n                    Zapisz\n                </Button>\n            </Box>\n        </SmallCard >\n    );\n}\n","import GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SmallCard from \"../../../shared/components/SmallCard\";\n\n\n\nexport default function HomeReservations() {\n    return (\n        <SmallCard title='Rezerwacje'>\n            <GenericReservationsTab />\n        </SmallCard>\n    );\n}\n","import { Grid } from \"@mui/material\";\nimport Favourites from \"./Favourites\";\nimport Notebook from \"./Notebook\";\nimport HomeReservations from \"./HomeReservations\";\n\n\n\nexport default function HomePage() {\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12} lg={8}>\n                <HomeReservations />\n            </Grid>\n            <Grid item container spacing={2} xs={12} lg={4}\n                alignContent='flex-start'\n            >\n                <Grid item xs={12}>\n                    <Notebook />\n                </Grid>\n                <Grid item xs={12} >\n                    <Favourites />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","import CancelIcon, { } from '@mui/icons-material/Cancel';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\n\n\ninterface YesNoIconProps {\n    value: boolean,\n    title?: string,\n    fontSize?: 'small' | 'medium' | 'large',\n}\n\n\nexport default function YesNoIcon(props: YesNoIconProps) {\n    const { value, ...rest } = props;\n\n    return (\n        value ?\n            <CheckCircleOutlineIcon color=\"success\" {...rest} />\n            : <CancelIcon sx={{ color: \"red\" }} {...rest} />\n    )\n}","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Divider, FormControl, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack } from '@mui/material';\nimport { RoomUpdateParams } from '../../../../services/RoomService';\nimport { RoomType, RoomTypes } from '../../../../models/Room';\nimport { useRoomContext } from '../RoomContext';\nimport ImageUploadField from '../../../../shared/components/ImageUploadField';\nimport { useResourceMap } from '../../../../contexts/ResourceMapContext';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport GenericModal from '../../../../shared/components/GenericModal';\nimport FormGridContainer from '../../../../shared/components/FormGridContainer';\n\n\n\ninterface RoomEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\nexport default function RoomEditForm({\n    open,\n    onClose,\n}: RoomEditFormProps) {\n    const { room, updateRoom } = useRoomContext();\n    const { allBuildings } = useResourceMap();\n\n    const [data, setData] = React.useState<RoomUpdateParams>({});\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number | boolean = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            case \"blocked\":\n                value = !event.target.checked;\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n\n        setData((old: RoomUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<RoomType | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'buildingId') value = Number(value);\n\n        event.target && setData((old: RoomUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateRoom(data)) {\n            onClose();\n        }\n    }, [\n        data,\n        updateRoom,\n        onClose\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno usuwania obiektu\"\n            sx={{\n                maxWidth: \"450px\",\n            }}\n        >\n            <Stack spacing={2}>\n                <ImageUploadField image={room.image} />\n                <Divider />\n\n                <FormGridContainer\n                    title='Edycja sali'\n                    subtitle=\"Zmień właściwości pokoju i zatwierdź zmiany.\"\n                    onSubmit={handleSubmit}\n                    onCancel={onClose}\n                >\n\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nazwa\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? room.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"room-type\">Typ Sali</InputLabel>\n                            <Select\n                                labelId=\"room-type\"\n                                id=\"roomType\"\n                                value={data.roomType ?? room.roomType}\n                                name=\"roomType\"\n                                label=\"Typ Sali\"\n                                onChange={handleSelectChange}\n                            >\n                                {Object.values(RoomTypes).map(val => <MenuItem key={val} value={val}>{val}</MenuItem>)}\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={6} >\n                        <TextField\n                            required\n                            name=\"seatsCount\"\n                            label=\"Ilość miejsc\"\n                            type=\"number\"\n                            id=\"seatsCount\"\n                            value={data.seatsCount ?? room.seatsCount}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <TextField\n                            required\n                            name=\"floor\"\n                            label=\"Piętro\"\n                            type=\"number\"\n                            id=\"floor\"\n                            value={data.floor ?? room.floor}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"wybierz-budynek\">Budynek</InputLabel>\n                            <Select\n                                labelId=\"wybierz-budynek\"\n                                name=\"buildingId\"\n                                value={data.buildingId ?? room.building.id}\n                                label=\"Budynek\"\n                                onChange={handleSelectChange}\n                            >\n                                {allBuildings.map(({ name, id }) => <MenuItem key={name} value={id} >Budynek &nbsp;{name} </MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            labelPlacement=\"start\"\n                            control={<Switch id=\"room-blocked\" name=\"blocked\"\n                                inputProps={{ 'aria-label': 'controlled' }}\n                                onChange={handleChange}\n                                checked={!(data.blocked ?? room.blocked)}\n                            />}\n                            label=\"Dostępność Sali\"\n                        />\n                    </Grid>\n\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    );\n}","import GenericModal from \"../../../../shared/components/GenericModal\";\nimport RfidForm from \"../../../../shared/components/RfidForm\";\nimport { useRoomContext } from \"../RoomContext\";\n\n\ninterface RfidModalRormProps {\n    open: boolean,\n    onClose: () => void,\n}\n\nexport default function RfidModalRorm(props: RfidModalRormProps) {\n    const { updateRFIDTag } = useRoomContext();\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={props.onClose}\n            aria-label=\"Okno przypisania tagu RFID\"\n            sx={{\n                maxWidth: \"400px\"\n            }}\n        >\n            <RfidForm\n                headline=\"Użyj czytnika, aby wprowadzić tag.\"\n                bodyText='Jeśli nie chcesz wprowadzać zmian, naciśnij \"Zamknij\"'\n                onScan={updateRFIDTag}\n                onClose={props.onClose}\n            />\n        </GenericModal>\n    );\n}\n","import { Chip, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../contexts/ResourceMapContext\";\nimport { DetailedRoom } from \"../../../../models/Room\";\nimport AppLink from \"../../../../shared/components/AppLink\";\nimport YesNoIcon from \"../../../../shared/components/YesNoIcon\";\nimport { RfidForm } from \"../Forms\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\n\ninterface RoomTableInfoProps {\n    room: DetailedRoom,\n    deleteTag: () => Promise<void>\n}\n\n\nexport default function RoomTableInfo({\n    room, deleteTag\n}: RoomTableInfoProps) {\n    const { getBuildingLink } = useResourceMap();\n    const [rfidTagModalOpen, setRfidTagModalOpen] = React.useState<boolean>(false);\n\n    const tableRows = React.useMemo(() => {\n        return [\n            {\n                label: \"Ilość miejsc\",\n                value: room.seatsCount\n            }, {\n                label: \"Piętro\",\n                value: room.floor === 0 ? \"parter\" : room.floor\n            }, {\n                label: \"Ilość miejsc\",\n                value: room.seatsCount\n            }, {\n                label: \"Budynek\",\n                value: <AppLink withIcon to={getBuildingLink(room.building.id)}> {room.building.name} </AppLink>\n            }, {\n                label: \"Aktualnie wolny\",\n                value: <YesNoIcon value={!room.occupied} />\n            }, {\n                label: \"Tag RFID\",\n                value: room.RFIDTag ?\n                    <Chip label={room.RFIDTag} onDelete={deleteTag} />\n                    : <IconButton size=\"small\"\n                        onClick={() => setRfidTagModalOpen(true)}\n                        sx={{ p: '0px' }}\n                    >\n                        <AddCircleIcon />\n                    </IconButton>\n            }, {\n                label: \"Dostępny do rezerwacji\",\n                value: <YesNoIcon value={!room.blocked} />\n            },\n        ];\n    }, [\n        room,\n        deleteTag,\n        getBuildingLink,\n    ]);\n\n\n    const RenderedRows = React.useMemo(() => {\n        return tableRows.map(({ label, value }, index) =>\n            <TableRow hover key={index}>\n                <TableCell sx={{ color: \"text.secondary\" }} align=\"left\">{label}</TableCell>\n                <TableCell sx={{ color: \"primary.main\", fontWeight: \"bold\" }} align=\"left\">{value}</TableCell>\n            </TableRow>\n        )\n    }, [tableRows])\n\n\n    return (\n        <>\n            <RfidForm\n                open={rfidTagModalOpen}\n                onClose={() => setRfidTagModalOpen(false)}\n            />\n\n            <TableContainer >\n                <Table aria-label=\"room-info-table\" size=\"small\">\n                    <TableHead sx={{ display: 'none' }}>\n                        <TableRow>\n                            <TableCell align=\"left\">Właściwość</TableCell>\n                            <TableCell align=\"left\">stan</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {RenderedRows}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n}\n","import * as React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\n\nexport default function Loading() {\n  return (\n    <Box sx={{\n      display: 'flex'\n    }}>\n      <CircularProgress />\n    </Box>\n  );\n}","import { MobileDateTimePicker } from \"@mui/lab\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../contexts/ResourceMapContext\";\nimport ReservationService, { CreateReservationData } from \"../../../../services/ReservationService\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport FormGridContainer from \"../../../../shared/components/FormGridContainer\";\n\n\n\ninterface CreateReservationFormProps {\n    roomId?: number\n    onCancel: () => void\n}\n\n\nexport default function CreateReservationForm(props: CreateReservationFormProps) {\n    const notify = useNotification();\n    const { allRooms } = useResourceMap();\n    const [data, setData] = React.useState<CreateReservationData>({\n        title: '',\n        description: '',\n        plannedStart: new Date(),\n        plannedEnd: new Date(),\n        roomId: props.roomId ?? 0\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        try {\n            await ReservationService.createOne(data);\n            notify(\"Rezerwacja utworzona prawidłowo!\", 'success');\n            props.onCancel()\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [data, notify, props]);\n\n\n    return (\n        <FormGridContainer\n            title='Tworzenie rezerwacji'\n            subtitle=\"Stwórz rezerwację w wybranym przez siebie pokoju. Aby zobaczyć zmiany, przeładu.\"\n            onSubmit={handleSubmit}\n            onCancel={props.onCancel}\n        >\n            <Grid item xs={12}>\n                <TextField\n                    title=\"Tytuł rezerwacji\"\n                    inputProps={{ title: \"Tytuł rezerwacji\" }}\n                    autoFocus\n                    required\n                    fullWidth\n                    // multiline\n                    maxRows={4}\n                    label=\"Tytuł\"\n                    id=\"outlined-multiline-flexible\"\n                    name='title'\n                    value={data.title}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    required\n                    fullWidth\n                    multiline\n                    maxRows={20}\n                    label=\"Opis\"\n                    id=\"outlined-multiline-flexible\"\n                    name='description'\n                    value={data.description}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <MobileDateTimePicker\n                    minDate={new Date()}\n                    label=\"Początek\"\n                    inputFormat=\"yyyy-MM-dd HH:mm\"\n                    value={data.plannedStart}\n                    onChange={(value: any) => setData(old => ({ ...old, plannedStart: value }))}\n                    renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <MobileDateTimePicker\n                    minDate={new Date()}\n                    label=\"Koniec\"\n                    inputFormat=\"yyyy-MM-dd HH:mm\"\n                    value={data.plannedEnd}\n                    onChange={(value: any) => setData(old => ({ ...old, plannedEnd: value }))}\n                    renderInput={(params) => <TextField sx={{ width: '100%' }} {...params} />}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                    <Select\n                        required\n                        labelId=\"wybierz-budynek\"\n                        name=\"buildingId\"\n                        value={data.roomId}\n                        label=\"Budynek\"\n                        onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                    >\n                        {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n        </FormGridContainer>\n    );\n}","import GenericModal from \"../../../../shared/components/GenericModal\";\nimport CreateReservationForm from \"./CreateReservationForm\";\n\n\ninterface CreateReservationModalProps {\n    open: boolean,\n    onClose: () => void,\n    roomId?: number\n}\n\nexport default function CreateReservationModal(props: CreateReservationModalProps) {\n    return (\n        <GenericModal\n            open={props.open}\n            aria-label='Okno do tworzenia rezerwacji'\n            onClose={props.onClose}\n        >\n            <CreateReservationForm\n                roomId={props.roomId}\n                onCancel={props.onClose}\n            />\n\n        </GenericModal>\n    );\n}","import { Card, CardContent, CardHeader, CardMedia } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport RoomTableInfo from \"./RoomTableInfo\";\nimport React from \"react\";\nimport DeleteModal from \"../../../../shared/components/DeleteModal\";\nimport { useRoomContext } from \"../RoomContext\";\nimport Loading from \"../../../../shared/components/Loading\";\nimport CreateReservationModal from \"../../components/CreateReservationModal/CreateReservationModal\";\nimport { RoomEditForm } from \"../Forms\";\nimport DatesFooter from \"../../../../shared/components/DatesFooter\";\nimport FavouriteButton from \"../../../../shared/components/FavouriteButton\";\nimport { FavType } from \"../../../../models/Metadata\";\nimport ImageService from \"../../../../services/ImageService\";\nimport MoreVertMenu from \"../../../../shared/components/MoreVertMenu\";\n\n\n\nexport default function RoomCard() {\n    const { room, deleteRoom, deleteRFIDTag } = useRoomContext();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n    const [createReservationModalOpen, setCreateReservationModalOpen] = React.useState<boolean>(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Zarezerwuj',\n            icon: <AddCircleIcon color='primary' />,\n            action: () => setCreateReservationModalOpen(true)\n        }, {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    return (\n        !Boolean(room) ? <Loading /> :\n            <>\n                <DeleteModal\n                    objectName={room.name}\n                    open={deleteModalOpen}\n                    onClose={() => setDeleteModalOpen(false)}\n                    onSuccess={deleteRoom}\n                />\n\n                <RoomEditForm\n                    open={editModalOpen}\n                    onClose={() => setEditModalOpen(false)}\n                />\n\n                <CreateReservationModal\n                    roomId={room && room.id}\n                    open={createReservationModalOpen}\n                    onClose={() => setCreateReservationModalOpen(false)}\n                />\n\n                <Card elevation={0}>\n                    <CardHeader\n                        action={<MoreVertMenu options={options} />}\n                        title={\n                            <>\n                                {room.name}\n                                <FavouriteButton data={{\n                                    id: room.id,\n                                    name: room.name,\n                                    type: FavType.Room,\n                                    addressId: room.building.address,\n                                    buildingId: room.building.id\n                                }} />\n                            </>\n                        }\n                        subheader={<>\n                            {room.roomType}\n                        </>}\n                    />\n                    <CardMedia\n                        component=\"img\"\n                        height=\"350\"\n                        image={ImageService.getLink(room.image)}\n                        alt={room.name}\n                    />\n                    <CardContent>\n                        <RoomTableInfo room={room} deleteTag={deleteRFIDTag} />\n                        <br />\n                        <DatesFooter model={room} />\n                    </CardContent>\n                </Card>\n            </>\n    );\n}\n","import { RoomContextProvider } from \"./RoomContext\";\nimport React from \"react\";\nimport RoomOrBuildingChartTab from \"../components/RoomOrBuildingChartTab\";\nimport Grid from \"@mui/material/Grid\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport RoomCard from \"./components/RoomCard\";\n\n\n\nexport default function RoomPage() {\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        arr.push({ name: 'Statystyki', component: <RoomOrBuildingChartTab /> });\n        arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <RoomContextProvider>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item xs={12} md={5} lg={4}>\n                    <RoomCard />\n                </Grid>\n            </Grid>\n        </RoomContextProvider>\n    );\n}\n","import Service from \"./Service\";\n\n\nexport interface SettingsUpdateParams {\n    maxImageSize?: number,\n    defaultUserAccess?: number,\n    maxReservationTime?: number,\n    minReservationTime?: number,\n    reservationHistory?: number,\n    requestHistory?: number\n}\n\n\nclass SettingsService extends Service {\n\n    public getAll() {\n        return this.get('/configurations');\n    }\n\n    public update(data: SettingsUpdateParams) {\n        return this.patch('/configurations', data);\n    }\n}\n\nexport default new SettingsService();","import React from \"react\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport Settings from \"../../../../models/Settings\";\nimport SettingsService, { SettingsUpdateParams } from \"../../../../services/SettingsService\";\nimport SettingsContextValue from \"./SettingsContextValue\";\n\n\n\nexport const settingsContext: any = React.createContext(null);\n\n\ninterface SettingsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function SettingsContextProvider(props: SettingsContextProviderProps) {\n    const notify = useNotification();\n\n    const [settings, setSettings] = React.useState<Settings>();\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await SettingsService.getAll();\n            setSettings(resp.data as Settings);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const updateSettings = React.useCallback(async (data: SettingsUpdateParams) => {\n        try {\n            await SettingsService.update(data);\n            setSettings(old => ({\n                ...old,\n                ...data as Settings\n            }))\n            notify(\"Ustawienia zostały zaktualizowane\", 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false\n    }, [notify]);\n\n\n    if (!settings) return null;\n\n    return (\n        <settingsContext.Provider value={{\n            settings,\n            updateSettings\n        } as SettingsContextValue}>\n            {props.children}\n        </settingsContext.Provider>\n    );\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport { visuallyHidden } from '@mui/utils';\nimport { EndpointStatItem } from '../../../../../models/Stats';\n\n\n\n\n\ninterface HeadCell {\n    disablePadding: boolean;\n    id: keyof EndpointStatItem;\n    label: string;\n    numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n    {\n        id: 'method',\n        numeric: false,\n        disablePadding: true,\n        label: 'Metoda',\n    },\n    {\n        id: 'generalEndpoint',\n        numeric: false,\n        disablePadding: false,\n        label: 'Ścieżka',\n    },\n    {\n        id: 'calls',\n        numeric: true,\n        disablePadding: false,\n        label: 'Liczba zapytań',\n    },\n    {\n        id: 'timeForEndpoint',\n        numeric: true,\n        disablePadding: false,\n        label: 'Całkowity czas',\n    },\n    {\n        id: 'avgTime',\n        numeric: true,\n        disablePadding: false,\n        label: 'Śr. czas wykonania',\n    },\n];\n\nexport type Order = 'asc' | 'desc';\n\n\ninterface EnhancedTableProps {\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof EndpointStatItem) => void;\n    order: Order;\n    orderBy: string;\n}\n\n\nexport default function EnhancedTableHead(props: EnhancedTableProps) {\n    const { order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property: keyof EndpointStatItem) => (event: React.MouseEvent<unknown>) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        padding={'normal'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport TablePagination from '@mui/material/TablePagination';\nimport { useCharts } from '../../../components/Charts';\nimport { EndpointChartsData, EndpointStatItem } from '../../../../../models/Stats';\nimport EnhancedTableHead, { Order } from './EnhancedTableHead';\n\n\n\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (\n        a: { [key in Key]: number | string },\n        b: { [key in Key]: number | string },\n    ) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n\n\nexport default function SortableTable() {\n    const { chartsData } = useCharts<EndpointChartsData>();\n\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [page, setPage] = React.useState(0);\n\n    const [order, setOrder] = React.useState<Order>('asc');\n    const [orderBy, setOrderBy] = React.useState<keyof EndpointStatItem>('generalEndpoint');\n\n\n    const handleRequestSort = (\n        event: React.MouseEvent<unknown>,\n        property: keyof EndpointStatItem,\n    ) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n\n    return (\n        <>\n            <TableContainer>\n                <Table\n                    sx={{ minWidth: 550 }}\n                    aria-labelledby=\"Endpointy aplikacji\"\n                    size='medium'\n                >\n                    <EnhancedTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={handleRequestSort}\n\n                    />\n                    <TableBody>\n                        {chartsData.endpoints.slice().sort(getComparator(order, orderBy))\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, index) =>\n                                <TableRow\n                                    hover\n                                    key={index}\n                                >\n                                    <TableCell >{row.method}</TableCell>\n                                    <TableCell>{row.generalEndpoint}</TableCell>\n                                    <TableCell >{row.calls}</TableCell>\n                                    <TableCell >{Math.round(row.timeForEndpoint * 1000) / 1000}</TableCell>\n                                    <TableCell >{Math.round(row.avgTime * 1000) / 1000}</TableCell>\n                                </TableRow>\n                            )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={chartsData.endpoints.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </>\n    );\n}\n","import Box from '@mui/material/Box';\nimport TabHeadLine from '../../../../../shared/components/TabHeadLine';\nimport { ChartsContext } from '../../../components/Charts/ChartsContext';\nimport SortableTable from './SortableTable';\n\n\n\nexport default function EndpointsStats() {\n\treturn (\n\t\t<Box sx={{ width: '100%' }}>\n\t\t\t<ChartsContext>\n\t\t\t\t<TabHeadLine\n\t\t\t\t\ttitle='Parametry endpointów'\n\t\t\t\t\tsubtitle=\"Wylistowane są wszystkie ścieżki na jakie aplikacja serwerowa dostaje zapytania od wszystkich aplikacji klienckich.\n\t\t\t\tParametry wydajnościowe dla każdej z nich mogą być pomocne w konfigurowaniu oraz planowaniu rozwoju aplikacji.\"\n\t\t\t\t/>\n\n\t\t\t\t<SortableTable />\n\t\t\t</ChartsContext>\n\t\t</Box>\n\t);\n}\n","import { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { SettingsUpdateParams } from \"../../../../services/SettingsService\";\nimport AppLink from \"../../../../shared/components/AppLink\";\nimport paths from \"../../../../shared/path\";\nimport { useSettings } from \"../SettingsContext\";\n\n\ninterface FormFieldProps {\n    text: string | React.ReactNode,\n    name: string,\n    label: string,\n    onChange: (evt: React.ChangeEvent<HTMLInputElement>) => void,\n    value: string | number | boolean\n}\n\n\nfunction FormField(props: FormFieldProps) {\n    return (\n        <Box mr={1}>\n            <Typography variant='body2' >\n                {props.text}\n            </Typography>\n            <TextField\n                required\n                type='number'\n                margin='dense'\n                name={props.name}\n                id={`${props.label}-name`}\n                label={props.label}\n                value={props.value}\n                onChange={props.onChange}\n            />\n        </Box>\n    );\n}\n\n\n\nexport default function SettingsForm() {\n    const { settings, updateSettings } = useSettings();\n\n    const [data, setData] = React.useState<SettingsUpdateParams>({});\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        await updateSettings(data);\n        setData({});\n    }, [\n        data,\n        updateSettings,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: Number(event.target.value)\n        }));\n    }, []);\n\n\n    return (\n        <span>\n            <Stack spacing={3} component='form' onSubmit={handleSubmit}>\n                <Typography component='h2' variant='h5'>\n                    Formularz:\n                </Typography>\n\n                <span>\n                    <Typography component='h3' variant='h6' mb={1}>\n                        Ustawienia zdjęć\n                    </Typography>\n                    <FormField\n                        text={<>Maksymalny rozmiar zdjecia (podawany <b>w bajtach</b>) ładowanego przez użytkownika do aplikacji.</>}\n                        name='maxImageSize'\n                        label='max. rozmiar'\n                        value={data.maxImageSize ?? settings.maxImageSize}\n                        onChange={handleChange}\n                    />\n                </span>\n\n                <span>\n                    <Typography component='h3' variant='h6' mb={1}>\n                        Użytkownicy\n                    </Typography>\n                    <FormField\n                        text={<>Domyślny numer identyfikacyjny klasy deostępowej przypisywany dla każdego nowego użytkownika.\n                            <AppLink withIcon to={paths.ACCESS}>klasy dostępu</AppLink></>}\n                        name='defaultUserAccess'\n                        label='numer ID'\n                        value={data.defaultUserAccess ?? settings.defaultUserAccess}\n                        onChange={handleChange}\n                    />\n                </span>\n\n                <Grid container rowSpacing={2}>\n                    <Grid item xs={12}>\n                        <Typography component='h3' variant='h6'>\n                            Czas trwania rezerwacji:\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Maksymalny czas trwania rezerwacji <b>w minutach</b>.\n                                Stworzone wcześniej rezerwacje pozostaną niezmienione.</>}\n                            name='maxReservationTime'\n                            label='max. czas'\n                            value={data.maxReservationTime ?? settings.maxReservationTime}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Minimalny czas trwania rezerwacji <b>w minutach</b>.\n                                Stworzone wcześniej rezerwacje pozostaną niezmienione.</>}\n                            name='minReservationTime'\n                            label='min. czas'\n                            value={data.minReservationTime ?? settings.minReservationTime}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid container rowSpacing={2}>\n                    <Grid item xs={12}>\n                        <Typography component='h3' variant='h6'>\n                            Czas przechowywania danych:\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Ilość czasu <b>w dniach</b> po którym historia rezerwacji ma zostać usunięta.\n                                Zmiana tego parametru wpływa bezpośrednio na statystyki.</>}\n                            name='reservationHistory'\n                            label='Ilość dni'\n                            value={data.reservationHistory ?? settings.reservationHistory}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Ilość czasu <b>w dniach</b> po którym logi zostaną usunięte.</>}\n                            name='requestHistory'\n                            label='Ilość dni'\n                            value={data.requestHistory ?? settings.requestHistory}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n                <Stack direction='row' justifyContent=\"space-around\" mt={1.5}>\n                    <Button\n                        color='error'\n                    >\n                        Przywróć\n                    </Button>\n                    <Button\n                        color='success'\n                        type='submit'\n                    >\n                        Zatwierdź\n                    </Button>\n                </Stack>\n            </Stack>\n        </span>\n    );\n}","import React from \"react\";\nimport { settingsContext } from \"./SettingsContextProvider\";\nimport SettingsContextValue from \"./SettingsContextValue\";\n\nexport default function useSettings() {\n    return React.useContext(settingsContext) as SettingsContextValue;\n}","import { Stack, Typography } from \"@mui/material\";\nimport SettingsForm from \"./SettingsForm\";\n\n\n\nexport default function SettingsMain() {\n    return (\n        <Stack spacing={3}>\n            <span>\n                <Typography component='h1' variant='h3' color='primary.dark'>\n                    Ustawienia platformy\n                </Typography>\n                <Typography variant='body1' color=\"text.secondary\" mt=\"5px\">\n                    Dostępne tutaj opcje wpływają znacząco na funkcjonowanie całej platformy. <br />\n                    Postępuj racjonalnie podczas modyfikacji znajdujących się tutaj parametrów.\n                </Typography>\n            </span>\n\n            <SettingsForm />\n\n        </Stack>\n    );\n}","import React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport { SettingsContext } from \"./SettingsContext\";\nimport EndpointsStats from \"./components/EndpointsStats\";\nimport SettingsMain from \"./components/SettingsMain\";\n\n\n\nexport default function SettingsPage() {\n\n\n    const pages = React.useMemo(() => {\n        return [\n            { name: 'Ustawienia', component: < SettingsMain/> },\n            { name: 'Logi', component: <GenericLogsTab /> },\n            { name: 'Endpointy', component: <EndpointsStats /> }\n        ];\n    }, []);\n\n\n    return (\n        <SettingsContext>\n            <SwipeableTabs tabs={pages} />\n        </SettingsContext>\n    );\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useSession from \"../../../../auth/useSession\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport { DetailedUser } from \"../../../../models/User\";\nimport UserService, { UpdateUserParams, UserViewParams } from \"../../../../services/UserService\";\nimport paths from \"../../../../shared/path\";\n\n\n\nexport const userContext: any = React.createContext(null);\n\n\ninterface UserContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function UserContextProvider(props: UserContextProviderProps) {\n    const urlParams = useParams<UserViewParams>();\n    const notify = useNotification();\n    const session = useSession();\n\n    const [user, setUser] = React.useState<DetailedUser>();\n\n\n    React.useLayoutEffect(() => {\n        let params = (urlParams.userId === 'me' && session.user) ? { userId: session.user.id.toString() } : urlParams;\n        UserService.setPath(params);\n    }, [\n        urlParams,\n        session\n    ]);\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await UserService.getCurrentOne();\n            setUser(resp.data as DetailedUser);\n        } catch (err: any) {\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        load()\n    }, [\n        load\n    ]);\n\n\n    const deleteUser = React.useCallback(async () => {\n        try {\n            await UserService.remove();\n\n            let action = (): React.ReactNode => null\n\n            if (session && session.user?.id === user?.id) {\n                session.logout();\n            } else {\n                action = () => <Redirect to={paths.USERS} />\n            }\n\n            notify('Użytkownik został usunięty', 'success', action);\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        session,\n        user?.id,\n    ]);\n\n\n    const updateUser = React.useCallback(async (data: UpdateUserParams) => {\n        try {\n            if (await UserService.update(data)) {\n                setUser(old => {\n                    return { ...old, ...data as DetailedUser };\n                });\n\n                notify('Użytkownik został zaktualizowany', 'success');\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    if (!user) return null;\n\n    return (\n        <userContext.Provider value={{\n            user,\n            deleteUser,\n            updateUser,\n        }}>\n            {props.children}\n        </userContext.Provider>\n    );\n}","import React from \"react\";\nimport { userContext } from \"./UserContextProvider\";\nimport UserContextValue from \"./UserContextValue\";\n\n\n\nexport default function useUser() {\n    return React.useContext(userContext) as UserContextValue;\n}\n","\n\nexport interface ButtonStatus {\n    success: boolean | null,\n    message: string,\n}\n\ninterface Action {\n    statusCode: number | string,\n    payload?: any\n}\n\nexport const initialResult = {\n    success: null,\n    message: ''\n}\n\nexport function statusReducer(state: ButtonStatus, action: Action): ButtonStatus {\n    switch (action.statusCode) {\n        case 200:\n        case 201:\n            return {\n                success: true,\n                message: \"Kod został wysłany na podany email\"\n            };\n        case 403:\n        case 401:\n        case 400:\n            return {\n                success: false,\n                message: action.payload\n            };\n        case 404:\n            return {\n                success: false,\n                message: \"Taki użytkownik nie istnieje.\"\n            };\n        case 422:\n            return {\n                success: false,\n                message: \"Adres email jest niepoprawny\"\n            };\n        case \"NO_ADDRESS\":\n            return {\n                success: false,\n                message: \"Musisz podać adres email\"\n            };\n        default:\n            return {\n                success: false,\n                message: action.payload\n            };\n            // throw new Error();\n    }\n}","import { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport SyncIcon from '@mui/icons-material/Sync';\nimport React from \"react\";\nimport UserService from \"../../../services/UserService\";\nimport { statusReducer } from \"./statusReducer\";\n\n\ninterface UniqueCodeButtonProps {\n    email: string,\n    text: string\n}\n\n\nfunction resolveColor(value: null | boolean): string {\n    if (value === null) return \"inherit\";\n    if (value === true) return \"green\";\n    return \"error\";\n}\n\n\nexport default function UniqueCodeButton(props: UniqueCodeButtonProps) {\n    const [result, dispatchResult] = React.useReducer(statusReducer, {\n        success: null,\n        message: props.text\n    });\n\n    const handleSubmit = async () => {\n        if (!props.email) {\n            dispatchResult({ statusCode: \"NO_ADDRESS\" });\n        }\n        try {\n            const resp = await UserService.generateKey(props.email);\n            dispatchResult(resp);\n\n        } catch (err: any) {\n            dispatchResult({\n                statusCode: err.code,\n                payload: err.description\n            });\n        }\n    };\n\n    return (\n        <Box\n            component=\"div\"\n            display=\"flex\"\n        >\n            <Button sx={{\n                bgcolor: \"primary.50\",\n                \"&:hover\": {\n                    bgcolor: \"primary.100\",\n                }\n            }}\n                onClick={handleSubmit} >\n                <SyncIcon fontSize=\"large\" />\n            </Button>\n\n            <Box\n                sx={{\n                    display: \"flex\",\n                    alignItems: 'center',\n                    ml: 1\n                }}\n            >\n                <Typography\n                    variant=\"body2\"\n                    component=\"p\"\n                    color={resolveColor(result.success)}\n                >\n                    {result.message}\n                </Typography>\n            </Box>\n\n        </Box>\n    );\n}","import { Typography } from \"@mui/material\";\n\n\ninterface StepProps {\n    title: string,\n    text?:string,\n    children: React.ReactNode | React.ReactNodeArray\n}\n\nexport default function FormStep(props: StepProps) {\n    return (\n        <>\n            <Typography variant=\"h5\" sx={{ mt: 3 }}>\n                {props.title}\n            </Typography>\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                {props.text}\n            </Typography>\n            {props.children}\n        </>\n    );\n}","import { Button, Grid, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport UniqueCodeButton from \"../../../shared/components/UniqueCodeButton\";\nimport React from \"react\";\nimport FormStep from \"./FormStep\";\nimport UserService, { ChangePasswordData } from \"../../../services/UserService\";\nimport { Redirect } from 'react-router-dom';\nimport paths from \"../../../shared/path\";\nimport useNotification from \"../../../contexts/NotificationContext/useNotification\";\nimport AppLink from \"../../../shared/components/AppLink\";\n\n\ninterface FormProps {\n    onSuccess?: () => void\n}\n\nexport default function Form(props: FormProps) {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<ChangePasswordData>({\n        email: localStorage.getItem('email')?.toString() ?? '',\n        newPassword: '',\n        code: ''\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        try {\n            await UserService.changePassword(data);\n\n            notify(\"Hasło zostało zmienione\", 'success',\n                () => setTimeout(() => {\n                    if (props.onSuccess) props.onSuccess();\n                    return <Redirect to={paths.LOGIN} />\n                }, 2000)\n            );\n        } catch (err: any) {\n            let message = err.description;\n            if (err.code === 404) message = \"Taki użytkownik nie istnieje\";\n\n            notify(message, 'error');\n        }\n    }, [\n        data,\n        notify,\n        props\n    ]);\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <FormStep\n                title=\"1. Wygeneruj Kod\"\n                text=\"Podaj swój aders email i naciśnij przycisk by otrzymać email i kodem.\"\n            >\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Adres email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    value={data.email}\n                    onChange={onChange}\n                />\n                <UniqueCodeButton\n                    text=\"Kliknij przycisk by otrzymać kod.\"\n                    email={data.email}\n                />\n            </FormStep>\n            <FormStep\n                title=\"2. Podaj nowe hasło i kod\"\n                text=\"Podaj nowe hasło i kod który otrzymałeś (jeśli nie, powtórz krok nr 1)\"\n            >\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"newPassword\"\n                    label=\"Hasło\"\n                    type=\"password\"\n                    id=\"password\"\n                    value={data.newPassword}\n                    onChange={onChange}\n                    autoComplete=\"current-password\"\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"code\"\n                    label=\"Kod\"\n                    type=\"text\"\n                    id=\"code\"\n                    value={data.code}\n                    onChange={onChange}\n                    autoComplete=\"email-code\"\n                />\n            </FormStep>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                3. Zmień Hasło\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <AppLink to={paths.LOGIN}>\n                        Hasło zmienione? Zaloguj się!\n                    </AppLink>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import React from \"react\";\nimport useSession from \"../../../../auth/useSession\";\nimport GenericModal from \"../../../../shared/components/GenericModal\";\nimport PasswordChangeForm from '../../../public/ChangePassword/Form';\n\ninterface EditUserFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\nexport default function PasswordChangeModal({\n    open,\n    onClose\n}: EditUserFormProps) {\n    const { logout } = useSession();\n\n    const close = React.useCallback(() => {\n        onClose();\n\n    }, [onClose]);\n\n    const onSuccess = React.useCallback(() => {\n        logout();\n    }, [logout]);\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            sx={{\n                maxWidth: '450px'\n            }}\n        >\n            <PasswordChangeForm onSuccess={onSuccess} />\n        </GenericModal>\n    )\n}","import Divider from \"@mui/material/Divider\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { DetailedUser } from \"../../../../models/User\";\nimport { UpdateUserParams } from \"../../../../services/UserService\";\nimport FormGridContainer from \"../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../../../shared/components/GenericModal\";\nimport ImageUploadField from \"../../../../shared/components/ImageUploadField\";\nimport { useUser } from \"../UserContext\";\n\n\n\ninterface EditUserFormProps {\n    open: boolean,\n    onClose: () => void,\n    user: DetailedUser,\n}\n\n\nexport default function EditUserForm({\n    open,\n    onClose,\n    user,\n}: EditUserFormProps) {\n    const { updateUser } = useUser();\n\n    const [data, setData] = React.useState<UpdateUserParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const onSubmit = React.useCallback(async () => {\n        if (await updateUser(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateUser,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            sx={{\n                maxWidth: '450px'\n            }}\n        >\n            <Stack spacing={3}>\n\n                <ImageUploadField image={user.image} />\n\n                <Divider />\n\n                <FormGridContainer\n                    title=\"Edycja użytkownika\"\n                    subtitle=\"Zmień dane użytkownika. Zmiany w całej aplikacji będą widoczne po ponownym przeładowaniu aplikacji.\"\n                    onSubmit={onSubmit}\n                    onCancel={close}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Imię\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? user.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"surname\"\n                            label=\"Nazwisko\"\n                            name=\"surname\"\n                            value={data.surname ?? user.surname}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    )\n}","import React from \"react\";\nimport MoreVertMenu from \"../../../../shared/components/MoreVertMenu\";\nimport { useUser } from \"../UserContext\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ChangePasswordForm, UserEditForm } from \"../Forms\";\nimport DeleteModal from \"../../../../shared/components/DeleteModal\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport ImageService from \"../../../../services/ImageService\";\nimport DatesFooter from \"../../../../shared/components/DatesFooter\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { displayDate } from \"../../../../shared/utils\";\nimport { Link, Typography } from \"@mui/material\";\nimport paths from \"../../../../shared/path\";\nimport AppLink from \"../../../../shared/components/AppLink\";\n\n\n\nexport default function UserCard() {\n    const { user, deleteUser } = useUser();\n\n    const [editModal, setEditModal] = React.useState(false);\n    const [passModal, setPassModal] = React.useState(false);\n    const [deleteModal, setDeleteModal] = React.useState(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModal(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Zmień hasło',\n            action: () => setPassModal(true),\n            icon: <PasswordIcon color='warning' />\n        }, {\n            label: 'Usuń konto',\n            action: () => setDeleteModal(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    return (\n        <>\n\n            <DeleteModal\n                objectName={`${user.email}`}\n                open={deleteModal}\n                onClose={() => setDeleteModal(false)}\n                onSuccess={deleteUser}\n            />\n\n            <UserEditForm\n                user={user}\n                open={editModal}\n                onClose={() => setEditModal(false)}\n            />\n\n            <ChangePasswordForm\n                open={passModal}\n                onClose={() => setPassModal(false)}\n            />\n\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={<MoreVertMenu options={options} />}\n                    title={<>{user.name} {user.surname}</>}\n                    subheader={<Link href={`mailto:${user.email}`}>\n                        {user.email}\n                    </Link>}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"350\"\n                    image={ImageService.getLink(user.image)}\n                    alt={user.email}\n                />\n                <CardContent>\n                    <Typography color='text.secondary' variant=\"subtitle1\">\n                        Ostatnio aktywny: {displayDate(user.lastActivity)}<br />\n                        Klasa dostępu: {<AppLink to={paths.ACCESS}>{user.access.name}</AppLink>}\n                    </Typography>\n                    <br />\n                    <DatesFooter model={user} />\n                </CardContent>\n            </Card>\n        </>\n    );\n}","import { UserChartsData } from \"../../../../models/Stats\";\nimport { Chart, ChartSection, ChartsTab, useCharts } from \"../../components/Charts\";\nimport MonthlyChartsSection from \"../../components/MonthlyChartsSection\";\nimport WeeklyChartsSection from \"../../components/WeeklyChartsSection\";\n\n\nexport default function UserCharts() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n\nfunction ActualLoader() {\n    const { chartsData } = useCharts<UserChartsData>();\n\n    return (\n        <>\n            <ChartSection defaultOpen title='Rezerwowane Sale'>\n                <Chart\n                    fullWidth\n                    title='Ilość rezerwacji w rezerwowanych salach'\n                    data={chartsData.reservedRooms}\n                    xKey='roomName'\n                    y={[\n                        { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title=\"Średnie czasy rezerwacji\"\n                    data={chartsData.reservedRooms}\n                    xKey='roomName'\n                    y={[\n                        { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                        { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title=\"Czas wszystkich rezerwacji w danej sali\"\n                    data={chartsData.reservedRooms}\n                    xKey='roomName'\n                    y={[\n                        { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                    ]}\n                />\n            </ChartSection>\n\n            <WeeklyChartsSection data={chartsData.weekly} />\n\n            <MonthlyChartsSection data={chartsData.monthly} />\n        </>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport UserCard from \"./components/UserCard\";\nimport UserCharts from \"./components/UserCharts\";\n\n\nimport { UserContext } from \"./UserContext\";\n\n\n\nexport default function UserPage() {\n\n\n    const pages = React.useMemo(() => {\n        let arr: any = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        arr.push({ name: 'Statystyki', component: <UserCharts /> });\n        arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <UserContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item xs={12} md={5} lg={4}>\n                    <UserCard />\n                </Grid>\n            </Grid>\n        </UserContext>\n    );\n}","import React from \"react\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../contexts/QueryParamsContext\";\nimport User from \"../../../../models/User\";\nimport UserService, { UserQueryParams } from \"../../../../services/UserService\";\nimport UsersContextValue from \"./UsersContextValue\";\n\n\n\nexport const usersContext: any = React.createContext(null);\n\n\ninterface UsersContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\nexport default function UsersContextProvider(props: UsersContextProviderProps) {\n    const notify = useNotification();\n    const { queryParams, setQueryParams } = useQueryParams<UserQueryParams>();\n\n    const [users, setUsers] = React.useState<User[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await UserService.getUsers(queryParams);\n            setQueryParams(old => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount\n            }));\n            setUsers(resp.data as User[]);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setUsers([]);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        notify,\n        queryParams.itemsOnPage,\n        queryParams.currentPage,\n        queryParams.search,\n        queryParams.deleted,\n        queryParams.activated\n    ]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    if (!users) return null;\n\n    return (\n        <usersContext.Provider value={{\n            users,\n        } as UsersContextValue}>\n            {props.children}\n        </usersContext.Provider>\n    )\n}","import { FormControlLabel, Grid, Switch } from \"@mui/material\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { UserQueryParams } from \"../../../../../services/UserService\";\nimport React from \"react\";\nimport LazyInput from \"../../../../../shared/components/LazyInput\";\n\n\nexport default function SearchBar() {\n    const { setQueryParams, queryParams } = useQueryParams<UserQueryParams>();\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        let value: string | number | boolean = event.target.value;\n\n        switch (event.target.name) {\n            case \"deleted\":\n            case \"activated\":\n                value = Boolean(event.target.checked);\n                break;\n            case 'search':\n                break;\n            default:\n                break;\n        }\n\n        setQueryParams((old: UserQueryParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, [setQueryParams]);\n\n\n    return (\n        <Grid container>\n            <Grid item xs={12} md={8}>\n                <LazyInput\n                    label='wyszukaj'\n                    name='search'\n                    value={queryParams.search ?? ''}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} md={4} display='flex' justifyContent='start' flexWrap='wrap' color='text.secondary'>\n                <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch id=\"aktywni-użytkownicy\" name=\"activated\"\n                        inputProps={{ 'aria-label': 'aktywni-użytkownicy' }}\n                        onChange={handleChange}\n                        checked={queryParams.activated}\n                    />}\n                    label=\"Aktywne konta\"\n                />\n                <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch id=\"unsunięci-użytkownicy\" name=\"deleted\"\n                        inputProps={{ 'aria-label': 'unsunięci-użytkownicy' }}\n                        onChange={handleChange}\n                        checked={queryParams.deleted}\n                    />}\n                    label=\"Usunięte konta\"\n                />\n            </Grid>\n        </Grid>\n    );\n}","import Avatar from \"@mui/material/Avatar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport User from \"../../../../../../models/User\";\nimport ImageService from \"../../../../../../services/ImageService\";\nimport AppLink from \"../../../../../../shared/components/AppLink\";\nimport { dynamicPaths } from \"../../../../../../shared/path\";\nimport { displayDate } from \"../../../../../../shared/utils\";\n\n\n\ninterface UserListItemProps {\n    user: User\n}\n\nexport default function UserListItem({ user }: UserListItemProps) {\n    return (\n        <TableRow >\n            <TableCell align=\"left\">\n                <ListItem component='div'>\n                    <ListItemAvatar\n                        title={user.email}\n                        aria-label={user.email}\n                    >\n                        <AppLink to={dynamicPaths.toUser(user.id)}>\n                            <Avatar src={ImageService.getLink(user.image)} />\n                        </AppLink>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={<AppLink to={dynamicPaths.toUser(user.id)}>\n                            {user.name} {user.surname}\n                        </AppLink>\n                        }\n                        secondary={user.email}\n                    />\n                </ListItem>\n            </TableCell>\n            <TableCell sx={{\n                width: 'fit-content'\n            }}>\n                {displayDate(user.lastActivity)}\n            </TableCell>\n        </TableRow>\n    );\n}","import Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport { useUsers } from \"../../../UsersContext\";\nimport UserListItem from \"./UserListItem\";\n\n\n\nexport default function UsersList() {\n    const { users } = useUsers();\n\n    return (\n        <TableContainer component={Box}>\n            <Table aria-label=\"Tabela rezerwacji\" size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Użytkownicy</TableCell>\n                        <TableCell>Aktywność</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        users.length === 0 && <TableRow>\n                            <TableCell colSpan={12}>\n                                <Typography textAlign='center'>\n                                    Brak użytkowników spełniających kryteria\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    }\n                    {\n                        users.map((item, index) => <UserListItem key={index} user={item} />)\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\n","import React from \"react\";\nimport { UsersContextValue } from \".\";\nimport { usersContext } from \"./UsersContextProvider\";\n\n\n\nexport default function useUsers(){\n    return React.useContext(usersContext) as UsersContextValue\n}","import { Stack } from \"@mui/material\";\nimport ListPagination from \"../../../../../shared/components/ListPagination\";\nimport TabHeadLine from \"../../../../../shared/components/TabHeadLine\";\nimport SearchBar from \"./SearchBar\";\nimport UsersList from \"./UsersList\";\n\n\n\nexport default function UsersView() {\n    return (\n        <Stack spacing={3}>\n            <TabHeadLine\n                title='Lista użytkowników'\n                subtitle='Wyszukuj użytkowników według podanych kryteriów.'\n            />\n\n            <SearchBar />\n\n            <UsersList />\n\n            <ListPagination />\n        </Stack>\n    );\n}","import { AllUsersChartsData } from \"../../../../models/Stats\";\nimport { Chart, ChartSection, ChartsTab, useCharts } from \"../../components/Charts\";\n\n\n\nexport default function UsersCharts() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n\nfunction ActualLoader() {\n    const { chartsData } = useCharts<AllUsersChartsData>();\n\n    return (\n        <ChartSection defaultOpen title='Statystyki użytkowników'>\n            <Chart\n                fullWidth={chartsData.users.length >= 6}\n                title='Ilość rezerwacji na użytkownika'\n                data={chartsData.users}\n                xKey='email'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth={chartsData.users.length >= 6}\n                title=\"Czas wszystkich reserwacji w dany dzień\"\n                data={chartsData.users}\n                xKey='email'\n                y={[\n                    { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Średnie czasy rezerwacji\"\n                data={chartsData.users}\n                xKey='email'\n                y={[\n                    { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}","import { QueryParamsContext } from \"../../../contexts/QueryParamsContext\";\nimport { UserQueryParams } from \"../../../services/UserService\";\nimport { UsersContext } from \"./UsersContext\";\nimport React from \"react\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport UsersView from \"./components/UsersView\";\nimport UsersCharts from \"./components/UsersCharts\";\n\n\n\nexport default function UsersPage() {\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Użytkownicy', component: <UsersView /> });\n        arr.push({ name: 'Statystyki', component: <UsersCharts /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <QueryParamsContext\n            name=\"users-query-params\"\n            default={{\n                deleted: false,\n                activated: true,\n                search: '',\n                itemsOnPage: 10,\n                currentPage: 1\n            } as UserQueryParams}\n        >\n            <UsersContext>\n                <SwipeableTabs tabs={pages} />\n            </UsersContext>\n        </QueryParamsContext>\n    );\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport paths from \"../../shared/path\";\nimport AccessPage from \"./AccessPage\";\nimport AddressPage from \"./AddressPage\";\nimport BuildingPage from \"./BuildingPage\";\nimport HomePage from \"./HomePage\";\nimport RoomPage from \"./RoomPage\";\nimport SettingsPage from \"./SettingsPage\";\nimport UserPage from \"./UserPage\";\nimport UsersPage from \"./UsersPage\";\n\n\n\nexport default function ProtectedPages() {\n\n    return (\n        <Switch>\n            <Route path={paths.ROOM} component={RoomPage} />\n            <Route path={paths.BUILDING} component={BuildingPage} />\n            <Route path={paths.ADDRESS} component={AddressPage} />\n\n            <Route path={paths.SETTINGS} component={SettingsPage} />\n            <Route path={paths.ACCESS} component={AccessPage} />\n            <Route path={paths.USER} component={UserPage} />\n            <Route path={paths.USERS} component={UsersPage} />\n            <Route path={paths.HOME} component={HomePage}/>\n\n            <Route path={paths.INFRASTRUCTURE}>\n                Zasoby\n            </Route>\n            <Route path={paths.HOME + '/*'}>\n                <Redirect to={paths.HOME} />\n            </Route>\n        </Switch>\n    );\n}","import { Avatar, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\n\ninterface FormPageProps {\n    children: React.ReactNode | React.ReactNodeArray,\n    title: string,\n    icon: React.ReactNode\n}\n\n\nexport default function FormPage(props: FormPageProps) {\n    return (\n        <Container component=\"div\" maxWidth=\"xs\">\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    backgroundColor: 'background.paper',\n                    padding: '35px',\n                    borderRadius: '10px'\n                }}\n            >\n                <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n                    {props.icon}\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {props.title}\n                </Typography>\n                {props.children}\n            </Box>\n        </Container>\n    );\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { Link as ReactRouterLink, Redirect } from 'react-router-dom';\nimport paths from '../../../shared/path';\nimport UserService, { ActivationData } from '../../../services/UserService';\nimport UniqueCodeButton from '../../../shared/components/UniqueCodeButton';\nimport useNotification from '../../../contexts/NotificationContext/useNotification';\n\n\n\nexport default function Form() {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<ActivationData>({\n        email: localStorage.getItem('email')?.toString() ?? '',\n        password: '',\n        code: ''\n    })\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        try {\n            await UserService.activate(data);\n            notify(\"Twoje konto zostało aktywowane\", 'success',\n                () => setTimeout(() => <Redirect to={paths.LOGIN} />, 2000)\n            );\n        } catch (err: any) {\n            let message = err.description;\n            if (err.code === 404) message = \"Taki użytkownik nie istnieje\";\n\n            notify(message, 'error');\n        }\n    }, [notify, data]);\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }))\n    }, []);\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Adress Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={data.email}\n                onChange={onChange}\n            />\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Hasło\"\n                type=\"password\"\n                id=\"password\"\n                value={data.password}\n                onChange={onChange}\n                autoComplete=\"current-password\"\n            />\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"code\"\n                label=\"Kod\"\n                type=\"text\"\n                id=\"code\"\n                value={data.code}\n                onChange={onChange}\n                autoComplete=\"email-code\"\n            />\n            <UniqueCodeButton\n                email={data.email}\n                text=\"Jeżeli nie otrzymałeś kodu mailem, naciśnij przycisk.\"\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                Aktywuj\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <Link component={ReactRouterLink} to={paths.LOGIN} variant=\"body2\" >\n                        Masz już konto? Zaloguj się!\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import FormPage from \"../FormPage\";\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport Form from \"./Form\";\n\n\nexport default function ActivationPage(){ \n    return(\n        <FormPage\n        title='Aktywacja konta'\n        icon={<LockOpenIcon />}\n    >\n        <Form/>\n    </FormPage>\n    );\n}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport useSession from '../../../auth/useSession';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { LoginFormData } from '../../../services/AuthService';\nimport paths from '../../../shared/path';\n\n\n\nexport default function Form() {\n    const { login } = useSession();\n\n    const [remember, setRemember] = React.useState<boolean>(true);\n    const [data, setData] = React.useState<LoginFormData>({\n        email: localStorage.getItem('email')?.toString() ?? '',\n        password: '',\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback((event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        if (remember) localStorage.setItem('email', data.email);\n        login(data);\n    }, [data, login, remember]);\n\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Adres Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={data.email}\n                onChange={onChange}\n            />\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Hasło\"\n                type=\"password\"\n                id=\"password\"\n                value={data.password}\n                onChange={onChange}\n                autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n                control={<Checkbox\n                    onChange={() => setRemember(!remember)}\n                    name=\"remember\"\n                    checked={remember}\n                    color=\"primary\"\n                />}\n                label=\"Zapamiętaj mnie\"\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                Zaloguj\n            </Button>\n            <Grid container>\n                <Grid item xs>\n                    <Link component={ReactRouterLink} to={paths.REMIND_PASSWORD} variant=\"body2\">\n                        Zapomniałeś hasła?\n                    </Link>\n                </Grid>\n                <Grid item >\n                    <Link component={ReactRouterLink} to={paths.REGISTER} variant=\"body2\">\n                        Zarejestruj się!\n                    </Link>\n                </Grid>\n                <Grid item xs={12}>\n                    <Link component={ReactRouterLink} to={paths.ACTIVATE} variant=\"body2\">\n                        Aktywuj konto\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import FormPage from \"../FormPage\";\nimport Form from \"./Form\";\nimport LoginIcon from '@mui/icons-material/Login';\n\n\n\nexport default function Login() {\n    return (\n        <FormPage\n            title='Logowanie'\n            icon={<LoginIcon />}\n        >\n            <Form />\n        </FormPage>\n    );\n}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { Link as ReactRouterLink, Redirect } from 'react-router-dom';\nimport useNotification from '../../../contexts/NotificationContext/useNotification';\nimport UserService, { RegisterUserData } from '../../../services/UserService';\nimport paths from '../../../shared/path';\n\n\nexport default function Form() {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<RegisterUserData>({\n        email: \"\",\n        password: \"\",\n        name: \"\",\n        surname: \"\"\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        try {\n            await UserService.register(data);\n            notify(\"Zarejestrowano\", 'success', () => <Redirect to={paths.ACTIVATE} />);\n        } catch (err: any) {\n            let message = err.description;\n            // if (err.code === 422) message = \"Wprowadzono nieprawidłowe dane\";\n\n            notify(message, 'error');\n        }\n    }, [data, notify]);\n\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        autoComplete=\"given-name\"\n                        name=\"name\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Imię\"\n                        autoFocus\n                        value={data.name}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"surname\"\n                        label=\"Nazwisko\"\n                        name=\"surname\"\n                        autoComplete=\"family-name\"\n                        value={data.surname}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Adres Email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        value={data.email}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Hasło\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"new-password\"\n                        value={data.password}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <FormControlLabel\n                        control={<Checkbox required value=\"allowExtraEmails\" color=\"primary\" />}\n                        label=\"Akceptuję warunki\"\n                    />\n                </Grid>\n            </Grid>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                Załóż konto!\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <Link component={ReactRouterLink} to={paths.LOGIN} variant=\"body2\" >\n                        Masz już konto? Zaloguj się!\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import FormPage from \"../FormPage\";\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport Form from \"./Form\";\n\n\nexport default function Register() {\n    return (\n        <FormPage\n            title='Rejestracja'\n            icon={<AccountCircleIcon />}\n        >\n            <Form />\n        </FormPage>\n    );\n}","import FormPage from \"../FormPage\";\nimport RemindPassowordForm from \"./Form\";\nimport AppRegistrationIcon from '@mui/icons-material/AppRegistration';\n\n\n\nexport default function ChangePassword() {\n    return (\n        <FormPage\n            title=\"Zmiana Hasła\"\n            icon={<AppRegistrationIcon />}\n        >\n            <RemindPassowordForm />\n        </FormPage>\n    );\n}","\n\nexport default function Welcome(){\n    return(\n        <>\n            Welcome page\n        </>\n    );\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport paths from \"../../shared/path\";\n\nimport Activation from \"./Activation\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ChangePassword from \"./ChangePassword\";\nimport Welcome from \"./Welcome\";\n\n\nexport default function PublicPages() {\n\n    return (\n        <Switch>\n            <Route path={paths.LOGIN} component={Login} />\n            <Route path={paths.REGISTER} component={Register} />\n            <Route path={paths.ACTIVATE} component={Activation} />\n            <Route path={paths.REMIND_PASSWORD} component={ChangePassword} />\n            <Route path={paths.PUBLIC} component={Welcome} />\n\n            <Route path=\"*\">\n                <Redirect to={paths.PUBLIC} />\n            </Route>\n        </Switch>\n    );\n}","import { Box } from '@mui/system';\n\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport paths from '../shared/path';\n\nimport ProtectedPages from './protected';\nimport PublicPages from './public';\n\n\nconst tabStyle = {\n    minHeight: \"80vh\",\n    padding: \"1.5vh 0px\"\n}\n\n\nexport default function Tabs() {\n    return (\n        <Box sx={tabStyle}>\n            <Switch>\n                <Route path={paths.HOME} component={ProtectedPages} />\n                <Route path={paths.PUBLIC} component={PublicPages} />\n                <Route path={paths.FAQ}>\n                    Częste pytania i odpowiedzi FAQ\n                </Route>\n                <Route path='*'> \n                    <Redirect to={paths.PUBLIC} />\n                </Route>\n            </Switch>\n        </Box>\n    );\n}","import { Typography } from \"@mui/material\";\n\n\nexport default function Copyright() {\n    return (\n        <Typography\n            align=\"center\"\n            sx={{\n                backgroundColor: \"primary.dark\",\n                padding: 2,\n                color: \"primary.light\"\n            }}\n        >\n            &copy; Szymon Rykała 2021\n        </Typography>\n    );\n}","import { Grid, List, ListItem } from \"@mui/material\";\nimport React from \"react\";\nimport paths from \"../../path\";\nimport AppLink from \"../AppLink\";\n\n\ninterface LinkListItem {\n    name: string,\n    link: string\n}\n\n\nconst linksList: LinkListItem[][] = [\n    [\n        { name: 'FAQ', link: paths.FAQ },\n        { name: 'Logowanie', link: paths.LOGIN },\n        { name: 'Rejestracja', link: paths.REGISTER },\n        { name: 'Aktywacja Konta', link: paths.ACTIVATE },\n\n    ],\n    [\n        { name: 'Home', link: paths.HOME },\n        { name: 'Profil', link: paths.MY_PROFILE },\n        { name: 'Zasoby', link: paths.INFRASTRUCTURE },\n    ]\n];\n\n\n\nexport default function Links() {\n\n    const links = React.useMemo(() =>\n        linksList.map((list, index) => <Grid key={index} item>\n            <List>\n                {list.map(({ name, link }) => <ListItem key={name}>\n                    <AppLink\n                        to={link}\n                        withIcon\n                        sx={{ color: 'background.default' }}\n                    >\n                        {name}\n                    </AppLink>\n                </ListItem>)}\n            </List>\n        </Grid>), []);\n\n    return (\n        <Grid\n            sx={{\n                backgroundColor: \"primary.main\",\n            }}\n\n            container\n            direction=\"row\"\n            justifyContent=\"space-evenly\"\n            alignItems=\"flex-start\"\n        >\n            {links}\n        </Grid>\n    );\n}\n","import {\n    Grid,\n} from \"@mui/material\";\n\nimport { Box } from \"@mui/system\";\n\nimport Copyright from \"./Copyrights\";\nimport Links from \"./Links\";\n\n\n\n\nexport default function Footer() {\n\n    return (\n        <Box >\n            <Grid container\n                direction=\"column\"\n                alignItems=\"stretch\"\n            >\n                <Grid item>\n                    <Links />\n                </Grid>\n                <Grid item>\n                    <Copyright />\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\n\n\n\n","import { List, ListItemButton, ListItemIcon, ListItemText, SvgIconTypeMap } from \"@mui/material\";\nimport HomeIcon from '@mui/icons-material/Home';\nimport AccountIcon from '@mui/icons-material/AccountCircle';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\nimport PeopleIcon from '@mui/icons-material/People';\n\nimport React from \"react\";\nimport Access from \"../../../../models/Access\";\nimport paths from \"../../../path\";\nimport AppLink from \"../../AppLink\";\nimport { OverridableComponent } from \"@mui/material/OverridableComponent\";\n\n\n\ninterface NavListItem {\n  label: string,\n  href: string,\n  icon: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>\n}\n\n\nconst navListItems: NavListItem[] = [\n  {\n    label: \"Panel Główny\",\n    href: paths.HOME,\n    icon: HomeIcon\n  }, {\n    label: \"Moje Konto\",\n    href: paths.MY_PROFILE,\n    icon: AccountIcon\n  }\n];\n\n\nconst settingsItem: NavListItem = {\n  label: 'Ustawienia Platformy',\n  href: paths.SETTINGS,\n  icon: SettingsIcon\n};\n\n\nconst accessLinkItem: NavListItem = {\n  label: 'Klasy dostępu',\n  href: paths.ACCESS,\n  icon: VerifiedUserIcon\n};\n\n\nconst usersLinkItem: NavListItem = {\n  label: 'Użytkownicy',\n  href: paths.USERS,\n  icon: PeopleIcon\n};\n\n\nexport default function MainDrawerList(props: { access?: Access }) {\n\n  const result = React.useMemo(() => {\n    let list = Object.assign([], navListItems) as NavListItem[];\n\n    list.push(usersLinkItem);\n    list.push(accessLinkItem);\n    list.push(settingsItem);\n\n    return list;\n  }, []);\n\n\n  return (\n    <List>\n      {\n        result.map((item, key) => (\n          <ListItemButton key={key} component=\"li\">\n            <ListItemIcon color=\"primary\">\n              {<item.icon color='primary' />}\n            </ListItemIcon>\n            <ListItemText primary={<AppLink color='text.primary' to={item.href}>{item.label}</AppLink>} />\n          </ListItemButton>\n        ))\n      }\n    </List>\n  );\n}","import { Box } from \"@mui/material\";\n\n\ninterface DrawerPanelProps {\n    children: React.ReactNode,\n    toggleOpen: any,\n}\n\n\nexport default function DrawerPanel({\n    children,\n    toggleOpen\n}: DrawerPanelProps) {\n    return (\n        <Box\n            sx={{ width: 320 }}\n            role=\"presentation\"\n            onClick={toggleOpen}\n            onKeyDown={toggleOpen}\n        >\n            {children}\n        </Box>\n    );\n}","import { Avatar, Link, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { SessionUser } from \"../../../../models/User\";\nimport ImageService from \"../../../../services/ImageService\";\n\n\ninterface AvatarViewProps {\n    user: SessionUser | null,\n}\n\n\nexport default function AvatarView({\n    user\n}: AvatarViewProps) {\n    return (\n        <Box\n            onClick={(ev) => ev.stopPropagation()}\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                padding: 2,\n                color: 'primary.dark'\n            }}\n        >\n            <Avatar\n                alt={`${user?.name} ${user?.surname}`}\n                src={ImageService.getLink(user?.image)}\n                sx={{\n                    width: '120px',\n                    height: '120px',\n                    fontSize: '36px',\n                    mt: 2,\n                    mb: 2,\n                }}\n            />\n            <Typography>\n                {user?.name}&nbsp;{user?.surname}\n            </Typography>\n            <Typography>\n                <Link href={`mailto:${user?.email}`}>\n                    {user?.email}\n                </Link>\n            </Typography>\n        </Box>\n    );\n}","import { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport { Box, Collapse, List, ListItem, ListItemButton, ListItemIcon, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport StorageService from \"../../../../../services/StorageService\";\nimport AppLink from \"../../../AppLink\";\n\n\n\ninterface CallapsableListItemProps {\n    name: string,\n    href?: string\n    children: React.ReactNode,\n    icon?: React.ReactNode,\n    sx?: any\n}\n\n\nexport default function CollapseableListItem(props: CallapsableListItemProps) {\n    const [open, setOpen] = React.useState<boolean>(false);\n\n    const OPENED_NAME = React.useMemo(() => `${props.name}-nav-item`, [props.name]);\n\n    React.useEffect(() => {\n        setOpen(StorageService.read(OPENED_NAME));\n    }, [OPENED_NAME]);\n\n    const handleOpen = (ev: React.MouseEvent) => {\n        ev.stopPropagation()\n        StorageService.save(OPENED_NAME, !open);\n        setOpen(old => !old);\n    };\n\n    const label = props.href ? <AppLink to={props.href} sx={{ color: \"text.primary\" }}>{props.name}</AppLink> : props.name;\n\n    return (\n        <ListItem disablePadding component=\"li\" sx={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n            <ListItemButton sx={props.sx}>\n                {props.icon &&\n                    <ListItemIcon>\n                        {props.icon}\n                    </ListItemIcon>}\n                <ListItemText primary={label} />\n                <Box component=\"span\" onClick={handleOpen}>\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                </Box >\n            </ListItemButton>\n\n            <Collapse in={open} timeout=\"auto\" sx={props.sx}>\n                <List disablePadding>\n                    {props.children}\n                </List>\n            </Collapse>\n        </ListItem>\n    );\n}\n","import { Box, ListItemButton, ListItemIcon } from \"@mui/material\";\nimport { MapItem } from \"../../../../../models/AddressMap\";\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport paths from \"../../../../path\";\nimport AppLink from \"../../../AppLink\";\n\n\n\nexport default function RoomListItem(props: MapItem) {\n    return (\n        <ListItemButton component='li' >\n            <Box sx={{ width: '100%' }} component={AppLink} to={`${paths.HOME}${props.href}`}>\n                <ListItemIcon >\n                    <ArrowRightIcon />\n                </ListItemIcon>\n                {props.name}\n            </Box>\n        </ListItemButton>\n    );\n}\n","import BungalowIcon from '@mui/icons-material/Bungalow';\nimport MapIcon from '@mui/icons-material/Map';\nimport { List } from \"@mui/material\";\nimport { useResourceMap } from '../../../../../contexts/ResourceMapContext';\nimport paths from '../../../../path';\nimport CollapseableListItem from \"./CollapseableListItem\";\nimport RoomListItem from \"./RoomListItem\";\nimport React from 'react';\n\n\nexport default function ResourcesList() {\n    const { resourceMap } = useResourceMap();\n\n    const rendered = React.useMemo(() => {\n        return resourceMap?.map(({ id, name, href, buildings }) =>\n            <CollapseableListItem\n                key={id}\n                name={name}\n                href={`${paths.HOME}${href}`}\n                icon={<MapIcon color=\"primary\" />}\n                sx={{ width: '100%' }}\n            >\n                {buildings.map(({ id, name, href, rooms }) =>\n                    <CollapseableListItem\n                        key={id}\n                        name={name}\n                        href={`${paths.HOME}${href}`}\n                        icon={<BungalowIcon color=\"primary\" />}\n                        sx={{\n                            pl: 6,\n                            width: 'inherit',\n                            backgroundColor: 'background.default'\n                        }}\n                    >\n                        {rooms.map((roomEntry, key) => <RoomListItem key={key} {...roomEntry} />)}\n\n                    </CollapseableListItem>)}\n            </CollapseableListItem>)\n    }, [resourceMap]);\n\n    return (\n        <List>\n            {rendered}\n        </List>\n    );\n}\n\n\n","import ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport React from \"react\";\nimport { CreateAddressForm } from \"../../../../pages/protected/AddressPage/Forms\";\nimport AddIcon from '@mui/icons-material/Add';\n\n\n\nexport default function CreateAddressButton() {\n    const [formOpen, setFormOpen] = React.useState<boolean>(false);\n\n    const handleClick = React.useCallback((ev) => {\n        ev.stopPropagation();\n        setFormOpen(true);\n    }, []);\n\n    return (\n        <>\n            <CreateAddressForm\n                open={formOpen}\n                onClose={() => setFormOpen(false)}\n            />\n            <ListItem\n                component='div'\n                disablePadding\n                onClick={handleClick}\n                sx={{ color: 'primary.dark' }}>\n                <ListItemButton>\n                    <ListItemIcon>\n                        <AddIcon color='primary' />\n                    </ListItemIcon>\n                    Dodaj adres\n                </ListItemButton>\n            </ListItem>\n        </>\n    );\n}","import { Divider, Drawer, ListItem, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport MainDrawerList from \"./MainDrawerList\";\nimport DrawerPanel from \"./DrawerPanel\";\nimport AvatarView from './AvatarView';\nimport useSession from \"../../../../auth/useSession\";\nimport ResourcesList from \"./ResourcesList\";\nimport CreateAddressButton from \"./CreateAddressButton\";\n\n\ninterface AppDrawerProps {\n    open: boolean,\n    toggleOpen: any,\n}\n\nexport default function AppDrawer({ toggleOpen, open }: AppDrawerProps) {\n    const { user } = useSession();\n\n    return (\n        <Drawer\n            variant=\"temporary\"\n            ModalProps={{\n                keepMounted: true\n            }}\n            anchor=\"left\"\n            open={open}\n            onClose={toggleOpen}\n        >\n            <DrawerPanel toggleOpen={(toggleOpen)}>\n                <AvatarView user={user} />\n\n                <Divider />\n                <MainDrawerList access={user?.access} />\n\n                <Divider />\n                <ListItem\n                    onClick={(ev: React.MouseEvent) => ev.stopPropagation()}\n                    component=\"div\"\n                    sx={{ pb: 0, color: 'text.disabled' }}\n                >\n                    <ListItemText>\n                        Zasoby:\n                    </ListItemText>\n                </ListItem>\n                <ResourcesList />\n\n            </DrawerPanel>\n            <CreateAddressButton />\n        </Drawer>\n    );\n}\n","import { Menu, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport useSession from \"../../../../auth/useSession\";\nimport paths from \"../../../path\";\nimport AppLink from \"../../AppLink\";\n\n\n\ninterface AccountMenuProps {\n    trigger: null | HTMLElement,\n    handleClose: () => void\n}\n\nconst links = [\n    { name: \"Mój Profil\", link: paths.MY_PROFILE },\n    { name: \"Panel Główny\", link: paths.HOME },\n]\n\n\nexport default function AccountMenu({ trigger, handleClose }: AccountMenuProps) {\n    const { logout } = useSession();\n\n    const linksComp = React.useMemo(() => {\n        return links.map(({ name, link }, i) =>\n            <MenuItem key={i} onClick={handleClose}>\n                <AppLink to={link}>\n                    {name}\n                </AppLink>\n            </MenuItem>)\n    }, [handleClose]);\n\n\n    return (\n        <Menu\n            id=\"menu-appbar\"\n            anchorEl={trigger}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={Boolean(trigger)}\n            onClose={handleClose}\n        >\n            {linksComp}\n\n            <MenuItem onClick={() => {\n                handleClose();\n                logout();\n            }}>\n                Wyloguj\n            </MenuItem>\n        </Menu>\n    );\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\n\nimport AccountMenu from './AccountMenu';\nimport useSession from '../../../../auth/useSession';\nimport { Avatar } from '@mui/material';\nimport paths from '../../../path';\nimport ImageService from '../../../../services/ImageService';\nimport AppLink from '../../AppLink';\n\n\ninterface NavigationBarProps {\n\ttoggleDrawer: any\n}\n\n\nexport default function NavigationBar(props: NavigationBarProps) {\n\tconst { user } = useSession();\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleMenu = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t}, []);\n\n\tconst handleClose = React.useCallback(() => {\n\t\tsetAnchorEl(null);\n\t}, []);\n\n\treturn (\n\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={props.toggleDrawer}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\t\tsx={{ mr: 2, color: \"background.default\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuIcon color='inherit' />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\t\t\t\t\t<Typography variant=\"h4\" component=\"span\" sx={{\n\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\tfontFamily: \"Dancing Script, cursive\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<AppLink\n\t\t\t\t\t\t\tto={user ? paths.HOME : paths.PUBLIC}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\twidth: 'fit-content',\n\t\t\t\t\t\t\t\tcolor: 'background.default',\n\t\t\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\t\t\ttextDecoration: 'none'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRav System\n\t\t\t\t\t\t</AppLink>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\talt={user.name}\n\t\t\t\t\t\t\t\t\tsrc={ImageService.getLink(user.image)}\n\t\t\t\t\t\t\t\t\tsx={{ width: 42, height: 42 }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<AccountMenu\n\t\t\t\t\t\t\t\ttrigger={anchorEl}\n\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n}\n","import React from \"react\";\nimport AppDrawer from \"./Drawer\";\nimport NavigationBar from \"./NavigationBar\";\n\n\nexport default function Navigation() {\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst toggleDrawer = React.useCallback((\n\t\tevent: React.KeyboardEvent | React.MouseEvent,\n\t\tshouldWork: boolean = true\n\t) => {\n\t\tevent.stopPropagation();\n\t\tif (\n\t\t\tshouldWork &&\n\t\t\tevent.type === 'keydown' &&\n\t\t\t((event as React.KeyboardEvent).key === 'Tab' ||\n\t\t\t\t(event as React.KeyboardEvent).key === 'Shift')\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(old => !old);\n\t}, []);\n\n\treturn <>\n\t\t<NavigationBar toggleDrawer={toggleDrawer} />\n\t\t<AppDrawer\n\t\t\topen={open}\n\t\t\ttoggleOpen={toggleDrawer}\n\t\t/>\n\t</>\n}","import { Box, Container, CssBaseline } from '@mui/material';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nimport './App.css';\n\nimport Theme from './shared/Theme';\nimport SessionProvider from './auth/sessionProvider'\nimport Tabs from './pages';\nimport Footer from './shared/components/Footer';\nimport { BrowserRouter } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport NotificationContextProvider from './contexts/NotificationContext/NotificationContextProvider';\nimport { ResourceMapContextProvider } from './contexts/ResourceMapContext';\nimport Navigation from './shared/components/Navigation';\n\n\n\nfunction App() {\n\treturn (\n\t\t<Theme>\n\t\t\t<LocalizationProvider dateAdapter={AdapterDateFns}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Box component=\"div\" className=\"App\" sx={{ backgroundColor: 'background.default' }}>\n\t\t\t\t\t<BrowserRouter basename='/'>\n\t\t\t\t\t\t<NotificationContextProvider>\n\t\t\t\t\t\t\t<SessionProvider >\n\t\t\t\t\t\t\t\t<ResourceMapContextProvider>\n\t\t\t\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t<Tabs />\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t\t\t</ResourceMapContextProvider>\n\t\t\t\t\t\t\t</SessionProvider>\n\t\t\t\t\t\t</NotificationContextProvider>\n\t\t\t\t\t</BrowserRouter>\n\t\t\t\t</Box>\n\t\t\t</LocalizationProvider>\n\t\t</Theme>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}