{"version":3,"sources":["components/pages/protected/components/SwipeableTabs/SwipeablePanel.tsx","components/pages/protected/components/SwipeableTabs/SwipeableTabs.tsx","components/pages/protected/RoomPage/RoomContext/RoomContextProvider.tsx","components/pages/protected/RoomPage/RoomContext/useRoomContext.ts","components/pages/protected/components/DeleteModal/DeleteModal.tsx","services/AddressService.ts","services/RoomService.ts","components/pages/protected/hooks/useTrigger.ts","components/pages/protected/components/DatesFooter.tsx","components/pages/protected/AddressPage/AddressContext/AddressContextProvider.tsx","components/pages/protected/AddressPage/AddressContext/useAddress.ts","components/pages/protected/BuildingPage/BuildingContext/BuildingContextProvider.tsx","components/pages/protected/BuildingPage/BuildingContext/useBuilding.ts","services/BuildingService.ts","components/pages/protected/components/Charts/ChartOptionsBar.tsx","components/pages/protected/components/Charts/ChartsTab.tsx","components/pages/protected/components/Charts/ChartSection.tsx","contexts/ResourceMapContext/useResourceMap.ts","components/pages/protected/UserPage/UserContext/UserContextProvider.tsx","components/pages/protected/UserPage/UserContext/useUser.tsx","shared/path.ts","services/ChartService.ts","components/pages/protected/components/Charts/ChartsContext/ChartsContextProvider.tsx","components/pages/protected/components/Charts/ChartsContext/useCharts.ts","contexts/QueryParamsContext/QueryParamsContextValue.tsx","contexts/QueryParamsContext/QueryParamsContextProvider.tsx","contexts/ResourceMapContext/ResourceMapContextProvider.tsx","components/pages/protected/components/ListPagination.tsx","components/pages/protected/components/LazyInput.tsx","services/APIServiceError.ts","components/pages/protected/components/SelectButtonGroup.tsx","services/AuthService.ts","shared/components/LoadingView.tsx","auth/sessionProvider.tsx","contexts/NotificationContext/NotificationContextValue.ts","contexts/NotificationContext/NotificationContextProvider.tsx","shared/components/TabHeadLine.tsx","components/pages/protected/components/Charts/Chart.tsx","components/pages/protected/components/PDF/PDFPage.tsx","components/pages/protected/components/PDF/Table.tsx","contexts/NotificationContext/useNotification.ts","services/LogService.ts","shared/components/Loading.tsx","components/pages/protected/components/GenericModal.tsx","contexts/ResourceMapContext/index.ts","auth/useSession.ts","shared/utils.ts","shared/components/UniqueCodeButton/statusReducer.ts","shared/components/UniqueCodeButton/UniqueCodeButton.tsx","components/pages/public/ChangePassword/FormStep.tsx","components/pages/public/ChangePassword/Form.tsx","services/ImageService.ts","shared/components/FormGridContainer.tsx","contexts/QueryParamsContext/userQueryParams.ts","services/Service.ts","services/UserService.ts","components/pages/protected/components/Tutorial/TutorialContext/TutorialContextProvider.tsx","components/pages/protected/components/Tutorial/Tip.tsx","components/pages/protected/components/Tutorial/TutorialContext/useTutorial.ts","services/MetadataService.ts","services/StorageService.ts","shared/Theme/LinkBehavior.tsx","shared/Theme/theme.ts","shared/Theme/index.tsx","components/pages/protected/AccessPage/index.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/useReservations.ts","components/pages/protected/components/DateTimePicker.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/EditModalForm.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/CopyModalForm.tsx","components/pages/protected/components/RfidForm.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/PingKeyModalForm.tsx","components/pages/protected/components/MoreVertMenu.tsx","components/pages/protected/components/ReservationViewModal/UserItem.tsx","components/pages/protected/components/ReservationViewModal/RoomItem.tsx","components/pages/protected/hooks/useResolvedAccess.ts","components/pages/protected/components/ReservationViewModal/DatesView.tsx","components/pages/protected/components/ReservationViewModal/ReservationViewModal.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ModalContext/ModalContextProvider.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ReservationsContextProvider.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsList/ReservationsListItem.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsList/ReservationsList.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ModalContext/useReservationModalContext.ts","components/pages/protected/components/CreateReservationModal/CreateReservationForm.tsx","components/pages/protected/components/CreateReservationModal/CreateReservationModal.tsx","components/pages/protected/components/GenericReservationsTab/ReservationTabBar.tsx","components/pages/protected/components/GenericReservationsTab/GenericReservationsTab.tsx","components/pages/protected/AddressPage/components/Map.tsx","components/pages/protected/AddressPage/Forms/AddressEditForm.tsx","components/pages/protected/AddressPage/Forms/CreateBuildingForm.tsx","components/pages/protected/AddressPage/Forms/CreateAddressForm.tsx","components/pages/protected/AddressPage/components/AddressCard.tsx","components/pages/protected/components/ScrollableList/ScrollableList.tsx","components/pages/protected/components/ScrollableList/ScrollableListItem.tsx","components/pages/protected/AddressPage/components/BuildingsList.tsx","components/pages/protected/AddressPage/AddressPage.tsx","components/pages/protected/components/ImageUploadField.tsx","models/Room.ts","components/pages/protected/BuildingPage/Forms/BuildingEditForm.tsx","components/pages/protected/BuildingPage/Forms/CreateRoomForm.tsx","models/Metadata.ts","components/pages/protected/components/FavouriteButton.tsx","components/pages/protected/BuildingPage/components/BuildingCard.tsx","components/pages/protected/BuildingPage/components/RoomsList.tsx","components/pages/protected/BuildingPage/BuildingPage.tsx","components/pages/protected/HomePage/Favourites.tsx","components/pages/protected/HomePage/Notebook.tsx","components/pages/protected/HomePage/HomeReservations.tsx","components/pages/protected/HomePage/HomePage.tsx","components/pages/protected/LogsPage/index.tsx","components/pages/protected/RoomPage/Forms/RoomEditForm.tsx","components/pages/protected/RoomPage/Forms/RfidModalForm.tsx","components/pages/protected/RoomPage/components/YesNoIcon.tsx","components/pages/protected/RoomPage/components/RoomTableInfo.tsx","components/pages/protected/RoomPage/components/RoomCard.tsx","components/pages/protected/RoomPage/RoomPage.tsx","components/pages/protected/SettingsPage/index.tsx","components/pages/protected/UserPage/Forms/PasswordChangeModal.tsx","components/pages/protected/UserPage/Forms/EditUserForm.tsx","components/pages/protected/UserPage/components/UserCard.tsx","components/pages/protected/UserPage/UserPage.tsx","components/pages/protected/UsersPage/UsersContext/UsersContextProvider.tsx","components/pages/protected/UsersPage/components/UsersView/SearchBar.tsx","components/pages/protected/UsersPage/components/UsersView/UsersList/UserListItem.tsx","components/pages/protected/UsersPage/components/UsersView/UsersList/UsersList.tsx","components/pages/protected/UsersPage/UsersContext/useUsers.ts","components/pages/protected/UsersPage/components/UsersView/UsersView.tsx","components/pages/protected/UsersPage/components/UsersCharts.tsx","components/pages/protected/UsersPage/UsersPage.tsx","components/pages/protected/index.tsx","components/pages/public/PublicPages.tsx","components/pages/index.tsx","components/Footer/Copyrights.tsx","components/Footer/Links.tsx","components/Footer/index.tsx","components/Navigation/Drawer/MainDrawerList.tsx","components/Navigation/Drawer/DrawerPanel.tsx","components/Navigation/Drawer/AvatarView.tsx","components/Navigation/Drawer/ResourcesList/CollapseableListItem.tsx","components/Navigation/Drawer/ResourcesList/RoomListItem.tsx","components/Navigation/Drawer/ResourcesList/ResourceList.tsx","components/Navigation/Drawer/CreateAddressButton.tsx","components/Navigation/Drawer/index.tsx","components/Navigation/NavigationBar/AccountMenu.tsx","components/Navigation/NavigationBar/index.tsx","components/Navigation/Navigation.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx","components/pages/protected/components/SmallCard.tsx","services/ReservationService.ts"],"names":["SwipeablePanel","props","children","hidden","index","other","React","useMemo","Box","role","id","SmallCard","SwipeableTabs","theme","useTheme","useState","tabIndex","setTabIndex","handleTabChange","useCallback","event","newValue","handleChangeIndex","renderedTabs","tabs","map","page","Tab","label","Typography","component","variant","name","a11yProps","renderedTabPanels","dir","direction","Tabs","allowScrollButtonsMobile","value","onChange","indicatorColor","sx","borderBottom","borderColor","axis","onChangeIndex","RoomContext","createContext","RoomContextProvider","useResourceMap","getBuildingLink","reloadMap","notify","useNotification","urlParams","useParams","room","setRoom","refresh","useTrigger","useLayoutEffect","RoomService","setPath","getRoom","a","getView","resp","data","setOccupied","state","old","occupied","updateRoom","body","update","buildingId","building","description","deleteRoom","remove","to","updateRFIDTag","key","updateRFID","RFIDTag","deleteRFIDTag","useEffect","Boolean","Provider","Loading","useRoomContext","useContext","DeleteModal","open","onSuccess","onClose","input","setInput","objectName","Math","random","toString","substring","toUpperCase","handleConfirm","close","GenericModal","maxWidth","Stack","spacing","color","TextField","evt","target","justifyContent","Button","startIcon","onClick","AddressService","_path","this","params","preparePath","get","path","delete","patch","post","Service","addressId","roomId","timeInterval","trigger","setTrigger","int","setInterval","clearInterval","DatesFooter","fontSize","displayDate","model","_created","_updated","addressContext","AddressContextProvider","address","setAddress","getAddress","getCurrentOne","getBuildingsInAddress","getBuildings","updateAddress","deleteAddress","paths","HOME","useAddress","buildingContext","BuildingContextProvider","setBuilding","BuildingService","getBuilding","getRoomsInBuilding","updateBuilding","Object","keys","forEach","Number","assign","deleteBuilding","dynamicPaths","toAddress","useBuilding","predefinedButtons","ChartOptionsBar","useQueryParams","queryParams","setQueryParams","from","Date","now","customDates","setCustomDates","handleButtonChange","buttonValue","handleSubmitCustomDate","preventDefault","toDateString","SelectButtonGroup","buttons","onSubmit","pb","MobileDatePicker","inputFormat","renderInput","size","type","memo","ChartsTab","QueryParamsContext","default","ChartsContext","ChartSection","defaultOpen","setOpen","display","alignItems","title","replace","IconButton","Collapse","in","timeout","Grid","container","Divider","resourceMapContext","userContext","UserContextProvider","session","useSession","user","setUser","userId","UserService","load","deleteUser","action","logout","USERS","updateUser","useUser","PUBLIC","LOGIN","REGISTER","ACTIVATE","REMIND_PASSWORD","ACCESS","SETTINGS","USER","MY_PROFILE","INFRASTRUCTURE","ADDRESS","BUILDING","ROOM","LOGS","toBuilding","toRoom","toUser","ChartService","endp","url","window","location","length","entries","newPath","includes","chartsContext","ChartsContextProvider","chartsData","setData","fetchData","useCharts","queryParamsContextDefaults","q","param","queryParamsContext","QueryParamsContextProvider","keyName","defaultValue","StorageService","read","save","ResourceMapContextProvider","resourceMap","setResources","loaded","setLoaded","loadResourceMap","getResourcesMap","getRoomLink","addr","buildings","bld","rooms","flat","find","item","href","allRooms","allBuildings","allAddresses","ListPagination","handlePageChange","currentPage","handleCountChange","child","itemsOnPage","onPageList","num","flexWrap","flexDirection","alignContent","count","pagesCount","fullWidth","labelId","LazyInput","str","setStr","handleSearchFieldChange","clearTimeout","timer","setTimeout","placeholder","width","p","bgcolor","inputProps","APIServiceError","error","statusCode","Error","handleChange","renderedButtons","control","row","AuthService","email","password","response","localStorage","setItem","_TOKEN_NAME","removeItem","getItem","hasToken","LoadingView","Backdrop","zIndex","drawer","backgroundColor","text","CircularProgress","sessionContext","SessionProvider","loading","setLoading","setUpUser","setIdentity","MetadataService","metadata","ReservationService","LogService","ImageService","checkIfUserHasSession","hasSession","getMe","sessionUser","WELCOME","login","message","code","NotificationContextDefault","notificationContext","NotificationContextProvider","setMessage","severity","setSeverity","setComponent","closeSnack","reason","setSnack","_severity","componentCallback","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","TabHeadLine","subtitle","mt","weekDays","Chart","primaryAxis","getValue","resolveDay","x","min","secondaryAxes","y","position","elementType","minDomainLength","hardMin","scaleType","showDatumElements","obj","push","xKey","xs","lg","maxHeight","height","minHeight","options","Font","register","family","src","styles","StyleSheet","create","fontFamily","section","marginBottom","padding","head","PDFPage","style","wrap","toLocaleString","subject","sections","node","table","cell","margin","wordBreak","textAlign","Row","cols","col","Cell","val","emptyMonthList","rows","every","slice","Table","closeAfterTransition","BackdropComponent","BackdropProps","overflow","boxShadow","dateString","date","Intl","DateTimeFormat","dateStyle","timeStyle","format","timeFormat","isDate","getDate","fromLocaleDateTimeString","dateTime","split","d","m","h","i","s","statusReducer","success","payload","UniqueCodeButton","useReducer","result","dispatchResult","handleSubmit","generateKey","ml","FormStep","Form","newPassword","e","changePassword","required","autoComplete","autoFocus","mb","Link","endpoint","formBody","fetch","_BASE_URL","method","cache","mode","headers","authToken","json","console","debug","ok","status","image","formData","FormData","append","sendImage","FormGridContainer","onCancel","rowGap","process","_userId","fetchObject","JSON","stringify","match","reload","query","_fetch","URLSearchParams","RegisterState","search","NO_ACTIVATION_NEEDED","ACTIVATION_NEEDED","accessId","tutorialContext","TutorialContextProvider","registered","setRegistered","startUp","setStartUp","shift","registerTip","callback","priority","sort","b","Tip","holder","useRef","disposeFunc","setDispose","observerRef","isOnScreen","setIsOnScreen","current","IntersectionObserver","entry","isIntersecting","observe","disconnect","handleClose","ref","Popover","anchorEl","px","STORAGE_NAME","notes","favourites","log","filter","btoa","encodeURI","codeName","parse","LinkBehavior","createTheme","palette","primary","indigo","secondary","dark","main","light","background","paper","shape","borderRadius","components","MuiCssBaseline","styleOverrides","scrollbar","track","thumb","active","MuiTextField","defaultProps","MuiSelect","MuiButton","MuiLink","MuiButtonBase","LinkComponent","MuiSvgIcon","MuiIconButton","Theme","ThemeProvider","LazyAccessPage","lazy","AccessPage","Suspense","fallback","useReservations","reservationsContext","DateTimePicker","MobileDateTimePicker","minDate","EditModalForm","updateReservation","closeForm","reservation","handleDateChange","multiline","maxRows","sm","plannedStart","plannedEnd","FormControl","InputLabel","Select","MenuItem","CopyModalForm","createReservation","dates","setDates","copyDates","setCopyDates","createCalls","Promise","all","processed","handleDeleteCopyDate","splice","setDate","handleAddDate","border","pl","HiddenInput","styled","left","RfidForm","setText","setColor","onScan","handleDecline","focus","alignSelf","headline","bodyText","PingKeyModalForm","pingKeyForReservation","handleKeyScan","reservationId","MoreVertMenu","setAnchorEl","handleClick","currentTarget","undefined","Menu","MenuListProps","PaperProps","minWidth","opt","ListItemIcon","icon","UserItem","ListItem","button","ListItemAvatar","Avatar","getLink","alt","surname","ListItemText","RoomItem","roomLink","roomType","defaultAccess","useResolvedAccess","access","owner","accessAdmin","premisesAdmin","keysAdmin","reservationsAdmin","reservationsAbility","logsAdmin","statsViewer","DatesView","columnGap","Chip","TextSection","ReservationViewModal","myId","deleteReservation","history","useHistory","deleteModalOpen","setDeleteModalOpen","editModalOpen","setEditModalOpen","nfcModalOpen","setNFCModalOpen","copyModalOpen","setCopyModalOpen","onDelete","menuOptions","unshift","Edit","justifySelf","actualStart","actualEnd","List","ReservationModalViewContext","showReservation","ModalContextProvider","reservations","modalOpen","setModalOpen","setReservationId","ReservationsContextProvider","roomContext","setReservations","pathname","getReservations","pagination","triggerReload","pingKey","createOne","field","toUTCString","MemAvatar","img","ReservationListItem","resolveStatus","ReservationsList","renderedList","CreateReservationForm","start","end","CreateReservationModal","ReservationTabBar","createReservationModalOpen","setCreateReservationModalOpen","customDate","setCustomDate","toISOString","md","GenericReservationsTab","StyledIframe","Map","street","number","town","country","base","URL","ie","z","iwloc","output","frameBorder","AddressEditForm","postalCode","CreateBuildingForm","handleCreateBuilding","openTime","closeTime","String","MobileTimePicker","CreateAddressForm","AddressCard","Card","elevation","CardHeader","subheader","CardMedia","CardContent","ScrollableList","onAddItem","ScrollableListItem","link","py","EmptyScrollableListItem","BuildingsList","createBuildingModalOpen","setCreateBuildingModalOpen","setBuildings","createBuilding","renderedBuildings","LazyAddressCharts","AddressCharts","AddressPage","pages","arr","AddressContext","Input","StyledImage","ImageUploadField","useLocation","uploadedImage","setUploadedImage","upload","onUpload","handleImageUpload","files","handleRemoveImgae","createObjectURL","htmlFor","accept","RoomTypes","timeToDate","BuildingEditForm","handleTime","handleSelectChange","CreateRoomForm","handleCreateRoom","LECTURE","seatsCount","floor","values","FavType","FavouriteButton","marked","setMarked","isFavourite","addToFavourites","removeFavourite","addFavourite","BuildingView","Building","RoomsList","createRoomModalOpen","setCreateRoomModalOpen","setRooms","createRoom","renderedRooms","LazyRoomOrBuildingChartTab","RoomOrBuildingChartTab","BuildingPage","BuildingContext","getCorrectListItem","Room","Favourites","handleRemoveFavourite","disablePadding","Notebook","err","InputBase","minRows","mr","HomeReservations","HomePage","LazyLogsPage","LogsPage","RoomEditForm","checked","FormControlLabel","labelPlacement","Switch","blocked","RfidModalRorm","YesNoIcon","rest","RoomTableInfo","deleteTag","rfidTagModalOpen","setRfidTagModalOpen","tableRows","RenderedRows","TableRow","hover","TableCell","align","fontWeight","TableContainer","TableHead","TableBody","RoomCard","RoomPage","LazySettingsPage","SettingsPage","PasswordChangeModal","EditUserForm","UserCard","editModal","setEditModal","passModal","setPassModal","deleteModal","setDeleteModal","lastActivity","LazyUserCharts","UserCharts","UserPage","UserContext","usersContext","UsersContextProvider","users","setUsers","getUsers","deleted","activated","SearchBar","UserListItem","UsersList","UsersView","UsersCharts","Charts","ActualLoader","usePDF","document","r","reservationsCount","allTimeMinutes","avgActualTimeMinutes","avgPlannedTimeMinutes","PDF","download","UsersPage","ProtectedPages","Activation","Login","Register","ChangePassword","Welcome","PublicPages","exact","tabStyle","Copyright","LinkItem","Links","linksList","list","links","Container","pt","Footer","navListItems","HomeIcon","AccountIcon","settingsItem","SettingsIcon","accessLinkItem","VerifiedUserIcon","usersLinkItem","PeopleIcon","logsLinkItem","SearchIcon","MainListItem","MainDrawerList","DrawerPanel","toggleOpen","onKeyDown","AvatarView","ev","stopPropagation","CollapseableListItem","OPENED_NAME","handleOpen","ListItemButton","ExpandLess","ExpandMore","RoomListItem","ResourcesList","rendered","roomEntry","CreateAddressButton","formOpen","setFormOpen","AppDrawer","Drawer","ModalProps","keepMounted","anchor","AccountMenu","linksComp","transformOrigin","NavigationBar","handleMenu","flexGrow","AppBar","Toolbar","toggleDrawer","edge","textDecoration","Navigation","shouldWork","App","LocalizationProvider","dateAdapter","AdapterDateFns","locale","plLocale","CssBaseline","className","ResourceMapContext","Tutorial","isLocalhost","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","ReactDOM","render","StrictMode","getElementById","origin","addEventListener","contentType","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","titleComponent","Colors","mess","localPreparPath","nowTimestamp","now_minus15","now_plus15","emitStatus","warning","info","inert","end_plus15"],"mappings":"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","file":"static/js/main.64a260ed.chunk.js","sourcesContent":["import { Box } from \"@mui/material\";\nimport React from \"react\";\nimport SmallCard from \"../../components/SmallCard\";\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    hidden: boolean,\n    index: number\n}\n\n\nexport default function SwipeablePanel(props: TabPanelProps) {\n    const { children, hidden, index, ...other } = props;\n\n    // should component update\n    const render = React.useMemo(() =>\n        <Box\n            role=\"tabpanel\"\n            hidden={hidden}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            <SmallCard>{children}</SmallCard>\n        </Box>\n        , [hidden, index, children, other]);\n\n    return render;\n}","import { Tab, Tabs, Typography, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport SwipeablePanel from \"./SwipeablePanel\";\n\n\ninterface SwipeableTabsProps {\n    tabs: { name: string, component: React.ReactNode }[],\n}\n\n\nfunction a11yProps(index: number) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\n\nexport default function SwipeableTabs(props: SwipeableTabsProps) {\n    const theme = useTheme();\n    const [tabIndex, setTabIndex] = React.useState(0);\n\n\n    const handleTabChange = React.useCallback((event: React.SyntheticEvent, newValue: number) => {\n        setTabIndex(newValue);\n    }, []);\n\n\n    const handleChangeIndex = React.useCallback((index: number) => {\n        setTabIndex(index);\n    }, []);\n\n\n    const renderedTabs = React.useMemo(() => {\n        return props.tabs.map((page, index) => <Tab\n            key={index}\n            label={<Typography component='h2' variant='button'>{page.name}</Typography>}\n            {...a11yProps(index)}\n        />)\n    }, [props.tabs]);\n\n\n    const renderedTabPanels = React.useMemo(() => {\n        return props.tabs.map((page, index) => <SwipeablePanel\n            key={index}\n            index={index}\n            hidden={tabIndex !== index}\n            dir={theme.direction}\n        >\n            {page.component}\n        </SwipeablePanel>)\n    }, [\n        props.tabs,\n        tabIndex,\n        theme.direction,\n    ]);\n\n\n    return (\n        <div>\n            <Tabs\n                allowScrollButtonsMobile\n                value={tabIndex}\n                onChange={handleTabChange}\n                indicatorColor=\"primary\"\n                variant=\"scrollable\"\n                sx={{ borderBottom: 2, borderColor: 'divider' }}\n            >\n                {renderedTabs}\n            </Tabs>\n            <br />\n            <SwipeableViews\n                axis='x'\n                index={tabIndex}\n                onChangeIndex={handleChangeIndex}\n            >\n                {renderedTabPanels}\n            </SwipeableViews>\n        </div>\n    );\n}","import React, { createContext } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { DetailedRoom } from \"../../../../../models/Room\";\nimport RoomService, { RoomUpdateParams, RoomViewParams } from \"../../../../../services/RoomService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport RoomContextValue from \"./RoomContextValue\";\nimport useResourceMap from \"../../../../../contexts/ResourceMapContext/useResourceMap\";\nimport useTrigger from \"../../hooks/useTrigger\";\nimport Loading from \"../../../../../shared/components/Loading\";\n\n\ninterface RoomContextProviderProps {\n    children?: React.ReactNode\n}\n\nexport const RoomContext: any = createContext(null);\n\n\nexport default function RoomContextProvider({\n    children\n}: RoomContextProviderProps) {\n    const { getBuildingLink, reloadMap } = useResourceMap();\n    const notify = useNotification();\n    const urlParams = useParams<RoomViewParams>();\n    const [room, setRoom] = React.useState<DetailedRoom>();\n    const refresh = useTrigger(60_000);\n\n    React.useLayoutEffect(() => {\n        RoomService.setPath(urlParams);\n    }, [urlParams]); // set new urlParams to service so it get data for propper room\n\n\n    const getRoom = React.useCallback(async () => {\n        const resp = await RoomService.getView();\n        setRoom(resp.data as DetailedRoom);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        urlParams,\n        refresh\n    ]); // recompute after change of room\n\n\n    const setOccupied = React.useCallback((state: boolean) => {\n        setRoom(old => {\n            if (old)\n                return { ...old, occupied: state };\n        });\n    }, []);\n\n\n    const updateRoom = React.useCallback(async (body: RoomUpdateParams) => {\n        if (!room) return false;\n\n        try {\n            await RoomService.update(body);\n            setRoom(old => {\n                if (old)\n                    return { ...old, ...body };\n            });\n            notify(\"Sala została zaktualizowana\", 'success');\n\n            if (('name' in body && body.name !== room.name)\n                || ('buildingId' in body && body.buildingId !== room?.building.id)\n            ) {\n                reloadMap();\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        room\n    ]);\n\n\n    const deleteRoom = React.useCallback(async () => {\n        if (!room) return;\n\n        try {\n            await RoomService.remove();\n            reloadMap();\n            notify(\"Sala została usunięta\", 'success', () => <Redirect to={getBuildingLink(room.building.id)} />);\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        room,\n        reloadMap,\n        getBuildingLink,\n    ]);\n\n\n    const updateRFIDTag = React.useCallback(async (key: string) => {\n        try {\n            await RoomService.updateRFID(key);\n            setRoom(old => {\n                if (old)\n                    return { ...old, RFIDTag: key };\n            });\n\n            notify(\"Tag został przypisany\", 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n    }, [notify]);\n\n\n    const deleteRFIDTag = React.useCallback(async () => {\n        try {\n            await RoomService.deleteRFIDTag();\n            setRoom(old => {\n                if (old)\n                    return { ...old, RFIDTag: null };\n            });\n            notify(\"Tag został usunięty\", \"success\");\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        getRoom();\n        return () => { }\n    }, [getRoom]);\n\n\n    if (!Boolean(room)) return <Loading />;\n\n    return (\n        <RoomContext.Provider value={{\n            room,\n            updateRoom,\n            deleteRoom,\n            updateRFIDTag,\n            deleteRFIDTag,\n            setOccupied\n        } as RoomContextValue}>\n            {children}\n        </RoomContext.Provider>\n    );\n}\n","import React from \"react\";\nimport { RoomContext } from \"./RoomContextProvider\";\nimport RoomContextValue from \"./RoomContextValue\";\n\n\nexport default function useRoomContext() {\n    return React.useContext(RoomContext) as RoomContextValue\n}","import { Button, Stack, TextField, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport GenericModal from \"../../components/GenericModal\";\n\n\ninterface DeleteModalProps {\n    open: boolean,\n    onClose: () => void,\n    onSuccess: () => void\n}\n\nexport default function DeleteModal({\n    open, onSuccess, onClose\n}: DeleteModalProps) {\n    const notify = useNotification();\n    const [input, setInput] = React.useState<string>('');\n\n    const objectName = React.useMemo(()=> (Math.random()).toString(36).substring(5).toUpperCase() ,[]);\n\n    const handleConfirm = React.useCallback(async () => {\n        if (input !== objectName) {\n            notify(\"Wpisany tekst jest niepoprawny\", 'error');\n            return;\n        }\n        onSuccess();\n        setInput('');\n    }, [objectName, input, onSuccess, notify]);\n\n\n    const close = React.useCallback(() => {\n        setInput('');\n        onClose();\n    }, [onClose]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            aria-label=\"Okno do usuwania obiektu\"\n            sx={{\n                maxWidth: \"400px\",\n            }}\n        >\n            <Stack direction=\"column\" spacing={3}>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    Usuwanie obiektu\n                </Typography>\n                <Typography variant=\"body1\" color='text.secondary'>\n                    Tej operacji nie da się cofnąć.\n                    <br />\n                    1. Przepisz tekst: <b>{objectName}</b><br />\n                    2. Naciśnij \"Zatwierdź\"\n                </Typography>\n                <TextField\n                    id=\"random-tekst\"\n                    label=\"tekst\"\n                    variant=\"outlined\"\n                    value={input}\n                    onChange={(evt) => setInput(evt.target.value)}\n                />\n                <Stack direction=\"row\" justifyContent=\"space-around\">\n                    <Button startIcon={<CancelIcon />} onClick={close}>Anuluj</Button>\n                    <Button startIcon={<DeleteIcon color=\"inherit\" />} onClick={handleConfirm} color=\"error\">Zatwierdź</Button>\n                </Stack>\n            </Stack>\n        </GenericModal>\n    );\n}","import Service from \"./Service\";\n\n\nexport interface AddressViewParams {\n    addressId: string,\n}\n\n\nexport interface UpdateAddressParams {\n    [index: string]: string | undefined,\n    country?: string,\n    town?: string,\n    postalCode?: string,\n    street?: string,\n    number?: string\n}\n\n\nexport interface CreateAddressParams {\n    country: string,\n    town: string,\n    postalCode: string,\n    street?: string,\n    number?: string,\n}\n\n\nclass AddressService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath(params: AddressViewParams) {\n        this._path = this.preparePath(params);\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(data: UpdateAddressParams) {\n        return this.patch(this.path, data);\n    }\n\n    public create(data: CreateAddressParams) {\n        return this.post('/addresses', data);\n    }\n\n    public getBuildings() {\n        return this.get(`${this.path}/buildings`);\n    }\n\n    public getResourcesMap() {\n        return this.get('/addresses/resources');\n    }\n}\n\n\nexport default new AddressService();","import { RoomType } from \"../models/Room\";\nimport { BuildingViewParams } from \"./BuildingService\";\nimport Service from \"./Service\";\n\n\nexport interface RoomViewParams {\n    roomId: string,\n    buildingId: string,\n    addressId: string\n}\n\n\nexport interface RoomUpdateParams {\n    name?: string,\n    roomType?: RoomType,\n    seatsCount?: number,\n    floor?: number,\n    buildingId?: number,\n    blocked?: boolean,\n}\n\n\nexport interface CreateRoomParams {\n    name: string,\n    roomType: RoomType,\n    seatsCount: number,\n    floor:number\n}\n\n\n\nclass RoomService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath({ addressId, buildingId, roomId }: RoomViewParams) {\n        this._path = `/addresses/${addressId}/buildings/${buildingId}/rooms/${roomId}`;\n    }\n\n    public getView() {\n        return this.get(this.path);\n    }\n\n    public create({ addressId, buildingId }: BuildingViewParams, data: CreateRoomParams) {\n        return this.post(`/addresses/${addressId}/buildings/${buildingId}/rooms`, data);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(body: RoomUpdateParams) {\n        return this.patch(this.path, body);\n    }\n\n    public updateRFID(key: string) {\n        return this.patch(`${this.path}/keys`, {\n            \"RFIDTag\": key\n        });\n    }\n\n    public deleteRFIDTag() {\n        return this.delete(`${this.path}/keys`);\n    }\n}\n\nexport default new RoomService()","import React from \"react\";\n\n\nexport default function useTrigger(timeInterval: number) {\n    const [trigger, setTrigger] = React.useState<boolean>();\n\n\n    React.useEffect(() => {\n        const int = setInterval(() => setTrigger(old => !old), timeInterval);\n\n        return () => clearInterval(int);\n    }, [\n        timeInterval\n    ]);\n\n    return trigger;\n}","import React from 'react';\nimport Typography from \"@mui/material/Typography\";\nimport Model from \"../../../../models/Model\";\nimport { displayDate } from \"../../../../shared/utils\";\n\n\n\ninterface DatesFooterProps {\n    model: Model\n}\n\nexport default function DatesFooter(props: DatesFooterProps) {\n    return (\n        <Typography color=\"text.secondary\" variant='body2' fontSize='smaller'>\n            Utworzono: {displayDate(props.model._created)}<br />\n            Ostatnia aktualizacja: {displayDate(props.model._updated)}\n        </Typography>\n    )\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport paths from \"../../../../../shared/path\";\nimport AddressService, { AddressViewParams, UpdateAddressParams } from \"../../../../../services/AddressService\";\nimport AddressContextValue from \"./AddressContextValue\";\nimport Address from \"../../../../../models/Address\";\nimport Building from \"../../../../../models/Building\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport Loading from \"../../../../../shared/components/Loading\";\n\n\n\ninterface AddressContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport const addressContext: any = React.createContext(null);\n\n\nexport default function AddressContextProvider(props: AddressContextProviderProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n\n    const urlParams = useParams<AddressViewParams>();\n\n    const [address, setAddress] = React.useState<Address>();\n\n\n    React.useLayoutEffect(() => {\n        AddressService.setPath(urlParams);\n    }, [urlParams])\n\n\n    const getAddress = React.useCallback(async () => {\n        const resp = await AddressService.getCurrentOne();\n        setAddress(resp.data as Address);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        getAddress();\n    }, [getAddress]);\n\n\n    const getBuildingsInAddress = React.useCallback(async () => {\n        try {\n            const resp = await AddressService.getBuildings();\n            return resp.data as Building[];\n        } catch (err: any) {\n            return [];\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    const updateAddress = React.useCallback(async (data: UpdateAddressParams) => {\n        try {\n            await AddressService.update(data)\n\n            setAddress(old => {\n                return {\n                    ...old,\n                    ...data as Address\n                }\n            });\n\n            reloadMap()\n\n            notify('Adres zaktualizowany', 'success');\n            return true;\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n    ])\n\n\n\n    const deleteAddress = React.useCallback(async () => {\n        try {\n            await AddressService.remove();\n            reloadMap();\n            notify(\"Adres został usunięty\", 'success', () => <Redirect to={paths.HOME} />);\n        } catch (err: any) {\n            address &&\n                notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        address,\n        reloadMap,\n    ]);\n\n\n    if (!Boolean(address)) return <Loading />;\n\n    return (\n        <addressContext.Provider value={{\n            address,\n            deleteAddress,\n            getBuildingsInAddress,\n            updateAddress\n        } as AddressContextValue}>\n\n            {props.children}\n\n        </addressContext.Provider>\n    );\n}","import React from \"react\";\nimport { addressContext } from \"./AddressContextProvider\";\nimport AddressContextValue from \"./AddressContextValue\";\n\n\nexport default function useAddress() {\n    return React.useContext(addressContext) as AddressContextValue;\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { DetailedBuilding } from \"../../../../../models/Building\";\nimport BuildingService, { BuildingUpdateParams, BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport BuildingContextValue from \"./BuildingContextValue\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\nimport Room from \"../../../../../models/Room\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport Loading from \"../../../../../shared/components/Loading\";\n\n\ninterface BuildingContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport const buildingContext: any = React.createContext(null);\n\n\nexport default function BuildingContextProvider(props: BuildingContextProviderProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n    const urlParams = useParams<BuildingViewParams>();\n\n    const [building, setBuilding] = React.useState<DetailedBuilding>();\n\n\n    React.useLayoutEffect(() => {\n        BuildingService.setPath(urlParams);\n    }, [urlParams])\n\n\n    const getBuilding = React.useCallback(async () => {\n        const resp = await BuildingService.getCurrentOne();\n        setBuilding(resp.data as DetailedBuilding);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        getBuilding();\n    }, [getBuilding]);\n\n\n    const getRoomsInBuilding = React.useCallback(async () => {\n        try {\n            const resp = await BuildingService.getRoomsInBuilding();\n            return resp.data as Room[];\n        } catch (err: any) {\n            return [];\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams])\n\n\n    const updateBuilding = React.useCallback(async (data: BuildingUpdateParams) => {\n        try {\n            if (await BuildingService.update(data)) {\n\n                if (\n                    building &&\n                    (\n                        ('addressId' in data && building.address.id !== data.addressId)\n                        || ('name' in data)\n                    )\n                ) {\n                    reloadMap();\n                }\n\n                setBuilding((old) => {\n                    old && Object.keys(data).forEach((key) => {\n                        switch (key) {\n                            case 'addressId':\n                                old.address.id = Number(data[key]);\n                                break;\n                            default:\n                                old[key] = data[key];\n                                break;\n                        }\n                    });\n                    return Object.assign({}, old);\n                })\n                notify('Bydynek zaktualizowany', 'success');\n                return true;\n            }\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify, building, reloadMap]);\n\n\n    const deleteBuilding = React.useCallback(async () => {\n        try {\n            await BuildingService.remove();\n            reloadMap();\n            building && notify(\"Budynek usunięty\", 'success', () => <Redirect to={dynamicPaths.toAddress(building.address.id)} />);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        building,\n        reloadMap\n    ]);\n\n\n    if (!Boolean(building)) return <Loading />;\n\n    return (\n        <buildingContext.Provider value={{\n            building,\n            deleteBuilding,\n            getRoomsInBuilding,\n            updateBuilding,\n        } as BuildingContextValue}>\n\n            {props.children}\n\n        </buildingContext.Provider>\n    );\n}","import React from \"react\";\nimport { buildingContext } from \"./BuildingContextProvider\";\nimport BuildingContextValue from \"./BuildingContextValue\";\n\n\nexport default function useBuilding() {\n    return React.useContext(buildingContext) as BuildingContextValue;\n}","import Service from \"./Service\";\nimport { AddressViewParams } from \"./AddressService\";\n\n\n\nexport interface BuildingViewParams {\n    addressId: string,\n    buildingId: string,\n}\n\n\nexport interface BuildingUpdateParams {\n    [index: string]: string | number | undefined,\n    name?: string,\n    closeTime?: string,\n    openTime?: string,\n    addressId?: number\n}\n\nexport interface BuildingCreateParams {\n    name: string,\n    closeTime: string,\n    openTime: string,\n}\n\n\nclass BuildingService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath({ addressId, buildingId }: BuildingViewParams) {\n        this._path = `/addresses/${addressId}/buildings/${buildingId}`;\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(data: BuildingUpdateParams) {\n        return this.patch(this.path, data);\n    }\n\n    public create({ addressId }: AddressViewParams, data: BuildingCreateParams) {\n        return this.post(`/addresses/${addressId}/buildings`, data)\n    }\n\n    public getRoomsInBuilding() {\n        return this.get(`${this.path}/rooms`);\n    }\n}\n\nexport default new BuildingService()","import React from \"react\";\nimport { Box, Button, Stack, TextField, Typography } from \"@mui/material\";\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport SelectButtonGroup, { SelectButtonInterface } from \"../../components/SelectButtonGroup\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { ChartsQueryData } from \"../../../../../services/ChartService\";\n\n\nconst predefinedButtons: SelectButtonInterface[] = [\n    { name: \"tydzień\", value: \"1 week ago\" },\n    { name: \"miesiąc\", value: \"1 month ago\" },\n    { name: \"6 miesięcy\", value: \"6 month ago\" },\n    { name: \"rok\", value: \"1 year ago\" },\n];\n\n\n\nfunction ChartOptionsBar() {\n    const { queryParams, setQueryParams } = useQueryParams<ChartsQueryData>();\n\n    const [customDates, setCustomDates] = React.useState<{ from: Date, to: Date }>({\n        from: new Date(queryParams?.from ?? (Date.now() - 21600)),\n        to: new Date(queryParams?.to ?? (Date.now() + (21600 * 24)) )\n    });\n\n    const handleButtonChange = React.useCallback(async (buttonValue: string) => {\n        setQueryParams(old => ({\n            ...old,\n            from: buttonValue,\n            to: \"1 hour\"\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n\n    const handleSubmitCustomDate = React.useCallback(async (evt: any) => {\n        evt.preventDefault();\n\n        setQueryParams({\n            from: customDates.from?.toDateString(),\n            to: customDates.to?.toDateString()\n        });\n    }, [\n        customDates.from,\n        customDates.to,\n        setQueryParams\n    ]);\n\n\n    return (\n        <Stack direction=\"column\" spacing={2}>\n            <Box>\n                <Typography variant=\"subtitle2\">\n                    Zakres czasu:\n                </Typography>\n                <SelectButtonGroup\n                    onChange={handleButtonChange}\n                    buttons={predefinedButtons}\n                    value={queryParams.from}\n                />\n\n            </Box>\n            <Box component=\"form\" onSubmit={handleSubmitCustomDate}>\n                <Typography variant=\"subtitle2\" pb='5px'>\n                    Zakres niestandardowy:\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                    <MobileDatePicker\n                        label=\"od\"\n                        inputFormat=\"yyyy-MM-dd\"\n                        value={customDates.from}\n                        onChange={(value) => setCustomDates({ ...customDates, from: value ?? new Date() })}\n                        renderInput={(params) => <TextField {...params} size='small' />}\n                    />\n                    <MobileDatePicker\n                        label=\"do\"\n                        inputFormat=\"yyyy-MM-dd\"\n                        value={customDates.to}\n                        onChange={(value) => setCustomDates({ ...customDates, to: value ?? new Date() })}\n                        renderInput={(params) => <TextField {...params} size='small' />}\n                    />\n                    <Button\n                        type=\"submit\"\n                        variant={queryParams?.from === customDates.from.toDateString() ? 'contained' : 'outlined'}\n                    >\n                        OK\n                    </Button>\n                </Stack>\n            </Box>\n        </Stack>\n    );\n}\n\nexport default React.memo(ChartOptionsBar);","import React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport { QueryParamsContext } from \"../../../../../contexts/QueryParamsContext\";\nimport { ChartsQueryData } from \"../../../../../services/ChartService\";\nimport ChartOptionsBar from \"./ChartOptionsBar\";\nimport { ChartsContext } from \"./ChartsContext\";\n\n\ninterface GenericChartsTabProps {\n    children: React.ReactNode[] | React.ReactNode\n}\n\nfunction ChartsTab(props: GenericChartsTabProps) {\n    return (\n        <QueryParamsContext\n            name=\"charts-query-params\"\n            default={{ from: '1 month ago', to: '1 hour' } as ChartsQueryData}\n        >\n            <ChartsContext>\n                <Stack spacing={4}>\n                    <ChartOptionsBar />\n                    {props.children}\n                </Stack>\n            </ChartsContext>\n        </QueryParamsContext>\n    )\n}\n\nexport default React.memo(ChartsTab);","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport IconButton from \"@mui/material/IconButton\";\nimport { Divider } from \"@mui/material\";\n\n\ninterface ChartSectionProps {\n    title: string,\n    children: React.ReactNode[] | React.ReactNode,\n    defaultOpen?: boolean,\n}\n\n\nexport default function ChartSection(props: ChartSectionProps) {\n    const [open, setOpen] = React.useState<boolean>(props?.defaultOpen ? true : false);\n\n    return (\n        <Box>\n            <Box sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n            }}>\n                <Typography variant='h6' component='h5' id={props.title.replace(' ', '_')}>\n                    {props.title}\n                    <IconButton onClick={() => setOpen(old => !old)}>\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </Typography>\n            </Box>\n            <Collapse in={open} timeout=\"auto\" >\n                <Grid container spacing={2}>\n                    {props.children}\n                </Grid>\n                <br />\n                <Divider />\n            </Collapse>\n        </Box>\n    );\n}","import React from \"react\";\nimport { resourceMapContext } from \"./ResourceMapContextProvider\";\nimport ResourceMapContextValue from \"./ResourceMapContextValue\";\n\n\nexport default function useResourceMap() {\n    return React.useContext(resourceMapContext) as ResourceMapContextValue;\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../auth/useSession\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { DetailedUser } from \"../../../../../models/User\";\nimport UserService, { UpdateUserParams, UserViewParams } from \"../../../../../services/UserService\";\nimport Loading from \"../../../../../shared/components/Loading\";\nimport paths from \"../../../../../shared/path\";\n\n\n\nexport const userContext: any = React.createContext(null);\n\n\ninterface UserContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function UserContextProvider(props: UserContextProviderProps) {\n    const urlParams = useParams<UserViewParams>();\n    const notify = useNotification();\n    const session = useSession();\n\n    const [user, setUser] = React.useState<DetailedUser>();\n\n\n    React.useLayoutEffect(() => {\n        let params = (urlParams.userId === 'me' && session.user) ? { userId: session.user.id.toString() } : urlParams;\n        UserService.setPath(params);\n    }, [\n        urlParams,\n        session\n    ]);\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await UserService.getCurrentOne();\n            setUser(resp.data as DetailedUser);\n        } catch (err: any) {\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        load()\n    }, [\n        load\n    ]);\n\n\n    const deleteUser = React.useCallback(async () => {\n        try {\n            await UserService.remove();\n\n            let action = (): React.ReactNode => null\n\n            if (session && session.user?.id === user?.id) {\n                session.logout();\n            } else {\n                action = () => <Redirect to={paths.USERS} />\n            }\n\n            notify('Użytkownik został usunięty', 'success', action);\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        session,\n        user?.id,\n    ]);\n\n\n    const updateUser = React.useCallback(async (data: UpdateUserParams) => {\n        try {\n            if (await UserService.update(data)) {\n                setUser(old => {\n                    return { ...old, ...data as DetailedUser };\n                });\n\n                notify('Użytkownik został zaktualizowany', 'success');\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    if (!user) return <Loading />;\n\n    return (\n        <userContext.Provider value={{\n            user,\n            deleteUser,\n            updateUser,\n        }}>\n            {props.children}\n        </userContext.Provider>\n    );\n}","import React from \"react\";\nimport { userContext } from \"./UserContextProvider\";\nimport UserContextValue from \"./UserContextValue\";\n\n\n\nexport default function useUser() {\n    return React.useContext(userContext) as UserContextValue;\n}\n","\ninterface AppPathsInterface {\n    readonly [index: string]: string\n    PUBLIC: string,\n    LOGIN: string,\n    REGISTER: string,\n    ACTIVATE: string,\n    REMIND_PASSWORD: string,\n\n    HOME: string,\n    SETTINGS: string,\n    MY_PROFILE: string,\n    INFRASTRUCTURE: string,\n    ADDRESS: string,\n    BUILDING: string,\n    ROOM: string,\n    USERS: string,\n    ACCESS: string,\n    LOGS:string,\n};\n\n\ninterface AppDynamicPaths {\n    readonly [indes: string]: (...params: any) => string,\n\n    toRoom: (addressId: number, buildingId: number, roomId: number) => string,\n    toBuilding: (addressId: number, buildingId: number) => string,\n    toAddress: (addressId: number) => string,\n    toUser: (userId: number) => string\n}\n\n\nconst paths: { [index: string]: string } = {\n    PUBLIC: '/public',\n    HOME: '/app',\n}\n\n\npaths.LOGIN = paths.PUBLIC + '/login';\npaths.REGISTER = paths.PUBLIC + '/register';\npaths.ACTIVATE = paths.PUBLIC + '/activate';\npaths.REMIND_PASSWORD = paths.PUBLIC + '/passwd';\n\npaths.ACCESS = paths.HOME + '/accesses'\npaths.SETTINGS = paths.HOME + '/settings';\n\npaths.USERS = paths.HOME + '/users';\npaths.USER = paths.USERS + '/:userId';\npaths.MY_PROFILE = paths.USERS + '/me';\npaths.INFRASTRUCTURE = paths.HOME + '/infrastructure';\npaths.ADDRESS = paths.HOME + '/addresses/:addressId';\npaths.BUILDING = paths.ADDRESS + '/buildings/:buildingId';\npaths.ROOM = paths.BUILDING + '/rooms/:roomId';\npaths.LOGS = paths.HOME + '/logsexplorer';\n\nexport const dynamicPaths: AppDynamicPaths = {\n    toAddress: (addressId: number) => `/app/addresses/${addressId}`,\n    toBuilding: (addressId: number, buildingId: number) => dynamicPaths.toAddress(addressId) + `/buildings/${buildingId}`,\n    toRoom: (addressId: number, buildingId: number, roomId: number) => dynamicPaths.toBuilding(addressId, buildingId) + `/rooms/${roomId}`,\n    toUser: (userId: number) => paths.USERS + `/${userId}`\n}\n\nexport default paths as AppPathsInterface;","import { BuildingOrRoomChartsData, BuildingsOrRoomsChartsData, LogsChartsData, UserChartsData } from \"../models/Stats\";\nimport { AppURLParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface ChartsQueryData {\n    from: string,\n    to: string\n}\n\n\n\nexport type ChartsData = (\n    BuildingOrRoomChartsData |\n    BuildingsOrRoomsChartsData |\n    LogsChartsData |\n    UserChartsData\n);\n\n\nclass ChartService extends Service {\n\n    protected preparePath(urlParams: AppURLParams): string {\n        let endp = '';\n        let url = window.location.toString();\n\n        const map = {\n            '/settings': '/requests',\n            '/users': '/users'\n        }\n\n        if (Object.keys(urlParams).length === 0) {\n            for (const [path, newPath] of Object.entries(map)) {\n                if (url.includes(path)) {\n                    endp = newPath;\n                }\n            }\n        } else if ('addressId' in urlParams) {\n            endp += `/addresses/${urlParams.addressId}/buildings`;\n\n            if ('buildingId' in urlParams) {\n                endp += `/${urlParams.buildingId}`;\n\n                if ('roomId' in urlParams) endp += `/rooms/${urlParams.roomId}`;\n            }\n        } else if ('userId' in urlParams) {\n            endp += `/users/${urlParams.userId}`\n        }\n        return endp;\n    }\n\n    public fetchData(urlParams: AppURLParams, queryParams: ChartsQueryData) {\n        return this.get(this.preparePath(urlParams) + '/stats', queryParams);\n    }\n\n\n\n}\n\nexport default new ChartService();","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../../auth/useSession\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport ChartService, { ChartsData, ChartsQueryData } from \"../../../../../../services/ChartService\";\nimport { AppURLParams } from \"../../../../../../services/interfaces\";\nimport Loading from \"../../../../../../shared/components/Loading\";\nimport useTrigger from \"../../../hooks/useTrigger\";\n\n\nexport const chartsContext: any = React.createContext(null);\n\n\n\ninterface ChartsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\n\nexport default function ChartsContextProvider(props: ChartsContextProviderProps) {\n    const notify = useNotification();\n    const urlParams = useParams<AppURLParams>();\n    const refresh = useTrigger(60_000);\n\n    const { user } = useSession();\n    const { queryParams } = useQueryParams<ChartsQueryData>();\n\n    const [chartsData, setData] = React.useState<ChartsData | {}>({});\n\n\n    const load = React.useCallback(async () => {\n        let params = urlParams;\n        if ('userId' in urlParams && urlParams.userId === 'me') {\n            params = { userId: `${user?.id}` }\n        }\n\n        try {\n            const resp = await ChartService.fetchData(params, queryParams);\n            setData(resp.data as ChartsData);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setData({});\n        }\n    }, [\n        notify,\n        queryParams,\n        urlParams,\n        user?.id,\n    ]);\n\n    React.useEffect(() => {\n        load();\n    }, [\n        load,\n        refresh\n    ]);\n\n    if (Object.keys(chartsData).length === 0) return <Loading />;\n\n    return (\n        <chartsContext.Provider value={{\n            chartsData\n        }}>\n            {props.children}\n        </chartsContext.Provider>\n    );\n}","import React from \"react\";\nimport { chartsContext } from \"./ChartsContextProvider\";\nimport ChartsContextValue from \"./ChartsContextValue\";\n\n\nexport default function useCharts<T>() {\n    return React.useContext(chartsContext) as ChartsContextValue<T>;\n}","\nexport default interface QueryParamsContextValue<T> {\n    setQueryParams: React.Dispatch<React.SetStateAction<T>>\n    queryParams: T,\n}\n\n\nexport const queryParamsContextDefaults = {\n    queryParams: { q: 1 },\n    setQueryParams: (param: { q: number }) => { }\n}","import React from \"react\";\nimport StorageService from \"../../services/StorageService\";\nimport QueryParamsContextValue, { queryParamsContextDefaults } from \"./QueryParamsContextValue\";\n\n\nexport const queryParamsContext = React.createContext<QueryParamsContextValue<any>>(queryParamsContextDefaults);\n\n\nfunction initQueryParams<T>(keyName: string, defaultValue: T): T {\n    const confString = StorageService.read(keyName);\n    if (confString) {\n        return confString;\n    }\n    return defaultValue;\n};\n\n\ninterface QueryParamsContextProviderProps<T> {\n    default: T,\n    name: string,\n    children: React.ReactNode[] | React.ReactNode\n}\n\n\nexport default function QueryParamsContextProvider<T>(props: QueryParamsContextProviderProps<T>) {\n\n    const [queryParams, setQueryParams] = React.useState<T>(\n       ()=> initQueryParams<T>(props.name, props.default)\n    );\n\n    React.useEffect(() => {\n        StorageService.save(props.name, queryParams);\n    }, [queryParams, props.name]);\n\n    if(!queryParams) return null;\n\n    return (\n        <queryParamsContext.Provider value={{ queryParams, setQueryParams }}>\n            {props.children}\n        </queryParamsContext.Provider>\n    );\n}","import React from \"react\";\nimport useSession from \"../../auth/useSession\";\nimport AddressMap from \"../../models/AddressMap\";\nimport useTrigger from \"../../components/pages/protected/hooks/useTrigger\";\nimport AddressService from \"../../services/AddressService\";\nimport useNotification from \"../NotificationContext/useNotification\";\nimport ResourceMapContextValue from \"./ResourceMapContextValue\";\n\n\n\n\nexport const resourceMapContext: any = React.createContext(null);\n\n\ninterface ResourceMapContextProviderProps {\n    children?: React.ReactNode[] | React.ReactNode\n}\n\n\nexport default function ResourceMapContextProvider(props: ResourceMapContextProviderProps) {\n    const [resourceMap, setResources] = React.useState<AddressMap[]>([]);\n    const [loaded, setLoaded] = React.useState<boolean>(false);\n    const refresh = useTrigger(300_000);\n\n    const { user } = useSession();\n    const notify = useNotification();\n\n    const loadResourceMap = React.useCallback(async (): Promise<void> => {\n        try {\n            const resp = await AddressService.getResourcesMap();\n            resp?.data && setResources(resp.data as any);\n        } catch (err: any) {\n            notify(err.description, \"error\");\n        }\n    }, [notify]);\n\n    const reloadMap = (): void => {\n        loadResourceMap();\n    }\n\n    React.useEffect(() => {\n        user && loadResourceMap();\n        setLoaded(true);\n    }, [\n        user,\n        loadResourceMap,\n        refresh\n    ]);\n\n\n    const getRoomLink = React.useCallback((roomId: number): string => {\n        return '/app' + resourceMap.map(addr => addr.buildings.map(bld => bld.rooms))\n            .flat(2)\n            .find(item => item.id === roomId)\n            ?.href ?? '';\n    }, [resourceMap]);\n\n\n    const allRooms = React.useMemo(() => {\n        return resourceMap.map(addr => addr.buildings.map(bld => bld.rooms)).flat(2)\n    }, [resourceMap]);\n\n\n    const allBuildings = React.useMemo(() => {\n        return resourceMap.map(addr => addr.buildings.map(({ name, href, id }) => ({ name, href, id }))).flat(2);\n    }, [resourceMap]);\n\n\n    const allAddresses = React.useMemo(() => {\n        return resourceMap.map(({ name, href, id }) => ({ name, href, id }));\n    }, [resourceMap]);\n\n\n    const getBuildingLink = React.useCallback((buildingId: number): string => {\n        return '/app' + resourceMap.map(addr => addr.buildings)\n            .flat(2)\n            .find(item => item.id === buildingId)\n            ?.href ?? '';\n    }, [resourceMap]);\n\n\n    if (loaded === false) return null;\n\n    return (\n        <resourceMapContext.Provider value={{\n            resourceMap,\n            reloadMap,\n            allRooms,\n            getRoomLink,\n            getBuildingLink,\n            allAddresses,\n            allBuildings,\n        } as ResourceMapContextValue}>\n            {props.children}\n        </resourceMapContext.Provider>\n    );\n}","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent } from '@mui/material';\nimport { useQueryParams } from '../../../../contexts/QueryParamsContext';\nimport { APIPagination } from '../../../../services/interfaces';\n\n\nexport default function ListPagination() {\n    const { queryParams, setQueryParams } = useQueryParams<APIPagination>();\n\n\n    const handlePageChange = React.useCallback((event: React.ChangeEvent<unknown>, value: number) => {\n        setQueryParams(old => ({\n            ...old,\n            currentPage: value\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n    const handleCountChange = React.useCallback((event: SelectChangeEvent<number>, child: React.ReactNode) => {\n        setQueryParams(old => ({\n            ...old,\n            itemsOnPage: Number(event.target.value)\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n    const onPageList = React.useMemo(() =>\n        [5, 10, 15, 20].map(num => <MenuItem key={num} value={num}>{num}</MenuItem>)\n        , []);\n\n    return (\n        <Stack spacing={2} sx={{\n            flexWrap: 'wrap',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center'\n        }}>\n            <Pagination\n                count={queryParams.pagesCount}\n                size='small'\n                page={queryParams.currentPage}\n                onChange={handlePageChange}\n            />\n            <FormControl fullWidth sx={{ maxWidth: '100px' }}>\n                <InputLabel id=\"items-on-page-label\">Na stronie</InputLabel>\n                <Select\n                    size='small'\n                    labelId=\"items-on-page-label\"\n                    id=\"items-on-page\"\n                    label=\"Na stronie\"\n                    value={queryParams.itemsOnPage ?? 5}\n                    onChange={handleCountChange}\n                >\n                    {onPageList}\n                    <MenuItem value={10000}>wszystko</MenuItem>\n                </Select>\n            </FormControl>\n        </Stack>\n    );\n}\n","import InputBase from \"@mui/material/InputBase\";\nimport { SxProps } from \"@mui/system\";\nimport React from \"react\";\n\n\ninterface SimpleInputProps {\n    value: string,\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    label: string,\n    name: string,\n    sx?: SxProps\n}\n\nexport default function LazyInput({\n    value,\n    onChange,\n    label,\n    name,\n    sx,\n}: SimpleInputProps) {\n    const [trigger, setTrigger] = React.useState<any>();\n    const [str, setStr] = React.useState<string>(value);\n\n\n    const handleSearchFieldChange = React.useCallback((evt) => {\n        setStr(evt.target.value);\n        clearTimeout(trigger);\n\n        let timer = setTimeout(() => {\n            onChange(evt);\n        }, 1000);\n        setTrigger(timer);\n    }, [\n        trigger,\n        onChange,\n    ]);\n\n\n    return <InputBase\n        name={name}\n        value={str}\n        onChange={handleSearchFieldChange}\n        placeholder={label}\n        sx={{\n            width: '100%',\n            maxWidth: '600px',\n            p: 1,\n            bgcolor: 'background.default',\n            ...sx\n        }}\n        inputProps={{ 'aria-label': label }}\n    />;\n}","import { ResponseData } from \"./Service\";\n\n\n\n\nexport default class APIServiceError extends Error {\n\n    private data: ResponseData;\n\n    get code() {\n        return this.data.statusCode;\n    }\n\n    get description() {\n        return this.data.error?.description;\n    }\n\n    constructor(data: ResponseData) {\n        super(data.error?.description);\n        this.data = data;\n    }\n}\n","import { FormControl, FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\nimport React from \"react\";\n\nexport interface SelectButtonInterface {\n    name: string, value: string\n}\n\nexport interface SelectButtonGroupProps {\n    onChange: (value: string) => void,\n    buttons: SelectButtonInterface[],\n    value: string\n}\n\nexport default function SelectButtonGroup({\n    onChange, buttons, value\n}: SelectButtonGroupProps) {\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).value);\n    }, [onChange]);\n\n\n    const renderedButtons = React.useMemo(() => {\n        return buttons.map(({ value, name }) =>\n            <FormControlLabel\n                key={name}\n                value={value}\n                control={<Radio />}\n                label={name}\n                aria-label={name}\n                title={name}\n            />\n        )\n    }, [buttons]);\n\n\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup\n                row\n                aria-label=\"wybór opcji\"\n                name=\"wybór zdefiniowanej opcji\"\n                value={value}\n                onChange={handleChange}\n            >\n                {renderedButtons}\n            </RadioGroup>\n        </FormControl>\n    );\n}","import { APIResponse } from \"./interfaces\";\nimport Service, { ServiceFormData } from \"./Service\";\n\n\n\nexport interface LoginFormData extends ServiceFormData {\n    email: string,\n    password: string\n}\n\n\n\nclass AuthService extends Service {\n\n    async login(data: LoginFormData): Promise<APIResponse> {\n        const response = await this.post(\n            '/users/auth',\n            {\n                'email': data.email,\n                'password': data.password\n            }\n        );\n\n        // set the token to local storage\n        if (response.data) {\n            localStorage.setItem(this._TOKEN_NAME, response.data.toString());\n        }\n\n        return response;\n    }\n\n    logout(): void {\n        localStorage.removeItem(this._TOKEN_NAME);\n    }\n\n    hasToken(): boolean {\n        return Boolean(localStorage.getItem(this._TOKEN_NAME));\n    }\n\n    async hasSession(): Promise<boolean> {\n        try {\n            if (this.hasToken()) {\n                await this.get('/users/me'); // change to ping\n                return true\n            }\n        } catch (err: any) {\n            // localStorage.removeItem(this._TOKEN_NAME);\n            \n        }\n        return false\n    }\n}\n\nexport default new AuthService();","import React from 'react';\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport { SxProps } from \"@mui/system\";\n\n\ninterface ContextLoaderProps {\n    open: boolean,\n    text?: string,\n    sx?: SxProps\n}\n\nexport default function LoadingView(props: ContextLoaderProps) {\n    return (\n        <Backdrop\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                color: 'primary.main',\n                zIndex: (theme) => theme.zIndex.drawer + 1,\n                backgroundColor:'background.default',\n                ...props.sx\n            }}\n            open={props.open}\n        >\n            <Typography variant=\"h5\" pb={2}>\n                {props.text}\n            </Typography>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    );\n}","import React, { createContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport useNotification from \"../contexts/NotificationContext/useNotification\";\n\nimport { SessionUser } from \"../models/User\";\n\nimport AuthService, { LoginFormData } from \"../services/AuthService\";\nimport ImageService from \"../services/ImageService\";\nimport LogService from \"../services/LogService\";\nimport MetadataService from \"../services/MetadataService\";\nimport ReservationService from \"../services/ReservationService\";\nimport StorageService from \"../services/StorageService\";\nimport UserService from \"../services/UserService\";\nimport LoadingView from \"../shared/components/LoadingView\";\nimport paths from \"../shared/path\";\nimport SessionValue from \"./SessionValue\";\n\n\ninterface SessionProviderProps {\n    children?: React.ReactNode\n}\n\n\nexport const sessionContext: any = createContext(null);\n\n\nexport default function SessionProvider({ children }: SessionProviderProps) {\n    const notify = useNotification();\n    const [loading, setLoading] = React.useState(true);\n    const [user, setUser] = useState<SessionUser | null>(null);\n\n\n    const setUpUser = React.useCallback((user: SessionUser) => {\n        setUser(user);\n\n        // config services which require identity data\n        StorageService.setIdentity(user.id);\n        MetadataService.userId = user.id;\n        MetadataService.metadata = user.metadata;\n        ReservationService.userId = user.id;\n        LogService.userId = user.id;\n        ImageService.userId = user.id;\n        UserService.userId = user.id;\n    }, []);\n\n\n    const checkIfUserHasSession = React.useCallback(async () => {\n        setLoading(true);\n        if (AuthService.hasToken()) {\n            try {\n                if (await AuthService.hasSession()) {\n                    const sessionUser = await UserService.getMe();\n                    setUpUser(sessionUser);\n                    notify(\"Witaj ponownie!\", 'info');\n                } else {\n                    notify('Twoja sesja wygasła', 'info', () => <Redirect to={paths.LOGIN} />);\n                }\n            } catch (err: any) {\n                notify(err.description, 'error', () => <Redirect to={paths.WELCOME} />);\n            }\n        }\n        setLoading(false)\n    }, [\n        notify,\n        setUpUser\n    ]);\n\n\n    React.useEffect(() => {\n        checkIfUserHasSession();\n        return () => { }\n    }, [checkIfUserHasSession]);\n\n\n    const login = React.useCallback(async (data: LoginFormData): Promise<void> => {\n        try {\n            await AuthService.login(data);\n            const sessionUser = await UserService.getMe();\n            setUpUser(sessionUser);\n\n            notify(\"Pomyślnie zalogowano!\", \"success\", () => <Redirect to={paths.HOME} />);\n\n        } catch (err: any) {\n            let message = err.description;\n\n            if (err.code === 404) message = \"Użytkownik nie istnieje\";\n\n            notify(message, \"error\");\n        }\n    }, [\n        notify,\n        setUpUser\n    ]);\n\n\n    const logout = React.useCallback(() => {\n        notify(\"Pomyślnie wylogowano!\", \"success\", () => <Redirect to={paths.PUBLIC} />);\n        setUser(null);\n        AuthService.logout();\n    }, [notify]);\n\n\n    return (\n        <>\n            <LoadingView\n                open={loading}\n                text=\"Ładowanie Sesji...\"\n            />\n            <sessionContext.Provider value={{ user, login, logout } as SessionValue}>\n                {!loading && children}\n            </sessionContext.Provider>\n        </>\n    );\n}\n","import { AlertProps } from \"@mui/material/Alert\";\n\nexport type NotificationContextValue = (message: string,\n    _severity: AlertProps[\"severity\"],\n    componentCallback?: () => null | React.ReactNode\n) => void;\n\n\nexport const NotificationContextDefault = (\n    message: string,\n    _severity: AlertProps[\"severity\"] = \"error\",\n    componentCallback: () => null | React.ReactNode = () => null\n) => { }","import { Alert, AlertProps, Snackbar, SnackbarCloseReason } from \"@mui/material\";\nimport React, { createContext } from \"react\";\nimport { NotificationContextValue, NotificationContextDefault } from \"./NotificationContextValue\";\n\n\n\ninterface NotificationContextProviderProps {\n    children?: React.ReactChild\n}\n\n\nexport const notificationContext: any = createContext<NotificationContextValue>(NotificationContextDefault);\n\n\nexport default function NotificationContextProvider({\n    children\n}: NotificationContextProviderProps) {\n    const [message, setMessage] = React.useState<string | null>();\n    const [open, setOpen] = React.useState<boolean>(false);\n    const [severity, setSeverity] = React.useState<AlertProps[\"severity\"]>(\"error\");\n    const [component, setComponent] = React.useState<React.ReactNode>();\n\n\n    const closeSnack = React.useCallback((\n        event?: Event | React.SyntheticEvent<any, Event>,\n        reason?: SnackbarCloseReason\n    ) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n        setMessage('');\n        setComponent(null);\n    }, []);\n\n\n    const setSnack = React.useCallback((\n        message: string,\n        _severity: AlertProps[\"severity\"] = \"error\",\n        componentCallback: () => null | React.ReactNode = () => null\n    ) => {\n        setSeverity(_severity);\n        setMessage(message);\n        setOpen(true);\n        setComponent(componentCallback());\n    }, []);\n\n\n    return (\n        <notificationContext.Provider value={setSnack}>\n            {children}\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={open} autoHideDuration={6000} onClose={closeSnack}>\n                <Alert onClose={closeSnack} severity={severity} sx={{ width: '100%' }}>\n                    {message}\n                </Alert>\n            </Snackbar>\n\n            {component}\n        </notificationContext.Provider>\n    );\n}","import React from 'react';\nimport Typography from \"@mui/material/Typography\";\n\n\ninterface TabHeadLineProps {\n    title: string | React.ReactNode,\n    subtitle?: string | React.ReactNode,\n}\n\n\nexport default function TabHeadLine(props: TabHeadLineProps) {\n    return (\n        <span>\n            <Typography variant='h4' component='h2' color='primary.dark'>\n                {props.title}\n            </Typography>\n            {\n                props.subtitle &&\n                <Typography variant=\"body1\" color='text.secondary' mt='5px'>\n                    {props.subtitle}\n                </Typography>\n            }\n        </span>\n    )\n}","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport { AxisOptions } from \"react-charts\";\nimport { Chart as ReactChart } from 'react-charts'\nimport BarChartIcon from '@mui/icons-material/BarChart';\n\n\n\nexport const weekDays = [\n    'Niedziela',\n    'Poniedziałek',\n    'Wtorek',\n    'Środa',\n    'Czwartek',\n    'Piątek',\n    'Sobota',\n];\n\n\ninterface ChartSeries {\n    x: any\n    y: number,\n}\n\n\ninterface ChartProps<T> {\n    data: T[],\n    title: string,\n    fullWidth?: boolean,\n    resolveDay?: boolean\n    xKey: keyof T,\n    y: { label: string, key: keyof T }[]\n}\n\n\nexport default function Chart<DataType>(props: ChartProps<DataType>) {\n\n    const primaryAxis = React.useMemo((): AxisOptions<ChartSeries> => ({\n        getValue: item => props.resolveDay ? weekDays[Number(item.x)] : item.x,\n        min: 0\n    }), [props.resolveDay]);\n\n\n    const secondaryAxes = React.useMemo((): AxisOptions<ChartSeries>[] => [\n        {\n            getValue: item => item.y,\n            position: 'left',\n            elementType: 'bar',\n            minDomainLength: 15,\n            hardMin: 0,\n            scaleType: 'linear',\n            showDatumElements: true\n        }\n    ], []);\n\n\n    const data = React.useMemo(() => {\n        const obj: { label: string, data: ChartSeries[] }[] = props.y.map(({ label }) => ({ label: label, data: [] }))\n\n        props.data.forEach((item) => {\n            props.y.forEach(({ key }, index) => {\n                obj[index].data.push({\n                    x: item[props.xKey],\n                    y: Number(item[key]),\n                });\n            })\n        })\n        return obj;\n    }, [\n        props.y,\n        props.xKey,\n        props.data,\n    ]);\n\n\n    return (\n        <Grid item\n            xs={12}\n            lg={props.fullWidth ? 12 : 6}\n        >\n            <Stack direction='row' spacing={1} alignItems='center'>\n                <Typography variant=\"body2\" component='h4' color='text.secondary'>\n                    {props.title}\n                </Typography>\n                <BarChartIcon color='primary' />\n\n            </Stack>\n            {props.data.length === 0 ?\n                <Typography component='p' color='text.secondary'>\n                    Brak danych do nakreślenia wykresu\n                </Typography>\n                : <Box\n                    sx={{\n                        maxHeight: '400px',\n                        height: '40vh',\n                        minHeight: '300px',\n                        width: '100%',\n                    }}>\n\n                    <ReactChart\n                        options={{\n                            data,\n                            primaryAxis,\n                            secondaryAxes,\n                        }}\n                    />\n                </Box>}\n        </Grid>\n    )\n}","import React from 'react';\nimport { Page, Font, View, Document, StyleSheet, Text } from '@react-pdf/renderer';\n\n\n// Register Font\nFont.register({\n    family: \"Roboto\",\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-light-webfont.ttf\"\n});\n\n\nconst styles = StyleSheet.create({\n    page: {\n        fontSize: 11,\n        fontFamily: \"Roboto\",\n        flexDirection: 'column',\n        backgroundColor: '#ffffff'\n    },\n    section: {\n        marginBottom: '15px',\n        justifyContent: 'flex-start',\n        padding: '15px',\n    },\n    head: {\n        fontSize: '16px'\n    }\n});\n\n\ninterface PDFPageProps {\n    sections: React.ReactNode[],\n    subject: string\n};\n\n\nexport default function PDFPage(props: PDFPageProps) {\n    return (\n        <Document>\n            <Page size=\"A4\" style={styles.page} wrap>\n                <View style={styles.section}>\n                    <Text style={styles.head}>\n                        Rav System, dnia {(new Date()).toLocaleString('pl')}\n                    </Text>\n                    <Text style={styles.head}>\n                        {props.subject}\n                    </Text>\n                </View>\n                {\n                    props.sections.map((node, id) =>\n                        <View\n                            key={id}\n                            style={styles.section}\n                        >\n                            {node}\n                        </View>\n                    )\n                }\n            </Page>\n        </Document>\n    )\n}","import React from 'react';\nimport { Text, View, StyleSheet } from \"@react-pdf/renderer\";\n\n\nconst styles = StyleSheet.create({\n    title: {\n        padding: '5px',\n        marginBottom: '5px',\n        fontSize: '18px'\n    },\n    table: {\n\n    },\n    row: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        borderBottom: '1px solid black',\n    },\n    cell: {\n        padding: '5px',\n        width: '80px',\n        alignItems: 'center',\n    },\n    text: {\n        margin: '0px',\n        padding: '0px',\n        wordBreak: 'keep-all',\n        textAlign: 'center',\n    }\n});\n\n\ninterface RowProps {\n    cols: Array<(number | string)>\n}\n\nfunction Row({\n    cols\n}: RowProps) {\n    return (\n        <View style={styles.row}>\n            {\n                cols.map((col, id) => <Cell key={id} val={col} />)\n            }\n        </View>\n    )\n}\n\n\ninterface CellProps {\n    val: string | number\n}\n\nfunction Cell(props: CellProps) {\n    return (\n        <View style={styles.cell}>\n            <Text style={styles.text}>{props.val}</Text>\n        </View>\n    )\n}\n\n\ntype TRow = (number | string)[];\n\nexport interface TableProps {\n    title: string,\n    rows: TRow[]\n};\n\nfunction emptyMonthList(rows: TRow[]): boolean {\n    // if every item in list except first element is 0\n    return rows.every(row => row.slice(1).every(val => val === 0));\n};\n\nexport default function Table({\n    rows,\n    title\n}: TableProps) {\n    return (\n        <View>\n            <Text style={styles.title}>{title}</Text>\n            {\n                emptyMonthList(rows.slice(1)) ?\n                    <Text style={styles.text}>Brak danych w wybranym przedziale czasu</Text>\n                    : rows.map((row, id) => <Row key={id} cols={row} />)\n            }\n        </View>\n    )\n}\n","import { useContext } from \"react\";\nimport { notificationContext } from \"./NotificationContextProvider\";\nimport { NotificationContextValue } from \"./NotificationContextValue\";\n\n\n\nexport default function useNotification() {\n    return useContext(notificationContext) as NotificationContextValue;\n}","import { AppURLParams, PaginationQueryParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface LogsQueryParams extends PaginationQueryParams {\n    method?: \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\",\n    userId?: string | number,\n    endpoint: string\n}\n\n\nclass LogService extends Service {\n\n    fetch(urlParams: AppURLParams, queryParams: LogsQueryParams) {\n        return this.get(\n            this.preparePath(urlParams) + '/requests',\n            queryParams\n        );\n    }\n\n    async getStats() {\n        return await this.get(`/requests/stats`);\n    }\n}\n\n\nexport default new LogService();","import React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\n\nexport default function Loading() {\n  return (\n    <Box sx={{\n      display: 'flex',\n      alignContent: 'center',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '200px',\n      height: '100%',\n    }}>\n      <CircularProgress />\n    </Box>\n  );\n}","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport { SxProps } from '@mui/system';\nimport { Paper } from '@mui/material';\n\n\ninterface GenericModalProps {\n  children: React.ReactNode | React.ReactNode[],\n  open: boolean,\n  sx?: SxProps,\n  onClose: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction GenericModal({\n  children, open, sx, onClose\n}: GenericModalProps) {\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        overflow: 'auto'\n      }}\n    >\n      <Fade in={open}>\n        <Paper sx={{\n          bgcolor: 'background.paper',\n          position: 'absolute',\n          width: '95%',\n          mt: '5vw',\n          maxWidth: '500px',\n          boxShadow: 24,\n          p: 3,\n          ...sx\n        }}>\n          {children}\n        </Paper>\n      </Fade>\n    </Modal >\n  );\n}\n\nexport default React.memo(GenericModal);","export {default as useResourceMap } from './useResourceMap';\nexport {default as ResourceMapContextProvider} from './ResourceMapContextProvider'","import { useContext } from \"react\";\nimport { sessionContext } from \"./sessionProvider\";\nimport SessionValue from \"./SessionValue\";\n\n\n\nexport default function useSession() {\n  return useContext(sessionContext) as SessionValue;\n}","\n\n\nexport function displayDate(dateString: string): string {\n    const date = new Date(dateString);\n    const format = new Intl.DateTimeFormat('pl-PL', {\n        dateStyle: \"medium\",\n        timeStyle: \"medium\"\n    })\n\n    return format.format(date);\n}\n\n\nexport const timeFormat = new Intl.DateTimeFormat('pl-PL', {\n    timeStyle: \"medium\"\n});\n\n\nexport function isDate(str: string | undefined): boolean {\n    if (!str) return false;\n\n    let date = new Date(str);\n    return Boolean(date.getDate())\n}\n\nexport function urlToId(): string {\n    let url = window.location.pathname.toLocaleLowerCase()\n    return url.replaceAll(/\\d/gi, '*')\n}\n\n\nexport function fromLocaleDateTimeString(dateTime: string) {\n    const [d, m, y, h, i, s] = dateTime.split(/\\.|:|,\\s/).map(item => Number(item));\n    \n    return new Date(y, m - 1, d, h, i, s);\n}","\n\nexport interface ButtonStatus {\n    success: boolean | null,\n    message: string,\n}\n\ninterface Action {\n    statusCode: number | string,\n    payload?: any\n}\n\nexport const initialResult = {\n    success: null,\n    message: ''\n}\n\nexport function statusReducer(state: ButtonStatus, action: Action): ButtonStatus {\n    switch (action.statusCode) {\n        case 200:\n        case 201:\n            return {\n                success: true,\n                message: \"Kod został wysłany na podany email\"\n            };\n        case 403:\n        case 401:\n        case 400:\n            return {\n                success: false,\n                message: action.payload\n            };\n        case 404:\n            return {\n                success: false,\n                message: \"Taki użytkownik nie istnieje.\"\n            };\n        case 422:\n            return {\n                success: false,\n                message: \"Adres email jest niepoprawny\"\n            };\n        case \"NO_ADDRESS\":\n            return {\n                success: false,\n                message: \"Musisz podać adres email\"\n            };\n        default:\n            return {\n                success: false,\n                message: action.payload\n            };\n            // throw new Error();\n    }\n}","import { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport SyncIcon from '@mui/icons-material/Sync';\nimport React from \"react\";\nimport UserService from \"../../../services/UserService\";\nimport { statusReducer } from \"./statusReducer\";\n\n\ninterface UniqueCodeButtonProps {\n    email: string,\n    text: string\n}\n\n\nfunction resolveColor(value: null | boolean): string {\n    if (value === null) return \"inherit\";\n    if (value === true) return \"green\";\n    return \"error\";\n}\n\n\nexport default function UniqueCodeButton(props: UniqueCodeButtonProps) {\n    const [result, dispatchResult] = React.useReducer(statusReducer, {\n        success: null,\n        message: props.text\n    });\n\n    const handleSubmit = async () => {\n        if (!props.email) {\n            dispatchResult({ statusCode: \"NO_ADDRESS\" });\n        }\n        try {\n            const resp = await UserService.generateKey(props.email);\n            dispatchResult(resp);\n\n        } catch (err: any) {\n            dispatchResult({\n                statusCode: err.code,\n                payload: err.description\n            });\n        }\n    };\n\n    return (\n        <Box\n            component=\"div\"\n            display=\"flex\"\n        >\n            <Button sx={{\n                bgcolor: \"primary.50\",\n                \"&:hover\": {\n                    bgcolor: \"primary.100\",\n                }\n            }}\n                onClick={handleSubmit} >\n                <SyncIcon fontSize=\"large\" />\n            </Button>\n\n            <Box\n                sx={{\n                    display: \"flex\",\n                    alignItems: 'center',\n                    ml: 1\n                }}\n            >\n                <Typography\n                    variant=\"body2\"\n                    component=\"p\"\n                    color={resolveColor(result.success)}\n                >\n                    {result.message}\n                </Typography>\n            </Box>\n\n        </Box>\n    );\n}","import { Typography } from \"@mui/material\";\nimport React from 'react';\n\n\ninterface StepProps {\n    title: string,\n    text?:string,\n    children: React.ReactNode | React.ReactNodeArray\n}\n\nexport default function FormStep(props: StepProps) {\n    return (\n        <>\n            <Typography variant=\"h5\" sx={{ mt: 3 }}>\n                {props.title}\n            </Typography>\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                {props.text}\n            </Typography>\n            {props.children}\n        </>\n    );\n}","import { Button, Grid, Link, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport UniqueCodeButton from \"../../../../shared/components/UniqueCodeButton\";\nimport React from \"react\";\nimport FormStep from \"./FormStep\";\nimport UserService, { ChangePasswordData } from \"../../../../services/UserService\";\nimport { Redirect } from 'react-router-dom';\nimport paths from \"../../../../shared/path\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\n\n\ninterface FormProps {\n    onSuccess?: () => void\n}\n\nexport default function Form(props: FormProps) {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<ChangePasswordData>({\n        email: localStorage.getItem('email')?.toString() ?? '',\n        newPassword: '',\n        code: ''\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        try {\n            await UserService.changePassword(data);\n\n            notify(\"Hasło zostało zmienione\", 'success',\n                () => {\n                    if (props.onSuccess) props.onSuccess();\n                    return <Redirect to={paths.LOGIN} />\n                }\n            );\n        } catch (err: any) {\n            let message = err.description;\n            if (err.code === 404) message = \"Taki użytkownik nie istnieje\";\n\n            notify(message, 'error');\n        }\n    }, [\n        data,\n        notify,\n        props\n    ]);\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <FormStep\n                title=\"1. Wygeneruj Kod\"\n                text=\"Podaj swój aders email i naciśnij przycisk by otrzymać email i kodem.\"\n            >\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Adres email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    value={data.email}\n                    onChange={onChange}\n                />\n                <UniqueCodeButton\n                    text=\"Kliknij przycisk by otrzymać kod.\"\n                    email={data.email}\n                />\n            </FormStep>\n            <FormStep\n                title=\"2. Podaj nowe hasło i kod\"\n                text=\"Podaj nowe hasło i kod który otrzymałeś (jeśli nie, powtórz krok nr 1)\"\n            >\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"newPassword\"\n                    label=\"Hasło\"\n                    type=\"password\"\n                    id=\"password\"\n                    value={data.newPassword}\n                    onChange={onChange}\n                    autoComplete=\"current-password\"\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"code\"\n                    label=\"Kod\"\n                    type=\"text\"\n                    id=\"code\"\n                    value={data.code}\n                    onChange={onChange}\n                    autoComplete=\"email-code\"\n                />\n            </FormStep>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                3. Zmień Hasło\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <Link href={paths.LOGIN}>\n                        Hasło zmienione? Zaloguj się!\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import Image from \"../models/Image\";\nimport APIServiceError from \"./APIServiceError\";\nimport { BuildingViewParams } from \"./BuildingService\";\nimport { APIResponse } from \"./interfaces\";\nimport { RoomViewParams } from \"./RoomService\";\nimport Service, { ResponseData } from \"./Service\";\nimport { UserViewParams } from \"./UserService\";\n\n\n\nclass ImageService extends Service {\n\n    private async sendImage(endpoint: string, formBody: FormData) {\n        const resp = await fetch(\n            this._BASE_URL + endpoint,\n            {\n                method: \"POST\",\n                cache: 'no-cache',\n                mode: 'cors',\n                body: formBody,\n                headers: {\n                    'Authorization': this.authToken,\n                }\n            }\n        );\n\n        const data = await resp.json() as ResponseData;\n        console.debug(data);\n\n        if (!resp.ok) {\n            console.error(`${resp.status}\\t${data?.error?.type}\\t${data?.error?.description}`);\n            throw new APIServiceError(data);\n        }\n\n        return data as APIResponse;\n    }\n\n    public getLink(image?: Image): string {\n        if (image?.url.includes('http')) return image.url;\n\n        return this._BASE_URL.slice(0, this._BASE_URL.length - 3) + image?.url;\n    }\n\n    public upload(\n        urlParams: (UserViewParams | BuildingViewParams | RoomViewParams),\n        image: Blob\n    ) {\n        const formData = new FormData();\n        formData.append(\n            'file',\n            image\n        );\n        return this.sendImage(this.preparePath(urlParams) + '/image', formData);\n    }\n\n    public remove(urlParams: (UserViewParams | BuildingViewParams | RoomViewParams)) {\n        return this.delete(this.preparePath(urlParams) + '/image');\n    }\n}\n\n\nexport default new ImageService();","import Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SaveIcon from '@mui/icons-material/Save';\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\n\n\ninterface FormGridContainerProps {\n    title: string,\n    subtitle?: string,\n    onSubmit: () => void,\n    onCancel: () => void,\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function FormGridContainer({\n    title,\n    subtitle,\n    onSubmit,\n    onCancel,\n    children,\n}: FormGridContainerProps) {\n\n\n    const handleSubmit = React.useCallback((event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        onSubmit();\n    }, [\n        onSubmit\n    ]);\n\n\n    return (\n        <Stack rowGap={3}>\n            <span>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    {title}\n                </Typography>\n\n                {subtitle && <Typography variant=\"body2\" color='text.secondary' mt='5px'>\n                    {subtitle}\n                </Typography>}\n            </span>\n\n            <Grid container spacing={2} component=\"form\" onSubmit={handleSubmit} >\n                {children}\n                <Grid item xs={12}>\n                    <Stack direction=\"row\" justifyContent=\"space-around\" mt={1.5}>\n                        <Button\n                            aria-label=\"Zamknij\"\n                            title='Zamknij'\n                            startIcon={<CancelIcon />}\n                            onClick={onCancel}\n                        >\n                            Zamknij\n                        </Button>\n                        <Button\n                            aria-label=\"Zatwierdź\"\n                            title='Zatwierdź'\n                            startIcon={<SaveIcon color='inherit' />}\n                            type=\"submit\"\n                            color=\"success\"\n                        >\n                            Zatwierdź\n                        </Button>\n                    </Stack>\n                </Grid>\n            </Grid>\n        </Stack>\n    );\n}","import React from \"react\";\nimport { queryParamsContext } from \"./QueryParamsContextProvider\";\nimport QueryParamsContextValue from \"./QueryParamsContextValue\";\n\n\nexport default function useQueryParams<T>() {\n    return React.useContext(queryParamsContext) as QueryParamsContextValue<T>;\n}","import APIServiceError from \"./APIServiceError\";\nimport { APIResponse, AppURLParams } from \"./interfaces\";\n\n\nexport interface ServiceFormData {\n    [index: string]: string | number | boolean | undefined | object\n}\n\n\n\n\ninterface FetchData {\n    endpoint: string\n    method: string,\n    body?: object\n}\n\ninterface ErrorData {\n    type: string,\n    description: string\n}\n\nexport interface ResponseData {\n    statusCode: number,\n    data?: any,\n    error?: ErrorData\n}\n\n\n\nexport interface StatusMessages {\n    [index: number]: string\n}\n\n\nexport default abstract class Service {\n\n    _BASE_URL: string = process.env.REACT_APP_API_URL as string;\n    _TOKEN_NAME: string = 'auth_token';\n    _userId: number = -1;\n\n    public set userId(value: number) {\n        this._userId = value\n    }\n\n    public get userId(): number {\n        if (this._userId === -1)\n            throw Error('user id was not set');\n\n        return this._userId;\n    }\n\n    protected get authToken() {\n        return 'Bearer ' + window.localStorage.getItem(this._TOKEN_NAME);\n    }\n\n    private async _fetch(fetchObject: FetchData): Promise<APIResponse> {\n        const response = await fetch(\n            this._BASE_URL + fetchObject.endpoint,\n            {\n                method: fetchObject.method,\n                cache: 'no-cache',\n                mode: 'cors',\n                // credentials: 'omit',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.authToken,\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: JSON.stringify(fetchObject.body)\n            }\n        );\n        const data = await response.json() as ResponseData;\n\n        if (process.env.NODE_ENV !== 'production') console.debug(data);\n\n        // if user is not authenticated - \n        // redirect to let sessionContext to resolve redirections\n        if (response.status === 401 && !fetchObject.endpoint.match('/auth|me|activate')) {\n            window.location.reload();\n        }\n\n        if (!response.ok) {\n            if (process.env.NODE_ENV !== 'production') console.error(`${response.status} ${data?.error?.type} ${data?.error?.description}`);\n            throw new APIServiceError(data);\n        }\n\n        return data as APIResponse;\n    }\n\n    protected preparePath(urlParams: AppURLParams): string {\n        let endp = '';\n        let url = window.location.toString();\n        const map = {\n            '/accesses': '/accesses',\n            '/settings': '/configurations',\n            '/users': '/users'\n        }\n\n        if (Object.keys(urlParams).length === 0) {\n            for (const [path, newPath] of Object.entries(map)) {\n                if (url.includes(path)) {\n                    endp = newPath;\n                }\n            }\n        } else if ('addressId' in urlParams) {\n            endp += `/addresses/${urlParams.addressId}`;\n\n            if ('buildingId' in urlParams) {\n                endp += `/buildings/${urlParams.buildingId}`;\n\n                if ('roomId' in urlParams) endp += `/rooms/${urlParams.roomId}`;\n            }\n        } else if ('userId' in urlParams) {\n            if (urlParams.userId === 'me') {\n                endp += '/users/' + this.userId.toString();\n            } else {\n                endp += '/users/' + urlParams.userId;\n            }\n        }\n        return endp;\n    }\n\n    protected get(endpoint: string, query = {}) {\n        return this._fetch({\n            method: 'GET',\n            endpoint: endpoint + '?' + new URLSearchParams(query).toString()\n        });\n    }\n\n    protected post(endpoint: string, body: object) {\n        return this._fetch({\n            method: 'POST',\n            endpoint: endpoint,\n            body: body\n        });\n    }\n\n    protected patch(endpoint: string, body: object) {\n        if (Object.keys(body).length === 0) return;\n\n        return this._fetch({\n            method: 'PATCH',\n            endpoint: endpoint,\n            body: body\n        });\n    }\n\n    protected delete(endpoint: string) {\n        return this._fetch({\n            method: 'DELETE',\n            endpoint: endpoint\n        });\n    }\n}","import { SessionUser } from \"../models/User\";\nimport { PaginationQueryParams } from \"./interfaces\";\nimport Service, { ServiceFormData } from \"./Service\";\n\n\nexport interface RegisterUserData extends ServiceFormData {\n    email: string,\n    password: string,\n    name: string,\n    surname: string\n}\n\nexport interface ActivationData extends ServiceFormData {\n    email: string,\n    password: string,\n    code: string,\n}\n\nexport interface ChangePasswordData extends ServiceFormData {\n    code: string,\n    newPassword: string,\n    email: string\n}\n\nexport interface UpdateUserParams extends ServiceFormData {\n    name?: string,\n    surname?: string,\n    metadata?: object\n}\n\nexport interface UserViewParams {\n    userId: string;\n}\n\nexport interface UserQueryParams extends PaginationQueryParams {\n    [index: string]: any,\n    accessId?: number,\n    deleted?: boolean,\n    search?: string,\n    activated?: boolean,\n}\n\nexport enum RegisterState {\n    ACTIVATION_NEEDED,\n    NO_ACTIVATION_NEEDED\n}\n\n\nclass UserService extends Service {\n    _path = '/users';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath(urlParams: UserViewParams) {\n        this._path = this.preparePath(urlParams);\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public async getMe() {\n        const resp = await this.get('/users/me');\n        return resp.data as SessionUser;\n    }\n\n    public getUsers(data?: UserQueryParams) {\n        return this.get('/users', data);\n    }\n\n    public async register(data: RegisterUserData) {\n        const message = (await this.post('/users', data)).data as string;\n        if(message.search(/aktywacji|mailowy/) > 0){\n            return RegisterState.NO_ACTIVATION_NEEDED\n        }\n        return RegisterState.ACTIVATION_NEEDED\n    }\n\n    public activate(data: ActivationData) {\n        return this.patch('/users/activate', data);\n    }\n\n    public generateKey(email: string) {\n        return this.post('/users/key', {\n            email: email\n        });\n    }\n\n    public updateAccess(userId: number, accessId: number) {\n        return this.patch(`/users/${userId}/access`, {\n            accessId: accessId\n        })\n    }\n\n    public update(data: UpdateUserParams) {\n        return this.patch(this.path, data);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public changePassword(data: ChangePasswordData) {\n        return this.patch('/users/password', data);\n    }\n}\n\n\nexport default new UserService();","import React from \"react\";\n\n\ninterface TutorialProviderProps {\n    children: React.ReactNode\n}\n\ninterface TipItem {\n    id: number,\n    trigger: () => void,\n    priority: number\n}\n\nexport type registerTipType = (callback: () => void, priority?: number) => () => void\n\nexport const tutorialContext: any = React.createContext(null);\n\n\nexport default function TutorialContextProvider({ children }: TutorialProviderProps) {\n    const [registered, setRegistered] = React.useState<TipItem[]>([]);\n    const [startUp, setStartUp] = React.useState<boolean>(true);\n\n    React.useEffect(() => {\n        if (startUp) {\n            setTimeout(() => {\n                if (registered.length > 0) {\n                    registered.shift()?.trigger();\n                    setStartUp(false);\n                }\n            }, 1000);\n        }\n\n    }, [registered, startUp]);\n\n\n    const registerTip: registerTipType = React.useCallback((callback: () => void, priority: number = 1) => {\n        const key = Date.now();\n\n        setRegistered(old => {\n            if (!old.find(({ id }) => id === key)) {\n\n                old.push({ trigger: callback, priority: priority, id: key });\n                return Object.assign([], old.sort((a, b) => b.priority - a.priority));\n            }\n            return old;\n        });\n\n        return () => {\n            setRegistered(old => {\n                if (old.length === 0) {\n                    setStartUp(true);\n                } else {\n                    old.shift()?.trigger();\n                }\n\n                return Object.assign([], old);\n            });\n        };\n    }, [\n        setStartUp,\n        setRegistered\n    ]);\n\n    return (\n        <tutorialContext.Provider value={registerTip}>\n            {children}\n        </tutorialContext.Provider>\n    );\n}\n\n","import { Popover, Stack, Button, Typography } from \"@mui/material\";\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport React from \"react\";\nimport StorageService from \"../../../../../services/StorageService\";\nimport useTutorial from \"./TutorialContext/useTutorial\";\n\n\ninterface TipChild {\n    children: React.ReactNode | React.ReactNode[],\n    text: string,\n    priority?: number\n}\n\n\nexport default function Tip(props: TipChild) {\n    const holder = React.useRef(null);\n\n    const registerTip = useTutorial();\n    const [open, setOpen] = React.useState<boolean>(false);\n    const [disposeFunc, setDispose] = React.useState<() => void>(() => () => { });\n\n    const observerRef = React.useRef<any>(null);\n    const [isOnScreen, setIsOnScreen] = React.useState(false);\n\n\n    React.useEffect(() => {\n        observerRef.current = new IntersectionObserver(([entry]) =>\n            setIsOnScreen(entry.isIntersecting)\n        );\n    }, [observerRef]);\n\n\n    React.useEffect(() => {\n        observerRef.current.observe(holder.current);\n\n        return () => {\n            observerRef.current.disconnect();\n        };\n    }, [holder, observerRef]);\n\n\n    React.useEffect(() => {\n        const key = props.text.slice(0, 15);\n\n        if (!StorageService.read(key) && isOnScreen) {\n            const callback = registerTip(\n                () => setTimeout(() => setOpen(true), 300),\n                props.priority ?? 1\n            );\n            setDispose(() => callback);\n            StorageService.save(key, true);\n        }\n    }, [\n        props.text,\n        props.priority,\n        registerTip,\n        isOnScreen\n    ]);\n\n\n    const handleClose = React.useCallback(() => {\n        disposeFunc();\n        setOpen(false);\n    }, [disposeFunc]);\n\n    return (\n        <span ref={holder}>\n            {\n                <Popover\n                    open={open}\n                    anchorEl={holder.current}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                // sx={{\n                //     bgcolor: '#44444466',\n                //     transition: '0.5s'\n                // }}\n                // transformOrigin={{\n                //     vertical: 'bottom',\n                //     horizontal: 'left',\n                // }}\n                >\n                    <Stack direction='row'\n                        alignItems='center'\n                        justifyContent='space-between'\n                        sx={{\n                            px: 1,\n                            bgcolor: 'warning.light'\n                        }}\n                    >\n                        <ArrowUpwardIcon color='primary' />\n                        <Button onClick={handleClose} color='primary'>OK</Button>\n                    </Stack>\n                    <Typography sx={{ p: 1, maxWidth: '220px',bgcolor: 'warning.light' }}>\n                        {props.text}\n                    </Typography>\n                </Popover>\n            }\n            {props.children}\n        </span >\n    );\n}","import React from \"react\";\nimport { registerTipType, tutorialContext } from \"./TutorialContextProvider\";\n\n\nexport default function useTutorial() {\n    return React.useContext(tutorialContext) as registerTipType\n}","import Metadata, { FavouriteBuilding, FavouriteRoom } from \"../models/Metadata\";\nimport StorageService from \"./StorageService\";\nimport UserService from \"./UserService\";\n\n\n\n\nclass MetadataService {\n    private STORAGE_NAME = 'user-metadata';\n\n    private data: Metadata;\n    private _userId: number | undefined;\n\n\n    constructor() {\n        this.data = {\n            notes: '',\n            favourites: []\n        };\n    }\n\n    private async save(): Promise<void> {\n        StorageService.save(this.STORAGE_NAME, this.data);\n\n        if (!this._userId) return;\n\n        UserService.setPath({ userId: this._userId?.toString() });\n        try {\n            await UserService.update({\n                metadata: this.data\n            });\n        } catch (err: any) { console.error(err) }\n    }\n\n    public set userId(id: number) {\n        this._userId = id;\n        this.data = StorageService.read(this.STORAGE_NAME) ?? {\n            notes: '',\n            favourites: []\n        };\n    }\n\n    public set metadata(value: Metadata) {\n        this.data = {\n            ...this.data,\n            ...value\n        };\n    }\n\n    public get notes() {\n        return this.data.notes ?? '';\n    }\n\n    public get favourites() {\n        return this.data.favourites ?? [];\n    }\n\n    public set notes(value: string) {\n        this.data.notes = value;\n        this.save();\n    }\n\n    public addFavourite(item: FavouriteBuilding | FavouriteRoom): void {\n        this.data.favourites?.push(item);\n        this.data.favourites?.sort((a, b) => {\n            if (a.type >= b.type) {\n                if (a.type === b.type) {\n                    return a.name > b.name ? 1 : -1;\n                }\n                return 1;\n            }\n            return -1;\n        });\n        console.log(this.data);\n        this.save();\n    }\n\n    public isFavourite(item: FavouriteBuilding | FavouriteRoom): boolean {\n        return Boolean(this.data.favourites?.find(({ id, type }) => (type === item.type && id === item.id)));\n    }\n\n    public removeFavourite(item: FavouriteBuilding | FavouriteRoom): void {\n        this.data.favourites = this.data.favourites?.filter(({ id, type }) => id + type !== item.id + item.type)\n        this.save();\n    }\n}\n\n\nexport default new MetadataService();","\n\n\nclass StorageService {\n\n    private id: string = '';\n\n    public setIdentity(value: string | number) {\n        this.id = value.toString();\n    }\n\n    private codeName(name: string) {\n        return btoa(encodeURI(name + this.id));\n    }\n\n    public save(name: string, value: any) {\n        const str = JSON.stringify(value);\n        localStorage.setItem(this.codeName(name), str);\n    }\n\n    public delete(name: string) {\n        localStorage.removeItem(this.codeName(name));\n    }\n\n    public read(name: string) {\n        const str = localStorage.getItem(this.codeName(name));\n        if (!str) return null;\n\n        try {\n            return JSON.parse(str);\n        } catch {\n            return null;\n        }\n    }\n\n}\n\nexport default new StorageService();","import * as React from 'react';\nimport {\n    Link as RouterLink,\n    LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\n\nconst LinkBehavior = React.forwardRef<\n    any,\n    Omit<RouterLinkProps, 'to'> & { href: RouterLinkProps['to'] }\n>((props, ref) => {\n    const { href, ...other } = props;\n    // Map href (MUI) -> to (react-router)\n    return <RouterLink data-testid=\"custom-link\" ref={ref} to={href} {...other} />;\n});\n\n\nexport default LinkBehavior; ","import { indigo } from '@mui/material/colors';\nimport { darkScrollbar as scrollbar } from '@mui/material';\nimport { LinkProps } from '@mui/material/Link';\nimport { createTheme } from '@mui/material/styles';\nimport LinkBehavior from './LinkBehavior';\n\n\nconst light = {\n  track: '#f5f5f5',\n  thumb: '#adadad',\n  active: '#959595'\n};\n\n\n\nconst theme = createTheme({\n  palette: {\n    primary: indigo,\n    secondary: {\n      dark: \"#f5f5f5\",\n      main: \"#304ffe\",\n      light: \"#fff\"\n    },\n    background: {\n      default: '#f3f3f3',\n      paper: '#fff'\n    }\n  },\n  // spacing: 10,\n  shape: {\n    borderRadius: 4\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        body: scrollbar(light),\n      },\n    },\n    MuiTextField: {\n      defaultProps: {\n        size: 'medium',\n        variant: 'outlined',\n      }\n    },\n    MuiSelect: {\n      defaultProps: {\n        size: 'medium'\n      }\n    },\n    MuiButton: {\n      defaultProps: {\n        sx: {\n          borderRadius: ({ shape }) => Number(shape.borderRadius) / 2\n        }\n      },\n    },\n    MuiLink: {\n      defaultProps: {\n        component: LinkBehavior,\n      } as LinkProps,\n    },\n    MuiButtonBase: {\n      defaultProps: {\n        LinkComponent: LinkBehavior,\n      },\n    },\n    MuiSvgIcon: {\n      defaultProps: {\n        color: 'inherit',\n      }\n    },\n    MuiIconButton: {\n      defaultProps: {\n        color: 'primary'\n      }\n    }\n  },\n  // typography:{\n\n  // }\n})\n\nexport default theme;","import React from 'react';\nimport { ThemeProvider } from '@mui/material/styles';\n\n\nimport theme from './theme';\n\n\ninterface ThemeProps {\n    children: React.ReactNode\n}\n\n\nexport default function Theme(props: ThemeProps) {\n    return (\n        <ThemeProvider theme={theme}>\n            {props.children}\n        </ThemeProvider>\n    );\n}","import React from 'react';\nimport Loading from '../../../../shared/components/Loading';\n\nconst LazyAccessPage = React.lazy(() => import('./AccessPage'));\n\n\nexport default function AccessPage() {\n    return <React.Suspense fallback={<Loading />}>\n        <LazyAccessPage />\n    </React.Suspense>\n}\n","import React from \"react\";\nimport { reservationsContext } from \"./ReservationsContextProvider\";\nimport ReservationsContextValue from \"./ReservationsContextValue\";\n\nexport default function useReservations() {\n    return React.useContext(reservationsContext) as ReservationsContextValue;\n}","import MobileDateTimePicker from \"@mui/lab/MobileDateTimePicker\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\n\n\ninterface Props {\n    value: Date,\n    label: string,\n    onChange: (value: Date) => void,\n}\n\nexport default function DateTimePicker({\n    value,\n    onChange,\n    label,\n}: Props) {\n\n    const handleChange = React.useCallback((newValue: Date | null) => {\n        if (newValue) {\n            onChange(newValue);\n        }\n    }, [\n        onChange\n    ]);\n\n    return (\n        <MobileDateTimePicker\n            minDate={new Date()}\n            label={label}\n            value={value}\n            onChange={handleChange}\n            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n        />\n    )\n}\n\n","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../../components/GenericModal\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { UpdateReservationData } from \"../../../../../../services/ReservationService\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useResourceMap } from \"../../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\nimport useReservations from \"../../GenericReservationsTab/ReservationsContext/useReservations\";\nimport FormGridContainer from \"../../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../../DateTimePicker\";\nimport { fromLocaleDateTimeString } from \"../../../../../../shared/utils\";\n\n\ninterface EditModalFormProps {\n    open: boolean,\n    onClose: () => void,\n    reservation: Reservation\n}\n\nexport default function EditModalForm(props: EditModalFormProps) {\n    const { updateReservation } = useReservations()\n    const { allRooms } = useResourceMap();\n\n    const [data, setData] = React.useState<UpdateReservationData>({});\n\n\n    const closeForm = React.useCallback(() => {\n        props.onClose();\n        setData({});\n    }, [\n        props\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateReservation(props.reservation.id, data)) {\n            closeForm();\n            setData({});\n        }\n\n    }, [\n        props,\n        data,\n        closeForm,\n        updateReservation,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleDateChange = React.useCallback((name: keyof UpdateReservationData, value: Date) => {\n        value && setData(old => ({\n            ...old,\n            [name]: value.toLocaleString('pl')\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={closeForm}\n            aria-label=\"Okno do edycji rezerwacji\"\n        >\n            <FormGridContainer\n                title='Edycja rezerwacji'\n                subtitle=\"Zmień właściwości pokoju i zatwierdź zmiany.\"\n                onSubmit={handleSubmit}\n                onCancel={props.onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Tytuł\"\n                        multiline\n                        maxRows={4}\n                        name='title'\n                        value={data.title ?? props.reservation.title}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Opis\"\n                        multiline\n                        maxRows={20}\n                        name='description'\n                        value={data.description ?? props.reservation.description}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <DateTimePicker\n                        value={\n                            data.plannedStart ?\n                                fromLocaleDateTimeString(data.plannedStart) :\n                                new Date(props.reservation.plannedStart)\n                        }\n                        label=\"Początek\"\n                        onChange={(value) => handleDateChange('plannedStart', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <DateTimePicker\n                        value={\n                            data.plannedEnd ?\n                                fromLocaleDateTimeString(data.plannedEnd) :\n                                new Date(props.reservation.plannedEnd)\n                        }\n                        label=\"Koniec\"\n                        onChange={(value) => handleDateChange('plannedEnd', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                        <Select\n                            required\n                            labelId=\"wybierz-salę\"\n                            name=\"roomId\"\n                            value={data.roomId ?? props.reservation.room.id}\n                            label=\"Sala\"\n                            onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                        >\n                            {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../../components/GenericModal\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useResourceMap } from \"../../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\nimport useReservations from \"../../GenericReservationsTab/ReservationsContext/useReservations\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { IconButton } from \"@mui/material\";\nimport { CreateReservationData } from \"../../../../../../services/ReservationService\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport FormGridContainer from \"../../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../../DateTimePicker\";\n\n\ninterface CopyModalFormProps {\n    open: boolean,\n    onClose: () => void,\n    reservation: Reservation\n}\n\ninterface DateTimeSlot {\n    color: string | null,\n    from: Date,\n    to: Date,\n}\n\ninterface CopyReservationData {\n    title: string,\n    description: string,\n    roomId?: number\n}\n\n\nexport default function CopyModalForm(props: CopyModalFormProps) {\n    const { createReservation } = useReservations()\n    const { allRooms } = useResourceMap();\n    const notify = useNotification();\n\n    const [dates, setDates] = React.useState<DateTimeSlot>({\n        color: '',\n        from: new Date(props.reservation.plannedStart),\n        to: new Date(props.reservation.plannedEnd),\n    });\n\n    const [copyDates, setCopyDates] = React.useState<DateTimeSlot[]>([]);\n    const [data, setData] = React.useState<CopyReservationData>({\n        title: props.reservation.title,\n        description: props.reservation.description,\n        roomId: props.reservation.room.id ?? 0\n    });\n\n\n    const closeForm = React.useCallback(() => {\n        props.onClose();\n        // setCopyDates([]);\n    }, [props]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n\n        const createCalls = copyDates.map(async (date) => {\n            const success = await createReservation({\n                ...data,\n                plannedStart: date.from.toLocaleString('pl'),\n                plannedEnd: date.to.toLocaleString('pl')\n            } as CreateReservationData);\n            date.color = success ? 'green' : 'red';\n            return date;\n        })\n        const processed = await Promise.all(createCalls);\n        setCopyDates(processed);\n\n    }, [data, copyDates, createReservation]);\n\n\n    const handleDeleteCopyDate = React.useCallback((index: number) => {\n        setCopyDates(old => {\n            old.splice(index, 1);\n            return Object.assign([], old);\n        });\n    }, []);\n\n\n    const setDate = React.useCallback((key: keyof DateTimeSlot, dateTime: Date) => {\n        setDates(old => ({\n            ...old,\n            [key]: dateTime,\n        }));\n    }, []);\n\n\n    const handleAddDate = React.useCallback(() => {\n        if (copyDates.find(({ from, to }) => from === dates.from || to === dates.to)) {\n            notify(\"Daty powinny się różnić\", 'error');\n            return;\n        };\n\n        setCopyDates(old => {\n            old.push({\n                ...dates,\n                color: ''\n            });\n            return Object.assign([], old);\n        });\n    }, [\n        dates,\n        notify,\n        copyDates,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={closeForm}\n            aria-label=\"Okno do kopiowania rezerwacji\"\n        >\n\n            <FormGridContainer\n                title='Kopiowanie rezerwacji'\n                subtitle=\"Skopiuj rezerwację dla wybranych przez siebie nowych dat.\"\n                onSubmit={handleSubmit}\n                onCancel={props.onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Tytuł\"\n                        multiline\n                        maxRows={4}\n                        name='title'\n                        value={data.title ?? props.reservation.title}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Opis\"\n                        multiline\n                        maxRows={20}\n                        name='description'\n                        value={data.description ?? props.reservation.description}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={5}>\n                    <DateTimePicker\n                        label=\"Początek\"\n                        value={dates.from}\n                        onChange={(value) => setDate('from', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={5}>\n                    <DateTimePicker\n                        label=\"Koniec\"\n                        value={dates.to}\n                        onChange={(value) => setDate('to', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={2}>\n                    <Button\n                        size='large'\n                        sx={{\n                            height: '100%',\n                            width: '100%'\n                        }}\n                        variant='outlined'\n                        onClick={handleAddDate}\n                    >\n                        Dodaj\n                    </Button>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Stack\n                        spacing={1}\n                        sx={{\n                            border: '1px solid',\n                            borderColor: 'divider',\n                            borderRadius: 1,\n                            padding: 0.5,\n                            bgcolor: 'background.default',\n                            maxHeight: '200px',\n                            overflow: 'auto',\n                        }}>\n                        {copyDates.length === 0 && <Typography textAlign='center' component='p'>\n                            Brak dat\n                        </Typography>}\n                        {\n                            copyDates.map(({ color, from, to }, index) =>\n                                <Box\n                                    key={index}\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'space-between',\n                                        pl: '3px'\n                                    }}>\n                                    <Typography component='p' sx={{ color: color }}>\n                                        <>\n                                            {from.toLocaleString('pl')}&nbsp;-&nbsp;{to.toLocaleString('pl')}\n                                        </>\n                                    </Typography>\n                                    <IconButton\n                                        onClick={() => handleDeleteCopyDate(index)}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Box>\n                            )\n                        }\n                    </Stack>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                        <Select\n                            required\n                            labelId=\"wybierz-salę\"\n                            name=\"roomId\"\n                            value={data.roomId ?? props.reservation.room.id}\n                            label=\"Sala\"\n                            onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                        >\n                            {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </FormGridContainer>\n\n        </GenericModal >\n    );\n}","import { Box, Button, Stack, Typography } from \"@mui/material\";\nimport NfcIcon from '@mui/icons-material/Nfc';\nimport { styled } from \"@mui/system\";\nimport React from \"react\";\nimport CancelIcon from '@mui/icons-material/Cancel';\n\n\ninterface RfidFormProps {\n    headline: string,\n    bodyText: string,\n    onScan: (keyText: string) => Promise<boolean>,\n    onClose: () => void,\n}\n\nconst HiddenInput = styled('input')({\n    position: \"absolute\",\n    left: \"-1000px\",\n    color: \"transparent\"\n});\n\n\nexport default function RfidForm(props: RfidFormProps) {\n    const [text, setText] = React.useState<string>('');\n    const [color, setColor] = React.useState<string>('primary');\n    const input = React.useRef<HTMLInputElement | null>(null);\n\n    const handleSubmit = async (evt: React.FormEvent) => {\n        evt.preventDefault();\n        const success = await props.onScan(text);\n        if (success) {\n            setColor('success');\n            setTimeout(handleDecline, 2000);\n        } else {\n            setColor('error');\n        }\n        setText('');\n    }\n\n    const handleDecline = () => {\n        props.onClose();\n        setText('');\n        setColor('primary');\n    }\n\n    const focusOnInput = () => {\n        input.current && console.log(input.current.focus())\n    }\n\n    return (\n        <Stack\n            onClick={focusOnInput}\n            component=\"form\"\n            direction=\"column\"\n            spacing={4}\n            onSubmit={handleSubmit}\n        >\n            <NfcIcon\n                sx={{ fontSize: 140, alignSelf: \"center\" }}\n                color={color as any}\n            />\n            <HiddenInput\n                ref={input}\n                autoFocus\n                type=\"text\"\n                value={text}\n                onChange={(evt: any) => setText(evt.target.value)}\n            />\n            <Box component=\"span\" textAlign='center'>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    {props.headline}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" mt='5px'>\n                    {props.bodyText}\n                </Typography>\n            </Box>\n\n            <Button startIcon={<CancelIcon />}\n                onClick={handleDecline}\n                color=\"error\"\n            >\n                Zamknij\n            </Button>\n\n        </Stack>\n    );\n}","import { useReservations } from \"../../GenericReservationsTab/ReservationsContext\";\nimport React from \"react\";\nimport GenericModal from \"../../GenericModal\";\nimport RfidForm from \"../../RfidForm\";\n\n\ninterface PingKeyModalFormProps {\n    reservationId: number,\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport default function PingKeyModalForm(props: PingKeyModalFormProps) {\n    const { pingKeyForReservation } = useReservations();\n\n    const handleKeyScan = React.useCallback(\n        async (key: string) => pingKeyForReservation(props.reservationId, key)\n        , [props, pingKeyForReservation]);\n\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={props.onClose}\n            aria-label=\"Okno do edycji rezerwacji\"\n            sx={{ maxWidth: '400px' }}\n        >\n            <RfidForm\n                headline=\"Wczytaj klucz z tagiem NFC\"\n                bodyText='Przy pomocy czytnika, wczytaj wydawany klucz. Aby opuścić to okno, naciśnij \"Zamknij\"'\n                onScan={handleKeyScan}\n                onClose={props.onClose}\n            />\n        </GenericModal>\n    );\n}","import React from \"react\";\nimport { ListItemIcon, Menu, MenuItem, SxProps, Typography } from \"@mui/material\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport IconButton from '@mui/material/IconButton';\nimport { Box } from \"@mui/system\";\n\n\ninterface MoreVertMenuProps {\n    options: { action: () => void, icon?: React.ReactNode, label: string }[],\n    sx?: SxProps\n}\n\nexport default function MoreVertMenu(props: MoreVertMenuProps) {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n\n    const handleClick = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    }, []);\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <Box sx={props.sx}>\n            <IconButton\n                aria-label='more-options'\n                aria-controls=\"card-menu\"\n                aria-expanded={open ? 'true' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Menu\n                MenuListProps={{\n                    'aria-labelledby': 'more-options',\n                }}\n                anchorEl={anchorEl}\n                id=\"card-menu\"\n                open={open}\n                onClose={handleClose}\n                PaperProps={{\n                    sx: {\n                        minWidth: 200,\n                        maxWidth: '100%'\n                    }\n                }}\n            >\n                {\n                    props.options.map((opt, id) => <MenuItem\n                        key={id}\n                        onClick={() => {\n                            opt.action();\n                            handleClose();\n                        }}\n                    >\n                        <ListItemIcon>\n                            {opt.icon}\n                        </ListItemIcon>\n                        <Typography>{opt.label}</Typography>\n                    </MenuItem>)\n                }\n            </Menu>\n        </Box>\n    );\n}\n\n","import React from 'react';\nimport { Avatar, Link, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\nimport User from \"../../../../../models/User\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\n\n\n\ninterface UserItemProps {\n    user: User\n}\n\nexport default function UserItem({\n    user\n}: UserItemProps) {\n    return (\n        <ListItem button component={Link} href={dynamicPaths.toUser(user.id)}>\n            <ListItemAvatar>\n                <Avatar\n                    src={ImageService.getLink(user.image)}\n                    alt={`${user.name} ${user.surname}`}\n                />\n            </ListItemAvatar>\n            <ListItemText\n                primary={`${user.name} ${user.surname}`}\n                secondary={user.email}\n            />\n        </ListItem>\n    );\n}","import { Avatar, Link, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport Room from \"../../../../../models/Room\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\n\ninterface RoomItemProps {\n    room: Room\n}\n\nexport default function RoomItem({\n    room\n}: RoomItemProps) {\n    const { getRoomLink } = useResourceMap();\n\n    const roomLink = React.useMemo(() => getRoomLink(room.id), [\n        room.id,\n        getRoomLink\n    ]);\n\n    return (\n        <ListItem button component={Link} href={roomLink}>\n            <ListItemAvatar>\n                <Avatar\n                    src={ImageService.getLink(room.image)}\n                    alt={`zdjęcie sali ${room.name}`}\n                />\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={`Sala ${room.name}`}\n                secondary={room.roomType}\n            />\n        </ListItem>\n    );\n}","import React from \"react\";\nimport useSession from \"../../../../auth/useSession\";\n\n\nconst defaultAccess = {\n    'owner': false,\n    'accessAdmin': false,\n    'premisesAdmin': false,\n    'keysAdmin': false,\n    'reservationsAdmin': false,\n    'reservationsAbility': false,\n    'logsAdmin': false,\n    'statsViewer': false,\n    'myId': (id: number): boolean => false\n}\n\nexport default function useResolvedAccess() {\n    const { user } = useSession();\n\n    const access = React.useMemo(() => {\n        if (!user) return defaultAccess;\n\n        const { owner,\n            accessAdmin,\n            premisesAdmin,\n            keysAdmin,\n            reservationsAdmin,\n            reservationsAbility,\n            logsAdmin,\n            statsViewer\n        } = user.access;\n\n        return {\n            'owner': owner,\n            'accessAdmin': owner || accessAdmin,\n            'premisesAdmin': owner || premisesAdmin,\n            'keysAdmin': owner || keysAdmin,\n            'reservationsAdmin': owner || reservationsAdmin,\n            'reservationsAbility': owner || reservationsAbility,\n            'logsAdmin': owner || logsAdmin,\n            'statsViewer': owner || statsViewer,\n            'myId': (id: number) => owner || (user.id === id)\n        } as typeof defaultAccess;\n    }, [user]);\n\n    return access;\n}\n","import Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\n\n\n\ninterface Props {\n    title: string | React.ReactNode\n    children: {\n        label: string,\n        value: string | React.ReactNode\n    }[]\n}\n\n\nexport default function DatesView(props: Props) {\n    return (\n        <div>\n            <Typography component=\"h3\" variant=\"subtitle1\">\n                {props.title}\n            </Typography>\n            <Typography\n                variant=\"body1\"\n                color='text.secondary'\n                textAlign='left'\n                component='div'\n            >\n                <Stack\n                    direction='row'\n                    alignItems='center'\n                    flexWrap='wrap'\n                    rowGap={1}\n                    columnGap={1}\n                >\n                    {\n                        props.children.map(({ label, value }) =>\n                            <div key={label} >\n                                {label}:&nbsp;<Chip label={value} />\n                            </div>\n                        )\n                    }\n                </Stack>\n            </Typography>\n        </div>\n    );\n}","import Reservation from '../../../../../models/Reservation';\nimport GenericModal from '../../components/GenericModal';\nimport Stack from '@mui/material/Stack';\nimport { Grid, IconButton, List, Typography } from '@mui/material';\nimport { displayDate } from '../../../../../shared/utils';\nimport React from 'react';\nimport DeleteModal from '../DeleteModal';\nimport { CopyForm, EditForm, PingNFCForm } from './ModalForms';\nimport { useReservations } from '../GenericReservationsTab/ReservationsContext';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CopyIcon from '@mui/icons-material/CopyAll';\nimport NFCIcon from '@mui/icons-material/Nfc';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Edit } from '@mui/icons-material';\nimport MoreVertMenu from '../../components/MoreVertMenu';\nimport UserItem from './UserItem';\nimport RoomItem from './RoomItem';\nimport useResolvedAccess from '../../hooks/useResolvedAccess';\nimport DatesView from './DatesView';\nimport { useHistory } from 'react-router-dom';\nimport paths from '../../../../../shared/path';\n\n\n\ninterface ReservationViewModalProps {\n    reservation: Reservation,\n    open: boolean,\n    onClose: () => void\n}\n\n\nfunction TextSection(props: {\n    title: string, children: React.ReactNode | React.ReactNode[]\n}) {\n    return (\n        <span>\n            <Typography component=\"h3\" variant=\"subtitle1\">\n                {props.title}\n            </Typography>\n            <Typography\n                variant=\"body1\"\n                color='text.secondary'\n                textAlign='justify'\n                component='p'\n            >\n                {props.children}\n            </Typography>\n        </span>\n    );\n}\n\n\n\n\n\nexport default function ReservationViewModal(props: ReservationViewModalProps) {\n    const { reservationsAdmin, keysAdmin, myId, logsAdmin } = useResolvedAccess();\n    const { deleteReservation } = useReservations();\n    const history = useHistory();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n    const [nfcModalOpen, setNFCModalOpen] = React.useState<boolean>(false);\n    const [copyModalOpen, setCopyModalOpen] = React.useState<boolean>(false);\n\n\n    const onDelete = React.useCallback(async () => {\n        if (await deleteReservation(props.reservation.id)) {\n            setDeleteModalOpen(false);\n        }\n    }, [\n        props.reservation.id,\n        deleteReservation,\n    ]);\n\n\n    const menuOptions = React.useMemo(() => {\n        const opt = [\n            {\n                icon: <CopyIcon color='primary' />,\n                label: 'Kopiuj',\n                action: () => setCopyModalOpen(true)\n            },\n        ];\n        keysAdmin && opt.unshift({\n            icon: <NFCIcon color='primary' />,\n            label: 'Odbij klucz',\n            action: () => setNFCModalOpen(true)\n        });\n\n        logsAdmin && opt.push({\n            icon: <SearchIcon color='primary' />,\n            label: 'Logs Explorer',\n            action: () => history.push(`${paths.LOGS}?endpoint=%/reservations/${props.reservation.id}`)\n        })\n\n        if (myId(props.reservation.user.id) || reservationsAdmin)\n            opt.push({\n                icon: <Edit color='primary' />,\n                label: 'Edytuj',\n                action: () => setEditModalOpen(true)\n            }, {\n                icon: <DeleteIcon color='error' />,\n                label: 'Usuń',\n                action: () => setDeleteModalOpen(true)\n            });\n\n        return opt;\n    }, [\n        myId,\n        keysAdmin,\n        logsAdmin,\n        props.reservation.user.id,\n        props.reservation.id,\n        reservationsAdmin,\n        history\n    ]);\n\n\n    return (\n        <>\n            {(myId(props.reservation.user.id) || reservationsAdmin) &&\n                <>\n                    <DeleteModal\n                        open={deleteModalOpen}\n                        onClose={() => setDeleteModalOpen(false)}\n                        onSuccess={onDelete}\n                    />\n\n                    <EditForm\n                        open={editModalOpen}\n                        onClose={() => setEditModalOpen(false)}\n                        reservation={props.reservation}\n                    />\n                </>\n            }\n            <CopyForm\n                open={copyModalOpen}\n                onClose={() => setCopyModalOpen(false)}\n                reservation={props.reservation}\n            />\n\n            {keysAdmin &&\n                <PingNFCForm\n                    open={nfcModalOpen}\n                    onClose={() => setNFCModalOpen(false)}\n                    reservationId={props.reservation.id}\n                />\n            }\n\n            <GenericModal\n                open={props.open}\n                onClose={props.onClose}\n                aria-label=\"Widok Rezerwacji\"\n                sx={{\n                    maxWidth: '800px',\n                    mt: '4vw'\n                }}\n            >\n                <Grid container spacing='15px'>\n\n                    <Grid item xs={10} sm={11}>\n                        <Stack spacing={4} alignItems='stretch'>\n                            <Typography component=\"h2\" variant=\"h4\">\n                                {props.reservation.title}\n                            </Typography>\n\n                            <DatesView title='Planowany czas:'>\n                                {[\n                                    {\n                                        label: 'Od',\n                                        value: displayDate(props.reservation.plannedStart)\n                                    }, {\n                                        label: 'do',\n                                        value: displayDate(props.reservation.plannedEnd)\n                                    },\n                                ]}\n                            </DatesView>\n                        </Stack>\n                    </Grid>\n\n                    <Grid item xs={2} sm={1}>\n                        <Stack\n                            alignItems='flex-end'\n                            direction='column'\n                            spacing={3}\n                        >\n                            <IconButton onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\n                            <MoreVertMenu options={menuOptions} sx={{ justifySelf: \"right\" }} />\n\n                            {keysAdmin &&\n                                <IconButton\n                                    onClick={() => setNFCModalOpen(true)}\n                                    title=\"Odbij klucz\"\n                                    aria-label=\"Odbij klucz\"\n                                    color='success'\n                                >\n                                    <NFCIcon />\n                                </IconButton>\n                            }\n                        </Stack>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Stack spacing={4} alignItems='stretch'>\n                            <DatesView title='Faktyczny czas rezerwacji:'>\n                                {[\n                                    {\n                                        label: 'Początek',\n                                        value: props.reservation.actualStart ?\n                                            displayDate(props.reservation.actualStart)\n                                            : 'Brak'\n                                    }, {\n                                        label: 'Koniec',\n                                        value: props.reservation.actualEnd ?\n                                            displayDate(props.reservation.actualEnd)\n                                            : 'Brak'\n                                    },\n                                ]}\n                            </DatesView>\n\n                            <TextSection title='Opis:'>\n                                {props.reservation.description}\n                            </TextSection>\n\n                            <List component='div'>\n                                <UserItem user={props.reservation.user} />\n                                <RoomItem room={props.reservation.room} />\n                            </List>\n\n                        </Stack>\n                    </Grid>\n\n                </Grid>\n            </GenericModal>\n        </>\n    );\n}\n\n\n","import React from \"react\";\nimport ReservationViewModal from \"../../../ReservationViewModal\";\nimport { useReservations } from \"..\";\nimport ModalContextValue from \"./ModalContextValue\";\n\n\nexport const ReservationModalViewContext = React.createContext<ModalContextValue>({\n    showReservation: (id: number) => { },\n    reservation: null\n});\n\n\ninterface ModalContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\nexport default function ModalContextProvider(props: ModalContextProviderProps) {\n    const { reservations } = useReservations();\n\n    const [modalOpen, setModalOpen] = React.useState<boolean>(true);\n    const [reservationId, setReservationId] = React.useState<number | null>(null);\n\n\n    const reservation = React.useMemo(() => {\n        if (reservationId) {\n            return reservations.find(({ id }) => id === reservationId);\n        }\n    }, [reservations, reservationId]) ?? null;\n\n\n    const showReservation = React.useCallback((id: number) => {\n        setReservationId(id);\n        setModalOpen(true);\n    }, []);\n\n\n    return (\n        <ReservationModalViewContext.Provider value={{ reservation, showReservation }}>\n            {props.children}\n\n            {reservation &&\n                <ReservationViewModal\n                    reservation={reservation}\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                />}\n        </ReservationModalViewContext.Provider>\n    );\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../../auth/useSession\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { AppURLParams } from \"../../../../../../services/interfaces\";\nimport ReservationService, { CreateReservationData, ReservationsQueryParams, UpdateReservationData } from \"../../../../../../services/ReservationService\";\nimport { useRoomContext } from \"../../../RoomPage/RoomContext\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport ReservationModalContext from \"./ModalContext\";\nimport useResourceMap from \"../../../../../../contexts/ResourceMapContext/useResourceMap\";\nimport ReservationsContextValue from \"./ReservationsContextValue\";\nimport paths from \"../../../../../../shared/path\";\nimport { UserViewParams } from \"../../../../../../services/UserService\";\nimport useTrigger from \"../../../hooks/useTrigger\";\nimport { fromLocaleDateTimeString } from \"../../../../../../shared/utils\";\n\n\nexport const reservationsContext: any = React.createContext(null);\n\n\ninterface ReservationsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\n\nexport default function ReservationsContextProvider(props: ReservationsContextProviderProps) {\n    const { queryParams, setQueryParams } = useQueryParams<ReservationsQueryParams>();\n    const notify = useNotification();\n    const { getRoomLink } = useResourceMap();\n    const roomContext = useRoomContext();\n    const { user } = useSession();\n    const urlParams = useParams<AppURLParams>();\n    const refresh = useTrigger(30_000);\n\n    const [reservations, setReservations] = React.useState<Reservation[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            let params = urlParams;\n            if (Object.keys(urlParams).length === 0 && window.location.pathname === paths.HOME) {\n                params = { userId: 'me' } as UserViewParams;\n            }\n            const resp = await ReservationService.getReservations(params, queryParams);\n\n            resp.pagination && setQueryParams((old) => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount,\n            }));\n            setReservations(resp.data as Reservation[]);\n        } catch (err: any) {\n            notify(err.description ?? err.message, 'error');\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        queryParams.currentPage,\n        queryParams.itemsOnPage,\n        queryParams.from,\n        queryParams.search,\n        setQueryParams,\n        urlParams,\n        notify,\n        user\n    ]);\n\n\n    // when loading function is recalculated - trigger the loading\n    React.useEffect(() => {\n        load();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        load,\n        refresh\n    ]);\n\n\n    const triggerReload = React.useCallback(() => setQueryParams(old => Object.assign({}, old)), [\n        setQueryParams\n    ]);\n\n\n    const pingKeyForReservation = React.useCallback(async (id: number, key: string) => {\n        if (!reservations) return;\n        try {\n            const reservation = reservations.find(item => item.id === id);\n            if (!reservation) return false;\n\n            const resp = await ReservationService.pingKey(id, key);\n\n            setReservations(old => {\n                old && old.forEach(item => {\n                    if (item.id !== id) return;\n\n                    if (item.actualStart) {\n                        item.actualEnd = new Date().toString();\n                    } else {\n                        item.actualStart = new Date().toString();\n                    }\n\n                });\n                return Object.assign([], old);\n            });\n\n            roomContext && roomContext.setOccupied(!reservation.room.occupied);\n            resp?.data && notify(resp.data.toString(), 'success');\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [\n        reservations,\n        roomContext,\n        notify,\n    ]);\n\n\n    const createReservation = React.useCallback(async (data: CreateReservationData) => {\n        try {\n            await ReservationService.createOne(data);\n\n            triggerReload();\n            notify(\"Rezerwacja utworzona prawidłowo!\", 'success');\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true\n    }, [\n        notify,\n        triggerReload,\n    ]);\n\n\n    const deleteReservation = React.useCallback(async (reservationId: number) => {\n        try {\n            await ReservationService.remove(reservationId);\n            setReservations(old => old && old.filter(({ id }) => id !== reservationId));\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [notify]);\n\n\n    const updateReservation = React.useCallback(async (id: number, data: UpdateReservationData) => {\n        try {\n            await ReservationService.update(id, data); //call to API\n\n            //update state\n            setReservations((old) => {\n                return old && old.map(item => {\n                    if (item.id === id) {\n                        ['plannedStart', 'plannedEnd']\n                            .forEach(field => {\n                                if (field in data) {\n                                    item[field] = fromLocaleDateTimeString(data[field]).toUTCString();\n                                }\n                            });\n                        ['description', 'title']\n                            .forEach(field => {\n                                if (field in data) {\n                                    item[field] = data[field];\n                                }\n                            });\n                    }\n                    return item;\n                });\n            });\n\n            // when reservation room is changing\n            if ('roomId' in data) {\n                data.roomId && notify(\n                    'Rezerwacja zaktualizowana i przeniesiona!',\n                    'success',\n                    () => <Redirect to={getRoomLink(Number(data.roomId))} />\n                )\n            } else {\n                notify('Rezerwacja zaktualizowana!', 'success');\n            }\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [getRoomLink, notify]);\n\n\n    // if (!reservations) return <Loading />;\n\n    return (\n        <reservationsContext.Provider value={{\n            reservations,\n            updateReservation,\n            deleteReservation,\n            createReservation,\n            pingKeyForReservation,\n        } as ReservationsContextValue}>\n            <ReservationModalContext>\n                {props.children}\n            </ReservationModalContext>\n        </reservationsContext.Provider>\n    );\n}","import Avatar from \"@mui/material/Avatar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { dynamicPaths } from \"../../../../../../shared/path\";\nimport ImageService from \"../../../../../../services/ImageService\";\nimport { displayDate } from \"../../../../../../shared/utils\";\nimport ReservationService from \"../../../../../../services/ReservationService\";\nimport { Link } from \"@mui/material\";\nimport React from \"react\";\nimport Image from \"../../../../../../models/Image\";\n\n\ninterface ReservationListItemProps {\n    data: Reservation,\n    onClick: () => void\n}\n\n// memoize avatar\nconst MemAvatar = React.memo((props: { img: Image }) => <Avatar alt=\"użytkownik\" src={ImageService.getLink(props.img)} />)\n\n\nexport default function ReservationListItem({\n    data, onClick\n}: ReservationListItemProps) {\n    const { message, color } = ReservationService.resolveStatus(data);\n\n    return (\n        <ListItem\n            component='li'\n            button\n            sx={{\n                mb: '2px',\n                bgcolor: color,\n                '&:hover, &:focus': {\n                    bgcolor: color,\n                    filter: 'brightness(97%)',\n                }\n            }}\n            onClick={onClick}\n        >\n            <ListItemAvatar>\n                <Link href={dynamicPaths.toUser(data.user.id)}>\n                    <MemAvatar img={data.user.image} />\n                </Link>\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={data.title}\n                secondary={displayDate(data.actualStart ?? data.plannedStart) + ' - ' + message}\n            />\n        </ListItem>\n    )\n}","import { List, ListItem, ListItemText } from \"@mui/material\";\nimport useReservationModalContext from \"../ReservationsContext/ModalContext/useReservationModalContext\";\nimport { useReservations } from \"../ReservationsContext\";\nimport ReservationListItem from \"./ReservationsListItem\";\nimport React from \"react\";\nimport Loading from \"../../../../../../shared/components/Loading\";\n\n\n\nexport default function ReservationsList() {\n    const { showReservation } = useReservationModalContext();\n    const { reservations } = useReservations();\n\n\n    const renderedList = React.useMemo(() =>\n        reservations?.map((item) => <ReservationListItem\n            key={item.id}\n            data={item}\n            onClick={() => showReservation(item.id)}\n        />)\n        , [\n            reservations,\n            showReservation\n        ]);\n\n    if (!reservations) return <Loading />;\n\n    return (\n        <List aria-label='lista rezerwacji'>\n            {reservations.length === 0 ?\n                <ListItem>\n                    <ListItemText primary='Brak rezerwacji spełniających kryteria.' />\n                </ListItem> :\n                renderedList\n            }\n        </List>\n    );\n}\n\n\n","import React from \"react\";\nimport { ReservationModalViewContext } from \"./ModalContextProvider\";\nimport ModalContextValue from \"./ModalContextValue\";\n\n\nexport default function useReservationModalContext() {\n    return React.useContext(ReservationModalViewContext) as ModalContextValue;\n}","import FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport ReservationService, { CreateReservationData, UpdateReservationData } from \"../../../../../services/ReservationService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../DateTimePicker\";\n\n\n\ninterface CreateReservationFormProps {\n    roomId?: number\n    onCancel: () => void\n}\n\n\nexport default function CreateReservationForm(props: CreateReservationFormProps) {\n    const notify = useNotification();\n    const { allRooms } = useResourceMap();\n\n    const [dates, setDates] = React.useState({\n        start: (new Date(Date.now() + 3_600_000)),\n        end: (new Date(Date.now() + (3_600_000 * 2)))\n    });\n\n    const [data, setData] = React.useState<CreateReservationData>({\n        title: '',\n        description: '',\n        plannedStart: '',\n        plannedEnd: '',\n        roomId: props.roomId ?? 0\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        data.plannedStart = dates.start.toLocaleString('pl');\n        data.plannedEnd = dates.end.toLocaleString('pl');\n\n        try {\n            await ReservationService.createOne(data);\n            notify(\"Rezerwacja utworzona!\", 'success');\n            props.onCancel()\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n        props,\n        dates.start,\n        dates.end\n    ]);\n\n\n    const setDate = React.useCallback((key: keyof UpdateReservationData, dateTime: Date) => {\n        setDates(old => ({\n            ...old,\n            [key]: dateTime,\n        }));\n    }, []);\n\n\n    return (\n        <FormGridContainer\n            title='Tworzenie rezerwacji'\n            subtitle=\"Stwórz rezerwację w wybranym przez siebie pokoju.\"\n            onSubmit={handleSubmit}\n            onCancel={props.onCancel}\n        >\n            <Grid item xs={12}>\n                <TextField\n                    title=\"Tytuł rezerwacji\"\n                    inputProps={{ title: \"Tytuł rezerwacji\" }}\n                    autoFocus\n                    required\n                    fullWidth\n                    // multiline\n                    maxRows={4}\n                    label=\"Tytuł\"\n                    id=\"outlined-multiline-flexible\"\n                    name='title'\n                    value={data.title}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    required\n                    fullWidth\n                    multiline\n                    maxRows={20}\n                    label=\"Opis\"\n                    id=\"outlined-multiline-flexible\"\n                    name='description'\n                    value={data.description}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <DateTimePicker\n                    label=\"Początek\"\n                    value={dates.start}\n                    onChange={(value) => setDate('start', value)}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <DateTimePicker\n                    label=\"Koniec\"\n                    value={dates.end}\n                    onChange={(value) => setDate('end', value)}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                    <Select\n                        required\n                        labelId=\"wybierz-budynek\"\n                        name=\"buildingId\"\n                        value={data.roomId}\n                        label=\"Budynek\"\n                        onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                    >\n                        {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n        </FormGridContainer>\n    );\n}","import React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport CreateReservationForm from \"./CreateReservationForm\";\n\n\ninterface CreateReservationModalProps {\n    open: boolean,\n    onClose: () => void,\n    roomId?: number\n}\n\nfunction CreateReservationModal(props: CreateReservationModalProps) {\n    return (\n        <GenericModal\n            open={props.open}\n            aria-label='Okno do tworzenia rezerwacji'\n            onClose={props.onClose}\n        >\n            <CreateReservationForm\n                roomId={props.roomId}\n                onCancel={props.onClose}\n            />\n\n        </GenericModal>\n    );\n}\n\nexport default React.memo(CreateReservationModal);","import MobileDatePicker from \"@mui/lab/MobileDatePicker\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { ReservationsQueryParams } from \"../../../../../services/ReservationService\";\nimport SelectButtonGroup from \"../../components/SelectButtonGroup\";\nimport LazyInput from \"../../components/LazyInput\";\nimport { isDate } from \"../../../../../shared/utils\";\nimport AddIcon from '@mui/icons-material/Add';\nimport CreateReservationModal from \"../CreateReservationModal\";\nimport { useParams } from \"react-router-dom\";\nimport { RoomViewParams } from \"../../../../../services/RoomService\";\nimport { BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport { AddressViewParams } from \"../../../../../services/AddressService\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\nimport { Tip } from \"../Tutorial\";\n\n\nconst buttons = [\n    { name: 'Dziś', value: 'today' },\n    { name: 'Ten tydzień', value: 'this week' },\n    { name: 'Od wczoraj', value: 'yesterday' },\n];\n\n\nfunction ReservationTabBar() {\n    const { reservationsAbility } = useResolvedAccess();\n    const { setQueryParams, queryParams } = useQueryParams<ReservationsQueryParams>();\n    const urlParams = useParams<RoomViewParams | BuildingViewParams | AddressViewParams>();\n\n    const [createReservationModalOpen, setCreateReservationModalOpen] = React.useState<boolean>(false);\n    const [customDate, setCustomDate] = React.useState(new Date(isDate(queryParams.from) ? queryParams.from ?? 'xxx' : Date.now()));\n\n    const handleButtonChange = React.useCallback((value: string) => {\n        setQueryParams((old: ReservationsQueryParams) => ({ ...old, from: value }));\n    }, [setQueryParams]);\n\n\n    const handleSubmitCustomDate = React.useCallback((evt: React.FormEvent) => {\n        evt.preventDefault();\n        setQueryParams((old: ReservationsQueryParams) => ({ ...old, from: customDate.toISOString() }))\n    }, [customDate, setQueryParams])\n\n\n    const handleSearchFieldChange = React.useCallback((evt) => {\n        setQueryParams(old => ({ ...old, search: evt.target.value }));\n    }, [setQueryParams]);\n\n\n    return (\n        <>\n            {reservationsAbility &&\n                <CreateReservationModal\n                    open={createReservationModalOpen}\n                    onClose={() => setCreateReservationModalOpen(false)}\n                    roomId={'roomId' in urlParams ? Number(urlParams.roomId) : undefined}\n                />\n            }\n\n            <Grid container\n                component='form'\n                onSubmit={handleSubmitCustomDate}\n                spacing={2}\n                alignItems='center'\n            >\n\n                <Grid item xs={12} md={12}>\n                    <Tip text='Możesz wyszukiwać rezerwacje według daty lub używając słów kluczowych' priority={2}>\n                        <SelectButtonGroup\n                            onChange={handleButtonChange}\n                            buttons={buttons}\n                            value={isDate(queryParams.from) ? '' : queryParams?.from ?? buttons[0].value}\n                        />\n                        <Box display='inline-flex' >\n                            <MobileDatePicker\n                                label=\"Od daty\"\n                                inputFormat=\"yyyy-MM-dd\"\n                                value={customDate}\n                                onChange={(value: Date | null) => value && setCustomDate(value)}\n                                renderInput={(params) => <TextField {...params} size='small' />}\n                            />\n                            <Button\n                                variant={queryParams?.from === customDate.toISOString() ? 'contained' : 'outlined'}\n                                type='submit'\n                                sx={{ ml: 1 }}\n                            >\n                                OK\n                            </Button>\n                        </Box>\n                    </Tip>\n                </Grid>\n                <Grid item xs={12}>\n                    <LazyInput\n                        name=\"search\"\n                        label='wyszukaj'\n                        value={queryParams.search ?? ''}\n                        onChange={handleSearchFieldChange}\n                    />\n                </Grid>\n\n                {reservationsAbility &&\n                    <Grid item xs={12}>\n                        <Tip text='Kliknij ten przycisk, aby stworzyć rezerwację!' priority={10}>\n                            <Button\n                                startIcon={<AddIcon />}\n                                onClick={() => setCreateReservationModalOpen(true)}\n                            >\n                                Stwórz rezerwację\n                            </Button>\n                        </Tip>\n                    </Grid>\n                }\n            </Grid>\n        </>\n    );\n}\n\nexport default React.memo(ReservationTabBar);","import { Stack } from \"@mui/material\";\nimport { QueryParamsContext } from \"../../../../../contexts/QueryParamsContext\";\nimport ReservationsContext from \"./ReservationsContext\";\nimport { ReservationsQueryParams } from \"../../../../../services/ReservationService\";\nimport ListPagination from \"../../components/ListPagination\";\nimport ReservationsList from \"./ReservationsList\";\nimport ReservationTabBar from \"./ReservationTabBar\";\nimport React from \"react\";\n\n\n\nfunction GenericReservationsTab() {\n    return (\n        <QueryParamsContext name='reservations-query-params' default={{\n            itemsOnPage: 5,\n            currentPage: 1,\n            from: 'today'\n        } as ReservationsQueryParams}>\n            <ReservationsContext>\n                <Stack rowGap={3}>\n                    <ReservationTabBar />\n                    <ReservationsList />\n                    <ListPagination />\n                </Stack>\n            </ReservationsContext>\n        </QueryParamsContext>\n    );\n}\n\nexport default React.memo(GenericReservationsTab);","import React from \"react\";\nimport { styled, SxProps } from \"@mui/system\";\nimport Box from \"@mui/material/Box\";\nimport Address from \"../../../../../models/Address\";\n\n\n\ninterface MapProps {\n    address: Address,\n    sx?: SxProps\n}\n\nconst StyledIframe = styled('iframe')({\n    width: '100%',\n    height: '50vh',\n    maxHeight: '400px',\n    minHeight: '300px'\n});\n\n\nexport default function Map({ address, sx }: MapProps) {\n\n    const url = React.useMemo(() => {\n        const { street, number, town, country } = address;\n\n        const base = new URL('https://maps.google.com/maps');\n        const params = new URLSearchParams({\n            q: `${street + \" \" + number + \" \" + town + \" \" + country}`,\n            ie: 'UTF8',\n            z: '14',\n            iwloc: '',\n            output: 'embed'\n        });\n        base.search = params.toString();\n\n        return base.toString();\n    }, [address]);\n\n    return (\n        <Box>\n            <StyledIframe\n                src={url}\n                frameBorder=\"0\"\n                sx={{ ...sx }}\n            />\n        </Box>\n    );\n}","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../components/GenericModal\";\nimport { useAddress } from \"../AddressContext\";\nimport { UpdateAddressParams } from \"../../../../../services/AddressService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\n\ninterface AddressEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\n\nexport default function AddressEditForm({\n    open,\n    onClose\n}: AddressEditFormProps) {\n    const { address, updateAddress } = useAddress();\n\n    const [data, setData] = React.useState<UpdateAddressParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old: UpdateAddressParams) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateAddress(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateAddress,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do edycji budynku\"\n        >\n            <FormGridContainer\n                title='Edycja adresu'\n                subtitle=\"Zmień właściwości adresu i zatwierdź zmiany.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"country\"\n                        label=\"Kraj\"\n                        name=\"country\"\n                        value={data.country ?? address.country}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        autoFocus\n                        required\n                        fullWidth\n                        id=\"town\"\n                        label=\"Miasto\"\n                        name=\"town\"\n                        value={data.town ?? address.town}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"postalCode\"\n                        label=\"Kod pocztowy\"\n                        name=\"postalCode\"\n                        value={data.postalCode ?? address.postalCode}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={8}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"street\"\n                        label=\"Ulica\"\n                        name=\"street\"\n                        value={data.street ?? address.street}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"number\"\n                        label=\"Number\"\n                        name=\"number\"\n                        value={data.number ?? address.number}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../components/GenericModal\";\nimport { BuildingCreateParams } from \"../../../../../services/BuildingService\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport { timeFormat } from \"../../../../../shared/utils\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateBuildingFormProps {\n    open: boolean,\n    onClose: () => void,\n    handleCreateBuilding: (data: BuildingCreateParams) => Promise<boolean>\n}\n\n\nexport default function CreateBuildingForm({\n    open,\n    onClose,\n    handleCreateBuilding,\n}: CreateBuildingFormProps) {\n    const [data, setData] = React.useState<BuildingCreateParams>({\n        name: '',\n        openTime: (new Date(0, 0, 0, 7, 0)).toString(),\n        closeTime: (new Date(0, 0, 0, 21, 0)).toString()\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        const success = await handleCreateBuilding({\n            ...data,\n            closeTime: timeFormat.format(new Date(data.closeTime)),\n            openTime: timeFormat.format(new Date(data.openTime))\n        });\n\n        if (success) {\n            onClose();\n        }\n\n    }, [\n        data,\n        onClose,\n        handleCreateBuilding,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do tworzenia budynku\"\n        >\n            <FormGridContainer\n                title='Dodaj nowy budynek!'\n                subtitle=\"Wypełnij dane nowego budynku i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nazwa\"\n                        name=\"name\"\n                        autoFocus\n                        value={data.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6} >\n                    <MobileTimePicker\n                        label=\"Godzina otwarcia\"\n                        inputFormat=\"HH:mm\"\n                        value={data.openTime}\n                        onChange={(value: any) => setData(old => ({ ...old, openTime: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <MobileTimePicker\n                        label=\"Godzina zamknięcia\"\n                        inputFormat=\"HH:mm\"\n                        value={data.closeTime}\n                        onChange={(value: any) => setData(old => ({ ...old, closeTime: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../components/GenericModal\";\nimport AddressService, { CreateAddressParams } from \"../../../../../services/AddressService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateAddressFormProps {\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport default function CreateAddressForm({\n    open,\n    onClose,\n}: CreateAddressFormProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n\n    const [data, setData] = React.useState<CreateAddressParams>({\n        country: 'Polska',\n        town: '',\n        street: '',\n        number: '',\n        postalCode: '',\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old: CreateAddressParams) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        try {\n            await AddressService.create(data);\n            reloadMap();\n            notify('Adres został dodany', 'success');\n            onClose();\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n        onClose,\n        reloadMap,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do tworzenia adresu\"\n        >\n            <FormGridContainer\n                title='Dodaj nowy adres!'\n                subtitle=\"Wypełnij dane nowego adresu i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"country\"\n                        label=\"Kraj\"\n                        name=\"country\"\n                        value={data.country}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"town\"\n                        label=\"Miasto\"\n                        name=\"town\"\n                        autoFocus\n                        value={data.town}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"postalCode\"\n                        label=\"Kod pocztowy\"\n                        name=\"postalCode\"\n                        value={data.postalCode}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={8}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"street\"\n                        label=\"Ulica\"\n                        name=\"street\"\n                        value={data.street}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"number\"\n                        label=\"Number\"\n                        name=\"number\"\n                        value={data.number}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import React from \"react\";\nimport { Card, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport Map from \"./Map\";\nimport { useAddress } from \"../AddressContext\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { AddressEditForm } from \"../Forms\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\n\n\nexport default function AddressCard() {\n    const { premisesAdmin } = useResolvedAccess();\n    const { address, deleteAddress } = useAddress();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);\n    const [editModalOpen, setEditModalOpen] = React.useState(false);\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n    return (\n        <>\n            {premisesAdmin &&\n                <>\n                    <DeleteModal\n                        open={deleteModalOpen}\n                        onClose={() => setDeleteModalOpen(false)}\n                        onSuccess={deleteAddress}\n                    />\n\n                    <AddressEditForm\n                        open={editModalOpen}\n                        onClose={() => setEditModalOpen(false)}\n                    />\n                </>\n            }\n            <Card elevation={0}>\n                <CardHeader\n                    action={premisesAdmin && <MoreVertMenu options={options} />}\n                    title={<>{address.country}, {address.town}</>}\n                    subheader={<>{address.street} {address.number}</>}\n                />\n                <CardMedia component=\"div\">\n                    <Map address={address} />\n                </CardMedia>\n                <CardContent>\n                    <Typography component='p'>\n                        ul. {address.street} {address.number}<br />\n                        {address.postalCode} {address.town}, <br />\n                        {address.country}\n                    </Typography>\n                    <br />\n                    <DatesFooter model={address} />\n                </CardContent>\n            </Card>\n        </>\n    )\n}","import { Button, List } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\ninterface ScrollableListProps {\n    onAddItem: () => void,\n    children: React.ReactNode[] | React.ReactNode,\n}\n\n\nexport default function ScrollableList(props: ScrollableListProps) {\n    const { premisesAdmin } = useResolvedAccess();\n\n    return (\n        <Box >\n            {premisesAdmin && \n                <>\n                    <br />\n                    <Button\n                        startIcon={<AddCircleIcon color='primary' />}\n                        onClick={props.onAddItem}>\n                        Dodaj element\n                    </Button>\n                </>\n            }\n            <List\n                sx={{\n                    minHeight: '100px',\n                    maxHeight: '270px',\n                    overflow: 'auto'\n                }}\n            >\n                {props.children}\n            </List>\n        </Box>\n    )\n}\n\n\n","import { Link, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport LinkIcon from '@mui/icons-material/Link';\nimport React from \"react\";\n\n\ninterface ScrollableListItemProps {\n    primary: string | React.ReactNode,\n    link: string,\n}\n\n\nfunction ScrollableListItem(props: ScrollableListItemProps) {\n    return (\n        <ListItem button\n            component={Link}\n            href={props.link}\n            sx={{ py: '2px' }}\n        >\n            <ListItemIcon>\n                <LinkIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.primary} />\n        </ListItem>\n    );\n}\n\nexport function EmptyScrollableListItem(props: { text: string }) {\n    return (\n        <ListItem\n            sx={{ py: '2px' }}\n        >\n            <ListItemText primary={props.text} />\n        </ListItem>\n    );\n}\n\nexport default React.memo(ScrollableListItem);","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport Building from \"../../../../../models/Building\";\nimport { AddressViewParams } from \"../../../../../services/AddressService\";\nimport BuildingService, { BuildingCreateParams } from \"../../../../../services/BuildingService\";\nimport ScrollableList, { ScrollableListItem } from \"../../components/ScrollableList\";\nimport { EmptyScrollableListItem } from \"../../components/ScrollableList/ScrollableListItem\";\nimport SmallCard from \"../../components/SmallCard\";\nimport { Tip } from \"../../components/Tutorial\";\nimport { useAddress } from \"../AddressContext\";\nimport { CreateBuildingForm } from \"../Forms\";\n\n\nfunction BuildingsList() {\n    const { getBuildingsInAddress } = useAddress();\n    const { reloadMap } = useResourceMap();\n    const notify = useNotification();\n\n    const urlParams = useParams() as AddressViewParams;\n\n    const [createBuildingModalOpen, setCreateBuildingModalOpen] = React.useState<boolean>(false);\n    const [buildings, setBuildings] = React.useState<Building[]>();\n\n\n    const load = React.useCallback(async () => {\n        const buildings = await getBuildingsInAddress();\n        setBuildings(buildings);\n    }, [getBuildingsInAddress])\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const createBuilding = React.useCallback(async (data: BuildingCreateParams) => {\n        try {\n            await BuildingService.create(urlParams, data);\n            load();\n            reloadMap();\n            notify('Nowy Budynek utworzony!', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        load,\n        urlParams,\n    ]);\n\n\n    const renderedBuildings = React.useMemo(() => {\n        if (buildings && buildings.length > 0) {\n\n            return buildings?.map(item => <ScrollableListItem key={item.id}\n                primary={`Budynek ${item.name}`}\n                link={`./${item.address}/buildings/${item.id}`}\n            />)\n        } else {\n            return <EmptyScrollableListItem text=\"Aktualnie brak budynków dla adresu.\"/>\n        }\n    }, [buildings]);\n\n\n    return (\n        <>\n            <CreateBuildingForm\n                open={createBuildingModalOpen}\n                onClose={() => setCreateBuildingModalOpen(false)}\n                handleCreateBuilding={createBuilding}\n            />\n\n            <Tip text='To jest lista budynków pod tym adresem.' priority={10}>\n                <SmallCard title='Budynki pod adresem'>\n                    <ScrollableList\n                        onAddItem={() => setCreateBuildingModalOpen(true)}\n                    >\n                        {renderedBuildings}\n                    </ScrollableList>\n                </SmallCard>\n            </Tip>\n            <br />\n        </>\n    );\n}\n\nexport default React.memo(BuildingsList);","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Loading from \"../../../../shared/components/Loading\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport AddressContext from \"./AddressContext\";\nimport AddressCard from \"./components/AddressCard\";\nimport BuildingsList from \"./components/BuildingsList\";\n\nconst LazyAddressCharts = React.lazy(() => import(\"./components/AddressCharts\"));\nconst AddressCharts = () => <React.Suspense fallback={<Loading />}>\n    <LazyAddressCharts />\n</React.Suspense>\n\n\n\nfunction AddressPage() {\n    const { statsViewer } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <AddressCharts /> });\n\n        return arr;\n    }, [\n        statsViewer\n    ]);\n\n\n    return (\n        <AddressContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item container spacing={2} alignContent='flex-start' xs={12} md={5} lg={4}>\n                    <Grid item xs={12}>\n                        <AddressCard />\n                    </Grid>\n                    <Grid item xs={12} >\n                        <BuildingsList />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </AddressContext>\n    );\n}\n\nexport default React.memo(AddressPage);","import { Button, Grid } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\nimport React from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { Redirect, useLocation, useParams } from \"react-router-dom\";\nimport Image from \"../../../../models/Image\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport { UserViewParams } from \"../../../../services/UserService\";\nimport { BuildingViewParams } from \"../../../../services/BuildingService\";\nimport { RoomViewParams } from \"../../../../services/RoomService\";\nimport ImageService from \"../../../../services/ImageService\";\n\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst StyledImage = styled('img')({\n    width: \"fill-available\",\n    maxHeight: '350px'\n});\n\ninterface ImageUploadFieldProps {\n    image?: Image,\n    onUpload?: () => void;\n    onDelete?: () => void;\n}\n\nexport default function ImageUploadField(props: ImageUploadFieldProps) {\n    const notify = useNotification();\n    const location = useLocation();\n    const urlParams = useParams<UserViewParams | BuildingViewParams | RoomViewParams>();\n    const [uploadedImage, setUploadedImage] = React.useState<Blob>();\n\n\n    const handleSubmit = React.useCallback(async (evt: React.FormEvent) => {\n        evt.preventDefault();\n        if (!uploadedImage) {\n            notify(\"Najpierw załaduj nowy obraz\", \"warning\");\n            return;\n        }\n        try {\n            await ImageService.upload(urlParams, uploadedImage);\n            props.onUpload && props.onUpload();\n            notify(\"Obraz został zmieniony\", 'success',\n                () => <Redirect to={location.pathname} /> // rerender the current page\n            );\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        uploadedImage,\n        props,\n        notify,\n        location,\n        urlParams,\n    ]);\n\n\n    const handleImageUpload = React.useCallback((evt: any) => {\n        if (evt.target.files && evt.target.files[0]) {\n            const img = evt.target.files[0];\n            setUploadedImage(img);\n        }\n    }, []);\n\n\n    const handleRemoveImgae = React.useCallback(async () => {\n        try {\n            await ImageService.remove(urlParams);\n            props.onDelete && props.onDelete();\n            notify(\"Przywrócono domyślny obraz, załaduj ponownie aby zobaczyć rezultat.\", \"success\",\n                () => <Redirect to={location.pathname} /> // rerender the current page\n            );\n\n        } catch (err: any) {\n            notify(err.description, \"error\");\n        }\n    }, [\n        props,\n        notify,\n        location,\n        urlParams,\n    ]);\n\n\n    return (\n        <Grid container component=\"form\"\n            onSubmit={handleSubmit}\n            direction=\"row\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <Grid item xs={12} sm={9}>\n                <StyledImage\n                    src={uploadedImage ? URL.createObjectURL(uploadedImage) : ImageService.getLink(props.image)}\n                    alt='nowy obraz'\n                />\n            </Grid>\n            <Grid item xs={12} sm={3} sx={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n            }}>\n                <label htmlFor=\"upload-obrazu\">\n                    <Input\n                        accept=\"*.(jpg|png)\"\n                        id=\"upload-obrazu\"\n                        type=\"file\"\n                        onChange={handleImageUpload}\n                    />\n                    <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        component=\"span\">\n                        Wybierz zdjęcie\n                    </Button>\n                </label>\n\n                <Button color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={handleRemoveImgae}\n                >\n                    Usuń\n                </Button>\n\n                <Button\n                    type=\"submit\"\n                    color=\"success\"\n                    startIcon={<SaveIcon />}\n                >\n                    Zapisz\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}","import Model from './Model';\nimport Image from './Image';\nimport Building from './Building';\n\nexport enum RoomTypes {\n    LABORATORY = \"Sala laboratoryjna\",\n    CONFERENCE = \"Sala konferencyjna\",\n    LECTURE = \"Sala wykładowa\"\n}\n\nexport type RoomType = RoomTypes.LABORATORY | RoomTypes.CONFERENCE | RoomTypes.LECTURE;\n\ninterface BaseRoom extends Model {\n    name: string,\n    image: Image,\n    roomType: RoomType,\n    seatsCount: number,\n    floor: number,\n    blocked: boolean,\n    occupied: boolean,\n    RFIDTag: null | string\n}\n\nexport default interface Room extends BaseRoom {\n    building: number\n}\n\nexport interface DetailedRoom extends BaseRoom {\n    building: Building\n}","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { SelectChangeEvent } from \"@mui/material/Select/SelectInput\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../components/GenericModal\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { BuildingUpdateParams } from \"../../../../../services/BuildingService\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useBuilding } from \"../BuildingContext\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport { timeFormat } from \"../../../../../shared/utils\";\nimport ImageUploadField from \"../../components/ImageUploadField\";\nimport Divider from \"@mui/material/Divider\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\n\ninterface BuildingEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\n\nfunction timeToDate(value: string) {\n    const [h, m] = value.split(':');\n    return new Date(0, 0, 0, Number(h), Number(m));\n}\n\n\nexport default function BuildingEditForm({\n    open,\n    onClose,\n}: BuildingEditFormProps) {\n    const { allAddresses } = useResourceMap();\n    const { updateBuilding, building } = useBuilding();\n\n    const [data, setData] = React.useState<BuildingUpdateParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n\n        setData((old: BuildingUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleTime = React.useCallback((field: 'closeTime' | 'openTime', value: Date) => {\n        setData(old => {\n            old[field] = timeFormat.format(value);\n            return Object.assign({}, old);\n        });\n    }, [])\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateBuilding(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateBuilding,\n    ]);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<string | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'addressId') value = Number(value);\n\n        event.target && setData((old: BuildingUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno edycji budynku\"\n        >\n            <Stack spacing={3}>\n\n                <ImageUploadField image={building.image} />\n                <Divider />\n\n                <FormGridContainer\n                    title='Edycja budynku'\n                    subtitle=\"Zmień właściwości budynku i zatwierdź zmiany.\"\n                    onSubmit={handleSubmit}\n                    onCancel={onClose}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nazwa\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? building.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6} >\n                        <MobileTimePicker\n                            label=\"Godzina otwarcia\"\n                            inputFormat=\"HH:mm\"\n                            value={timeToDate(data.openTime ?? building.openTime)}\n                            onChange={(value: any) => handleTime('openTime', value)}\n                            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <MobileTimePicker\n                            label=\"Godzina zamknięcia\"\n                            inputFormat=\"HH:mm\"\n                            value={timeToDate(data.closeTime ?? building.closeTime)}\n                            onChange={(value: any) => handleTime('closeTime', value)}\n                            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"wybierz-adres\">Adres</InputLabel>\n                            <Select\n                                labelId=\"wybierz-adres\"\n                                name=\"addressId\"\n                                value={data.addressId ?? building.address.id}\n                                label=\"Adres\"\n                                onChange={handleSelectChange}\n                            >\n                                {allAddresses.map(({ name, id }) => <MenuItem key={name} value={id} >{name} </MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    );\n}","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport { RoomType, RoomTypes } from \"../../../../../models/Room\";\nimport { CreateRoomParams } from \"../../../../../services/RoomService\";\nimport GenericModal from \"../../components/GenericModal\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateRoomFormProps {\n    open: boolean,\n    onClose: () => void,\n    handleCreateRoom: (data: CreateRoomParams) => Promise<boolean>\n}\n\n\nexport default function CreateRoomForm({\n    open,\n    onClose,\n    handleCreateRoom,\n}: CreateRoomFormProps) {\n\n    const [data, setData] = React.useState<CreateRoomParams>({\n        name: '',\n        roomType: RoomTypes.LECTURE,\n        seatsCount: 50,\n        floor: 0\n    });\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<RoomType | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'buildingId') value = Number(value);\n\n        event.target && setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await handleCreateRoom(data)) {\n            onClose();\n        }\n\n    }, [\n        data,\n        handleCreateRoom,\n        onClose,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno edycji budynku\"\n        >\n            <FormGridContainer\n                title='Dodaj nową salę'\n                subtitle=\"Wypełnij dane nowej sali i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nazwa\"\n                        name=\"name\"\n                        autoFocus\n                        value={data.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"room-type\">Typ Sali</InputLabel>\n                        <Select\n                            required\n                            labelId=\"room-type\"\n                            id=\"roomType\"\n                            value={data.roomType}\n                            name=\"roomType\"\n                            label=\"Typ Sali\"\n                            onChange={handleSelectChange}\n                        >\n                            {Object.values(RoomTypes).map(val => <MenuItem key={val} value={val}>{val}</MenuItem>)}\n\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={6} >\n                    <TextField\n                        required\n                        name=\"seatsCount\"\n                        label=\"Ilość miejsc\"\n                        type=\"number\"\n                        id=\"seatsCount\"\n                        value={data.seatsCount}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        name=\"floor\"\n                        label=\"Piętro\"\n                        type=\"number\"\n                        id=\"floor\"\n                        value={data.floor}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal >\n    );\n}","\n\n\nexport enum FavType {\n    Building = 'building-item',\n    Room = 'room-item'\n}\n\n\ninterface FavouriteItem {\n    id: number,\n    name: string,\n    type: FavType,\n}\n\nexport interface FavouriteBuilding extends FavouriteItem {\n    addressId: number,\n}\n\nexport interface FavouriteRoom extends FavouriteBuilding {\n    buildingId: number,\n}\n\n\nexport default interface Metadata {\n    notes?: string,\n    favourites?: (FavouriteBuilding | FavouriteRoom)[]\n}\n","import StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport IconButton from '@mui/material/IconButton';\nimport React from 'react';\nimport { FavouriteBuilding, FavouriteRoom } from '../../../../models/Metadata';\nimport MetadataService from '../../../../services/MetadataService';\nimport { Tip } from './Tutorial';\n\n\n\ninterface FavouriteButtonProps {\n    data: FavouriteBuilding | FavouriteRoom\n}\n\n\nexport default function FavouriteButton(props: FavouriteButtonProps) {\n    const [marked, setMarked] = React.useState(false);\n\n    React.useEffect(() => {\n        setMarked(MetadataService.isFavourite(props.data));\n    }, [props.data]);\n\n\n    const addToFavourites = React.useCallback(() => {\n        if (marked) {\n            MetadataService.removeFavourite(props.data);\n        } else {\n            MetadataService.addFavourite(props.data);\n        }\n\n        setMarked(old => !old);\n    }, [\n        marked,\n        props.data,\n    ]);\n\n\n    return (\n        <Tip text='Kliknij aby dodać do ulubionych' priority={0}>\n            <IconButton sx={{ display: 'inline' }} onClick={addToFavourites} color='warning'>\n                {marked ? <StarIcon /> : <StarBorderIcon />}\n            </IconButton>\n        </Tip>\n    );\n}","import React from \"react\";\nimport { Card, CardContent, CardHeader, CardMedia, Link } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteModal from \"../../components/DeleteModal\";\nimport { useBuilding } from \"../BuildingContext\";\nimport { BuildingEditForm } from \"../Forms\";\nimport FavouriteButton from \"../../components/FavouriteButton\";\nimport { FavType } from \"../../../../../models/Metadata\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\n\n\n\n\nexport default function BuildingView() {\n    const { premisesAdmin } = useResolvedAccess();\n    const { building, deleteBuilding } = useBuilding();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    if (!Boolean(building)) return null;\n\n    return (\n        <>\n            {premisesAdmin &&\n                <>\n                    <DeleteModal\n                        open={deleteModalOpen}\n                        onClose={() => setDeleteModalOpen(false)}\n                        onSuccess={deleteBuilding}\n                    />\n\n                    <BuildingEditForm\n                        open={editModalOpen}\n                        onClose={() => setEditModalOpen(false)}\n                    />\n                </>\n            }\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={\n                        premisesAdmin &&\n                        <MoreVertMenu options={options} />\n                    }\n                    title={\n                        <>\n                            Budynek {building.name}\n                            <FavouriteButton data={{\n                                id: building.id,\n                                name: building.name,\n                                type: FavType.Building,\n                                addressId: building.address.id,\n                            }} />\n                        </>\n                    }\n                    subheader={<>{building.openTime} - {building.closeTime}</>}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"350\"\n                    image={ImageService.getLink(building.image)}\n                    alt={building.name}\n                />\n                <CardContent>\n                    <Link href={dynamicPaths.toAddress(building.address.id)}>\n                        {building.address.town},&nbsp;{building.address.street}&nbsp;{building.address.number}\n                    </Link>\n                    <br />\n                    <DatesFooter model={building} />\n                </CardContent>\n            </Card>\n        </>\n    );\n}","import React from \"react\";\nimport Room from \"../../../../../models/Room\";\nimport ScrollableList, { ScrollableListItem } from \"../../components/ScrollableList\";\nimport { useBuilding } from \"../BuildingContext\";\nimport { CreateRoomForm } from \"../Forms\";\nimport RoomService, { CreateRoomParams } from \"../../../../../services/RoomService\";\nimport { useParams } from \"react-router-dom\";\nimport { BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport SmallCard from \"../../components/SmallCard\";\nimport { Tip } from \"../../components/Tutorial\";\nimport { EmptyScrollableListItem } from \"../../components/ScrollableList/ScrollableListItem\";\n\n\n\nfunction RoomsList() {\n    const { getRoomsInBuilding } = useBuilding();\n    const { reloadMap } = useResourceMap();\n\n    const urlParams = useParams() as BuildingViewParams;\n    const notify = useNotification();\n\n    const [createRoomModalOpen, setCreateRoomModalOpen] = React.useState<boolean>(false);\n    const [rooms, setRooms] = React.useState<Room[]>();\n\n\n    const load = React.useCallback(async () => {\n        const rooms = await getRoomsInBuilding();\n        setRooms(rooms);\n    }, [\n        getRoomsInBuilding\n    ]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const createRoom = React.useCallback(async (data: CreateRoomParams) => {\n        try {\n            await RoomService.create(urlParams, data);\n            notify('Nowa sala utworzona!', 'success');\n            load();\n            reloadMap();\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        load,\n        urlParams,\n    ]);\n\n\n    const renderedRooms = React.useMemo(() => {\n        if (rooms && rooms.length > 0) {\n            return rooms?.map(item => <ScrollableListItem\n                key={item.id}\n                primary={`Sala ${item.name}`}\n                link={`./${item.building}/rooms/${item.id}`}\n            />)\n        } else{\n            return <EmptyScrollableListItem text=\"Aktualnie brak sal dla budynku.\"/>\n        }\n    }, [rooms])\n\n\n    return (\n        <>\n            <CreateRoomForm\n                handleCreateRoom={createRoom}\n                open={createRoomModalOpen}\n                onClose={() => setCreateRoomModalOpen(false)}\n            />\n\n            <Tip text='Lista Sal znajdujących się w wybranym budynku.' priority={1}>\n                <SmallCard title=\"Sale w budynku\">\n                    <ScrollableList onAddItem={() => setCreateRoomModalOpen(true)}>\n                        {renderedRooms}\n                    </ScrollableList>\n                </SmallCard>\n            </Tip>\n            <br />\n        </>\n    );\n}\n\nexport default React.memo(RoomsList);","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport BuildingContext from \"./BuildingContext\";\nimport BuildingCard from \"./components/BuildingCard\";\nimport RoomsList from \"./components/RoomsList\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport Loading from \"../../../../shared/components/Loading\";\n\n\n\nconst LazyRoomOrBuildingChartTab = React.lazy(() => import(\"../components/RoomOrBuildingChartTab\"));\nconst RoomOrBuildingChartTab = () => <React.Suspense fallback={<Loading />}>\n    <LazyRoomOrBuildingChartTab />\n</React.Suspense>\n\n\nfunction BuildingPage() {\n    const { statsViewer } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <RoomOrBuildingChartTab /> });\n\n        return arr;\n    }, [\n        statsViewer\n    ]);\n\n\n    return (\n        <BuildingContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item container spacing={2} alignContent='flex-start' xs={12} md={5} lg={4}>\n                    <Grid item xs={12}>\n                        <BuildingCard />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <RoomsList />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </BuildingContext>\n    );\n};\n\nexport default React.memo(BuildingPage);","import { IconButton, Link, List, ListItem, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport useSession from \"../../../../auth/useSession\";\nimport { FavouriteBuilding, FavouriteRoom, FavType } from \"../../../../models/Metadata\";\nimport MetadataService from \"../../../../services/MetadataService\";\nimport SmallCard from \"../components/SmallCard\";\nimport { dynamicPaths } from \"../../../../shared/path\";\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\n\n\nfunction getCorrectListItem(data: FavouriteBuilding | FavouriteRoom): React.ReactNode {\n    switch (data.type) {\n        case FavType.Building: {\n            const { addressId, id, name } = data as FavouriteBuilding;\n            return <ListItemText key={name + id} primary={<Link href={dynamicPaths.toBuilding(addressId, id)}>Budynek {name}</Link>} />\n        }\n        case FavType.Room: {\n            const { addressId, buildingId, id, name } = data as FavouriteRoom;\n            return <ListItemText key={name + id} primary={<Link href={dynamicPaths.toRoom(addressId, buildingId, id)}>Sala {name}</Link>} />\n        }\n        default: return null;\n    }\n}\n\n\nfunction Favourites() {\n    const { user } = useSession();\n\n    const [data, setData] = React.useState<(FavouriteBuilding | FavouriteRoom)[]>()\n\n\n    React.useEffect(() => {\n        setData(MetadataService.favourites);\n    }, [user])\n\n    const handleRemoveFavourite = React.useCallback((item: FavouriteBuilding | FavouriteRoom) => {\n        MetadataService.removeFavourite(item);\n        setData(MetadataService.favourites);\n    }, []);\n\n    return (\n        <SmallCard title='Ulubione'>\n            <List sx={{ minHeight: '160px' }}>\n                {\n                    data?.map((item) => <ListItem disablePadding key={`${item.name}-${item.id}`}>\n                        {getCorrectListItem(item)}\n                        <IconButton\n                            title='usuń z ulubionych'\n                            aria-label='usuń z ulubionych'\n                            onClick={() => handleRemoveFavourite(item)}\n                            size='small'>\n                            <RemoveCircleOutlineIcon fontSize=\"small\" />\n                        </IconButton>\n                    </ListItem>\n                    )\n                }\n                {\n                    data?.length === 0 &&\n                    <ListItemText color='text.secondary' primary='Brak ulubionych' />\n                }\n            </List>\n        </SmallCard>\n    )\n}\n\nexport default React.memo(Favourites);\n","import { Button, InputBase } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport SaveIcon from '@mui/icons-material/Save';\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport SmallCard from \"../components/SmallCard\";\nimport MetadataService from \"../../../../services/MetadataService\";\n\n\n\nfunction Notebook() {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<string>();\n\n\n    React.useEffect(() => {\n        setData(MetadataService.notes)\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (!data) return;\n\n        try {\n            MetadataService.notes = data;\n\n            notify('Notatki zostały zapisane', 'success');\n            setData(undefined);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n    ]);\n\n\n    const handleChange = React.useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n        setData(event.target.value)\n    }, []);\n\n\n    return (\n        <SmallCard title='Notatnik'>\n            <Box component='form' onSubmit={handleSubmit} sx={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                flexDirection: 'column',\n            }}>\n                <InputBase\n                    aria-label=\"twoje notatki\"\n                    title='twoje notatki'\n                    multiline\n                    minRows={4}\n                    maxRows={10}\n                    name='search'\n                    value={data ?? MetadataService.notes ?? ''}\n                    onChange={handleChange}\n                    placeholder=\"Twoje notatki\"\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        p: 1,\n                        bgcolor: 'background.default'\n                    }}\n                    inputProps={{\n                        'aria-label': 'Twoje notatki'\n                    }}\n                />\n                <Button\n                    title='Zapisz notatki'\n                    aria-label='Zapisz notatki'\n                    sx={{ mr: '0px', ml: 'auto' }}\n                    startIcon={<SaveIcon />}\n                    type=\"submit\">\n                    Zapisz\n                </Button>\n            </Box>\n        </SmallCard >\n    );\n}\n\nexport default React.memo(Notebook);","import React from 'react';\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SmallCard from \"../components/SmallCard\";\n\n\n\nexport default function HomeReservations() {\n    return (\n        <SmallCard title='Rezerwacje'>\n            <GenericReservationsTab />\n        </SmallCard>\n    );\n}\n","import React from 'react';\nimport { Grid } from \"@mui/material\";\nimport Favourites from \"./Favourites\";\nimport Notebook from \"./Notebook\";\nimport HomeReservations from \"./HomeReservations\";\n\n\n\nexport default function HomePage() {\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12} lg={8}>\n                <HomeReservations />\n            </Grid>\n            <Grid item container spacing={2} xs={12} lg={4}\n                alignContent='flex-start'\n            >\n                <Grid item xs={12} sm={6} lg={12}>\n                    <Notebook />\n                </Grid>\n                <Grid item xs={12} sm={6} lg={12}>\n                    <Favourites />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","import React from 'react';\nimport Loading from '../../../../shared/components/Loading';\n\nconst LazyLogsPage = React.lazy(() => import('./LogsPage'));\n\n\nexport default function LogsPage() {\n    return <React.Suspense fallback={<Loading />}>\n        <LazyLogsPage />\n    </React.Suspense>\n}\n","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Divider, FormControl, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack } from '@mui/material';\nimport { RoomUpdateParams } from '../../../../../services/RoomService';\nimport { RoomType, RoomTypes } from '../../../../../models/Room';\nimport { useRoomContext } from '../RoomContext';\nimport ImageUploadField from '../../components/ImageUploadField';\nimport { useResourceMap } from '../../../../../contexts/ResourceMapContext';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport GenericModal from '../../components/GenericModal';\nimport FormGridContainer from '../../../../../shared/components/FormGridContainer';\n\n\n\ninterface RoomEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\nexport default function RoomEditForm({\n    open,\n    onClose,\n}: RoomEditFormProps) {\n    const { room, updateRoom } = useRoomContext();\n    const { allBuildings } = useResourceMap();\n\n    const [data, setData] = React.useState<RoomUpdateParams>({});\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number | boolean = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            case \"blocked\":\n                value = !event.target.checked;\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n\n        setData((old: RoomUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<RoomType | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'buildingId') value = Number(value);\n\n        event.target && setData((old: RoomUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateRoom(data)) {\n            onClose();\n        }\n    }, [\n        data,\n        updateRoom,\n        onClose\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno usuwania obiektu\"\n            sx={{\n                maxWidth: \"450px\",\n            }}\n        >\n            <Stack spacing={2}>\n                <ImageUploadField image={room.image} />\n                <Divider />\n\n                <FormGridContainer\n                    title='Edycja sali'\n                    subtitle=\"Zmień właściwości pokoju i zatwierdź zmiany.\"\n                    onSubmit={handleSubmit}\n                    onCancel={onClose}\n                >\n\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nazwa\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? room.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"room-type\">Typ Sali</InputLabel>\n                            <Select\n                                labelId=\"room-type\"\n                                id=\"roomType\"\n                                value={data.roomType ?? room.roomType}\n                                name=\"roomType\"\n                                label=\"Typ Sali\"\n                                onChange={handleSelectChange}\n                            >\n                                {Object.values(RoomTypes).map(val => <MenuItem key={val} value={val}>{val}</MenuItem>)}\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={6} >\n                        <TextField\n                            required\n                            name=\"seatsCount\"\n                            label=\"Ilość miejsc\"\n                            type=\"number\"\n                            id=\"seatsCount\"\n                            value={data.seatsCount ?? room.seatsCount}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <TextField\n                            required\n                            name=\"floor\"\n                            label=\"Piętro\"\n                            type=\"number\"\n                            id=\"floor\"\n                            value={data.floor ?? room.floor}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"wybierz-budynek\">Budynek</InputLabel>\n                            <Select\n                                labelId=\"wybierz-budynek\"\n                                name=\"buildingId\"\n                                value={data.buildingId ?? room.building.id}\n                                label=\"Budynek\"\n                                onChange={handleSelectChange}\n                            >\n                                {allBuildings.map(({ name, id }) => <MenuItem key={name} value={id} >Budynek &nbsp;{name} </MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            labelPlacement=\"start\"\n                            control={<Switch id=\"room-blocked\" name=\"blocked\"\n                                inputProps={{ 'aria-label': 'controlled' }}\n                                onChange={handleChange}\n                                checked={!(data.blocked ?? room.blocked)}\n                            />}\n                            label=\"Dostępność Sali\"\n                        />\n                    </Grid>\n\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    );\n}","import React from 'react';\nimport GenericModal from \"../../components/GenericModal\";\nimport RfidForm from \"../../components/RfidForm\";\nimport { useRoomContext } from \"../RoomContext\";\n\n\ninterface RfidModalRormProps {\n    open: boolean,\n    onClose: () => void,\n}\n\nexport default function RfidModalRorm(props: RfidModalRormProps) {\n    const { updateRFIDTag } = useRoomContext();\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={props.onClose}\n            aria-label=\"Okno przypisania tagu RFID\"\n            sx={{\n                maxWidth: \"400px\"\n            }}\n        >\n            <RfidForm\n                headline=\"Użyj czytnika, aby wprowadzić tag.\"\n                bodyText='Jeśli nie chcesz wprowadzać zmian, naciśnij \"Zamknij\"'\n                onScan={updateRFIDTag}\n                onClose={props.onClose}\n            />\n        </GenericModal>\n    );\n}\n","import React from 'react';\nimport CancelIcon, { } from '@mui/icons-material/Cancel';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\n\n\ninterface YesNoIconProps {\n    value: boolean,\n    title?: string,\n    fontSize?: 'small' | 'medium' | 'large',\n}\n\n\nexport default function YesNoIcon(props: YesNoIconProps) {\n    const { value, ...rest } = props;\n\n    return (\n        value ?\n            <CheckCircleOutlineIcon color=\"success\" {...rest} />\n            : <CancelIcon sx={{ color: \"red\" }} {...rest} />\n    )\n}","import { Chip, IconButton, Link, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport { DetailedRoom } from \"../../../../../models/Room\";\nimport { RfidForm } from \"../Forms\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport YesNoIcon from \"./YesNoIcon\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\nimport { Tip } from \"../../components/Tutorial\";\n\n\ninterface RoomTableInfoProps {\n    room: DetailedRoom,\n    deleteTag: () => Promise<void>\n}\n\n\nexport default function RoomTableInfo({\n    room, deleteTag\n}: RoomTableInfoProps) {\n    const { keysAdmin } = useResolvedAccess();\n    const { getBuildingLink } = useResourceMap();\n    const [rfidTagModalOpen, setRfidTagModalOpen] = React.useState<boolean>(false);\n\n    const tableRows = React.useMemo(() => {\n        const rows = [\n            {\n                label: \"Ilość miejsc\",\n                value: room.seatsCount\n            }, {\n                label: \"Piętro\",\n                value: room.floor === 0 ? \"parter\" : room.floor\n            }, {\n                label: \"Budynek\",\n                value: <Link href={getBuildingLink(room.building.id)}> {room.building.name} </Link>\n            }, {\n                label: \"Aktualnie wolny\",\n                value: <YesNoIcon value={!room.occupied} />\n            }\n        ];\n        keysAdmin && rows.push({\n            label: \"Tag RFID\",\n            value: room.RFIDTag ?\n                <Chip label={room.RFIDTag} onDelete={deleteTag} sx={{ maxWidth: '120px' }} />\n                : <Tip text='Kliknij \"+\" by przypisać klucz RFID' priority={10}>\n                    <IconButton size=\"small\"\n                        onClick={() => setRfidTagModalOpen(true)}\n                        sx={{ p: '0px' }}\n                    >\n                        <AddCircleIcon />\n                    </IconButton>\n                </Tip>\n        });\n        rows.push({\n            label: \"Dostępny do rezerwacji\",\n            value: <YesNoIcon value={!room.blocked} />\n        });\n\n        return rows;\n    }, [\n        keysAdmin,\n        room,\n        deleteTag,\n        getBuildingLink,\n    ]);\n\n\n    const RenderedRows = React.useMemo(() => {\n        return tableRows.map(({ label, value }) =>\n            <TableRow hover key={label}>\n                <TableCell sx={{ color: \"text.secondary\" }} align=\"left\">{label}</TableCell>\n                <TableCell sx={{ color: \"primary.main\", fontWeight: \"bold\" }} align=\"left\">{value}</TableCell>\n            </TableRow>\n        )\n    }, [tableRows])\n\n\n    return (\n        <>\n            <RfidForm\n                open={rfidTagModalOpen}\n                onClose={() => setRfidTagModalOpen(false)}\n            />\n\n            <TableContainer >\n                <Table aria-label=\"room-info-table\" size=\"small\">\n                    <TableHead sx={{ display: 'none' }}>\n                        <TableRow>\n                            <TableCell align=\"left\">Właściwość</TableCell>\n                            <TableCell align=\"left\">stan</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {RenderedRows}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n}\n","import { Card, CardContent, CardHeader, CardMedia } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport RoomTableInfo from \"./RoomTableInfo\";\nimport React from \"react\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport { useRoomContext } from \"../RoomContext\";\nimport Loading from \"../../../../../shared/components/Loading\";\nimport { RoomEditForm } from \"../Forms\";\nimport FavouriteButton from \"../../components/FavouriteButton\";\nimport { FavType } from \"../../../../../models/Metadata\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useHistory } from \"react-router-dom\";\nimport paths from \"../../../../../shared/path\";\nimport { Tip } from \"../../components/Tutorial\";\n\n\n\nexport default function RoomCard() {\n    const { premisesAdmin, logsAdmin } = useResolvedAccess();\n    const { room, deleteRoom, deleteRFIDTag } = useRoomContext();\n    const history = useHistory();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n\n\n    const options = React.useMemo(() => {\n        const opt = [\n            {\n                label: 'Edytuj',\n                action: () => setEditModalOpen(true),\n                icon: <EditIcon color='success' />\n            }, {\n                label: 'Usuń',\n                action: () => setDeleteModalOpen(true),\n                icon: <DeleteIcon color='error' />\n            }\n        ];\n        logsAdmin && opt.push({\n            icon: <SearchIcon color='primary' />,\n            label: 'Logs Explorer',\n            action: () => history.push(`${paths.LOGS}?endpoint=%/rooms/${room.id}`)\n        });\n        return opt;\n    }, [\n        history,\n        logsAdmin,\n        room.id\n    ]);\n\n\n    return (\n        !Boolean(room) ? <Loading /> :\n            <>\n                {premisesAdmin &&\n                    <>\n                        <DeleteModal\n                            open={deleteModalOpen}\n                            onClose={() => setDeleteModalOpen(false)}\n                            onSuccess={deleteRoom}\n                        />\n\n                        <RoomEditForm\n                            open={editModalOpen}\n                            onClose={() => setEditModalOpen(false)}\n                        />\n                    </>\n                }\n\n                <Card elevation={0}>\n                    <CardHeader\n                        action={\n                            premisesAdmin &&\n                            <MoreVertMenu options={options} />\n                        }\n                        title={\n                            <>\n                                {room.name}\n                                <FavouriteButton data={{\n                                    id: room.id,\n                                    name: room.name,\n                                    type: FavType.Room,\n                                    addressId: room.building.address,\n                                    buildingId: room.building.id\n                                }} />\n                            </>\n                        }\n                        subheader={<>\n                            {room.roomType}\n                        </>}\n                    />\n                    <CardMedia\n                        component=\"img\"\n                        height=\"350\"\n                        image={ImageService.getLink(room.image)}\n                        alt={room.name}\n                    />\n                    <CardContent>\n                        <Tip text='Tutaj znajdują się informacje na temat Sali' priority={20}>\n                            <RoomTableInfo room={room} deleteTag={deleteRFIDTag} />\n                        </Tip>\n                        <br />\n                        <DatesFooter model={room} />\n                    </CardContent>\n                </Card>\n            </>\n    );\n}\n","import { RoomContextProvider } from \"./RoomContext\";\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport RoomCard from \"./components/RoomCard\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport Loading from \"../../../../shared/components/Loading\";\n\n\nconst LazyRoomOrBuildingChartTab = React.lazy(() => import(\"../components/RoomOrBuildingChartTab\"));\nconst RoomOrBuildingChartTab = () => <React.Suspense fallback={<Loading />}>\n    <LazyRoomOrBuildingChartTab />\n</React.Suspense>\n\n\nexport default function RoomPage() {\n    const { statsViewer } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <RoomOrBuildingChartTab /> });\n\n        return arr;\n    }, [\n        statsViewer\n    ]);\n\n\n    return (\n        <RoomContextProvider>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item xs={12} md={5} lg={4}>\n                    <RoomCard />\n                </Grid>\n            </Grid>\n        </RoomContextProvider>\n    );\n}\n","import React from 'react';\nimport Loading from '../../../../shared/components/Loading';\n\nconst LazySettingsPage = React.lazy(() => import('./SettingsPage'));\n\n\nexport default function SettingsPage() {\n    return <React.Suspense fallback={<Loading />}>\n        <LazySettingsPage />\n    </React.Suspense>\n};\n\n","import React from \"react\";\nimport useSession from \"../../../../../auth/useSession\";\nimport GenericModal from \"../../components/GenericModal\";\nimport PasswordChangeForm from '../../../public/ChangePassword/Form';\n\ninterface EditUserFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\nexport default function PasswordChangeModal({\n    open,\n    onClose\n}: EditUserFormProps) {\n    const { logout } = useSession();\n\n    const close = React.useCallback(() => {\n        onClose();\n\n    }, [onClose]);\n\n    const onSuccess = React.useCallback(() => {\n        logout();\n    }, [logout]);\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            sx={{\n                maxWidth: '450px'\n            }}\n        >\n            <PasswordChangeForm onSuccess={onSuccess} />\n        </GenericModal>\n    )\n}","import Divider from \"@mui/material/Divider\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { DetailedUser } from \"../../../../../models/User\";\nimport { UpdateUserParams } from \"../../../../../services/UserService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../components/GenericModal\";\nimport ImageUploadField from \"../../components/ImageUploadField\";\nimport { useUser } from \"../UserContext\";\n\n\n\ninterface EditUserFormProps {\n    open: boolean,\n    onClose: () => void,\n    user: DetailedUser,\n}\n\n\nexport default function EditUserForm({\n    open,\n    onClose,\n    user,\n}: EditUserFormProps) {\n    const { updateUser } = useUser();\n\n    const [data, setData] = React.useState<UpdateUserParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const onSubmit = React.useCallback(async () => {\n        if (await updateUser(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateUser,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            sx={{\n                maxWidth: '450px'\n            }}\n        >\n            <Stack spacing={3}>\n\n                <ImageUploadField image={user.image} />\n\n                <Divider />\n\n                <FormGridContainer\n                    title=\"Edycja użytkownika\"\n                    subtitle=\"Zmień dane użytkownika. Zmiany w całej aplikacji będą widoczne po ponownym przeładowaniu aplikacji.\"\n                    onSubmit={onSubmit}\n                    onCancel={close}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Imię\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? user.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"surname\"\n                            label=\"Nazwisko\"\n                            name=\"surname\"\n                            value={data.surname ?? user.surname}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    )\n}","import React from \"react\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport { useUser } from \"../UserContext\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ChangePasswordForm, UserEditForm } from \"../Forms\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { displayDate } from \"../../../../../shared/utils\";\nimport { Link, Typography } from \"@mui/material\";\nimport DatesFooter from \"../../components/DatesFooter\";\nimport useResolvedAccess from \"../../hooks/useResolvedAccess\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useHistory } from \"react-router-dom\";\nimport paths from \"../../../../../shared/path\";\n\n\n\nexport default function UserCard() {\n    const { myId, owner, logsAdmin } = useResolvedAccess();\n    const { user, deleteUser } = useUser();\n    const history = useHistory();\n\n    const [editModal, setEditModal] = React.useState(false);\n    const [passModal, setPassModal] = React.useState(false);\n    const [deleteModal, setDeleteModal] = React.useState(false);\n\n\n    const options = React.useMemo(() => {\n        const opt = [\n            {\n                label: 'Edytuj',\n                action: () => setEditModal(true),\n                icon: <EditIcon color='success' />\n            }, {\n                label: 'Zmień hasło',\n                action: () => setPassModal(true),\n                icon: <PasswordIcon color='warning' />\n            }, {\n                label: 'Usuń konto',\n                action: () => setDeleteModal(true),\n                icon: <DeleteIcon color='error' />\n            }\n        ];\n        logsAdmin && opt.push({\n            icon: <SearchIcon color='primary' />,\n            label: 'Logs Explorer',\n            action: () => history.push(`${paths.LOGS}?endpoint=%/users/${user.id}`)\n        });\n        \n        return opt;\n    }, [\n        history,\n        logsAdmin,\n        user.id\n    ]);\n\n\n    return (\n        <>\n\n            {(myId(user.id) || owner) && <>\n                <DeleteModal\n                    open={deleteModal}\n                    onClose={() => setDeleteModal(false)}\n                    onSuccess={deleteUser}\n                />\n\n                <UserEditForm\n                    user={user}\n                    open={editModal}\n                    onClose={() => setEditModal(false)}\n                />\n\n                <ChangePasswordForm\n                    open={passModal}\n                    onClose={() => setPassModal(false)}\n                />\n            </>\n            }\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={(myId(user.id) || owner) && <MoreVertMenu options={options} />}\n                    title={<>{user.name} {user.surname}</>}\n                    subheader={<a href={`mailto:${user.email}`}>\n                        {user.email}\n                    </a>}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"350\"\n                    image={ImageService.getLink(user.image)}\n                    alt={user.email}\n                />\n                <CardContent>\n                    <Typography color='text.secondary' variant=\"subtitle1\">\n                        Ostatnio aktywny: {displayDate(user.lastActivity)}<br />\n                        Klasa dostępu: {<Link href={paths.ACCESS}>{user.access.name}</Link>}\n                    </Typography>\n                    <br />\n                    <DatesFooter model={user} />\n                </CardContent>\n            </Card>\n        </>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport Loading from \"../../../../shared/components/Loading\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\nimport UserCard from \"./components/UserCard\";\nimport { UserContext } from \"./UserContext\";\n\n\n\nconst LazyUserCharts = React.lazy(() => import(\"./components/UserCharts\"));\nconst UserCharts = () => <React.Suspense fallback={<Loading />}>\n    <LazyUserCharts />\n</React.Suspense>\n\n\nexport default function UserPage() {\n    const { statsViewer } = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr: any = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        statsViewer && arr.push({ name: 'Statystyki', component: <UserCharts /> });\n\n        return arr;\n    }, [\n        statsViewer,\n    ]);\n\n\n    return (\n        <UserContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item xs={12} md={5} lg={4}>\n                    <UserCard />\n                </Grid>\n            </Grid>\n        </UserContext>\n    );\n}","import React from \"react\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport User from \"../../../../../models/User\";\nimport UserService, { UserQueryParams } from \"../../../../../services/UserService\";\nimport Loading from \"../../../../../shared/components/Loading\";\nimport UsersContextValue from \"./UsersContextValue\";\n\n\n\nexport const usersContext: any = React.createContext(null);\n\n\ninterface UsersContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\nexport default function UsersContextProvider(props: UsersContextProviderProps) {\n    const notify = useNotification();\n    const { queryParams, setQueryParams } = useQueryParams<UserQueryParams>();\n\n    const [users, setUsers] = React.useState<User[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await UserService.getUsers(queryParams);\n            setQueryParams(old => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount\n            }));\n            setUsers(resp.data as User[]);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setUsers([]);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        notify,\n        queryParams.itemsOnPage,\n        queryParams.currentPage,\n        queryParams.search,\n        queryParams.deleted,\n        queryParams.activated\n    ]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    if (!users) return <Loading />;\n\n    return (\n        <usersContext.Provider value={{\n            users,\n        } as UsersContextValue}>\n            {props.children}\n        </usersContext.Provider>\n    )\n}","import { FormControlLabel, Grid, Switch } from \"@mui/material\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport { UserQueryParams } from \"../../../../../../services/UserService\";\nimport React from \"react\";\nimport LazyInput from \"../../../components/LazyInput\";\n\n\nfunction SearchBar() {\n    const { setQueryParams, queryParams } = useQueryParams<UserQueryParams>();\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        let value: string | number | boolean = event.target.value;\n\n        switch (event.target.name) {\n            case \"deleted\":\n            case \"activated\":\n                value = Boolean(event.target.checked);\n                break;\n            case 'search':\n                break;\n            default:\n                break;\n        }\n\n        setQueryParams((old: UserQueryParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, [setQueryParams]);\n\n\n    return (\n        <Grid container>\n            <Grid item xs={12} md={8}>\n                <LazyInput\n                    label='wyszukaj'\n                    name='search'\n                    value={queryParams.search ?? ''}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} md={4} display='flex' justifyContent='start' flexWrap='wrap' color='text.secondary'>\n                <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch id=\"aktywni-użytkownicy\" name=\"activated\"\n                        inputProps={{ 'aria-label': 'aktywni-użytkownicy' }}\n                        onChange={handleChange}\n                        checked={queryParams.activated}\n                    />}\n                    label=\"Aktywne konta\"\n                />\n                <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch id=\"unsunięci-użytkownicy\" name=\"deleted\"\n                        inputProps={{ 'aria-label': 'unsunięci-użytkownicy' }}\n                        onChange={handleChange}\n                        checked={queryParams.deleted}\n                    />}\n                    label=\"Usunięte konta\"\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(SearchBar);","import React from 'react';\nimport { Link } from \"@mui/material\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport User from \"../../../../../../../models/User\";\nimport ImageService from \"../../../../../../../services/ImageService\";\nimport { dynamicPaths } from \"../../../../../../../shared/path\";\n\n\n\ninterface UserListItemProps {\n    user: User\n}\n\nexport default function UserListItem({ user }: UserListItemProps) {\n    return (\n        <ListItem button\n            component={Link}\n            href={dynamicPaths.toUser(user.id)}\n        >\n            <ListItemAvatar\n                title={user.email}\n                aria-label={user.email}\n            >\n                <Avatar src={ImageService.getLink(user.image)} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={`${user.name} ${user.surname}`}\n                secondary={\n                    <>\n                        {user.email}\n                    </>\n                }\n            />\n        </ListItem>\n    );\n}","import React from 'react';\nimport { ListItem, ListItemText } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport { useUsers } from \"../../../UsersContext\";\nimport UserListItem from \"./UserListItem\";\n\n\n\nexport default function UsersList() {\n    const { users } = useUsers();\n\n    return (\n        <List>\n            {\n                users.length === 0 && <ListItem>\n                    <ListItemText primary='Brak użytkowników spełniających kryteria' />\n                </ListItem>\n            }\n            {\n                users.map((item) => <UserListItem key={item.id} user={item} />)\n            }\n        </List>\n    );\n}\n\n","import React from \"react\";\nimport { UsersContextValue } from \".\";\nimport { usersContext } from \"./UsersContextProvider\";\n\n\n\nexport default function useUsers(){\n    return React.useContext(usersContext) as UsersContextValue\n}","import React from 'react';\nimport { Stack } from \"@mui/material\";\nimport TabHeadLine from \"../../../../../../shared/components/TabHeadLine\";\nimport ListPagination from \"../../../components/ListPagination\";\nimport SearchBar from \"./SearchBar\";\nimport UsersList from \"./UsersList\";\n\n\n\nexport default function UsersView() {\n    return (\n        <Stack spacing={3}>\n            <TabHeadLine\n                title='Lista użytkowników'\n                subtitle='Wyszukuj użytkowników według podanych kryteriów.'\n            />\n\n            <SearchBar />\n\n            <UsersList />\n\n            <ListPagination />\n        </Stack>\n    );\n}","import React from 'react';\nimport { AllUsersChartsData } from \"../../../../../models/Stats\";\nimport { Chart, ChartSection, ChartsTab, useCharts } from \"../../components/Charts\";\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport { Button } from \"@mui/material\";\nimport { usePDF } from \"@react-pdf/renderer\";\nimport PDFPage from \"../../components/PDF/PDFPage\";\nimport Table from \"../../components/PDF/Table\";\n\n\n\nexport default function UsersCharts() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n\nfunction ActualLoader() {\n    const { chartsData } = useCharts<AllUsersChartsData>();\n\n\n    const [PDF] = usePDF({\n        document: <PDFPage\n            subject='Statystyki użytkowników'\n            sections={\n                [\n                    <Table\n                        title=\"Statystyki użytkowników\"\n                        rows={[\n                            [\n                                'email',\n                                'ilość rezerwacji',\n                                'czas rezerwacji',\n                                'średni czas rezerwacji',\n                                'średni planowany czas rezerwacji'\n                            ]\n                            , ...chartsData.users.map(r => [\n                                r.email,\n                                r.reservationsCount,\n                                r.allTimeMinutes,\n                                r.avgActualTimeMinutes,\n                                r.avgPlannedTimeMinutes\n                            ])\n                        ]}\n                    />\n                ]} />\n    });\n\n\n    return (\n        <>\n            {\n                (PDF.loading || !PDF.url) ?\n                    <p>loading pdf ...</p>\n                    :\n                    <Button startIcon={<PictureAsPdfIcon />}>\n                        <a href={PDF.url} download={'stats.pdf'} title='pobierz tabele pdf'>\n                            Pobierz raport pdf\n                        </a>\n                    </Button>\n            }\n            <ChartSection defaultOpen title='Statystyki użytkowników'>\n                <Chart\n                    fullWidth={chartsData.users.length >= 6}\n                    title='Ilość rezerwacji na użytkownika'\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                    ]}\n                />\n                <Chart\n                    fullWidth={chartsData.users.length >= 6}\n                    title=\"Czas wszystkich reserwacji w dany dzień\"\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title=\"Średnie czasy rezerwacji\"\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                        { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                    ]}\n                />\n            </ChartSection>\n        </>\n    );\n}","import { QueryParamsContext } from \"../../../../contexts/QueryParamsContext\";\nimport { UserQueryParams } from \"../../../../services/UserService\";\nimport { UsersContext } from \"./UsersContext\";\nimport React from \"react\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport UsersView from \"./components/UsersView\";\nimport UsersCharts from \"./components/UsersCharts\";\nimport useResolvedAccess from \"../hooks/useResolvedAccess\";\n\n\n\nexport default function UsersPage() {\n    const { statsViewer} = useResolvedAccess();\n\n    const pages = React.useMemo(() => {\n        let arr = [\n            { name: 'Użytkownicy', component: <UsersView /> }\n        ];\n\n        statsViewer && arr.push({ name: 'Statystyki', component: <UsersCharts /> });\n\n        return arr;\n    }, [\n        statsViewer\n    ]);\n\n\n    return (\n        <QueryParamsContext\n            name=\"users-query-params\"\n            default={{\n                deleted: false,\n                activated: true,\n                search: '',\n                itemsOnPage: 10,\n                currentPage: 1\n            } as UserQueryParams}\n        >\n            <UsersContext>\n                <SwipeableTabs tabs={pages} />\n            </UsersContext>\n        </QueryParamsContext>\n    );\n}","import React from 'react';\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport useSession from \"../../../auth/useSession\";\nimport paths from \"../../../shared/path\";\nimport AccessPage from \"./AccessPage\";\nimport AddressPage from \"./AddressPage\";\nimport BuildingPage from \"./BuildingPage\";\nimport HomePage from \"./HomePage\";\nimport LogsPage from \"./LogsPage\";\nimport RoomPage from \"./RoomPage\";\nimport SettingsPage from \"./SettingsPage\";\nimport UserPage from \"./UserPage\";\nimport UsersPage from \"./UsersPage\";\n\n\n\nexport default function ProtectedPages() {\n    const { user } = useSession();\n\n    if (!user) return <Redirect to={paths.PUBLIC} />\n\n    return (\n        <Switch>\n            <Route path={paths.ROOM} component={RoomPage} />\n            <Route path={paths.BUILDING} component={BuildingPage} />\n            <Route path={paths.ADDRESS} component={AddressPage} />\n\n            <Route path={paths.SETTINGS} component={SettingsPage} />\n            <Route path={paths.ACCESS} component={AccessPage} />\n            <Route path={paths.USER} component={UserPage} />\n            <Route path={paths.USERS} component={UsersPage} />\n            <Route path={paths.LOGS} component={LogsPage} />\n            <Route path={paths.HOME} component={HomePage} />\n\n            <Route path={paths.INFRASTRUCTURE}>\n                Zasoby\n            </Route>\n            <Route path={paths.HOME + '/*'}>\n                <Redirect to={paths.HOME} />\n            </Route>\n        </Switch>\n    );\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport paths from \"../../../shared/path\";\nimport Loading from \"../../../shared/components/Loading\";\nimport React from \"react\";\nimport useSession from \"../../../auth/useSession\";\n\n\nconst Activation = React.lazy(() => import('./Activation'));\nconst Login = React.lazy(() => import('./Login'));\nconst Register = React.lazy(() => import('./Register'));\nconst ChangePassword = React.lazy(() => import('./ChangePassword'));\nconst Welcome = React.lazy(() => import('./Welcome'));\n\n\nexport default function PublicPages() {\n    const { user } = useSession();\n\n    if (user) return <Redirect to={paths.HOME} />\n\n    return (\n        <Switch>\n            <React.Suspense fallback={<Loading />}>\n                <Route path={paths.LOGIN} component={Login} />\n                <Route path={paths.REGISTER} component={Register} />\n                <Route path={paths.ACTIVATE} component={Activation} />\n                <Route path={paths.REMIND_PASSWORD} component={ChangePassword} />\n                <Route path={paths.PUBLIC} exact component={Welcome} />\n            </React.Suspense>\n\n            <Route path=\"*\">\n                <Redirect to={paths.PUBLIC} />\n            </Route>\n        </Switch>\n    );\n}","import React from 'react';\nimport { Box } from '@mui/system';\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport paths from '../../shared/path';\n\nimport ProtectedPages from './protected';\nimport PublicPages from './public';\n\n\nconst tabStyle = {\n    minHeight: \"84vh\",\n    padding: \"1.5vh 0px\"\n}\n\n\nexport default function Tabs() {\n    return (\n        <Box sx={tabStyle}>\n            <Switch>\n                <Route path={paths.HOME} component={ProtectedPages} />\n                <Route path={paths.PUBLIC} component={PublicPages} />\n                <Route path='*'> \n                    <Redirect to={paths.PUBLIC} />\n                </Route>\n            </Switch>\n        </Box>\n    );\n}","import { Typography } from \"@mui/material\";\nimport React from \"react\";\n\n\nfunction Copyright() {\n    return (\n        <Typography\n            align=\"center\"\n            sx={{\n                backgroundColor: \"primary.dark\",\n                padding: 2,\n                color: \"primary.light\"\n            }}\n        >\n            &copy; Szymon Rykała 2021/2022\n        </Typography>\n    );\n}\n\nexport default React.memo(Copyright);","import React from \"react\";\nimport { Container, Link, List, ListItem, Typography } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport useSession from \"../../auth/useSession\";\nimport paths from \"../../shared/path\";\nimport useResolvedAccess from \"../pages/protected/hooks/useResolvedAccess\";\n\n\ninterface LinkListItem {\n    name: string,\n    link: string\n}\n\n\nconst LinkItem = (props: LinkListItem) =>\n    <ListItem\n        sx={{\n            width: '30%',\n            minWidth: '200px'\n        }}>\n        <Link\n            sx={{ color: 'background.default' }}\n            href={props.link}\n        >\n            {props.name}\n        </Link>\n    </ListItem>\n    ;\n\n\nfunction Links() {\n    const { user } = useSession();\n    const access = useResolvedAccess();\n\n\n    const linksList = React.useMemo(() => {\n        const list = [];\n        if (user) {\n            list.push({ name: 'Mój Profil', link: paths.MY_PROFILE }, { name: 'Home', link: paths.HOME });\n            access.accessAdmin && list.push({ name: 'Dostępy', link: paths.ACCESS });\n            access.owner && list.push({ name: 'Ustawienia', link: paths.SETTINGS });\n        } else {\n            list.push(\n                { name: 'Strona główna', link: paths.PUBLIC },\n                { name: 'Logowanie', link: paths.LOGIN },\n                { name: 'Rejestracja', link: paths.REGISTER },\n                { name: 'Aktywacja Konta', link: paths.ACTIVATE }\n            );\n        }\n        return list;\n    }, [\n        user,\n        access?.accessAdmin,\n        access?.owner,\n    ]);\n\n\n    const links = React.useMemo(() => {\n\n        return linksList.filter(item => item.link)\n            .map((item) => <LinkItem key={item.name} {...item} />);\n    }, [\n        linksList\n    ]);\n\n    return (\n        <Box\n            sx={{\n                backgroundColor: \"primary.main\"\n            }}\n        >\n            <Container>\n                <Typography sx={{ pt: 2 }} component='p' variant='body2' color='background.default'>\n                    Przydatne linki:\n                </Typography>\n                <List sx={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignContent: 'center',\n                    justifyContent: 'flex-start',\n                    flexWrap: 'wrap'\n                }}>\n\n                    {links}\n                </List>\n            </Container>\n        </Box>\n    );\n}\n\nexport default React.memo(Links);","import React from 'react';\nimport {\n    Grid,\n} from \"@mui/material\";\n\nimport { Box } from \"@mui/system\";\n\nimport Copyright from \"./Copyrights\";\nimport Links from \"./Links\";\n\n\n\n\nexport default function Footer() {\n\n    return (\n        <Box >\n            <Grid container\n                direction=\"column\"\n                alignItems=\"stretch\"\n            >\n                <Grid item>\n                    <Links />\n                </Grid>\n                <Grid item>\n                    <Copyright />\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\n\n\n\n","import React from \"react\";\nimport { Link, List, ListItem, ListItemIcon, ListItemText, SvgIconTypeMap } from \"@mui/material\";\nimport HomeIcon from '@mui/icons-material/Home';\nimport AccountIcon from '@mui/icons-material/AccountCircle';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\nimport PeopleIcon from '@mui/icons-material/People';\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport paths from \"../../../shared/path\";\nimport { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport useResolvedAccess from \"../../pages/protected/hooks/useResolvedAccess\";\n\n\n\ninterface NavListItem {\n  label: string,\n  href: string,\n  icon: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>\n}\n\n\nconst navListItems: NavListItem[] = [\n  {\n    label: \"Panel Główny\",\n    href: paths.HOME,\n    icon: HomeIcon\n  }, {\n    label: \"Moje Konto\",\n    href: paths.MY_PROFILE,\n    icon: AccountIcon\n  }\n];\n\n\nconst settingsItem: NavListItem = {\n  label: 'Ustawienia Platformy',\n  href: paths.SETTINGS,\n  icon: SettingsIcon\n};\n\n\nconst accessLinkItem: NavListItem = {\n  label: 'Klasy dostępu',\n  href: paths.ACCESS,\n  icon: VerifiedUserIcon\n};\n\n\nconst usersLinkItem: NavListItem = {\n  label: 'Użytkownicy',\n  href: paths.USERS,\n  icon: PeopleIcon\n};\n\nconst logsLinkItem: NavListItem = {\n  label: 'Logs Explorer',\n  href: paths.LOGS,\n  icon: SearchIcon\n};\n\nconst MainListItem = React.memo((props: NavListItem) =>\n  <ListItem button component={Link} href={props.href}>\n    <ListItemIcon color=\"primary\">\n      {<props.icon color='primary' />}\n    </ListItemIcon>\n    <ListItemText primary={props.label} />\n  </ListItem >\n);\n\n\nexport default function MainDrawerList() {\n  const { accessAdmin, owner, logsAdmin } = useResolvedAccess();\n\n  const result = React.useMemo(() => {\n    let list = Object.assign([], navListItems) as NavListItem[];\n\n    list.push(usersLinkItem);\n    accessAdmin && list.push(accessLinkItem);\n    logsAdmin && list.push(logsLinkItem);\n    owner && list.push(settingsItem);\n\n    return list;\n  }, [\n    accessAdmin,\n    logsAdmin,\n    owner\n  ]);\n\n\n  const renderedList = React.useMemo(() =>\n    result.map((item) => <MainListItem key={item.label} {...item} />)\n    , [result]);\n\n\n  return (\n    <List>\n      {renderedList}\n    </List>\n  );\n}","import React from 'react';\nimport { Box } from \"@mui/material\";\n\n\ninterface DrawerPanelProps {\n    children: React.ReactNode,\n    toggleOpen: any,\n}\n\n\nexport default function DrawerPanel({\n    children,\n    toggleOpen\n}: DrawerPanelProps) {\n    return (\n        <Box\n            sx={{ width: 320 }}\n            role=\"presentation\"\n            onClick={toggleOpen}\n            onKeyDown={toggleOpen}\n        >\n            {children}\n        </Box>\n    );\n}","import React from 'react';\nimport { Avatar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { SessionUser } from \"../../../models/User\";\nimport ImageService from \"../../../services/ImageService\";\n\n\ninterface AvatarViewProps {\n    user: SessionUser | null,\n}\n\n\nexport default function AvatarView({\n    user\n}: AvatarViewProps) {\n    return (\n        <Box\n            onClick={(ev) => ev.stopPropagation()}\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                padding: 2,\n                color: 'primary.dark'\n            }}\n        >\n            <Avatar\n                alt={`${user?.name} ${user?.surname}`}\n                src={ImageService.getLink(user?.image)}\n                sx={{\n                    width: '120px',\n                    height: '120px',\n                    fontSize: '36px',\n                    mt: 2,\n                    mb: 2,\n                }}\n            />\n            <Typography>\n                {user?.name}&nbsp;{user?.surname}\n            </Typography>\n            <Typography>\n                <a href={`mailto:${user?.email}`}>\n                    {user?.email}\n                </a>\n            </Typography>\n        </Box>\n    );\n}","import React from \"react\";\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport { Collapse, IconButton, Link, ListItemButton, ListItemIcon, ListItemText, Stack } from \"@mui/material\";\nimport StorageService from \"../../../../services/StorageService\";\n\n\n\ninterface CallapsableListItemProps {\n    name: string,\n    href?: string\n    children: React.ReactNode,\n    icon?: React.ReactNode,\n    sx?: any\n}\n\n\nexport default function CollapseableListItem(props: CallapsableListItemProps) {\n    const [open, setOpen] = React.useState<boolean>(false);\n\n    const OPENED_NAME = React.useMemo(() => `${props.name}-nav-item`, [props.name]);\n\n    React.useEffect(() => {\n        setOpen(StorageService.read(OPENED_NAME));\n    }, [OPENED_NAME]);\n\n    const handleOpen = React.useCallback((ev: React.MouseEvent) => {\n        ev.stopPropagation()\n        StorageService.save(OPENED_NAME, !open);\n        setOpen(old => !old);\n    }, [\n        OPENED_NAME,\n        open\n    ]);\n\n    return (\n        <>\n            <Stack direction=\"row\">\n                <ListItemButton component={Link} href={props.href} sx={props.sx}>\n                    <ListItemIcon>\n                        {props.icon}\n                    </ListItemIcon>\n\n                    <ListItemText primary={props.name} />\n                </ListItemButton>\n\n                <IconButton sx={{ width: '42px', height: '42px' }} size='medium' onClick={handleOpen}>\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                </IconButton>\n            </Stack>\n\n            <Collapse in={open} timeout=\"auto\" >\n                <Stack sx={props.sx}>\n                    {props.children}\n                </Stack>\n            </Collapse>\n        </>\n    );\n}\n","import React from \"react\";\nimport { Box, Link, ListItem, ListItemIcon } from \"@mui/material\";\nimport { MapItem } from \"../../../../models/AddressMap\";\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport paths from \"../../../../shared/path\";\n\n\n\nfunction RoomListItem(props: MapItem) {\n    return (\n        <ListItem button component={Link} href={`${paths.HOME}${props.href}`}>\n            <Box sx={{ width: '100%' }} >\n                <ListItemIcon >\n                    <ArrowRightIcon />\n                </ListItemIcon>\n                {props.name}\n            </Box>\n        </ListItem>\n    );\n}\n\nexport default React.memo(RoomListItem);","import React from 'react';\nimport BungalowIcon from '@mui/icons-material/Bungalow';\nimport MapIcon from '@mui/icons-material/Map';\nimport { Stack } from \"@mui/material\";\nimport { useResourceMap } from '../../../../contexts/ResourceMapContext';\nimport paths from '../../../../shared/path';\nimport CollapseableListItem from \"./CollapseableListItem\";\nimport RoomListItem from \"./RoomListItem\";\n\n\nexport default function ResourcesList() {\n    const { resourceMap } = useResourceMap();\n\n    const rendered = React.useMemo(() => {\n        return resourceMap?.map(({ id, name, href, buildings }) =>\n            <CollapseableListItem\n                key={id}\n                name={name}\n                href={`${paths.HOME}${href}`}\n                icon={<MapIcon color=\"primary\" />}\n                sx={{ width: '100%' }}\n            >\n                {buildings.map(({ id, name, href, rooms }) =>\n                    <CollapseableListItem\n                        key={id}\n                        name={name}\n                        href={`${paths.HOME}${href}`}\n                        icon={<BungalowIcon color=\"primary\" />}\n                        sx={{\n                            pl: 6,\n                            width: '100%',\n                        }}\n                    >\n                        {rooms.map((roomEntry) => <RoomListItem key={roomEntry.id} {...roomEntry} />)}\n\n                    </CollapseableListItem>)}\n            </CollapseableListItem>)\n    }, [resourceMap]);\n\n    return (\n        <Stack>\n            {rendered}\n        </Stack>\n    );\n}\n\n\n","import React from \"react\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport { CreateAddressForm } from \"../../pages/protected/AddressPage/Forms\";\nimport AddIcon from '@mui/icons-material/Add';\n\n\n\nexport default function CreateAddressButton() {\n    const [formOpen, setFormOpen] = React.useState<boolean>(false);\n\n    const handleClick = React.useCallback((ev) => {\n        ev.stopPropagation();\n        setFormOpen(true);\n    }, []);\n\n    return (\n        <>\n            <CreateAddressForm\n                open={formOpen}\n                onClose={() => setFormOpen(false)}\n            />\n            <ListItem button\n                component='div'\n                onClick={handleClick}\n                sx={{ color: 'primary.dark' }}\n            >\n                <ListItemIcon>\n                    <AddIcon color='primary' />\n                </ListItemIcon>\n                Dodaj adres\n            </ListItem>\n        </>\n    );\n}","import React from \"react\";\nimport { Divider, Drawer, ListItem, ListItemText } from \"@mui/material\";\nimport MainDrawerList from \"./MainDrawerList\";\nimport DrawerPanel from \"./DrawerPanel\";\nimport AvatarView from './AvatarView';\nimport useSession from \"../../../auth/useSession\";\nimport ResourcesList from \"./ResourcesList\";\nimport CreateAddressButton from \"./CreateAddressButton\";\nimport useResolvedAccess from \"../../pages/protected/hooks/useResolvedAccess\";\n\n\ninterface AppDrawerProps {\n    open: boolean,\n    toggleOpen: any,\n}\n\nexport default function AppDrawer({ toggleOpen, open }: AppDrawerProps) {\n    const { premisesAdmin } = useResolvedAccess();\n    const { user } = useSession();\n\n    return (\n        <Drawer\n            variant=\"temporary\"\n            ModalProps={{\n                keepMounted: true\n            }}\n            anchor=\"left\"\n            open={open}\n            onClose={toggleOpen}\n        >\n            <DrawerPanel toggleOpen={(toggleOpen)}>\n                <AvatarView user={user} />\n\n                <Divider />\n                <MainDrawerList />\n\n                <Divider />\n                <ListItem\n                    onClick={(ev: React.MouseEvent) => ev.stopPropagation()}\n                    component=\"div\"\n                    sx={{ pb: 0, color: 'text.disabled' }}\n                >\n                    <ListItemText>\n                        Zasoby:\n                    </ListItemText>\n                </ListItem>\n                <ResourcesList />\n\n            </DrawerPanel>\n            {\n                premisesAdmin && <CreateAddressButton />\n            }\n        </Drawer>\n    );\n}\n","import React from \"react\";\nimport { Link, Menu, MenuItem } from \"@mui/material\";\nimport useSession from \"../../../auth/useSession\";\nimport paths from \"../../../shared/path\";\n\n\n\ninterface AccountMenuProps {\n    trigger: null | HTMLElement,\n    handleClose: () => void\n}\n\nconst links = [\n    { name: \"Mój Profil\", link: paths.MY_PROFILE },\n    { name: \"Panel Główny\", link: paths.HOME },\n]\n\n\nexport default function AccountMenu({ trigger, handleClose }: AccountMenuProps) {\n    const { logout } = useSession();\n\n    const linksComp = React.useMemo(() => {\n        return links.map(({ name, link }, i) =>\n            <MenuItem key={i} onClick={handleClose} href={link} component={Link}>\n                {name}\n            </MenuItem>)\n    }, [handleClose]);\n\n\n    return (\n        <Menu\n            id=\"menu-appbar\"\n            anchorEl={trigger}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={Boolean(trigger)}\n            onClose={handleClose}\n        >\n            {linksComp}\n\n            <MenuItem onClick={() => {\n                handleClose();\n                logout();\n            }}>\n                Wyloguj\n            </MenuItem>\n        </Menu>\n    );\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\n\nimport AccountMenu from './AccountMenu';\nimport useSession from '../../../auth/useSession';\nimport { Avatar, Link } from '@mui/material';\nimport paths from '../../../shared/path';\nimport ImageService from '../../../services/ImageService';\n\n\ninterface NavigationBarProps {\n\ttoggleDrawer: any\n}\n\n\nexport default function NavigationBar(props: NavigationBarProps) {\n\tconst { user } = useSession();\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleMenu = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t}, []);\n\n\tconst handleClose = React.useCallback(() => {\n\t\tsetAnchorEl(null);\n\t}, []);\n\n\treturn (\n\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={props.toggleDrawer}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\t\tsx={{ mr: 2, color: \"background.default\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuIcon color='inherit' />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\t\t\t\t\t<Typography variant=\"h4\" component=\"span\" sx={{\n\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\tfontFamily: \"Dancing Script, cursive\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\thref={user ? paths.HOME : paths.PUBLIC}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\twidth: 'fit-content',\n\t\t\t\t\t\t\t\tcolor: 'background.default',\n\t\t\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\t\t\ttextDecoration: 'none'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRav System\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\talt={user.name}\n\t\t\t\t\t\t\t\t\tsrc={ImageService.getLink(user.image)}\n\t\t\t\t\t\t\t\t\tsx={{ width: 42, height: 42 }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<AccountMenu\n\t\t\t\t\t\t\t\ttrigger={anchorEl}\n\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n}\n","import React from \"react\";\nimport AppDrawer from \"./Drawer\";\nimport NavigationBar from \"./NavigationBar\";\n\n\nexport default function Navigation() {\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst toggleDrawer = React.useCallback((\n\t\tevent: React.KeyboardEvent | React.MouseEvent,\n\t\tshouldWork: boolean = true\n\t) => {\n\t\tevent.stopPropagation();\n\t\tif (\n\t\t\tshouldWork &&\n\t\t\tevent.type === 'keydown' &&\n\t\t\t((event as React.KeyboardEvent).key === 'Tab' ||\n\t\t\t\t(event as React.KeyboardEvent).key === 'Shift')\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(old => !old);\n\t}, []);\n\n\treturn <>\n\t\t<NavigationBar toggleDrawer={toggleDrawer} />\n\t\t<AppDrawer\n\t\t\topen={open}\n\t\t\ttoggleOpen={toggleDrawer}\n\t\t/>\n\t</>\n}","import React from 'react';\nimport { Box, Container, CssBaseline } from '@mui/material';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n\nimport Theme from './shared/Theme';\nimport SessionProvider from './auth/sessionProvider'\nimport Tabs from './components/pages';\nimport Footer from './components/Footer';\nimport { HashRouter } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport plLocale from 'date-fns/locale/pl';\nimport NotificationContextProvider from './contexts/NotificationContext/NotificationContextProvider';\nimport { ResourceMapContextProvider } from './contexts/ResourceMapContext';\nimport Navigation from './components/Navigation';\nimport { Tutorial } from './components/pages/protected/components/Tutorial';\n\n\n\nfunction App() {\n\treturn (\n\t\t<Theme>\n\t\t\t<LocalizationProvider dateAdapter={AdapterDateFns} locale={plLocale}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Box component=\"div\" className=\"App\" sx={{ backgroundColor: 'background.default' }}>\n\t\t\t\t\t<HashRouter>\n\t\t\t\t\t\t<NotificationContextProvider>\n\t\t\t\t\t\t\t<SessionProvider >\n\t\t\t\t\t\t\t\t<ResourceMapContextProvider>\n\t\t\t\t\t\t\t\t\t<Tutorial>\n\t\t\t\t\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t\t<Tabs />\n\t\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t\t\t\t</Tutorial>\n\t\t\t\t\t\t\t\t</ResourceMapContextProvider>\n\t\t\t\t\t\t\t</SessionProvider>\n\t\t\t\t\t\t</NotificationContextProvider>\n\t\t\t\t\t</HashRouter>\n\t\t\t\t</Box>\n\t\t\t</LocalizationProvider>\n\t\t</Theme>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorkerRegistration.register();","import React from 'react';\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { SxProps } from \"@mui/system\";\n\n\n\ninterface SmallCardProps {\n    children: React.ReactNode | React.ReactNode[];\n    title?: string,\n    titleComponent?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6',\n    sx?: SxProps\n}\n\n\nexport default function SmallCard(props: SmallCardProps) {\n    return (\n        <Paper elevation={0} sx={{\n            p: 2,\n            ...props.sx\n        }}>\n            {props?.title && <Typography variant='body2' component={props.titleComponent ?? 'h2'} color='text.secondary'>\n                {props.title}\n            </Typography>}\n            {props.children}\n        </Paper>\n    )\n}","import Reservation from \"../models/Reservation\";\nimport paths from \"../shared/path\";\nimport { AppURLParams, PaginationQueryParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface ReservationsQueryParams extends PaginationQueryParams {\n    from?: string,\n    search?: string\n}\n\nexport interface CreateReservationData {\n    title: string,\n    description: string,\n    plannedStart: string,\n    plannedEnd: string,\n    roomId?: number\n}\n\nexport interface UpdateReservationData {\n    [index: string]: any,\n    title?: string,\n    description?: string,\n    plannedStart?: string,\n    plannedEnd?: string,\n    roomId?: number\n}\n\nenum Colors {\n    success = '#edf7ed',\n    error = '#fdeded',\n    info = '#e5f6fd',\n    warning = '#fff4e5',\n    inert = '#f5f5f5'\n}\n\ninterface ReservationStatus {\n    message: string,\n    color: Colors\n}\n\n\n\nclass ReservationService extends Service {\n\n    private emitStatus(mess: string, color: Colors): ReservationStatus {\n        return { message: mess, color: color };\n    }\n\n    private localPreparPath(urlParams: AppURLParams): string {\n        if (\n            window.location.toString().includes(paths.HOME)\n            && Object.keys(urlParams).length === 0\n        ) {\n            return '/users/' + this.userId.toString();\n        }\n        return this.preparePath(urlParams);\n    }\n\n\n    public getReservations(\n        urlParams: AppURLParams,\n        queryParams: ReservationsQueryParams\n    ) {\n        return this.get(`${this.localPreparPath(urlParams)}/reservations`, queryParams);\n    }\n\n\n    public createOne(data: CreateReservationData) {\n        return this.post('/reservations', data)\n    }\n\n    public update(id: number, data: UpdateReservationData) {\n        return this.patch(`/reservations/${id}`, data);\n    }\n\n    public pingKey(id: number, key: string) {\n        return this.patch(`/reservations/${id}/keys`, {\n            RFIDTag: key\n        });\n    }\n\n    public remove(id: number) {\n        return this.delete(`/reservations/${id}`);\n    }\n\n    public resolveStatus(reservation: Reservation): ReservationStatus {\n\n        const nowTimestamp = Date.now();\n\n        const now = new Date(nowTimestamp);\n        const now_minus15 = new Date(nowTimestamp - 900_000);\n        const now_plus15 = new Date(nowTimestamp + 900_000);\n        const { actualStart, plannedStart, actualEnd, plannedEnd } = reservation;\n\n\n        const start = new Date(actualStart ? actualStart : plannedStart);\n        const end = new Date(actualEnd ? actualEnd : plannedEnd);\n\n\n        // nie rozpoczęła się\n        if (!actualStart) {\n            // jest już po czasie, i czeka do +15 minut na odbiór\n            if (start < now && start > now_minus15) return this.emitStatus('Powinna zostać już odebrana', Colors.warning);\n\n            // za 15 minut zaczyna się rezerwacja\n            if (start > now && start < now_plus15) return this.emitStatus('Za chwilę zostanie odebrana', Colors.info);\n\n            // nie została odbrana w czasie <planowany start + 15 minut>\n            if (start < now_plus15) return this.emitStatus('Nieodebrana.', Colors.error)\n\n            return this.emitStatus('Oczekuje', Colors.inert)\n\n            // rozpoczęła się\n        } else if (actualStart) {\n            // zakończyła się\n            if (actualEnd) return this.emitStatus('Rezerwacja zakończona.', Colors.inert);\n\n            // nie zakończyła się\n            if (!actualEnd) {\n                // kończy się w ciągu 15 minut\n                if (now < end && now_plus15 > end) return this.emitStatus('Za chwilę się kończy.', Colors.info);\n\n                // czas zakończenia już minął\n                if (now > end) {\n                    const end_plus15 = new Date(Date.parse(end.toString()) + 900_000)\n\n                    // dodajemy 15 minut\n                    if (now < end_plus15) return this.emitStatus('Powinna się zakończyć.', Colors.warning);\n\n                    // dodane 15 minut już minęło\n                    if (now > end_plus15) return this.emitStatus('Czas minął, klucz nie oddany.', Colors.error);\n                }\n\n                return this.emitStatus('Rezerwacja trwa.', Colors.success);\n            }\n        }\n\n        return this.emitStatus(\"Status nieznany\", Colors.warning);\n    }\n}\n\nexport default new ReservationService()"],"sourceRoot":""}