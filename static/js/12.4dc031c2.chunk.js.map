{"version":3,"sources":["components/pages/protected/LogsPage/LogsContext/LogsContextProvider.tsx","components/pages/protected/LogsPage/LogsTabBar.tsx","components/pages/protected/LogsPage/LogRow.tsx","components/pages/protected/LogsPage/LogsTable.tsx","components/pages/protected/LogsPage/LogsContext/useLogs.ts","components/pages/protected/LogsPage/LogsPage.tsx"],"names":["logsContext","React","createContext","LogsContextProvider","props","urlParams","useParams","useQueryParams","queryParams","setQueryParams","notify","useNotification","refresh","useTrigger","useState","logs","setLogs","load","useCallback","a","LogService","fetch","resp","data","pagination","old","pagesCount","description","currentPage","itemsOnPage","method","userId","endpoint","useEffect","Provider","value","children","LogsTabBar","user","useSession","urlQueryString","useLocation","search","handleChange","evt","preventDefault","target","name","predefinedEndpoint","useMemo","endp","URLSearchParams","get","id","Grid","container","component","spacing","item","xs","md","FormControl","fullWidth","InputLabel","Select","size","labelId","label","onChange","MenuItem","LazyInput","toString","memo","LogRow","row","open","setOpen","TableRow","hover","sx","borderBottom","TableCell","IconButton","onClick","align","display","sm","Math","fround","time","toPrecision","displayDate","_created","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Link","RouterLink","to","JSON","stringify","parse","payload","undefined","LogsTable","useContext","TableContainer","Table","TableHead","TableBody","length","Typography","textAlign","p","map","log","Loading","LogsPage","SmallCard","title","QueryParamsContextProvider","default","Stack","ListPagination","variant"],"mappings":"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","file":"static/js/12.4dc031c2.chunk.js","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport Log from \"../../../../../models/Log\";\nimport LogService, { LogsQueryParams } from \"../../../../../services/LogService\";\nimport useTrigger from \"../../hooks/useTrigger\";\nimport LogsContextValue from \"./LogsContextValue\";\n\n\n\n\nexport const logsContext: any = React.createContext(null);\n\n\ninterface LogsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function LogsContextProvider(props: LogsContextProviderProps) {\n    const urlParams = useParams();\n    const { queryParams, setQueryParams } = useQueryParams<LogsQueryParams>();\n    const notify = useNotification();\n    const refresh = useTrigger(60_000);\n\n    const [logs, setLogs] = React.useState<Log[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await LogService.fetch(urlParams, queryParams);\n            setLogs(resp.data as Log[]);\n\n            resp.pagination && setQueryParams(old => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount,\n            }));\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setLogs([]);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        setQueryParams,\n        queryParams.currentPage,\n        queryParams.itemsOnPage,\n        queryParams.method,\n        queryParams.userId,\n        queryParams.endpoint,\n        notify,\n        urlParams,\n    ]);\n\n\n    React.useEffect(() => {\n        load()\n    }, [\n        load,\n        refresh\n    ])\n\n\n    return (\n        <logsContext.Provider value={{\n            logs\n        } as LogsContextValue}>\n            {props.children}\n        </logsContext.Provider>\n    )\n}","import { Grid, FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport useSession from \"../../../../auth/useSession\";\nimport { useQueryParams } from \"../../../../contexts/QueryParamsContext\";\nimport { LogsQueryParams } from \"../../../../services/LogService\";\nimport LazyInput from \"../components/LazyInput\";\n\n\n\nfunction LogsTabBar() {\n    const { queryParams, setQueryParams } = useQueryParams<LogsQueryParams>();\n    const { user } = useSession();\n    const urlQueryString = useLocation().search;\n\n\n    const handleChange = React.useCallback((evt: any) => {\n        evt.preventDefault();\n        setQueryParams(old => ({ ...old, [evt.target.name]: evt.target.value }));\n    }, [setQueryParams])\n\n\n    const predefinedEndpoint = React.useMemo(() => {\n        const params = new URLSearchParams(urlQueryString);\n        const endp = params.get('endpoint') ?? `%/users/${user?.id}`;\n        setQueryParams(old => ({ ...old, endpoint: endp }));\n        \n        return endp;\n    }, [\n        setQueryParams,\n        urlQueryString,\n        user?.id\n    ]);\n\n\n    return (\n        <Grid container component=\"form\" spacing={3}>\n            <Grid item xs={6} md={2}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-metode\">Metoda</InputLabel>\n                    <Select\n                        size=\"small\"\n                        labelId=\"wybierz-metode\"\n                        id=\"metoda\"\n                        value={queryParams.method}\n                        name=\"method\"\n                        label=\"wybierz-metode\"\n                        onChange={handleChange}\n                    >\n                        <MenuItem value=\"\">brak</MenuItem>\n                        <MenuItem value=\"GET\">GET</MenuItem>\n                        <MenuItem value=\"POST\">POST</MenuItem>\n                        <MenuItem value=\"PATCH\">PATCH</MenuItem>\n                        <MenuItem value=\"DELETE\">DELETE</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6} md={3}>\n                <LazyInput\n                    label=\"id użytkownika\"\n                    name='userId'\n                    value={queryParams.userId?.toString() ?? ''}\n                    onChange={(evt) => setQueryParams(old => ({ ...old, userId: evt.target.value }))}\n                />\n            </Grid>\n            <Grid item xs={12} md>\n                <LazyInput\n                    name='endpoint'\n                    label='endpoint'\n                    value={predefinedEndpoint}\n                    onChange={handleChange}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(LogsTabBar);","import { TableRow, TableCell, IconButton, Collapse, Box } from \"@mui/material\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Link } from \"@mui/material\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { displayDate } from \"../../../../shared/utils\";\nimport Log from \"../../../../models/Log\";\n\n\ninterface LogRowProps {\n    row: Log\n}\n\nexport default function LogRow(props: LogRowProps) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <>\n            <TableRow hover sx={{ '& > *': { borderBottom: 'unset' } }}>\n                <TableCell>\n                    <IconButton\n                        aria-label=\"szczegóły zapytania\"\n                        size=\"small\"\n                        onClick={() => setOpen(!open)}\n                    >\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell component=\"th\">{row.id}</TableCell>\n                {/* <TableCell align=\"left\">{row.method}</TableCell> */}\n                <TableCell align=\"left\">{row.endpoint}</TableCell>\n                <TableCell\n                    align=\"left\"\n                    sx={{ display: { xs: 'none', sm: 'none', md: 'table-cell' } }}\n                >\n                    {Math.fround(row.time * 1000).toPrecision(6)}\n                </TableCell>\n                <TableCell align='left'>{displayDate(row._created)}</TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box component=\"pre\" sx={{ margin: 1 }}>\n                            <Link component={RouterLink} to={`/app/users/${row.user}`}>Pokaż użytkownika (id: {row.user})</Link> <br />\n                            {displayDate(row._created)}&nbsp;|&nbsp;{row.method}&nbsp;{row.endpoint}<br />\n                            czas przetwarzania: {row.time} [s]<br />\n                            Ciało zapytania <br />\n                            {JSON.stringify(\n                                JSON.parse(row.payload),\n                                undefined,\n                                3\n                            )}\n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </>\n    );\n}","import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { Typography } from '@mui/material';\nimport LogRow from './LogRow';\nimport { useLogs } from './LogsContext';\nimport Loading from '../../../../shared/components/Loading';\n\n\n\n\nexport default function LogsTable() {\n    const { logs } = useLogs();\n\n    if (!logs) return <Loading />;\n\n    return (\n        <TableContainer>\n            <Table aria-label=\"tabela logów\" size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell />\n                        <TableCell align=\"left\">Id</TableCell>\n                        {/* <TableCell align=\"left\">Metoda</TableCell> */}\n                        <TableCell align=\"left\">Cel/endpoint</TableCell>\n                        <TableCell\n                            align=\"left\"\n                            sx={{ display: { xs: 'none', sm: 'none', md: 'table-cell' } }}\n                        >\n                            Czas wykonania&nbsp;[ms]\n                        </TableCell>\n                        <TableCell align=\"left\">Data</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {logs.length === 0 &&\n                        <TableRow>\n                            <TableCell colSpan={6}>\n                                <Typography textAlign=\"center\" p=\"15px 0px\">\n                                    Brak elementów do wyświetlenia\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    }\n\n                    {logs.map((log) => <LogRow key={log.id} row={log} />)}\n                </TableBody>\n            </Table>\n        </TableContainer>\n\n    );\n}\n\n\n\n\n","import React from \"react\";\nimport { logsContext } from \"./LogsContextProvider\";\nimport LogsContextValue from \"./LogsContextValue\";\n\nexport default function useLogs() {\n    return React.useContext(logsContext) as LogsContextValue;\n}","import { Stack, Typography } from \"@mui/material\";\nimport QueryParamsContextProvider from \"../../../../contexts/QueryParamsContext/QueryParamsContextProvider\";\nimport ListPagination from \"../components/ListPagination\";\nimport SmallCard from \"../components/SmallCard\";\nimport { LogsContext } from \"./LogsContext\";\nimport LogsTabBar from \"./LogsTabBar\";\nimport LogsTable from \"./LogsTable\";\n\n\nfunction LogsPage() {\n    return (\n        <>\n            <SmallCard\n                title='Logs Explorer'\n            >\n                <QueryParamsContextProvider name=\"logs-query-params\" default={{ method: 'PATCH', itemsOnPage: 5 }}>\n                    <LogsContext>\n                        <br />\n                        <Stack spacing={3}>\n                            <LogsTabBar />\n                            <LogsTable />\n                            <ListPagination />\n                        </Stack>\n                    </LogsContext>\n                </QueryParamsContextProvider>\n            </SmallCard>\n            <br />\n            <SmallCard title=\"Przykłady\">\n                <Typography variant=\"body2\">\n                    \"%\" - tzw. wildcard - zstępuje dowolny ciąg znaków <br />\n                    Ustawienia: %/configuration <br />\n                    Użytkownicy: %/users <br />\n                    Adresy / Budynki / Sale: %/addresses %/buildings %/rooms <br />\n                    Klasy dostępu: %/accesses <br />\n                    Rezerwacje: %/reservations\n                </Typography>\n            </SmallCard>\n        </>\n    )\n}\n\nexport default LogsPage;"],"sourceRoot":""}