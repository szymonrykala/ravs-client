{"version":3,"sources":["components/pages/protected/components/MonthlyChartsSection.tsx","components/pages/protected/components/WeeklyChartsSection.tsx","components/pages/protected/UserPage/components/UserCharts.tsx"],"names":["MonthlyChartsSection","props","title","fullWidth","data","xKey","y","label","key","React","memo","WeeklyChartsSection","resolveDay","UserCharts","ActualLoader","chartsData","useCharts","defaultOpen","reservedRooms","weekly","monthly"],"mappings":"kHAAA,oCASA,SAASA,EAAqBC,GAC1B,OACI,eAAC,IAAD,CAAcC,MAAM,6BAApB,UACI,cAAC,IAAD,CACIC,WAAS,EACTD,MAAM,yDACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,6BAAoBC,IAAK,wBAG1C,cAAC,IAAD,CACIL,WAAS,EACTD,MAAM,uCACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,0BAAsBC,IAAK,qBAG5C,cAAC,IAAD,CACIL,WAAS,EACTD,MAAM,8BACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,iCAA6BC,IAAK,yBAC3C,CAAED,MAAO,iCAA6BC,IAAK,8BAQhDC,QAAMC,KAAKV,I,iCC7C1B,oCAUA,SAASW,EAAoBV,GACzB,OACI,eAAC,IAAD,CAAcC,MAAM,wBAApB,UACI,cAAC,IAAD,CACIC,WAAS,EACTS,YAAU,EACVV,MAAM,oDACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,6BAAoBC,IAAK,wBAG1C,cAAC,IAAD,CACIL,WAAS,EACTS,YAAU,EACVV,MAAM,uCACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,0BAAsBC,IAAK,qBAG5C,cAAC,IAAD,CACIL,WAAS,EACTS,YAAU,EACVV,MAAM,8BACNE,KAAMH,EAAMG,KACZC,KAAK,MACLC,EAAG,CACC,CAAEC,MAAO,iCAA6BC,IAAK,yBAC3C,CAAED,MAAO,iCAA6BC,IAAK,8BAOhDC,QAAMC,KAAKC,I,iCC/C1B,qFAKe,SAASE,IACpB,OACI,cAAC,IAAD,UACI,cAACC,EAAD,MAMZ,SAASA,IACL,IAAQC,EAAeC,cAAfD,WAER,OACI,qCACI,eAAC,IAAD,CAAcE,aAAW,EAACf,MAAM,mBAAhC,UACI,cAAC,IAAD,CACIC,WAAS,EACTD,MAAM,oDACNE,KAAMW,EAAWG,cACjBb,KAAK,WACLC,EAAG,CACC,CAAEC,MAAO,6BAAoBC,IAAK,wBAG1C,cAAC,IAAD,CACIL,WAAS,EACTD,MAAM,gCACNE,KAAMW,EAAWG,cACjBb,KAAK,WACLC,EAAG,CACC,CAAEC,MAAO,6BAAyBC,IAAK,yBACvC,CAAED,MAAO,6BAAyBC,IAAK,2BAG/C,cAAC,IAAD,CACIL,WAAS,EACTD,MAAM,0CACNE,KAAMW,EAAWG,cACjBb,KAAK,WACLC,EAAG,CACC,CAAEC,MAAO,sBAAkBC,IAAK,wBAK5C,cAAC,IAAD,CAAqBJ,KAAMW,EAAWI,SAEtC,cAAC,IAAD,CAAsBf,KAAMW,EAAWK","file":"static/js/6.d7e918a6.chunk.js","sourcesContent":["import React from \"react\";\nimport { DayStatsItem } from \"../../../../models/Stats\";\nimport { Chart, ChartSection } from \"./Charts\";\n\n\ninterface MonthlyChartsSectionProps {\n    data: DayStatsItem[]\n}\n\nfunction MonthlyChartsSection(props: MonthlyChartsSectionProps) {\n    return (\n        <ChartSection title='Statystyki miesięczne'>\n            <Chart\n                fullWidth\n                title='Ilość rezerwacji na dzień miesiąca'\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Faktyczny czas wszystkich rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Czas całkowity [m]', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Średni czas rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Średni planowany czas [m]', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas [m]', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}\n\n\nexport default React.memo(MonthlyChartsSection);","import React from \"react\";\nimport { DayStatsItem } from \"../../../../models/Stats\";\nimport { Chart, ChartSection } from \"./Charts\";\n\n\ninterface WeeklyChartsSectionProps {\n    data: DayStatsItem[]\n}\n\n\nfunction WeeklyChartsSection(props: WeeklyChartsSectionProps) {\n    return (\n        <ChartSection title='Statystyki tygodniowe'>\n            <Chart\n                fullWidth\n                resolveDay\n                title='Ilość rezerwacji na dzień tygodnia'\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth\n                resolveDay\n                title=\"Faktyczny czas wszystkich rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Czas całkowity [m]', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                resolveDay\n                title=\"Średni czas rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Średni planowany czas [m]', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas [m]', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}\n\nexport default React.memo(WeeklyChartsSection);","import { UserChartsData } from \"../../../../../models/Stats\";\nimport { Chart, ChartSection, ChartsTab, useCharts } from \"../../components/Charts\";\nimport MonthlyChartsSection from \"../../components/MonthlyChartsSection\";\nimport WeeklyChartsSection from \"../../components/WeeklyChartsSection\";\n\n\nexport default function UserCharts() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n\nfunction ActualLoader() {\n    const { chartsData } = useCharts<UserChartsData>();\n\n    return (\n        <>\n            <ChartSection defaultOpen title='Rezerwowane Sale'>\n                <Chart\n                    fullWidth\n                    title='Ilość rezerwacji w rezerwowanych salach'\n                    data={chartsData.reservedRooms}\n                    xKey='roomName'\n                    y={[\n                        { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title=\"Średnie czasy rezerwacji\"\n                    data={chartsData.reservedRooms}\n                    xKey='roomName'\n                    y={[\n                        { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                        { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title=\"Czas wszystkich rezerwacji w danej sali\"\n                    data={chartsData.reservedRooms}\n                    xKey='roomName'\n                    y={[\n                        { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                    ]}\n                />\n            </ChartSection>\n\n            <WeeklyChartsSection data={chartsData.weekly} />\n\n            <MonthlyChartsSection data={chartsData.monthly} />\n        </>\n    );\n}"],"sourceRoot":""}