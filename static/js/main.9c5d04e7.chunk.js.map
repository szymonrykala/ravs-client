{"version":3,"sources":["shared/Theme/theme.ts","shared/Theme/index.tsx","contexts/NotificationContext/NotificationContextValue.ts","contexts/NotificationContext/NotificationContextProvider.tsx","contexts/NotificationContext/useNotification.ts","services/ReservationService.ts","services/APIServiceError.ts","services/Service.ts","services/AuthService.ts","services/ImageService.ts","services/LogService.ts","services/StorageService.ts","services/UserService.ts","services/MetadataService.ts","shared/components/LoadingView.tsx","shared/path.ts","auth/sessionProvider.tsx","contexts/QueryParamsContext/QueryParamsContextValue.tsx","contexts/QueryParamsContext/QueryParamsContextProvider.tsx","contexts/QueryParamsContext/userQueryParams.ts","components/pages/protected/components/ListPagination.tsx","components/pages/protected/hooks/useTrigger.ts","components/pages/protected/components/GenericLogsTab/LogsContext/LogsContextProvider.tsx","components/pages/protected/components/LazyInput.tsx","components/pages/protected/components/GenericLogsTab/LogsTabBar.tsx","shared/utils.ts","components/pages/protected/components/GenericLogsTab/LogRow.tsx","components/pages/protected/components/GenericLogsTab/LogsTable.tsx","components/pages/protected/components/GenericLogsTab/LogsContext/useLogs.ts","components/pages/protected/components/GenericLogsTab/GenericLogsTab.tsx","components/pages/protected/components/SmallCard.tsx","components/pages/protected/components/SwipeableTabs/SwipeablePanel.tsx","components/pages/protected/components/SwipeableTabs/SwipeableTabs.tsx","services/AccessService.ts","shared/components/FormGridContainer.tsx","components/pages/protected/components/GenericModal.tsx","components/pages/protected/components/DatesFooter.tsx","components/pages/protected/AccessPage/Forms/AccessEditModal.tsx","components/pages/protected/AccessPage/Forms/CreateAccessModal.tsx","components/pages/protected/AccessPage/AccessContext/AccessContextProvider.tsx","components/pages/protected/AccessPage/AccessContext/useAccess.ts","components/pages/protected/components/DeleteModal/DeleteModal.tsx","shared/components/TabHeadLine.tsx","components/pages/protected/AccessPage/components/AccessesList/AddItem.tsx","components/pages/protected/AccessPage/components/AccessesList/RowItem.tsx","components/pages/protected/AccessPage/components/AccessesList/AccessesList.tsx","components/pages/protected/AccessPage/components/AccessInfo.tsx","shared/components/AppLink.tsx","components/pages/protected/AccessPage/components/EditUsersAccess/EditUsersAccess.tsx","components/pages/protected/AccessPage/AccessPage.tsx","auth/useSession.ts","services/RoomService.ts","services/AddressService.ts","contexts/ResourceMapContext/ResourceMapContextProvider.tsx","contexts/ResourceMapContext/useResourceMap.ts","components/pages/protected/RoomPage/RoomContext/RoomContextProvider.tsx","components/pages/protected/RoomPage/RoomContext/useRoomContext.ts","components/pages/protected/components/ReservationViewModal/ReservationUserCard.tsx","components/pages/protected/components/ReservationViewModal/ReservationRoomCard.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/useReservations.ts","components/pages/protected/components/DateTimePicker.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/EditModalForm.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/CopyModalForm.tsx","components/pages/protected/components/RfidForm.tsx","components/pages/protected/components/ReservationViewModal/ModalForms/PingKeyModalForm.tsx","components/pages/protected/components/MoreVertMenu.tsx","components/pages/protected/components/ReservationViewModal/ReservationViewModal.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ModalContext/ModalContextProvider.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ReservationsContextProvider.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsList/ReservationsListItem.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsList/ReservationsList.tsx","components/pages/protected/components/GenericReservationsTab/ReservationsContext/ModalContext/useReservationModalContext.ts","components/pages/protected/components/SelectButtonGroup.tsx","components/pages/protected/components/GenericReservationsTab/ReservationTabBar.tsx","components/pages/protected/components/GenericReservationsTab/GenericReservationsTab.tsx","components/pages/protected/AddressPage/AddressContext/AddressContextProvider.tsx","components/pages/protected/AddressPage/AddressContext/useAddress.ts","components/pages/protected/AddressPage/components/Map.tsx","components/pages/protected/AddressPage/Forms/AddressEditForm.tsx","components/pages/protected/AddressPage/Forms/CreateBuildingForm.tsx","components/pages/protected/AddressPage/Forms/CreateAddressForm.tsx","components/pages/protected/AddressPage/components/AddressCard.tsx","components/pages/protected/components/Charts/ChartOptionsBar.tsx","services/ChartService.ts","components/pages/protected/components/Charts/ChartsContext/ChartsContextProvider.tsx","components/pages/protected/components/Charts/ChartsContext/useCharts.ts","components/pages/protected/components/Charts/ChartsTab.tsx","components/pages/protected/components/Charts/ChartSection.tsx","components/pages/protected/components/Charts/Chart.tsx","components/pages/protected/AddressPage/components/AddressCharts.tsx","services/BuildingService.ts","components/pages/protected/components/ScrollableList/ScrollableList.tsx","components/pages/protected/components/ScrollableList/ScrollableListItem.tsx","components/pages/protected/AddressPage/components/BuildingsList.tsx","components/pages/protected/AddressPage/AddressPage.tsx","components/pages/protected/components/MonthlyChartsSection.tsx","components/pages/protected/components/WeeklyChartsSection.tsx","components/pages/protected/components/RoomOrBuildingChartTab.tsx","components/pages/protected/BuildingPage/BuildingContext/BuildingContextProvider.tsx","components/pages/protected/BuildingPage/BuildingContext/useBuilding.ts","models/Room.ts","components/pages/protected/components/ImageUploadField.tsx","components/pages/protected/BuildingPage/Forms/BuildingEditForm.tsx","components/pages/protected/BuildingPage/Forms/CreateRoomForm.tsx","models/Metadata.ts","components/pages/protected/components/FavouriteButton.tsx","components/pages/protected/BuildingPage/components/BuildingCard.tsx","components/pages/protected/BuildingPage/components/RoomsList.tsx","components/pages/protected/BuildingPage/BuildingPage.tsx","components/pages/protected/HomePage/Favourites.tsx","components/pages/protected/HomePage/Notebook.tsx","components/pages/protected/HomePage/HomeReservations.tsx","components/pages/protected/HomePage/HomePage.tsx","components/pages/protected/RoomPage/Forms/RoomEditForm.tsx","components/pages/protected/RoomPage/Forms/RfidModalForm.tsx","components/pages/protected/RoomPage/components/YesNoIcon.tsx","components/pages/protected/RoomPage/components/RoomTableInfo.tsx","shared/components/Loading.tsx","components/pages/protected/components/CreateReservationModal/CreateReservationForm.tsx","components/pages/protected/components/CreateReservationModal/CreateReservationModal.tsx","components/pages/protected/RoomPage/components/RoomCard.tsx","components/pages/protected/RoomPage/RoomPage.tsx","services/SettingsService.ts","components/pages/protected/SettingsPage/SettingsContext/SettingsContextProvider.tsx","components/pages/protected/SettingsPage/components/EndpointsStats/EnhancedTableHead.tsx","components/pages/protected/SettingsPage/components/EndpointsStats/SortableTable.tsx","components/pages/protected/SettingsPage/components/EndpointsStats/EndpointsStats.tsx","components/pages/protected/SettingsPage/components/SettingsForm.tsx","components/pages/protected/SettingsPage/SettingsContext/useSettings.ts","components/pages/protected/SettingsPage/components/SettingsMain.tsx","components/pages/protected/SettingsPage/SettingsPage.tsx","components/pages/protected/UserPage/UserContext/UserContextProvider.tsx","components/pages/protected/UserPage/UserContext/useUser.tsx","shared/components/UniqueCodeButton/statusReducer.ts","shared/components/UniqueCodeButton/index.tsx","components/pages/public/ChangePassword/FormStep.tsx","components/pages/public/ChangePassword/Form.tsx","components/pages/protected/UserPage/Forms/PasswordChangeModal.tsx","components/pages/protected/UserPage/Forms/EditUserForm.tsx","components/pages/protected/UserPage/components/UserCard.tsx","components/pages/protected/UserPage/components/UserCharts.tsx","components/pages/protected/UserPage/UserPage.tsx","components/pages/protected/UsersPage/UsersContext/UsersContextProvider.tsx","components/pages/protected/UsersPage/components/UsersView/SearchBar.tsx","components/pages/protected/UsersPage/components/UsersView/UsersList/UserListItem.tsx","components/pages/protected/UsersPage/components/UsersView/UsersList/UsersList.tsx","components/pages/protected/UsersPage/UsersContext/useUsers.ts","components/pages/protected/UsersPage/components/UsersView/UsersView.tsx","components/pages/protected/UsersPage/components/UsersCharts.tsx","components/pages/protected/UsersPage/UsersPage.tsx","components/pages/protected/index.tsx","components/pages/public/FormPage.tsx","components/pages/public/Activation/Form.tsx","components/pages/public/Activation/Activation.tsx","components/pages/public/Login/Form.tsx","components/pages/public/Login/Login.tsx","components/pages/public/Register/Form.tsx","components/pages/public/Register/Register.tsx","components/pages/public/ChangePassword/ChangePassword.tsx","components/pages/public/Welcome/Welcome.tsx","components/pages/public/PublicPages.tsx","components/pages/index.tsx","components/Footer/Copyrights.tsx","components/Footer/Links.tsx","components/Footer/index.tsx","components/Navigation/Drawer/MainDrawerList.tsx","components/Navigation/Drawer/DrawerPanel.tsx","components/Navigation/Drawer/AvatarView.tsx","components/Navigation/Drawer/ResourcesList/CollapseableListItem.tsx","components/Navigation/Drawer/ResourcesList/RoomListItem.tsx","components/Navigation/Drawer/ResourcesList/ResourceList.tsx","components/Navigation/Drawer/CreateAddressButton.tsx","components/Navigation/Drawer/index.tsx","components/Navigation/NavigationBar/AccountMenu.tsx","components/Navigation/NavigationBar/index.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","palette","primary","indigo","secondary","dark","main","light","background","default","paper","shape","borderRadius","components","MuiCssBaseline","styleOverrides","body","scrollbar","track","thumb","active","MuiTextField","defaultProps","size","variant","MuiSelect","MuiButton","sx","Number","MuiSvgIcon","color","MuiIconButton","Theme","props","ThemeProvider","children","NotificationContextDefault","message","notificationContext","createContext","NotificationContextProvider","React","useState","setMessage","open","setOpen","severity","setSeverity","component","setComponent","closeSnack","useCallback","event","reason","setSnack","_severity","componentCallback","Provider","value","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","width","useNotification","useContext","Colors","APIServiceError","data","error","description","this","statusCode","Error","Service","_BASE_URL","process","_TOKEN_NAME","_userId","window","localStorage","getItem","fetchObject","fetch","endpoint","method","cache","mode","headers","authToken","JSON","stringify","response","json","console","debug","status","match","location","reload","ok","type","urlParams","endp","url","pathname","Object","keys","length","entries","path","newPath","includes","addressId","buildingId","roomId","userId","toString","query","_fetch","URLSearchParams","AuthService","a","post","email","password","setItem","removeItem","Boolean","hasToken","get","ImageService","formBody","resp","image","slice","formData","FormData","append","sendImage","preparePath","delete","LogService","queryParams","id","name","btoa","encodeURI","str","codeName","parse","UserService","_path","patch","accessId","MetadataService","STORAGE_NAME","StorageService","read","notes","favourites","save","setPath","update","metadata","item","push","sort","b","log","find","filter","ReservationService","mess","key","RFIDTag","reservation","nowTimestamp","Date","now","now_minus15","now_plus15","actualStart","plannedStart","actualEnd","plannedEnd","start","end","emitStatus","warning","info","inert","end_plus15","success","LoadingView","Backdrop","display","flexDirection","zIndex","drawer","backgroundColor","Typography","pb","text","CircularProgress","paths","PUBLIC","FAQ","HOME","LOGIN","REGISTER","ACTIVATE","REMIND_PASSWORD","ACCESS","SETTINGS","USERS","USER","MY_PROFILE","INFRASTRUCTURE","ADDRESS","BUILDING","ROOM","dynamicPaths","toAddress","toBuilding","toRoom","toUser","sessionContext","SessionProvider","notify","loading","setLoading","user","setUser","setUpUser","setIdentity","checkIfUserHasSession","hasSession","getMe","sessionUser","to","WELCOME","useEffect","login","code","logout","queryParamsContextDefaults","q","setQueryParams","param","queryParamsContext","QueryParamsContextProvider","keyName","defaultValue","useQueryParams","ListPagination","handlePageChange","old","currentPage","handleCountChange","child","itemsOnPage","target","Stack","spacing","flexWrap","justifyContent","alignContent","alignItems","Pagination","count","pagesCount","page","onChange","FormControl","fullWidth","maxWidth","InputLabel","Select","labelId","label","map","num","MenuItem","useTrigger","timeInterval","trigger","setTrigger","int","setInterval","clearInterval","logsContext","LogsContextProvider","useParams","refresh","logs","setLogs","load","pagination","LazyInput","setStr","handleSearchFieldChange","evt","clearTimeout","timer","setTimeout","InputBase","placeholder","p","bgcolor","inputProps","LogsTabBar","handleChange","preventDefault","Grid","container","xs","md","displayDate","dateString","date","Intl","DateTimeFormat","dateStyle","timeStyle","format","timeFormat","isDate","getDate","LogRow","row","TableRow","hover","borderBottom","TableCell","IconButton","onClick","scope","align","Math","fround","time","toPrecision","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Link","RouterLink","_created","payload","undefined","LogsTable","TableContainer","Table","TableHead","TableBody","textAlign","GenericLogsTab","SmallCard","Paper","elevation","title","titleComponent","SwipeablePanel","hidden","index","other","useMemo","role","SwipeableTabs","useTheme","tabIndex","setTabIndex","handleTabChange","newValue","handleChangeIndex","renderedTabs","tabs","Tab","a11yProps","renderedTabPanels","dir","direction","Tabs","allowScrollButtonsMobile","indicatorColor","borderColor","axis","onChangeIndex","AccessService","FormGridContainer","subtitle","onSubmit","onCancel","handleSubmit","rowGap","mt","Button","startIcon","GenericModal","Modal","closeAfterTransition","BackdropComponent","BackdropProps","overflow","Fade","position","boxShadow","DatesFooter","fontSize","model","_updated","fields","AccessEditModal","access","setData","checked","close","TextField","required","field","FormControlLabel","labelPlacement","control","Switch","ml","CreateAccessModal","setName","autoFocus","accessContext","AccessContextProvider","modalOpen","setModalOpen","selectedAccessId","setSelectedAccessId","accessesList","setAccessesList","getAll","updateAccess","deleteAccess","remove","createAccess","create","unshift","toUTCString","assign","selectedAccess","openAccess","useAccess","DeleteModal","onSuccess","objectName","input","setInput","handleConfirm","TabHeadLine","AddItem","border","RowItem","onDelete","onSelect","AccessesList","createModalOpen","setCreateModalOpen","deleteModalOpen","setDeleteModalOpen","toDelete","setToDelete","renderedRows","reverse","handleDelete","explonations","AccessInfo","rendered","mb","rel","href","AppLink","withIcon","restProps","underline","usersNotUsers","ai","bi","notNumNum","indexOf","intersection","EditUsersAccess","setChecked","leftUsers","setLeftUsers","rightUsers","setRightUsers","left","right","setAccess","updateUsersAccess","users","calls","Promise","all","results","loadUsers","getUsers","deleted","then","leftChecked","rightChecked","handleToggle","currentIndex","splice","handleCheckedRight","usersToMove","moved","concat","handleCheckedLeft","l","handleSelectChange","customList","Card","Divider","List","height","dense","ListItem","button","ListItemIcon","Checkbox","disableRipple","ListItemText","ev","stopPropagation","sm","my","disabled","AccessPage","pages","arr","useSession","RoomService","AddressService","params","resourceMapContext","ResourceMapContextProvider","resourceMap","setResources","loaded","setLoaded","loadResourceMap","getResourcesMap","getRoomLink","addr","buildings","bld","rooms","flat","allRooms","allBuildings","allAddresses","getBuildingLink","reloadMap","useResourceMap","RoomContext","RoomContextProvider","room","setRoom","useLayoutEffect","getRoom","getView","setOccupied","state","occupied","updateRoom","building","deleteRoom","updateRFIDTag","updateRFID","deleteRFIDTag","useRoomContext","ReservationUserCard","minHeight","CardHeader","avatar","Avatar","alt","surname","src","getLink","subheader","action","CardContent","lastActivity","ReservationRoomCard","roomLink","buildingLink","CardMedia","maxHeight","roomType","pt","useReservations","reservationsContext","DateTimePicker","dateVal","setDateVal","toLocaleString","MobileDateTimePicker","minDate","inputFormat","renderInput","EditModalForm","updateReservation","closeForm","handleDateChange","multiline","maxRows","CopyModalForm","createReservation","from","dates","setDates","copyDates","setCopyDates","createCalls","processed","handleDeleteCopyDate","handleAddDate","padding","pl","HiddenInput","styled","RfidForm","setText","setColor","useRef","onScan","handleDecline","current","focus","alignSelf","ref","headline","bodyText","PingKeyModalForm","pingKeyForReservation","handleKeyScan","reservationId","MoreVertMenu","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","Menu","MenuListProps","PaperProps","options","opt","icon","TextSection","ReservationViewModal","deleteReservation","editModalOpen","setEditModalOpen","nfcModalOpen","setNFCModalOpen","copyModalOpen","setCopyModalOpen","menuOptions","Edit","lg","pr","ReservationModalViewContext","showReservation","ModalContextProvider","reservations","setReservationId","ReservationsContextProvider","roomContext","setReservations","getReservations","search","triggerReload","pingKey","forEach","createOne","ReservationListItem","resolveStatus","ListItemAvatar","ReservationsList","SelectButtonGroup","buttons","renderedButtons","Radio","RadioGroup","ReservationTabBar","customDate","setCustomDate","handleButtonChange","handleSubmitCustomDate","toISOString","MobileDatePicker","GenericReservationsTab","addressContext","AddressContextProvider","address","setAddress","getAddress","getCurrentOne","getBuildingsInAddress","getBuildings","updateAddress","deleteAddress","useAddress","StyledIframe","Map","street","number","town","country","base","URL","ie","z","iwloc","output","frameBorder","AddressEditForm","postalCode","CreateBuildingForm","handleCreateBuilding","openTime","closeTime","String","MobileTimePicker","CreateAddressForm","AddressCard","predefinedButtons","ChartOptionsBar","customDates","setCustomDates","buttonValue","ChartService","chartsContext","ChartsContextProvider","chartsData","fetchData","useCharts","ChartsTab","ChartSection","defaultOpen","replace","weekDays","Chart","primaryAxis","getValue","resolveDay","x","min","secondaryAxes","y","elementType","minDomainLength","hardMin","scaleType","showDatumElements","obj","xKey","AddressCharts","ActualLoader","allReservations","BuildingService","ScrollableList","onAddItem","ScrollableListItem","py","link","BuildingsList","createBuildingModalOpen","setCreateBuildingModalOpen","setBuildings","createBuilding","renderedBuildings","AddressPage","MonthlyChartsSection","WeeklyChartsSection","RoomOrBuildingChartTab","weekly","monthly","buildingContext","BuildingContextProvider","setBuilding","getBuilding","getRoomsInBuilding","updateBuilding","deleteBuilding","useBuilding","RoomTypes","Input","StyledImage","ImageUploadField","useLocation","uploadedImage","setUploadedImage","upload","onUpload","handleImageUpload","files","img","handleRemoveImgae","createObjectURL","htmlFor","accept","timeToDate","split","h","m","BuildingEditForm","handleTime","CreateRoomForm","handleCreateRoom","LECTURE","seatsCount","floor","values","val","FavType","FavouriteButton","marked","setMarked","isFavourite","addToFavourites","removeFavourite","addFavourite","BuildingView","Building","RoomsList","createRoomModalOpen","setCreateRoomModalOpen","setRooms","createRoom","renderedRooms","BuildingPage","Favourites","Room","getCorrectListItem","Notebook","err","minRows","mr","HomeReservations","HomePage","RoomEditForm","blocked","RfidModalRorm","YesNoIcon","rest","RoomTableInfo","deleteTag","rfidTagModalOpen","setRfidTagModalOpen","tableRows","Chip","RenderedRows","fontWeight","Loading","CreateReservationForm","CreateReservationModal","RoomCard","createReservationModalOpen","setCreateReservationModalOpen","RoomPage","SettingsService","settingsContext","SettingsContextProvider","settings","setSettings","updateSettings","headCells","numeric","disablePadding","EnhancedTableHead","order","orderBy","onRequestSort","headCell","sortDirection","TableSortLabel","property","visuallyHidden","descendingComparator","getComparator","SortableTable","rowsPerPage","setRowsPerPage","setPage","setOrder","setOrderBy","minWidth","endpoints","generalEndpoint","round","timeForEndpoint","avgTime","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","EndpointsStats","FormField","SettingsForm","maxImageSize","defaultUserAccess","rowSpacing","maxReservationTime","minReservationTime","reservationHistory","requestHistory","SettingsMain","SettingsPage","userContext","UserContextProvider","session","deleteUser","updateUser","useUser","statusReducer","UniqueCodeButton","useReducer","result","dispatchResult","generateKey","FormStep","Form","newPassword","e","changePassword","autoComplete","PasswordChangeModal","EditUserForm","UserCard","editModal","setEditModal","passModal","setPassModal","deleteModal","setDeleteModal","UserCharts","reservedRooms","UserPage","usersContext","UsersContextProvider","setUsers","activated","SearchBar","UserListItem","UsersList","UsersView","UsersCharts","UsersPage","ProtectedPages","FormPage","Container","marginTop","activate","ReactRouterLink","ActivationPage","remember","setRemember","Login","register","Register","ChangePassword","Welcome","PublicPages","Activation","tabStyle","Copyright","linksList","Links","links","list","Footer","navListItems","HomeIcon","AccountIcon","settingsItem","SettingsIcon","accessLinkItem","VerifiedUserIcon","usersLinkItem","PeopleIcon","MainDrawerList","ListItemButton","DrawerPanel","toggleOpen","onKeyDown","AvatarView","CollapseableListItem","OPENED_NAME","ExpandLess","ExpandMore","RoomListItem","ResourcesList","roomEntry","CreateAddressButton","formOpen","setFormOpen","AppDrawer","Drawer","ModalProps","keepMounted","anchor","AccountMenu","linksComp","i","transformOrigin","NavigationBar","handleMenu","flexGrow","AppBar","Toolbar","toggleDrawer","edge","fontFamily","textDecoration","Navigation","shouldWork","App","LocalizationProvider","dateAdapter","AdapterDateFns","CssBaseline","className","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c5d04e7.chunk.js","sourcesContent":["import { createTheme } from '@mui/material/styles';\nimport { indigo } from '@mui/material/colors';\nimport { darkScrollbar as scrollbar } from '@mui/material';\n\n\nconst light = {\n  track: '#f5f5f5',\n  thumb: '#adadad',\n  active: '#959595'\n};\n\nconst theme = createTheme({\n  palette: {\n    primary: indigo,\n    secondary: {\n      dark: \"#f5f5f5\",\n      main: \"#304ffe\",\n      light: \"#fff\"\n    },\n    background: {\n      default: '#f5f5f5',\n      paper: '#fff'\n    }\n  },\n  // spacing: 10,\n  shape: {\n    borderRadius: 4\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        body: scrollbar(light),\n      },\n    },\n    MuiTextField: {\n      defaultProps: {\n        size: 'medium',\n        variant: 'outlined',\n      }\n    },\n    MuiSelect: {\n      defaultProps: {\n        size: 'medium'\n      }\n    },\n    MuiButton: {\n      defaultProps: {\n        sx: {\n          borderRadius: ({ shape }) => Number(shape.borderRadius)/2\n        }\n      },\n    },\n\n    MuiSvgIcon: {\n      defaultProps: {\n        color: 'inherit',\n      }\n    },\n    MuiIconButton: {\n      defaultProps: {\n        color: 'primary'\n      }\n    }\n  },\n  // typography:{\n\n  // }\n})\n\nexport default theme;","import React from 'react';\nimport { ThemeProvider } from '@mui/material/styles';\n\n\nimport theme from './theme';\n\n\ninterface ThemeProps {\n    children: React.ReactNode\n}\n\n\nexport default function Theme(props: ThemeProps) {\n    return (\n        <ThemeProvider theme={theme}>\n            {props.children}\n        </ThemeProvider>\n    );\n}","import { AlertProps } from \"@mui/material/Alert\";\n\ntype NotificationContextValue = (message: string,\n    _severity: AlertProps[\"severity\"],\n    componentCallback?: () => null | React.ReactNode\n) => void;\n\nexport default NotificationContextValue;\n\n\nexport const NotificationContextDefault = (\n    message: string,\n    _severity: AlertProps[\"severity\"] = \"error\",\n    componentCallback: () => null | React.ReactNode = () => null\n) => { }","import { Alert, AlertProps, Snackbar, SnackbarCloseReason } from \"@mui/material\";\nimport React, { createContext } from \"react\";\nimport NotificationContextValue, { NotificationContextDefault } from \"./NotificationContextValue\";\n\n\n\ninterface NotificationContextProviderProps {\n    children?: React.ReactChild\n}\n\n\nexport const notificationContext: any = createContext<NotificationContextValue>(NotificationContextDefault);\n\n\nexport default function NotificationContextProvider({\n    children\n}: NotificationContextProviderProps) {\n    const [message, setMessage] = React.useState<string | null>();\n    const [open, setOpen] = React.useState<boolean>(false);\n    const [severity, setSeverity] = React.useState<AlertProps[\"severity\"]>(\"error\");\n    const [component, setComponent] = React.useState<React.ReactNode>();\n\n\n    const closeSnack = React.useCallback((\n        event?: Event | React.SyntheticEvent<any, Event>,\n        reason?: SnackbarCloseReason\n    ) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n        setMessage('');\n        setComponent(null);\n    }, []);\n\n\n    const setSnack = React.useCallback((\n        message: string,\n        _severity: AlertProps[\"severity\"] = \"error\",\n        componentCallback: () => null | React.ReactNode = () => null\n    ) => {\n        setSeverity(_severity);\n        setMessage(message);\n        setOpen(true);\n        setComponent(componentCallback());\n    }, []);\n\n\n    return (\n        <notificationContext.Provider value={setSnack}>\n            {children}\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={open} autoHideDuration={6000} onClose={closeSnack}>\n                <Alert onClose={closeSnack} severity={severity} sx={{ width: '100%' }}>\n                    {message}\n                </Alert>\n            </Snackbar>\n\n            {component}\n        </notificationContext.Provider>\n    );\n}","import { useContext } from \"react\";\nimport { notificationContext } from \"./NotificationContextProvider\";\nimport NotificationContextValue from \"./NotificationContextValue\";\n\n\n\nexport default function useNotification() {\n    return useContext(notificationContext) as NotificationContextValue;\n}","import Reservation from \"../models/Reservation\";\nimport { AppURLParams, PaginationQueryParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface ReservationsQueryParams extends PaginationQueryParams {\n    from?: string,\n    search?: string\n}\n\nexport interface CreateReservationData {\n    title: string,\n    description: string,\n    plannedStart: string,\n    plannedEnd: string,\n    roomId?: number\n}\n\nexport interface UpdateReservationData {\n    [index: string]: any,\n    title?: string,\n    description?: string,\n    plannedStart?: string,\n    plannedEnd?: string,\n    roomId?: number\n}\n\nenum Colors {\n    success = '#edf7ed',\n    error = '#fdeded',\n    info = '#e5f6fd',\n    warning = '#fff4e5',\n    inert = '#f5f5f5'\n}\n\ninterface ReservationStatus {\n    message: string,\n    color: Colors\n}\n\n\n\nclass ReservationService extends Service {\n\n    private emitStatus(mess: string, color: Colors): ReservationStatus {\n        return { message: mess, color: color };\n    }\n\n    public getReservations(\n        urlParams: AppURLParams,\n        queryParams: ReservationsQueryParams\n    ) {\n        return this.get(`${this.preparePath(urlParams)}/reservations`, queryParams);\n    }\n\n\n    public createOne(data: CreateReservationData) {\n        return this.post('/reservations', data)\n    }\n\n    public update(id: number, data: UpdateReservationData) {\n        return this.patch(`/reservations/${id}`, data);\n    }\n\n    public pingKey(id: number, key: string) {\n        return this.patch(`/reservations/${id}/keys`, {\n            RFIDTag: key\n        });\n    }\n\n    public remove(id: number) {\n        return this.delete(`/reservations/${id}`);\n    }\n\n    public resolveStatus(reservation: Reservation): ReservationStatus {\n\n        const nowTimestamp = Date.now();\n\n        const now = new Date(nowTimestamp);\n        const now_minus15 = new Date(nowTimestamp - 900_000);\n        const now_plus15 = new Date(nowTimestamp + 900_000);\n        const { actualStart, plannedStart, actualEnd, plannedEnd } = reservation;\n\n\n        const start = new Date(actualStart ? actualStart : plannedStart);\n        const end = new Date(actualEnd ? actualEnd : plannedEnd);\n\n\n        // nie rozpoczęła się\n        if (!actualStart) {\n            // jest już po czasie, i czeka do +15 minut na odbiór\n            if (start < now && start > now_minus15) return this.emitStatus('Powinna zostać już odebrana', Colors.warning);\n\n            // za 15 minut zaczyna się rezerwacja\n            if (start > now && start < now_plus15) return this.emitStatus('Za chwilę zostanie odebrana', Colors.info);\n\n            // nie została odbrana w czasie <planowany start + 15 minut>\n            if (start < now_plus15) return this.emitStatus('Nieodebrana.', Colors.error)\n\n            return this.emitStatus('Oczekuje', Colors.inert)\n\n            // rozpoczęła się\n        } else if (actualStart) {\n            // zakończyła się\n            if (actualEnd) return this.emitStatus('Rezerwacja zakończona.', Colors.inert);\n\n            // nie zakończyła się\n            if (!actualEnd) {\n                // kończy się w ciągu 15 minut\n                if (now < end && now_plus15 > end) return this.emitStatus('Za chwilę się kończy.', Colors.info);\n\n                // czas zakończenia już minął\n                if (now > end) {\n                    const end_plus15 = new Date(Date.parse(end.toString()) + 900_000)\n\n                    // dodajemy 15 minut\n                    if (now < end_plus15) return this.emitStatus('Powinna się zakończyć.', Colors.warning);\n\n                    // dodane 15 minut już minęło\n                    if (now > end_plus15) return this.emitStatus('Czas minął, klucz nie oddany.', Colors.error);\n                }\n\n                return this.emitStatus('Rezerwacja trwa.', Colors.success);\n            }\n        }\n\n        return this.emitStatus(\"Status nieznany\", Colors.warning);\n    }\n}\n\nexport default new ReservationService()","import { ResponseData } from \"./Service\";\n\n\n\n\nexport default class APIServiceError extends Error {\n\n    private data: ResponseData;\n\n    get code() {\n        return this.data.statusCode;\n    }\n\n    get description() {\n        return this.data.error?.description;\n    }\n\n    constructor(data: ResponseData) {\n        super(data.error?.description);\n        this.data = data;\n    }\n}\n","import APIServiceError from \"./APIServiceError\";\nimport { APIResponse, AppURLParams } from \"./interfaces\";\n\n\nexport interface ServiceFormData {\n    [index: string]: string | number | boolean | undefined | object\n}\n\n\n\n\ninterface FetchData {\n    endpoint: string\n    method: string,\n    body?: object\n}\n\ninterface ErrorData {\n    type: string,\n    description: string\n}\n\nexport interface ResponseData {\n    statusCode: number,\n    data?: any,\n    error?: ErrorData\n}\n\n\n\nexport interface StatusMessages {\n    [index: number]: string\n}\n\n\nexport default abstract class Service {\n\n    _BASE_URL: string = process.env.REACT_APP_API_URL as string;\n    _TOKEN_NAME: string = 'auth_token';\n    _userId: number = -1;\n\n    public set userId(value: number) {\n        this._userId = value\n    }\n\n    public get userId(): number {\n        if (this._userId === -1)\n            throw Error('user id was not set');\n\n        return this._userId;\n    }\n\n    protected get authToken() {\n        return 'Bearer ' + window.localStorage.getItem(this._TOKEN_NAME);\n    }\n\n    private async _fetch(fetchObject: FetchData): Promise<APIResponse> {\n        const response = await fetch(\n            this._BASE_URL + fetchObject.endpoint,\n            {\n                method: fetchObject.method,\n                cache: 'no-cache',\n                mode: 'cors',\n                // credentials: 'omit',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.authToken,\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: JSON.stringify(fetchObject.body)\n            }\n        );\n        const data = await response.json() as ResponseData;\n\n        console.debug(data);\n\n        // if user is not authenticated - \n        // redirect to let sessionContext to resolve redirections\n        if (response.status === 401 && !fetchObject.endpoint.match('/auth|me|activate')) {\n            window.location.reload();\n        }\n\n        if (!response.ok) {\n            console.error(`${response.status} ${data?.error?.type} ${data?.error?.description}`);\n            throw new APIServiceError(data);\n        }\n\n        return data as APIResponse;\n    }\n\n    protected preparePath(urlParams: AppURLParams): string {\n        let endp = '';\n        let url = window.location.pathname;\n        const map = {\n            '/accesses': '/accesses',\n            '/settings': '/configurations',\n            '/users': '/users'\n        }\n\n        if (Object.keys(urlParams).length === 0) {\n            for (const [path, newPath] of Object.entries(map)) {\n                if (url.includes(path)) {\n                    endp = newPath;\n                }\n            }\n        } else if ('addressId' in urlParams) {\n            endp += `/addresses/${urlParams.addressId}`;\n\n            if ('buildingId' in urlParams) {\n                endp += `/buildings/${urlParams.buildingId}`;\n\n                if ('roomId' in urlParams) endp += `/rooms/${urlParams.roomId}`;\n            }\n        } else if ('userId' in urlParams) {\n            if (urlParams.userId === 'me') {\n                endp += '/users/' + this.userId.toString();\n            } else {\n                endp += '/users/' + urlParams.userId;\n            }\n        }\n        return endp;\n    }\n\n    protected get(endpoint: string, query = {}) {\n        return this._fetch({\n            method: 'GET',\n            endpoint: endpoint + '?' + new URLSearchParams(query).toString()\n        });\n    }\n\n    protected post(endpoint: string, body: object) {\n        return this._fetch({\n            method: 'POST',\n            endpoint: endpoint,\n            body: body\n        });\n    }\n\n    protected patch(endpoint: string, body: object) {\n        if (Object.keys(body).length === 0) return;\n\n        return this._fetch({\n            method: 'PATCH',\n            endpoint: endpoint,\n            body: body\n        });\n    }\n\n    protected delete(endpoint: string) {\n        return this._fetch({\n            method: 'DELETE',\n            endpoint: endpoint\n        });\n    }\n}","import { APIResponse } from \"./interfaces\";\nimport Service, { ServiceFormData } from \"./Service\";\n\n\n\nexport interface LoginFormData extends ServiceFormData {\n    email: string,\n    password: string\n}\n\n\n\nclass AuthService extends Service {\n\n    async login(data: LoginFormData): Promise<APIResponse> {\n        const response = await this.post(\n            '/users/auth',\n            {\n                'email': data.email,\n                'password': data.password\n            }\n        );\n\n        // set the token to local storage\n        if (response.data) {\n            localStorage.setItem(this._TOKEN_NAME, response.data.toString());\n        }\n\n        return response;\n    }\n\n    logout(): void {\n        localStorage.removeItem(this._TOKEN_NAME);\n    }\n\n    hasToken(): boolean {\n        return Boolean(localStorage.getItem(this._TOKEN_NAME));\n    }\n\n    async hasSession(): Promise<boolean> {\n        try {\n            if (this.hasToken()) {\n                await this.get('/users/me'); // change to ping\n                return true\n            }\n        } catch (err: any) {\n            // localStorage.removeItem(this._TOKEN_NAME);\n            \n        }\n        return false\n    }\n}\n\nexport default new AuthService();","import Image from \"../models/Image\";\nimport APIServiceError from \"./APIServiceError\";\nimport { BuildingViewParams } from \"./BuildingService\";\nimport { APIResponse } from \"./interfaces\";\nimport { RoomViewParams } from \"./RoomService\";\nimport Service, { ResponseData } from \"./Service\";\nimport { UserViewParams } from \"./UserService\";\n\n\n\nclass ImageService extends Service {\n\n    private async sendImage(endpoint: string, formBody: FormData) {\n        const resp = await fetch(\n            this._BASE_URL + endpoint,\n            {\n                method: \"POST\",\n                cache: 'no-cache',\n                mode: 'cors',\n                body: formBody,\n                headers: {\n                    'Authorization': this.authToken,\n                }\n            }\n        );\n\n        const data = await resp.json() as ResponseData;\n        console.debug(data);\n\n        if (!resp.ok) {\n            console.error(`${resp.status}\\t${data?.error?.type}\\t${data?.error?.description}`);\n            throw new APIServiceError(data);\n        }\n\n        return data as APIResponse;\n    }\n\n    public getLink(image?: Image): string {\n        if (image?.url.includes('http')) return image.url;\n\n        return this._BASE_URL.slice(0, this._BASE_URL.length - 3) + image?.url;\n    }\n\n    public upload(\n        urlParams: (UserViewParams | BuildingViewParams | RoomViewParams),\n        image: Blob\n    ) {\n        const formData = new FormData();\n        formData.append(\n            'file',\n            image\n        );\n        return this.sendImage(this.preparePath(urlParams) + '/image', formData);\n    }\n\n    public remove(urlParams: (UserViewParams | BuildingViewParams | RoomViewParams)) {\n        return this.delete(this.preparePath(urlParams) + '/image');\n    }\n}\n\n\nexport default new ImageService();","import { AppURLParams, PaginationQueryParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface LogsQueryParams extends PaginationQueryParams {\n    method?: \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\",\n    userId?: string | number\n}\n\n\nclass LogService extends Service {\n\n    fetch(urlParams: AppURLParams, queryParams: LogsQueryParams) {\n        return this.get(\n            this.preparePath(urlParams) + '/requests',\n            queryParams\n        );\n    }\n\n    async getStats() {\n        return await this.get(`/requests/stats`);\n    }\n}\n\n\nexport default new LogService();","\n\n\nclass StorageService {\n\n    private id: string = '';\n\n    public setIdentity(value: string | number) {\n        this.id = value.toString();\n    }\n\n    private codeName(name: string) {\n        return btoa(encodeURI(name + this.id));\n    }\n\n    public save(name: string, value: any) {\n        const str = JSON.stringify(value);\n        localStorage.setItem(this.codeName(name), str);\n    }\n\n    public delete(name: string) {\n        localStorage.removeItem(this.codeName(name));\n    }\n\n    public read(name: string) {\n        const str = localStorage.getItem(this.codeName(name));\n        if (!str) return null;\n\n        try {\n            return JSON.parse(str);\n        } catch {\n            return null;\n        }\n    }\n\n}\n\nexport default new StorageService();","import { SessionUser } from \"../models/User\";\nimport { PaginationQueryParams } from \"./interfaces\";\nimport Service, { ServiceFormData } from \"./Service\";\n\n\nexport interface RegisterUserData extends ServiceFormData {\n    email: string,\n    password: string,\n    name: string,\n    surname: string\n}\n\nexport interface ActivationData extends ServiceFormData {\n    email: string,\n    password: string,\n    code: string,\n}\n\nexport interface ChangePasswordData extends ServiceFormData {\n    code: string,\n    newPassword: string,\n    email: string\n}\n\nexport interface UpdateUserParams extends ServiceFormData {\n    name?: string,\n    surname?: string,\n    metadata?: object\n}\n\nexport interface UserViewParams {\n    userId: string;\n}\n\nexport interface UserQueryParams extends PaginationQueryParams {\n    [index: string]: any,\n    accessId?: number,\n    deleted?: boolean,\n    search?: string,\n    activated?: boolean,\n}\n\n\nclass UserService extends Service {\n    _path = '/users';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath(urlParams: UserViewParams) {\n        this._path = this.preparePath(urlParams);\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public async getMe() {\n        const resp = await this.get('/users/me');\n        return resp.data as SessionUser;\n    }\n\n    public getUsers(data?: UserQueryParams) {\n        return this.get('/users', data);\n    }\n\n    public register(data: RegisterUserData) {\n        return this.post('/users', data);\n    }\n\n    public activate(data: ActivationData) {\n        return this.patch('/users/activate', data);\n    }\n\n    public generateKey(email: string) {\n        return this.post('/users/key', {\n            email: email\n        });\n    }\n\n    public updateAccess(userId: number, accessId: number) {\n        return this.patch(`/users/${userId}/access`, {\n            accessId: accessId\n        })\n    }\n\n    public update(data: UpdateUserParams) {\n        return this.patch(this.path, data);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public changePassword(data: ChangePasswordData) {\n        return this.patch('/users/password', data);\n    }\n}\n\n\nexport default new UserService();","import Metadata, { FavouriteBuilding, FavouriteRoom } from \"../models/Metadata\";\nimport StorageService from \"./StorageService\";\nimport UserService from \"./UserService\";\n\n\n\n\nclass MetadataService {\n    private STORAGE_NAME = 'user-metadata';\n\n    private data: Metadata;\n    private _userId: number | undefined;\n\n\n    constructor() {\n        this.data = StorageService.read(this.STORAGE_NAME) ?? {\n            notes: '',\n            favourites: []\n        };\n    }\n\n    private async save(): Promise<void> {\n        StorageService.save(this.STORAGE_NAME, this.data);\n\n        if (!this._userId) return;\n\n        UserService.setPath({ userId: this._userId?.toString() });\n        try {\n            await UserService.update({\n                metadata: this.data\n            });\n        } catch (err: any) { console.error(err) }\n    }\n\n    public set userId(id: number) {\n        this._userId = id;\n    }\n\n    public set metadata(value: Metadata) {\n        this.data = {\n            ...this.data,\n            ...value\n        };\n    }\n\n    public get notes() {\n        return this.data.notes ?? '';\n    }\n\n    public get favourites() {\n        return this.data.favourites ?? [];\n    }\n\n    public set notes(value: string) {\n        this.data.notes = value;\n        this.save();\n    }\n\n    public addFavourite(item: FavouriteBuilding | FavouriteRoom): void {\n        this.data.favourites?.push(item);\n        this.data.favourites?.sort((a, b) => {\n            if (a.type >= b.type) {\n                if (a.type === b.type) {\n                    return a.name > b.name ? 1 : -1;\n                }\n                return 1;\n            }\n            return -1;\n        });\n        console.log(this.data);\n        this.save();\n    }\n\n    public isFavourite(item: FavouriteBuilding | FavouriteRoom): boolean {\n        return Boolean(this.data.favourites?.find(({ id, type }) => (type === item.type && id === item.id)));\n    }\n\n    public removeFavourite(item: FavouriteBuilding | FavouriteRoom): void {\n        this.data.favourites = this.data.favourites?.filter(({ id, type }) => id + type !== item.id + item.type)\n        this.save();\n    }\n}\n\n\nexport default new MetadataService();","import Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport { SxProps } from \"@mui/system\";\n\n\ninterface ContextLoaderProps {\n    open: boolean,\n    text?: string,\n    sx?: SxProps\n}\n\nexport default function LoadingView(props: ContextLoaderProps) {\n    return (\n        <Backdrop\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                color: 'primary.main',\n                zIndex: (theme) => theme.zIndex.drawer + 1,\n                backgroundColor:'background.default',\n                ...props.sx\n            }}\n            open={props.open}\n        >\n            <Typography variant=\"h5\" pb={2}>\n                {props.text}\n            </Typography>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    );\n}","\ninterface AppPathsInterface {\n    readonly [index: string]: string\n    PUBLIC: string,\n    LOGIN: string,\n    REGISTER: string,\n    ACTIVATE: string,\n    REMIND_PASSWORD: string,\n    FAQ: string,\n\n    HOME: string,\n    SETTINGS: string,\n    MY_PROFILE: string,\n    INFRASTRUCTURE: string,\n    ADDRESS: string,\n    BUILDING: string,\n    ROOM: string,\n    USERS: string,\n    ACCESS: string,\n};\n\n\ninterface AppDynamicPaths {\n    readonly [indes: string]: (...params: any) => string,\n\n    toRoom: (addressId: number, buildingId: number, roomId: number) => string,\n    toBuilding: (addressId: number, buildingId: number) => string,\n    toAddress: (addressId: number) => string,\n    toUser: (userId: number) => string\n}\n\n\nconst paths: { [index: string]: string } = {\n    PUBLIC: '/public',\n    FAQ: '/faq',\n    HOME: '/app',\n}\n\n\npaths.LOGIN = paths.PUBLIC + '/login';\npaths.REGISTER = paths.PUBLIC + '/register';\npaths.ACTIVATE = paths.PUBLIC + '/activate';\npaths.REMIND_PASSWORD = paths.PUBLIC + '/passwd';\n\npaths.ACCESS = paths.HOME + '/accesses'\npaths.SETTINGS = paths.HOME + '/settings';\n\npaths.USERS = paths.HOME + '/users';\npaths.USER = paths.USERS + '/:userId';\npaths.MY_PROFILE = paths.USERS + '/me';\npaths.INFRASTRUCTURE = paths.HOME + '/infrastructure';\npaths.ADDRESS = paths.HOME + '/addresses/:addressId';\npaths.BUILDING = paths.ADDRESS + '/buildings/:buildingId';\npaths.ROOM = paths.BUILDING + '/rooms/:roomId';\n\n\nexport const dynamicPaths: AppDynamicPaths = {\n    toAddress: (addressId: number) => `/app/addresses/${addressId}`,\n    toBuilding: (addressId: number, buildingId: number) => dynamicPaths.toAddress(addressId) + `/buildings/${buildingId}`,\n    toRoom: (addressId: number, buildingId: number, roomId: number) => dynamicPaths.toBuilding(addressId, buildingId) + `/rooms/${roomId}`,\n    toUser: (userId: number) => paths.USERS + `/${userId}`\n}\n\nexport default paths as AppPathsInterface;","import React, { createContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport useNotification from \"../contexts/NotificationContext/useNotification\";\n\nimport { SessionUser } from \"../models/User\";\n\nimport AuthService, { LoginFormData } from \"../services/AuthService\";\nimport ImageService from \"../services/ImageService\";\nimport LogService from \"../services/LogService\";\nimport MetadataService from \"../services/MetadataService\";\nimport ReservationService from \"../services/ReservationService\";\nimport StorageService from \"../services/StorageService\";\nimport UserService from \"../services/UserService\";\nimport LoadingView from \"../shared/components/LoadingView\";\nimport paths from \"../shared/path\";\nimport SessionValue from \"./SessionValue\";\n\n\ninterface SessionProviderProps {\n    children?: React.ReactNode\n}\n\n\nexport const sessionContext: any = createContext(null);\n\n\nexport default function SessionProvider({ children }: SessionProviderProps) {\n    const notify = useNotification();\n    const [loading, setLoading] = React.useState(true);\n    const [user, setUser] = useState<SessionUser | null>(null);\n\n\n    const setUpUser = React.useCallback((user: SessionUser) => {\n        setUser(user);\n\n        // config services which require identity data\n        StorageService.setIdentity(user.id);\n        MetadataService.metadata = user.metadata;\n        MetadataService.userId = user.id;\n        ReservationService.userId = user.id;\n        LogService.userId = user.id;\n        ImageService.userId = user.id;\n        UserService.userId = user.id;\n    }, []);\n\n\n    const checkIfUserHasSession = React.useCallback(async () => {\n        setLoading(true);\n        if (AuthService.hasToken()) {\n            try {\n                if (await AuthService.hasSession()) {\n                    const sessionUser = await UserService.getMe();\n                    setUpUser(sessionUser);\n                    notify(\"Witaj ponownie!\", 'info');\n                } else {\n                    notify('Twoja sesja wygasła', 'info', () => <Redirect to={paths.LOGIN} />);\n                }\n            } catch (err: any) {\n                notify(err.description, 'error', () => <Redirect to={paths.WELCOME} />);\n            }\n        } else {\n            notify('Witaj!', 'info', () => <Redirect to={paths.WELCOME} />);\n        }\n        setLoading(false)\n    }, [\n        notify,\n        setUpUser\n    ]);\n\n\n    React.useEffect(() => {\n        checkIfUserHasSession();\n        return () => { }\n    }, [checkIfUserHasSession]);\n\n\n    const login = React.useCallback(async (data: LoginFormData): Promise<void> => {\n        try {\n            await AuthService.login(data);\n            const sessionUser = await UserService.getMe();\n            setUpUser(sessionUser);\n\n            notify(\"Pomyślnie zalogowano!\", \"success\", () => <Redirect to={paths.HOME} />);\n\n        } catch (err: any) {\n            let message = err.description;\n\n            if (err.code === 404) message = \"Użytkownik nie istnieje\";\n\n            notify(message, \"error\");\n        }\n    }, [\n        notify,\n        setUpUser\n    ]);\n\n\n    const logout = React.useCallback(() => {\n        notify(\"Pomyślnie wylogowano!\", \"success\", () => <Redirect to={paths.WELCOME} />);\n        AuthService.logout();\n        setUser(null);\n    }, [notify]);\n\n\n    return (\n        <>\n            <LoadingView\n                open={loading}\n                text=\"Ładowanie Sesji...\"\n            />\n            <sessionContext.Provider value={{ user, login, logout } as SessionValue}>\n                {!loading && children}\n            </sessionContext.Provider>\n        </>\n    );\n}\n","\nexport default interface QueryParamsContextValue<T> {\n    setQueryParams: React.Dispatch<React.SetStateAction<T>>\n    queryParams: T,\n}\n\n\nexport const queryParamsContextDefaults = {\n    queryParams: { q: 1 },\n    setQueryParams: (param: { q: number }) => { }\n}","import React from \"react\";\nimport StorageService from \"../../services/StorageService\";\nimport QueryParamsContextValue, { queryParamsContextDefaults } from \"./QueryParamsContextValue\";\n\n\nexport const queryParamsContext = React.createContext<QueryParamsContextValue<any>>(queryParamsContextDefaults);\n\n\nfunction initQueryParams<T>(keyName: string, defaultValue: T): T {\n    const confString = StorageService.read(keyName);\n    if (confString) {\n        return confString;\n    }\n    return defaultValue;\n};\n\n\ninterface QueryParamsContextProviderProps<T> {\n    default: T,\n    name: string,\n    children: React.ReactNode[] | React.ReactNode\n}\n\n\nexport default function QueryParamsContextProvider<T>(props: QueryParamsContextProviderProps<T>) {\n\n    const [queryParams, setQueryParams] = React.useState<T>(\n       ()=> initQueryParams<T>(props.name, props.default)\n    );\n\n    React.useEffect(() => {\n        StorageService.save(props.name, queryParams);\n    }, [queryParams, props.name]);\n\n    if(!queryParams) return null;\n\n    return (\n        <queryParamsContext.Provider value={{ queryParams, setQueryParams }}>\n            {props.children}\n        </queryParamsContext.Provider>\n    );\n}","import React from \"react\";\nimport { queryParamsContext } from \"./QueryParamsContextProvider\";\nimport QueryParamsContextValue from \"./QueryParamsContextValue\";\n\n\nexport default function useQueryParams<T>() {\n    return React.useContext(queryParamsContext) as QueryParamsContextValue<T>;\n}","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent } from '@mui/material';\nimport { useQueryParams } from '../../../../contexts/QueryParamsContext';\nimport { APIPagination } from '../../../../services/interfaces';\n\n\nexport default function ListPagination() {\n    const { queryParams, setQueryParams } = useQueryParams<APIPagination>();\n\n\n    const handlePageChange = React.useCallback((event: React.ChangeEvent<unknown>, value: number) => {\n        setQueryParams(old => ({\n            ...old,\n            currentPage: value\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n    const handleCountChange = React.useCallback((event: SelectChangeEvent<number>, child: React.ReactNode) => {\n        setQueryParams(old => ({\n            ...old,\n            itemsOnPage: Number(event.target.value)\n        }));\n    }, [\n        setQueryParams\n    ]);\n\n\n    return (\n        <Stack spacing={2} sx={{\n            flexWrap: 'wrap',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center'\n        }}>\n            <Pagination\n                count={queryParams.pagesCount}\n                size='small'\n                page={queryParams.currentPage}\n                onChange={handlePageChange}\n            />\n            <FormControl fullWidth sx={{ maxWidth: '100px' }}>\n                <InputLabel id=\"items-on-page-label\">Na stronie</InputLabel>\n                <Select\n                    size='small'\n                    labelId=\"items-on-page-label\"\n                    id=\"items-on-page\"\n                    label=\"Na stronie\"\n                    value={queryParams.itemsOnPage ?? 5}\n                    onChange={handleCountChange}\n                >\n                    {\n                        [5, 10, 15, 20].map(num => <MenuItem key={num} value={num}>{num}</MenuItem>)\n                    }\n                    <MenuItem value={10000}>wszystko</MenuItem>\n                </Select>\n            </FormControl>\n        </Stack>\n    );\n}\n","import React from \"react\";\n\n\nexport default function useTrigger(timeInterval: number) {\n    const [trigger, setTrigger] = React.useState<boolean>();\n\n\n    React.useEffect(() => {\n        const int = setInterval(() => setTrigger(old => !old), timeInterval);\n\n        return () => clearInterval(int);\n    }, [\n        timeInterval\n    ]);\n\n    return trigger;\n}","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport Log from \"../../../../../../models/Log\";\nimport LogService, { LogsQueryParams } from \"../../../../../../services/LogService\";\nimport useTrigger from \"../../../hooks/useTrigger\";\nimport LogsContextValue from \"./LogsContextValue\";\n\n\n\n\nexport const logsContext: any = React.createContext(null);\n\n\ninterface LogsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function LogsContextProvider(props: LogsContextProviderProps) {\n    const urlParams = useParams();\n    const { queryParams, setQueryParams } = useQueryParams<LogsQueryParams>();\n    const notify = useNotification();\n    const refresh = useTrigger(60_000);\n\n    const [logs, setLogs] = React.useState<Log[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await LogService.fetch(urlParams, queryParams);\n            setLogs(resp.data as Log[]);\n\n            resp.pagination && setQueryParams(old => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount,\n            }));\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setLogs([]);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        setQueryParams,\n        queryParams.currentPage,\n        queryParams.itemsOnPage,\n        queryParams.method,\n        queryParams.userId,\n        notify,\n        urlParams,\n    ]);\n\n\n    React.useEffect(() => {\n        load()\n    }, [\n        load,\n        refresh\n    ])\n\n\n    if (!logs) return null;\n\n    return (\n        <logsContext.Provider value={{\n            logs\n        } as LogsContextValue}>\n            {props.children}\n        </logsContext.Provider>\n    )\n}","import InputBase from \"@mui/material/InputBase\";\nimport { SxProps } from \"@mui/system\";\nimport React from \"react\";\n\n\ninterface SimpleInputProps {\n    value: string,\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    label: string,\n    name: string,\n    sx?: SxProps\n}\n\nexport default function LazyInput({\n    value,\n    onChange,\n    label,\n    name,\n    sx,\n}: SimpleInputProps) {\n    const [trigger, setTrigger] = React.useState<any>();\n    const [str, setStr] = React.useState<string>(value);\n\n\n    const handleSearchFieldChange = React.useCallback((evt) => {\n        setStr(evt.target.value);\n        clearTimeout(trigger);\n\n        let timer = setTimeout(() => {\n            onChange(evt);\n        }, 1000);\n        setTrigger(timer);\n    }, [\n        trigger,\n        onChange,\n    ]);\n\n\n    return <InputBase\n        name={name}\n        value={str}\n        onChange={handleSearchFieldChange}\n        placeholder={label}\n        sx={{\n            width: '100%',\n            maxWidth: '600px',\n            p: 1,\n            bgcolor: 'background.default',\n            ...sx\n        }}\n        inputProps={{ 'aria-label': label }}\n    />;\n}","import { Grid, FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { LogsQueryParams } from \"../../../../../services/LogService\";\nimport LazyInput from \"../../components/LazyInput\";\n\n\n\nexport function LogsTabBar() {\n    const { queryParams, setQueryParams } = useQueryParams<LogsQueryParams>();\n\n\n    const handleChange = React.useCallback((evt: any) => {\n        evt.preventDefault();\n        setQueryParams(old => ({ ...old, [evt.target.name]: evt.target.value }));\n    }, [setQueryParams])\n\n\n    return (\n        <Grid container component=\"form\" spacing={3}>\n            <Grid item xs={6} md={2}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-metode\">Metoda</InputLabel>\n                    <Select\n                        size=\"small\"\n                        labelId=\"wybierz-metode\"\n                        id=\"metoda\"\n                        value={queryParams.method}\n                        name=\"method\"\n                        label=\"wybierz-metode\"\n                        onChange={handleChange}\n                    >\n                        <MenuItem value=\"\">brak</MenuItem>\n                        <MenuItem value=\"GET\">GET</MenuItem>\n                        <MenuItem value=\"POST\">POST</MenuItem>\n                        <MenuItem value=\"PATCH\">PATCH</MenuItem>\n                        <MenuItem value=\"DELETE\">DELETE</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6} md={3}>\n                <LazyInput\n                    label=\"id użytkownika\"\n                    name='userId'\n                    value={queryParams.userId?.toString() ?? ''}\n                    onChange={(evt) => setQueryParams(old => ({ ...old, userId: evt.target.value }))}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\n","\n\n\nexport function displayDate(dateString: string): string {\n    const date = new Date(dateString);\n    const format = new Intl.DateTimeFormat('pl-PL', {\n        dateStyle: \"medium\",\n        timeStyle: \"medium\"\n    })\n\n    return format.format(date);\n}\n\n\nexport const timeFormat = new Intl.DateTimeFormat('pl-PL', {\n    timeStyle: \"medium\"\n});\n\n\nexport function isDate(str: string | undefined): boolean {\n    if (!str) return false;\n\n    let date = new Date(str);\n    return Boolean(date.getDate())\n}\n\nexport function urlToId(): string {\n    let url = window.location.pathname.toLocaleLowerCase()\n    return url.replaceAll(/\\d/gi, '*')\n}","import { TableRow, TableCell, IconButton, Collapse, Box } from \"@mui/material\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Link } from \"@mui/material\";\nimport Log from \"../../../../../models/Log\";\nimport { displayDate } from \"../../../../../shared/utils\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\n\ninterface LogRowProps {\n    row: Log\n}\n\nexport default function LogRow(props: LogRowProps) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <>\n            <TableRow hover sx={{ '& > *': { borderBottom: 'unset' } }}>\n                <TableCell>\n                    <IconButton\n                        aria-label=\"szczegóły zapytania\"\n                        size=\"small\"\n                        onClick={() => setOpen(!open)}\n                    >\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">{row.id}</TableCell>\n                {/* <TableCell align=\"left\">{row.method}</TableCell> */}\n                <TableCell align=\"left\">{row.endpoint}</TableCell>\n                <TableCell align=\"left\">{Math.fround(row.time * 1000).toPrecision(6)}</TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box component=\"pre\" sx={{ margin: 1 }}>\n                            <Link component={RouterLink} to={`/users/${row.user}`}>Pokaż użytkownika</Link> <br />\n                            {displayDate(row._created)}&nbsp;|&nbsp;{row.method}&nbsp;{row.endpoint}<br />\n                            czas przetwarzania: {row.time} [s]<br />\n                            Ciało zapytania <br />\n                            {JSON.stringify(\n                                JSON.parse(row.payload),\n                                undefined,\n                                3\n                            )}\n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </>\n    );\n}","import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { Typography } from '@mui/material';\nimport LogRow from './LogRow';\nimport { useLogs } from './LogsContext';\n\n\n\n\nexport default function LogsTable() {\n    const { logs } = useLogs();\n\n    return (\n        <TableContainer>\n            <Table aria-label=\"tabela logów\" size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell />\n                        <TableCell align=\"left\">Id</TableCell>\n                        {/* <TableCell align=\"left\">Metoda</TableCell> */}\n                        <TableCell align=\"left\">Cel/endpoint</TableCell>\n                        <TableCell align=\"left\">Czas wykonania&nbsp;[ms]</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {logs.length === 0 &&\n                        <TableRow>\n                            <TableCell colSpan={6}>\n                                <Typography textAlign=\"center\" p=\"15px 0px\">\n                                    Brak elementów do wyświetlenia\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    }\n\n                    {logs.map((log) => <LogRow key={log.id} row={log} />)}\n                </TableBody>\n            </Table>\n        </TableContainer>\n\n    );\n}\n\n\n\n\n","import React from \"react\";\nimport { logsContext } from \"./LogsContextProvider\";\nimport LogsContextValue from \"./LogsContextValue\";\n\nexport default function useLogs() {\n    return React.useContext(logsContext) as LogsContextValue;\n}","import Stack from \"@mui/material/Stack\";\nimport QueryParamsContextProvider from \"../../../../../contexts/QueryParamsContext/QueryParamsContextProvider\";\nimport ListPagination from \"../../components/ListPagination\";\nimport { LogsContext } from \"./LogsContext\";\nimport { LogsTabBar } from \"./LogsTabBar\";\nimport LogsTable from \"./LogsTable\";\n\n\n\nexport default function GenericLogsTab() {\n    return (\n        <QueryParamsContextProvider name=\"logs-query-params\" default={{ method: 'PATCH', itemsOnPage: 5 }}>\n            <LogsContext>\n                <Stack spacing={3}>\n                    <LogsTabBar />\n                    <LogsTable />\n                    <ListPagination />\n                </Stack>\n            </LogsContext>\n        </QueryParamsContextProvider>\n    );\n}","import Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { SxProps } from \"@mui/system\";\n\n\n\ninterface SmallCardProps {\n    children: React.ReactNode | React.ReactNode[];\n    title?: string,\n    titleComponent?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6',\n    sx?: SxProps\n}\n\n\nexport default function SmallCard(props: SmallCardProps) {\n    return (\n        <Paper elevation={0} sx={{\n            p: 2,\n            ...props.sx\n        }}>\n            {props?.title && <Typography variant='body2' component={props.titleComponent ?? 'h2'} color='text.secondary'>\n                {props.title}\n            </Typography>}\n            {props.children}\n        </Paper>\n    )\n}","import { Box } from \"@mui/material\";\nimport React from \"react\";\nimport SmallCard from \"../../components/SmallCard\";\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    hidden: boolean,\n    index: number\n}\n\n\nexport default function SwipeablePanel(props: TabPanelProps) {\n    const { children, hidden, index, ...other } = props;\n\n    // should component update\n    const render = React.useMemo(() =>\n        <Box\n            role=\"tabpanel\"\n            hidden={hidden}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            <SmallCard>{children}</SmallCard>\n        </Box>\n        , [hidden, index, children, other]);\n\n    return render;\n}","import { Tab, Tabs, Typography, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport SwipeablePanel from \"./SwipeablePanel\";\n\n\ninterface SwipeableTabsProps {\n    tabs: { name: string, component: React.ReactNode }[],\n}\n\n\nfunction a11yProps(index: number) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\n\nexport default function SwipeableTabs(props: SwipeableTabsProps) {\n    const theme = useTheme();\n    const [tabIndex, setTabIndex] = React.useState(0);\n\n\n    const handleTabChange = React.useCallback((event: React.SyntheticEvent, newValue: number) => {\n        setTabIndex(newValue);\n    }, []);\n\n\n    const handleChangeIndex = React.useCallback((index: number) => {\n        setTabIndex(index);\n    }, []);\n\n\n    const renderedTabs = React.useMemo(() => {\n        return props.tabs.map((page, index) => <Tab\n            key={index}\n            label={<Typography component='h2' variant='button'>{page.name}</Typography>}\n            {...a11yProps(index)}\n        />)\n    }, [props.tabs]);\n\n\n    const renderedTabPanels = React.useMemo(() => {\n        return props.tabs.map((page, index) => <SwipeablePanel\n            key={index}\n            index={index}\n            hidden={tabIndex !== index}\n            dir={theme.direction}\n        >\n            {page.component}\n        </SwipeablePanel>)\n    }, [\n        props.tabs,\n        tabIndex,\n        theme.direction,\n    ]);\n\n\n    return (\n        <div>\n            <Tabs\n                allowScrollButtonsMobile\n                value={tabIndex}\n                onChange={handleTabChange}\n                indicatorColor=\"primary\"\n                variant=\"scrollable\"\n                sx={{ borderBottom: 2, borderColor: 'divider' }}\n            >\n                {renderedTabs}\n            </Tabs>\n            <br />\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={tabIndex}\n                onChangeIndex={handleChangeIndex}\n            >\n                {renderedTabPanels}\n            </SwipeableViews>\n        </div>\n    );\n}","import Service from \"./Service\";\n\n\n\nexport interface AccessViewParams {\n    addressId: string,\n}\n\n\nexport interface AccessUpdateParams {\n    [index: string]: string | boolean | undefined,\n    name?: string,\n    owner?: boolean,\n    accessAdmin?: boolean,\n    premisesAdmin?: boolean,\n    keysAdmin?: boolean,\n    reservationsAdmin?: boolean,\n    reservationsAbility?: boolean,\n    logsAdmin?: boolean,\n    statsViewer?: boolean,\n}\n\nexport interface AccessCreateParams {\n    name: string,\n}\n\n\nclass AccessService extends Service {\n    _path = '/accesses';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public getAll() {\n        return this.get('/accesses');\n    }\n\n    public remove(id?: number) {\n        return this.delete(\n            id ? `${this.path}/${id}` : this.path\n        );\n    }\n\n    public update(id: number, data: AccessUpdateParams) {\n        return this.patch(`${this.path}/${id}`, data);\n    }\n\n    public create(data: AccessCreateParams) {\n        return this.post(this.path, data)\n    }\n}\n\nexport default new AccessService()","import Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SaveIcon from '@mui/icons-material/Save';\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\n\n\ninterface FormGridContainerProps {\n    title: string,\n    subtitle?: string,\n    onSubmit: () => void,\n    onCancel: () => void,\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function FormGridContainer({\n    title,\n    subtitle,\n    onSubmit,\n    onCancel,\n    children,\n}: FormGridContainerProps) {\n\n\n    const handleSubmit = React.useCallback((event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        onSubmit();\n    }, [\n        onSubmit\n    ]);\n\n\n    return (\n        <Stack rowGap={3}>\n            <span>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    {title}\n                </Typography>\n\n                {subtitle && <Typography variant=\"body2\" color='text.secondary' mt='5px'>\n                    {subtitle}\n                </Typography>}\n            </span>\n\n            <Grid container spacing={2} component=\"form\" onSubmit={handleSubmit} >\n                {children}\n                <Grid item xs={12}>\n                    <Stack direction=\"row\" justifyContent=\"space-around\" mt={1.5}>\n                        <Button\n                            aria-label=\"Zamknij\"\n                            title='Zamknij'\n                            startIcon={<CancelIcon />}\n                            onClick={onCancel}\n                        >\n                            Zamknij\n                        </Button>\n                        <Button\n                            aria-label=\"Zatwierdź\"\n                            title='Zatwierdź'\n                            startIcon={<SaveIcon color='inherit' />}\n                            type=\"submit\"\n                            color=\"success\"\n                        >\n                            Zatwierdź\n                        </Button>\n                    </Stack>\n                </Grid>\n            </Grid>\n        </Stack>\n    );\n}","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport { SxProps } from '@mui/system';\nimport { Paper } from '@mui/material';\n\n\ninterface GenericModalProps {\n  children: React.ReactNode | React.ReactNode[],\n  open: boolean,\n  sx?: SxProps,\n  onClose: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function GenericModal({\n  children, open, sx, onClose\n}: GenericModalProps) {\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        overflow: 'auto'\n      }}\n    >\n      <Fade in={open}>\n        <Paper sx={{\n          bgcolor: 'background.paper',\n          position: 'absolute' as 'absolute',\n          // borderRadius: (theme) => theme.shape.borderRadius,\n          width: '95%',\n          mt: '5vw',\n          maxWidth: '500px',\n          // overflow: 'auto',\n          boxShadow: 24,\n          p: 3,\n          ...sx\n        }}>\n          {children}\n        </Paper>\n      </Fade>\n    </Modal >\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport Model from \"../../../../models/Model\";\nimport { displayDate } from \"../../../../shared/utils\";\n\n\n\ninterface DatesFooterProps {\n    model: Model\n}\n\nexport default function DatesFooter(props: DatesFooterProps) {\n    return (\n        <Typography color=\"text.secondary\" variant='body2' fontSize='smaller'>\n            Utworzono: {displayDate(props.model._created)}<br />\n            Ostatnia aktualizacja: {displayDate(props.model._updated)}\n        </Typography>\n    )\n}","import FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Grid from \"@mui/material/Grid\";\nimport Switch from \"@mui/material/Switch\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport Access from \"../../../../../models/Access\";\nimport { AccessUpdateParams } from \"../../../../../services/AccessService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../components/GenericModal\";\nimport DatesFooter from \"../../components/DatesFooter\";\n\n\n\ninterface AccessEditModalProps {\n    access: Access,\n    open: boolean,\n    onClose: () => void,\n    onSubmit: (accessId: number, data: AccessUpdateParams) => Promise<boolean>\n}\n\n\nconst fields = [\n    {\n        name: 'owner',\n        label: 'Właściciel'\n    }, {\n        name: 'accessAdmin',\n        label: 'Administrator klas dostępu'\n    }, {\n        name: 'premisesAdmin',\n        label: 'Administrator inwentarza'\n    }, {\n        name: 'keysAdmin',\n        label: 'Administrator kluczy'\n    }, {\n        name: 'reservationsAdmin',\n        label: 'Administrator rezerwacji '\n    }, {\n        name: 'reservationsAbility',\n        label: 'Możliwość rezerwacji'\n    }, {\n        name: 'logsAdmin',\n        label: 'Administrator logów'\n    }, {\n        name: 'statsViewer',\n        label: 'Dostęp do statystyk'\n    },\n];\n\n\nexport default function AccessEditModal({\n    access,\n    open,\n    onClose,\n    onSubmit,\n}: AccessEditModalProps) {\n\n    const [data, setData] = React.useState<AccessUpdateParams>({});\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | boolean;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = event.target.value;\n                break;\n            default:\n                value = event.target.checked;\n                break;\n        }\n\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await onSubmit(access.id, data)) {\n            onClose();\n            setData({});\n        }\n    }, [\n        onClose,\n        onSubmit,\n        access.id,\n        data\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n        >\n            <FormGridContainer\n                onSubmit={handleSubmit}\n                onCancel={close}\n                title=\"Edycja klasy dostępu\"\n                subtitle=\"Edycja klasy dostępu. Wprowadzone zmiany w sposób istotny wpływają na zakres funkcji użytkowników.\"\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        name=\"name\"\n                        label=\"nazwa\"\n                        id=\"nazwa\"\n                        value={data.name ?? access.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                {\n                    fields.map((field, index) =>\n                        <Grid item xs={12} key={index}>\n                            <FormControlLabel\n                                labelPlacement=\"start\"\n                                control={<Switch\n                                    id={`access-${field.name}`}\n                                    name={field.name}\n                                    inputProps={{ 'aria-label': field.label }}\n                                    onChange={handleChange}\n                                    checked={(field.name in data) ? data[field.name] : (access[field.name])}\n                                />}\n                                label={field.label}\n                            />\n                        </Grid>\n                    )\n                }\n                <Grid item xs={12} ml={2}>\n                    <DatesFooter model={access} />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    )\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { AccessCreateParams } from \"../../../../../services/AccessService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../components/GenericModal\";\n\n\n\ninterface CreateAccessModalProps {\n    open: boolean,\n    onClose: () => void,\n    onSubmit: (data: AccessCreateParams) => Promise<boolean>\n}\n\n\nexport default function CreateAccessModal({\n    open,\n    onClose,\n    onSubmit,\n}: CreateAccessModalProps) {\n\n    const [name, setName] = React.useState<string>('');\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setName(event.target.value);\n    }, []);\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setName('');\n    }, [\n        onClose\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await onSubmit({\n            name: name\n        })) {\n            onClose();\n            setName('');\n        }\n    }, [\n        onClose,\n        onSubmit,\n        name\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n        >\n            <FormGridContainer\n                onSubmit={handleSubmit}\n                onCancel={close}\n                title=\"Tworzenie klasy dostępu\"\n                subtitle=\"Podaj nazwę dla nowej klasy dostępu. Stworzona zostanie klasa bez żadnych uprawnień - pamiętaj aby dostosować ja do swoich potrzeb.\"\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        autoFocus\n                        required\n                        name=\"name\"\n                        label=\"nazwa\"\n                        id=\"nazwa\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n            </FormGridContainer>\n        </GenericModal>\n    )\n}","import React from \"react\";\nimport { AccessContextValue } from \".\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport Access from \"../../../../../models/Access\";\nimport AccessService, { AccessCreateParams, AccessUpdateParams } from \"../../../../../services/AccessService\";\nimport { EditForm } from \"../Forms\";\n\n\n\nexport const accessContext: any = React.createContext(null);\n\n\ninterface AccessContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function AccessContextProvider(props: AccessContextProviderProps) {\n    const notify = useNotification();\n\n    const [modalOpen, setModalOpen] = React.useState<boolean>(false);\n    const [selectedAccessId, setSelectedAccessId] = React.useState<number>();\n    const [accessesList, setAccessesList] = React.useState<Access[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await AccessService.getAll();\n            setAccessesList(resp.data as Access[]);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setAccessesList([]);\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const updateAccess = React.useCallback(async (accessId: number, data: AccessUpdateParams) => {\n        try {\n            if (await AccessService.update(accessId, data)) {\n                setAccessesList(old => {\n                    if (old)\n                        return old.map(access => {\n                            if (access.id === accessId) {\n                                access = {\n                                    ...access,\n                                    ...data\n                                }\n                            }\n                            return access;\n                        });\n\n                });\n                notify('Klasa dostępu została zaktualizowana', 'success');\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const deleteAccess = React.useCallback(async (id?: number) => {\n        try {\n            await AccessService.remove(id);\n\n            setAccessesList(old => {\n                if (!old) return;\n                return old.filter(access => access.id !== id);\n            });\n\n            notify('Klasa dostępu została usunięta', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const createAccess = React.useCallback(async (data: AccessCreateParams) => {\n        try {\n            const resp = await AccessService.create(data);\n\n            setAccessesList(old => {\n                old?.unshift({\n                    ...data,\n                    id: resp.data,\n                    _created: (new Date()).toUTCString(),\n                    _updated: (new Date()).toUTCString(),\n                } as Access)\n                return Object.assign([], old);\n            });\n\n            notify('Klasa dostępu została utworzona', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    const selectedAccess = React.useMemo(() => {\n        return accessesList?.find(({ id }) => id === selectedAccessId);\n    }, [selectedAccessId, accessesList]);\n\n\n    const openAccess = React.useCallback((id: number) => {\n        setSelectedAccessId(id);\n        setModalOpen(true);\n    }, []);\n\n\n    if (!accessesList) return null;\n\n    return (\n        <accessContext.Provider value={{\n            accessesList,\n            updateAccess,\n            deleteAccess,\n            createAccess,\n            openAccess,\n        } as AccessContextValue}>\n            {props.children}\n            {\n                selectedAccess &&\n                <EditForm\n                    open={modalOpen}\n                    onSubmit={updateAccess}\n                    onClose={() => setModalOpen(false)}\n                    access={selectedAccess}\n                />\n            }\n        </accessContext.Provider>\n    );\n}","import React from \"react\";\nimport { accessContext } from \"./AccessContextProvider\";\nimport AccessContextValue from \"./AccessContextValue\";\n\n\nexport default function useAccess() {\n    return React.useContext(accessContext) as AccessContextValue;\n}","import { Button, Stack, TextField, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport GenericModal from \"../../components/GenericModal\";\n\n\ninterface DeleteModalProps {\n    open: boolean,\n    onClose: () => void,\n    objectName: string,\n    onSuccess: () => void\n}\n\nexport default function DeleteModal({\n    open, onSuccess, onClose, objectName\n}: DeleteModalProps) {\n    const notify = useNotification();\n    const [input, setInput] = React.useState<string>('');\n\n\n    const handleConfirm = React.useCallback(async () => {\n        if (input !== objectName) {\n            notify(\"Wpisana nazwa jest niepoprawna\", 'error');\n            return;\n        }\n        onSuccess();\n        setInput('');\n    }, [objectName, input, onSuccess, notify]);\n\n\n    const close = React.useCallback(() => {\n        setInput('');\n        onClose();\n    }, [onClose]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            aria-label=\"Okno do usuwania obiektu\"\n            sx={{\n                maxWidth: \"400px\",\n            }}\n        >\n            <Stack direction=\"column\" spacing={3}>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    Usuwanie obiektu\n                </Typography>\n                <Typography variant=\"body1\" color='text.secondary'>\n                    Tej operacji nie da się cofnąć.\n                    <br />\n                    1. Przepisz nazwę <b>{objectName}</b><br />\n                    2. Naciśnij 'Zatwierdź'\n                </Typography>\n                <TextField\n                    id=\"resource-name\"\n                    label=\"nazwa\"\n                    variant=\"outlined\"\n                    value={input}\n                    onChange={(evt) => setInput(evt.target.value)}\n                />\n                <Stack direction=\"row\" justifyContent=\"space-around\">\n                    <Button startIcon={<CancelIcon />} onClick={close}>Anuluj</Button>\n                    <Button startIcon={<DeleteIcon color=\"inherit\" />} onClick={handleConfirm} color=\"error\">Zatwierdź</Button>\n                </Stack>\n            </Stack>\n        </GenericModal>\n    );\n}","import Typography from \"@mui/material/Typography\";\n\n\n\ninterface TabHeadLineProps {\n    title: string | React.ReactNode,\n    subtitle?: string | React.ReactNode,\n}\n\n\nexport default function TabHeadLine(props: TabHeadLineProps) {\n    return (\n        <span>\n            <Typography variant='h4' component='h2' color='primary.dark'>\n                {props.title}\n            </Typography>\n            {\n                props.subtitle &&\n                <Typography variant=\"body1\" color='text.secondary' mt='5px'>\n                    {props.subtitle}\n                </Typography>\n            }\n        </span>\n    )\n}","import TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport IconButton from '@mui/material/IconButton';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\n\n\ninterface AddItemProps {\n    onClick: () => void\n}\n\n\nexport default function AddItem(props: AddItemProps) {\n    return (\n        <TableRow\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        >\n            <TableCell colSpan={12} align=\"left\">\n                <IconButton\n                    title=\"Dodaj klasę dostępu\"\n                    aria-label='Dodaj klasę dostępu'\n                    onClick={props.onClick}\n                >\n                    <AddCircleIcon fontSize='large' />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}","import TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport IconButton from '@mui/material/IconButton';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\n\ninterface RowItemProps {\n    id: number,\n    name: string,\n    onSelect: () => void,\n    onDelete: () => void\n}\n\n\nexport default function RowItem(props: RowItemProps) {\n    return (\n        <TableRow\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        >\n            <TableCell component=\"th\" scope=\"row\">{props.id}</TableCell>\n            <TableCell align=\"left\">{props.name}</TableCell>\n            <TableCell align=\"center\">\n                <IconButton \n                title='Usuń klasę dostępu'\n                aria-label='Usuń klasę dostępu'\n                color='error' \n                onClick={props.onDelete}\n                >\n                    <DeleteIcon />\n                </IconButton>\n                <IconButton\n                    title='Otwórz w oknie'\n                    aria-label='Otwórz w oknie'\n                    onClick={props.onSelect}\n                >\n                    <OpenInNewIcon />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}","import Stack from \"@mui/material/Stack\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport React from \"react\";\nimport DeleteModal from \"../../../components/DeleteModal\";\nimport TabHeadLine from \"../../../../../../shared/components/TabHeadLine\";\n\nimport { useAccess } from \"../../AccessContext\";\nimport { CreateForm } from \"../../Forms\";\nimport AddItem from \"./AddItem\";\nimport RowItem from \"./RowItem\";\n\n\n\nexport default function AccessesList() {\n    const { accessesList, openAccess, createAccess, deleteAccess } = useAccess();\n\n    const [createModalOpen, setCreateModalOpen] = React.useState(false);\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);\n\n    const [toDelete, setToDelete] = React.useState<{ id: number, name: string } | null>(null);\n\n    const renderedRows = React.useMemo(() => {\n        return accessesList.map(({ id, name }) =>\n            <RowItem\n                key={id}\n                id={id}\n                name={name}\n                onSelect={() => openAccess(id)}\n                onDelete={() => {\n                    setToDelete({ id: id, name: name })\n                    setDeleteModalOpen(true);\n                }}\n            />).reverse();\n\n    }, [\n        accessesList,\n        openAccess,\n    ]);\n\n\n    const handleDelete = React.useCallback(async () => {\n        if (!toDelete) return;\n\n        if (await deleteAccess(toDelete.id)) {\n            setDeleteModalOpen(false);\n        }\n    }, [toDelete, deleteAccess]);\n\n\n    return (\n        <>\n\n            <CreateForm\n                open={createModalOpen}\n                onClose={() => setCreateModalOpen(false)}\n                onSubmit={createAccess}\n            />\n\n            <DeleteModal\n                objectName={toDelete?.name ?? ''}\n                open={deleteModalOpen}\n                onClose={() => {\n                    setToDelete(null);\n                    setDeleteModalOpen(false);\n                }}\n                onSuccess={handleDelete}\n            />\n\n            <Stack spacing={4}>\n                <TabHeadLine\n                    title=\"Lista klas dostępu\"\n                    subtitle=\"Twórz, edytuj i usuwaj klasy dostępu.\"\n                />\n\n                <TableContainer>\n                    <Table sx={{ maxWidth: 550 }} size=\"small\" aria-label=\"tabela klas dostępów\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>nr id</TableCell>\n                                <TableCell align=\"left\">nazwa</TableCell>\n                                <TableCell align=\"center\">opcje</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n\n                            {renderedRows}\n\n                            <AddItem onClick={() => setCreateModalOpen(true)} />\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n            </Stack >\n        </>\n    );\n}","import Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\n\n\nconst explonations = [\n    {\n        field: 'Identyfikator - id',\n        text: 'Numer identyfikacyjny klasy dostępu. Ten numer przypisujesz użytkownikowi podczas zmiany uprawnień.'\n    },\n    {\n        field: 'Nazwa - name',\n        text: 'Nazwa klasy dostępu'\n    }, {\n        field: 'Właściciel - owner',\n        text: <>Najwyższy zestaw uprawnień.\n            Użytkownik ma możliwość zmiany konfiguracji platformy oraz posiada on wszystkie inne uprawnienia włączając w to edytowanie danych innych użytkowników.\n            Jest właścicielem platformy.</>\n    }, {\n        field: 'Administrator klas dostępu - accessAdmin',\n        text: 'Użytkownik ma możliwość tworzenia, edytowania oraz usuwania klas dostępu. Jest odpowiedzialny za przydzielanie dostępu użytkownikom.'\n    }, {\n        field: 'Administrator inwentarza - premisesAdmin',\n        text: 'Użytkownik jest odpowiedzialny za tworzenie, edycję i usuwanie adresów, budynków i sal.'\n    }, {\n        field: 'Administrator kluczy - keysAdmin',\n        text: 'Użytkownik ma możliwość przypisywania i usuwania tagów RFID dla każdej sali.'\n    }, {\n        field: 'Możliwość rezerwacji - reservationsAbility',\n        text: 'Użytkownik ma możliwość tworzenia rezerwacji'\n    }, {\n        field: 'Administrator rezerwacji - reservationsAdmin',\n        text: 'Użytkownik ma możliwość edytowania oraz usuwania rezerwacji stworzonych przez innych użytkowników.'\n    }, {\n        field: 'Administrator logów - logsAdmin',\n        text: 'Użytkownik ma możliwość przeglądania logów aplikacji.'\n    }, {\n        field: 'Dostęp do statystyk - statsViewer',\n        text: 'Użytkownik może przeglądać statystyki wygenerowane dla aplikacji, użytkownika, budynku i pokoju.'\n    },\n];\n\n\n\nexport default function AccessInfo() {\n\n\n\n    const rendered = React.useMemo(() => {\n        return explonations.map(({ field, text }, id) =>\n            <li key={id}>\n                <Typography variant='subtitle1' component='h3'>\n                    {field}\n                </Typography>\n                <Typography variant='body2' color='text.secondary' mb={1}>\n                    {text}\n                </Typography>\n            </li>\n        );\n    }, []);\n\n\n    return (\n        <Stack spacing={3}>\n            <span>\n                <Typography component='h1' variant='h3' color='primary.dark'>\n                    Klasy Dostępu\n                </Typography>\n                <Typography variant='body1' color=\"text.secondary\" mt=\"5px\">\n                    Dostępne tutaj opcje wpływają znacząco na funkcjonowanie całej platformy. <br />\n                    Konigurowanie klas dostępu użytkowników to bardzo odpowiedzialne zadanie. Upewnij się że nadajesz tylko wymagane uprawnienia.\n                    Stosuj się do modelu <a target='_blank' rel=\"noreferrer\" href='https://en.wikipedia.org/wiki/Principle_of_least_privilege'>Least Privilege</a>.\n                </Typography>\n            </span>\n\n\n            <span>\n                <Typography variant='h5' component='h2'>\n                    Pola używane w klasach dostępu:\n                </Typography>\n                <ul>\n                    {rendered}\n\n                </ul>\n            </span>\n\n\n        </Stack>\n    );\n}","import { Link as RouterLink } from \"react-router-dom\";\nimport { Link as LinkIcon } from \"@mui/icons-material\";\nimport { Link, LinkProps } from \"@mui/material\";\n\n\ninterface AppLinkProps extends LinkProps {\n    to: string,\n    withIcon?: boolean,\n}\n\nexport default function AppLink(props: AppLinkProps) {\n    const { withIcon, ...restProps } = props;\n    return (\n        <Link\n            component={RouterLink}\n            underline=\"hover\"\n            display='inline-flex'\n            {...restProps}\n        >\n            {withIcon && <><LinkIcon fontSize=\"small\" />&nbsp;</>}\n            {restProps.children}\n        </Link >\n    );\n}","import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport Card from '@mui/material/Card';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { useAccess } from \"../../AccessContext\";\nimport MenuItem from '@mui/material/MenuItem';\nimport Box from '@mui/material/Box';\nimport User from '../../../../../../models/User';\nimport useNotification from '../../../../../../contexts/NotificationContext/useNotification';\nimport UserService from '../../../../../../services/UserService';\nimport LinkIcon from '@mui/icons-material/Link';\nimport AppLink from '../../../../../../shared/components/AppLink';\nimport { dynamicPaths } from '../../../../../../shared/path';\nimport TabHeadLine from '../../../../../../shared/components/TabHeadLine';\n\n\nfunction usersNotUsers(a: readonly User[], b: readonly User[]) {\n    return a.filter(ai => (b.find(bi => bi.id === ai.id) === undefined));\n}\n\nfunction notNumNum(a: readonly number[], b: readonly number[]) {\n    return a.filter((value) => b.indexOf(value) === -1);\n}\n\n\nfunction intersection(a: readonly number[], b: readonly User[]) {\n    return a.filter((value) => b.find(({ id }) => id === value));\n}\n\n\nexport default function EditUsersAccess() {\n    const { accessesList } = useAccess();\n    const notify = useNotification();\n\n    const [checked, setChecked] = React.useState<readonly number[]>([]);\n\n    const [leftUsers, setLeftUsers] = React.useState<User[]>([]);\n    const [rightUsers, setRightUsers] = React.useState<User[]>([]);\n\n    const [access, setAccess] = React.useState<{\n        [index: string]: number,\n        right: number,\n        left: number\n    }>({ left: accessesList[0]?.id, right: accessesList[1]?.id });\n\n\n    const updateUsersAccess = React.useCallback(async (users: User[], accessId: number) => {\n        const calls = users.map(async (user) => {\n            try {\n                await UserService.updateAccess(user.id, accessId);\n                return user;\n            } catch (err: any) {\n                notify(err.description, 'error');\n                return false;\n            }\n        });\n        let results = await Promise.all(calls);\n        return results.filter(item => item !== false) as User[];\n    }, [notify]);\n\n\n    const loadUsers = React.useCallback(async (accessId: number) => {\n        try {\n            const resp = await UserService.getUsers({ accessId: accessId, deleted: false });\n            return resp.data as User[];\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return [];\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        loadUsers(access.left).then(data => setLeftUsers(data))\n    }, [\n        access.left,\n        loadUsers,\n    ]);\n\n\n    React.useEffect(() => {\n        loadUsers(access.right).then(data => setRightUsers(data))\n    }, [\n        access.right,\n        loadUsers,\n    ]);\n\n\n\n    const leftChecked = React.useMemo(() => intersection(checked, leftUsers), [checked, leftUsers]);\n    const rightChecked = React.useMemo(() => intersection(checked, rightUsers), [checked, rightUsers]);\n\n\n    const handleToggle = React.useCallback((value: number) => () => {\n        setChecked(old => {\n            const currentIndex = old.indexOf(value);\n            const checked = Object.assign([], old) as number[];\n\n            if (currentIndex === -1) {\n                checked.push(value);\n            } else {\n                checked.splice(currentIndex, 1);\n            }\n            return checked\n        });\n    }, []);\n\n\n    // to the right\n    const handleCheckedRight = React.useCallback(async () => {\n        const usersToMove = leftUsers.filter(({ id }) => leftChecked.indexOf(id) !== -1);\n\n        const moved = await updateUsersAccess(usersToMove, access.right);\n        setRightUsers(rightUsers.concat(moved));\n\n        setLeftUsers(usersNotUsers(leftUsers, moved)); //not user who is selected\n        setChecked(notNumNum(checked, leftChecked)); // uncheck checked elements\n    }, [\n        leftChecked,\n        rightUsers,\n        leftUsers,\n        checked,\n        access.right,\n        updateUsersAccess,\n    ]);\n\n\n    // to the left\n    const handleCheckedLeft = React.useCallback(async () => {\n        const usersToMove = rightUsers.filter(({ id }) => rightChecked.indexOf(id) !== -1);\n\n        const moved = await updateUsersAccess(usersToMove, access.left);\n        setLeftUsers(leftUsers.concat(moved));\n\n        let l = usersNotUsers(rightUsers, moved);\n        console.log(l);\n        setRightUsers(l); //not user who is selected\n        setChecked(notNumNum(checked, rightChecked)); // uncheck checked elements\n\n    }, [\n        rightChecked,\n        leftUsers,\n        rightUsers,\n        checked,\n        access.left,\n        updateUsersAccess,\n    ]);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<number>): void => {\n        const value = Number(event.target.value);\n\n        setAccess(old => {\n            if (old.left === value || old.right === value) return old;\n\n            return {\n                ...old,\n                [event.target.name]: Number(event.target.value)\n            }\n        });\n    }, []);\n\n\n    const customList = React.useCallback((direction: string, users: readonly User[]) => (\n        <Card>\n            <Box sx={{ p: 2 }}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-klase-dostępu\">Klasa dostępu</InputLabel>\n                    <Select\n                        labelId=\"wybierz-klase-dostępu\"\n                        name={direction}\n                        value={access[direction]}\n                        label=\"klasa dostępu\"\n                        onChange={handleSelectChange}\n                    >\n                        {accessesList.map(({ name, id }) => <MenuItem key={name} value={id} >{name} </MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Box>\n\n            <Divider />\n            <List\n                sx={{\n                    // maxWidth: 400,\n                    // width: '30vw',\n                    height: 550,\n                    bgcolor: 'background.paper',\n                    overflow: 'auto',\n                }}\n                dense\n                component=\"div\"\n                role=\"list\"\n            >\n                {users.map((user: User) => {\n                    const labelId = `transfer-list-all-item-${user.id}-label`;\n\n                    return (\n                        <ListItem\n                            key={user.id}\n                            role=\"listitem\"\n                            button\n                            onClick={handleToggle(user.id)}\n                        >\n                            <ListItemIcon>\n                                <Checkbox\n                                    checked={checked.indexOf(user.id) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    inputProps={{\n                                        'aria-labelledby': labelId,\n                                    }}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={labelId} primary={user.email} />\n\n                            <ListItemIcon onClick={(ev: any) => ev.stopPropagation()} color='primary'>\n                                <AppLink to={dynamicPaths.toUser(user.id)}>\n                                    <LinkIcon />\n                                </AppLink>\n                            </ListItemIcon>\n                        </ListItem>\n                    );\n                })}\n                <ListItem />\n            </List>\n        </Card>\n    ), [handleToggle, checked, handleSelectChange, access, accessesList]);\n\n    return (\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n                <TabHeadLine\n                    title='Administracja klasami dostępu'\n                    subtitle='Wybierz stworzone klasy dostępu i przydzielaj role dla użytkowników'\n                />\n            </Grid>\n\n            <Grid item xs={12} sm={5}>{customList('left', leftUsers)}</Grid>\n            <Grid item>\n                <Grid container direction=\"column\" alignItems=\"center\">\n                    <Button\n                        sx={{ my: 0.5 }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={handleCheckedRight}\n                        disabled={leftChecked.length === 0}\n                        aria-label=\"move selected right\"\n                    >\n                        &gt;\n                    </Button>\n                    <Button\n                        sx={{ my: 0.5 }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={handleCheckedLeft}\n                        disabled={rightChecked.length === 0}\n                        aria-label=\"move selected left\"\n                    >\n                        &lt;\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm={5}>{customList('right', rightUsers)}</Grid>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport { AccessContext } from \"./AccessContext\";\nimport AccessesList from \"./components/AccessesList\";\nimport AccessInfo from \"./components/AccessInfo\";\nimport EditUsersAccess from \"./components/EditUsersAccess\";\n\n\nexport default function AccessPage() {\n\n\n    const pages = React.useMemo(() => {\n        let arr: any = [];\n        arr.push({ name: 'Informacje', component: <AccessInfo /> });\n        arr.push({ name: 'Lista klas', component: <AccessesList /> });\n        arr.push({ name: 'Administracja', component: < EditUsersAccess /> });\n        arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <AccessContext>\n            <SwipeableTabs tabs={pages} />\n        </AccessContext >\n    );\n}","import { useContext } from \"react\";\nimport { sessionContext } from \"./sessionProvider\";\nimport SessionValue from \"./SessionValue\";\n\n\n\nexport default function useSession() {\n  return useContext(sessionContext) as SessionValue;\n}","import { RoomType } from \"../models/Room\";\nimport { BuildingViewParams } from \"./BuildingService\";\nimport Service from \"./Service\";\n\n\nexport interface RoomViewParams {\n    roomId: string,\n    buildingId: string,\n    addressId: string\n}\n\n\nexport interface RoomUpdateParams {\n    name?: string,\n    roomType?: RoomType,\n    seatsCount?: number,\n    floor?: number,\n    buildingId?: number,\n    blocked?: boolean,\n}\n\n\nexport interface CreateRoomParams {\n    name: string,\n    roomType: RoomType,\n    seatsCount: number,\n    floor:number\n}\n\n\n\nclass RoomService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath({ addressId, buildingId, roomId }: RoomViewParams) {\n        this._path = `/addresses/${addressId}/buildings/${buildingId}/rooms/${roomId}`;\n    }\n\n    public getView() {\n        return this.get(this.path);\n    }\n\n    public create({ addressId, buildingId }: BuildingViewParams, data: CreateRoomParams) {\n        return this.post(`/addresses/${addressId}/buildings/${buildingId}/rooms`, data);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(body: RoomUpdateParams) {\n        return this.patch(this.path, body);\n    }\n\n    public updateRFID(key: string) {\n        return this.patch(`${this.path}/keys`, {\n            \"RFIDTag\": key\n        });\n    }\n\n    public deleteRFIDTag() {\n        return this.delete(`${this.path}/keys`);\n    }\n}\n\nexport default new RoomService()","import Service from \"./Service\";\n\n\nexport interface AddressViewParams {\n    addressId: string,\n}\n\n\nexport interface UpdateAddressParams {\n    [index: string]: string | undefined,\n    country?: string,\n    town?: string,\n    postalCode?: string,\n    street?: string,\n    number?: string\n}\n\n\nexport interface CreateAddressParams {\n    country: string,\n    town: string,\n    postalCode: string,\n    street?: string,\n    number?: string,\n}\n\n\nclass AddressService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath(params: AddressViewParams) {\n        this._path = this.preparePath(params);\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(data: UpdateAddressParams) {\n        return this.patch(this.path, data);\n    }\n\n    public create(data: CreateAddressParams) {\n        return this.post('/addresses', data);\n    }\n\n    public getBuildings() {\n        return this.get(`${this.path}/buildings`);\n    }\n\n    public getResourcesMap() {\n        return this.get('/addresses/resources');\n    }\n}\n\n\nexport default new AddressService();","import React from \"react\";\nimport useSession from \"../../auth/useSession\";\nimport AddressMap from \"../../models/AddressMap\";\nimport useTrigger from \"../../components/pages/protected/hooks/useTrigger\";\nimport AddressService from \"../../services/AddressService\";\nimport useNotification from \"../NotificationContext/useNotification\";\nimport ResourceMapContextValue from \"./ResourceMapContextValue\";\n\n\n\n\nexport const resourceMapContext: any = React.createContext(null);\n\n\ninterface ResourceMapContextProviderProps {\n    children?: React.ReactNode[]\n}\n\n\nexport default function ResourceMapContextProvider(props: ResourceMapContextProviderProps) {\n    const [resourceMap, setResources] = React.useState<AddressMap[]>([]);\n    const [loaded, setLoaded] = React.useState<boolean>(false);\n    const refresh = useTrigger(300_000);\n\n    const { user } = useSession();\n    const notify = useNotification();\n\n    const loadResourceMap = React.useCallback(async (): Promise<void> => {\n        try {\n            const resp = await AddressService.getResourcesMap();\n            resp?.data && setResources(resp.data as any);\n        } catch (err: any) {\n            notify(err.description, \"error\");\n        }\n    }, [notify]);\n\n    const reloadMap = (): void => {\n        loadResourceMap();\n    }\n\n    React.useEffect(() => {\n        user && loadResourceMap();\n        setLoaded(true);\n    }, [\n        user,\n        loadResourceMap,\n        refresh\n    ]);\n\n\n    const getRoomLink = React.useCallback((roomId: number): string => {\n        return '/app' + resourceMap.map(addr => addr.buildings.map(bld => bld.rooms))\n            .flat(2)\n            .find(item => item.id === roomId)\n            ?.href ?? '';\n    }, [resourceMap]);\n\n\n    const allRooms = React.useMemo(() => {\n        return resourceMap.map(addr => addr.buildings.map(bld => bld.rooms)).flat(2)\n    }, [resourceMap]);\n\n\n    const allBuildings = React.useMemo(() => {\n        return resourceMap.map(addr => addr.buildings.map(({ name, href, id }) => ({ name, href, id }))).flat(2);\n    }, [resourceMap]);\n\n\n    const allAddresses = React.useMemo(() => {\n        return resourceMap.map(({ name, href, id }) => ({ name, href, id }));\n    }, [resourceMap]);\n\n\n    const getBuildingLink = React.useCallback((buildingId: number): string => {\n        return '/app' + resourceMap.map(addr => addr.buildings)\n            .flat(2)\n            .find(item => item.id === buildingId)\n            ?.href ?? '';\n    }, [resourceMap]);\n\n\n    if (loaded === false) return null;\n\n    return (\n        <resourceMapContext.Provider value={{\n            resourceMap,\n            reloadMap,\n            allRooms,\n            getRoomLink,\n            getBuildingLink,\n            allAddresses,\n            allBuildings,\n        } as ResourceMapContextValue}>\n            {props.children}\n        </resourceMapContext.Provider>\n    );\n}","import React from \"react\";\nimport { resourceMapContext } from \"./ResourceMapContextProvider\";\nimport ResourceMapContextValue from \"./ResourceMapContextValue\";\n\n\nexport default function useResourceMap() {\n    return React.useContext(resourceMapContext) as ResourceMapContextValue;\n}","import React, { createContext } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { DetailedRoom } from \"../../../../../models/Room\";\nimport RoomService, { RoomUpdateParams, RoomViewParams } from \"../../../../../services/RoomService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport RoomContextValue from \"./RoomContextValue\";\nimport useResourceMap from \"../../../../../contexts/ResourceMapContext/useResourceMap\";\nimport useTrigger from \"../../hooks/useTrigger\";\n\n\ninterface RoomContextProviderProps {\n    children?: React.ReactNode\n}\n\nexport const RoomContext: any = createContext(null);\n\n\nexport default function RoomContextProvider({\n    children\n}: RoomContextProviderProps) {\n    const { getBuildingLink, reloadMap } = useResourceMap();\n    const notify = useNotification();\n    const urlParams = useParams<RoomViewParams>();\n    const [room, setRoom] = React.useState<DetailedRoom>();\n    const refresh = useTrigger(60_000);\n\n    React.useLayoutEffect(() => {\n        RoomService.setPath(urlParams);\n    }, [urlParams]); // set new urlParams to service so it get data for propper room\n\n\n    const getRoom = React.useCallback(async () => {\n        const resp = await RoomService.getView();\n        setRoom(resp.data as DetailedRoom);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        urlParams,\n        refresh\n    ]); // recompute after change of room\n\n\n    const setOccupied = React.useCallback((state: boolean) => {\n        setRoom(old => {\n            if (old)\n                return { ...old, occupied: state };\n        });\n    }, []);\n\n\n    const updateRoom = React.useCallback(async (body: RoomUpdateParams) => {\n        if (!room) return false;\n\n        try {\n            await RoomService.update(body);\n            setRoom(old => {\n                if (old)\n                    return { ...old, ...body };\n            });\n            notify(\"Sala została zaktualizowana\", 'success');\n\n            if (('name' in body && body.name !== room.name)\n                || ('buildingId' in body && body.buildingId !== room?.building.id)\n            ) {\n                reloadMap();\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        room\n    ]);\n\n\n    const deleteRoom = React.useCallback(async () => {\n        if (!room) return;\n\n        try {\n            await RoomService.remove();\n            reloadMap();\n            notify(\"Sala została usunięta\", 'success', () => <Redirect to={getBuildingLink(room.building.id)} />);\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        room,\n        reloadMap,\n        getBuildingLink,\n    ]);\n\n\n    const updateRFIDTag = React.useCallback(async (key: string) => {\n        try {\n            await RoomService.updateRFID(key);\n            setRoom(old => {\n                if (old)\n                    return { ...old, RFIDTag: key };\n            });\n\n            notify(\"Tag został przypisany\", 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n    }, [notify]);\n\n\n    const deleteRFIDTag = React.useCallback(async () => {\n        try {\n            await RoomService.deleteRFIDTag();\n            setRoom(old => {\n                if (old)\n                    return { ...old, RFIDTag: null };\n            });\n            notify(\"Tag został usunięty\", \"success\");\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        getRoom();\n        return () => { }\n    }, [getRoom]);\n\n\n    return (\n        !Boolean(room) ? null : <RoomContext.Provider value={{\n            room,\n            updateRoom,\n            deleteRoom,\n            updateRFIDTag,\n            deleteRFIDTag,\n            setOccupied\n        } as RoomContextValue}>\n            {children}\n        </RoomContext.Provider>\n    );\n}\n","import React from \"react\";\nimport { RoomContext } from \"./RoomContextProvider\";\nimport RoomContextValue from \"./RoomContextValue\";\n\n\nexport default function useRoomContext() {\n    return React.useContext(RoomContext) as RoomContextValue\n}","import { Card, CardHeader, Avatar, CardContent, Typography, Link } from \"@mui/material\";\nimport User from \"../../../../../models/User\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport { displayDate } from \"../../../../../shared/utils\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport { dynamicPaths } from \"../../../../../shared/path\";\n\n\ninterface ReservationUserCardProps {\n    user: User\n}\n\nexport default function ReservationUserCard({ user }: ReservationUserCardProps) {\n    return (\n        <Card aria-label=\"Rezerwujący użytkownik\" sx={{ minHeight: '150px' }}>\n            <CardHeader\n                avatar={<Avatar\n                    sx={{ width: 56, height: 56 }}\n                    alt={`${user.name} ${user.surname}`}\n                    src={ImageService.getLink(user.image)}\n                />}\n                title={`${user.name} ${user.surname}`}\n                subheader={\n                    <Link\n                        aria-label=\"wyślij email\"\n                        title=\"wyślij email\"\n                        href={`mailto:${user.email}`}\n                    >\n                        {user.email}\n                    </Link>\n                }\n                action={\n                    <RouterLink\n                        to={dynamicPaths.toUser(user.id)}\n                        aria-label='Pokaż użytkownika'\n                        title='Pokaż użytkownika'\n                    >\n                        <LaunchIcon />\n                    </RouterLink>\n                }\n            />\n            <CardContent>\n                <Typography\n                    variant=\"body2\"\n                    fontSize=\"smaller\"\n                    color='text.secondary'\n                    aria-label='Data ostatniej aktywności'\n                    title='Data ostatniej aktywności'\n                >\n                    Ostatnia aktywność: {displayDate(user.lastActivity)}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n","import { Card, CardHeader, CardContent, Typography, Box, CardMedia } from \"@mui/material\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport Room from \"../../../../../models/Room\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport AppLink from \"../../../../../shared/components/AppLink\";\n\n\n\ninterface ReservationRoomCardProps {\n    room: Room\n}\n\nexport default function ReservationRoomCard({ room }: ReservationRoomCardProps) {\n    const { getRoomLink, getBuildingLink } = useResourceMap();\n\n    const roomLink = React.useMemo(() => getRoomLink(room.id), [room.id, getRoomLink]);\n    const buildingLink = React.useMemo(() => getBuildingLink(room.building), [room.building, getBuildingLink]);\n\n    return (\n        <Card sx={{ display: 'flex', minHeight: '150px' }}>\n            <CardMedia\n                component='img'\n                image={ImageService.getLink(room.image)}\n                alt={`zdjęcie sali ${room.name}`}\n                sx={{\n                    maxWidth: '40%',\n                    maxHeight: '100%'\n                }}\n            />\n            <Box sx={{ width: '60%' }}>\n                <CardHeader\n                    title={`Sala ${room.name}`}\n                    subheader={room.roomType}\n                    sx={{\n                        pt: 1, pb: 0\n                    }}\n                    action={\n                        <AppLink\n                            to={roomLink}\n                            aria-label='Otwórz stronę Pokoju'\n                            title='Otwórz stronę Pokoju'\n                        >\n                            <LaunchIcon />\n                        </AppLink>\n                    }\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        <AppLink\n                            withIcon\n                            to={buildingLink}\n                            aria-label=\"Pokaż budynek\"\n                            title=\"Pokaż budynek\"\n                        >\n                            pokaż budynek\n                        </AppLink> <br/>\n                        Aktualnie {room.occupied ? 'zajęta' : 'wolna'}<br />\n                    </Typography >\n                </CardContent >\n            </Box >\n        </Card >\n    );\n}","import React from \"react\";\nimport { reservationsContext } from \"./ReservationsContextProvider\";\nimport ReservationsContextValue from \"./ReservationsContextValue\";\n\nexport default function useReservations() {\n    return React.useContext(reservationsContext) as ReservationsContextValue;\n}","import MobileDateTimePicker from \"@mui/lab/MobileDateTimePicker\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\n\n\ninterface Props {\n    value: string,\n    label: string,\n    onChange: (value: string) => void,\n}\n\nexport default function DateTimePicker({\n    value,\n    onChange,\n    label,\n}: Props) {\n\n    const [dateVal, setDateVal] = React.useState<Date>(new Date(value));\n\n    const handleChange = React.useCallback((newValue: Date | null) => {\n        if (newValue) {\n            onChange(newValue.toLocaleString('pl'));\n            setDateVal(newValue);\n        }\n    }, [\n        onChange\n    ]);\n\n    return (\n        <MobileDateTimePicker\n            minDate={new Date()}\n            label={label}\n            inputFormat=\"dd.MM.yyyy HH:mm\"\n            value={dateVal}\n            onChange={handleChange}\n            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n        />\n    )\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../../components/GenericModal\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { UpdateReservationData } from \"../../../../../../services/ReservationService\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useResourceMap } from \"../../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\nimport useReservations from \"../../GenericReservationsTab/ReservationsContext/useReservations\";\nimport FormGridContainer from \"../../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../../DateTimePicker\";\n\n\ninterface EditModalFormProps {\n    open: boolean,\n    onClose: () => void,\n    reservation: Reservation\n}\n\nexport default function EditModalForm(props: EditModalFormProps) {\n    const { updateReservation } = useReservations()\n    const { allRooms } = useResourceMap();\n\n    const [data, setData] = React.useState<UpdateReservationData>({});\n\n\n    const closeForm = React.useCallback(() => {\n        props.onClose();\n        setData({});\n    }, [\n        props\n    ]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateReservation(props.reservation.id, data)) {\n            closeForm();\n            setData({});\n        }\n\n    }, [\n        props,\n        data,\n        closeForm,\n        updateReservation,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleDateChange = React.useCallback((name: keyof UpdateReservationData, value: string) => {\n        value && setData(old => ({\n            ...old,\n            [name]: value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={closeForm}\n            aria-label=\"Okno do edycji rezerwacji\"\n        >\n            <FormGridContainer\n                title='Edycja rezerwacji'\n                subtitle=\"Zmień właściwości pokoju i zatwierdź zmiany.\"\n                onSubmit={handleSubmit}\n                onCancel={props.onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Tytuł\"\n                        multiline\n                        maxRows={4}\n                        name='title'\n                        value={data.title ?? props.reservation.title}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Opis\"\n                        multiline\n                        maxRows={20}\n                        name='description'\n                        value={data.description ?? props.reservation.description}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <DateTimePicker\n                        value={data.plannedStart ?? props.reservation.plannedStart}\n                        label=\"Początek\"\n                        onChange={(value) => handleDateChange('plannedStart', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <DateTimePicker\n                        value={data.plannedEnd ?? props.reservation.plannedEnd}\n                        label=\"Koniec\"\n                        onChange={(value) => handleDateChange('plannedEnd', value)}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                        <Select\n                            required\n                            labelId=\"wybierz-salę\"\n                            name=\"roomId\"\n                            value={data.roomId ?? props.reservation.room.id}\n                            label=\"Sala\"\n                            onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                        >\n                            {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport GenericModal from \"../../../components/GenericModal\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useResourceMap } from \"../../../../../../contexts/ResourceMapContext\";\nimport React from \"react\";\nimport useReservations from \"../../GenericReservationsTab/ReservationsContext/useReservations\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { IconButton } from \"@mui/material\";\nimport { displayDate } from \"../../../../../../shared/utils\";\nimport { CreateReservationData } from \"../../../../../../services/ReservationService\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport FormGridContainer from \"../../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../../DateTimePicker\";\n\n\ninterface CopyModalFormProps {\n    open: boolean,\n    onClose: () => void,\n    reservation: Reservation\n}\n\ninterface DateTimeSlot {\n    color: string | null,\n    from: string,\n    to: string,\n}\n\ninterface CopyReservationData {\n    title: string,\n    description: string,\n    roomId?: number\n}\n\n\nexport default function CopyModalForm(props: CopyModalFormProps) {\n    const { createReservation } = useReservations()\n    const { allRooms } = useResourceMap();\n    const notify = useNotification();\n\n    const [dates, setDates] = React.useState<DateTimeSlot>({\n        color: '',\n        from: props.reservation.plannedStart,\n        to: props.reservation.plannedEnd,\n    });\n\n    const [copyDates, setCopyDates] = React.useState<DateTimeSlot[]>([]);\n    const [data, setData] = React.useState<CopyReservationData>({\n        title: props.reservation.title,\n        description: props.reservation.description,\n        roomId: props.reservation.room.id ?? 0\n    });\n\n\n    const closeForm = React.useCallback(() => {\n        props.onClose();\n        // setCopyDates([]);\n    }, [props]);\n\n\n    const handleSubmit = React.useCallback(async () => {\n\n        const createCalls = copyDates.map(async (date) => {\n            const success = await createReservation({\n                ...data,\n                plannedStart: date.from,\n                plannedEnd: date.to\n            } as CreateReservationData);\n            date.color = success ? 'green' : 'red';\n            return date;\n        })\n        const processed = await Promise.all(createCalls);\n        setCopyDates(processed);\n\n    }, [data, copyDates, createReservation]);\n\n\n    const handleDeleteCopyDate = React.useCallback((index: number) => {\n        setCopyDates(old => {\n            old.splice(index, 1);\n            return Object.assign([], old);\n        });\n    }, []);\n\n\n    const handleAddDate = React.useCallback(() => {\n        if (copyDates.find(({ from, to }) => from === dates.from || to === dates.to)) {\n            notify(\"Daty powinny się różnić\", 'error');\n            return;\n        };\n\n        setCopyDates(old => {\n            old.push({\n                ...dates,\n                color: ''\n            });\n            return Object.assign([], old);\n        });\n    }, [\n        dates,\n        notify,\n        copyDates,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={closeForm}\n            aria-label=\"Okno do kopiowania rezerwacji\"\n        >\n\n            <FormGridContainer\n                title='Kopiowanie rezerwacji'\n                subtitle=\"Skopiuj rezerwację dla wybranych przez siebie nowych dat.\"\n                onSubmit={handleSubmit}\n                onCancel={props.onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Tytuł\"\n                        multiline\n                        maxRows={4}\n                        name='title'\n                        value={data.title ?? props.reservation.title}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Opis\"\n                        multiline\n                        maxRows={20}\n                        name='description'\n                        value={data.description ?? props.reservation.description}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={5}>\n                    <DateTimePicker\n                        label=\"Początek\"\n                        value={dates.from}\n                        onChange={(value) => setDates(old => ({ ...old, from: value }))}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={5}>\n                    <DateTimePicker\n                        label=\"Koniec\"\n                        value={dates.to}\n                        onChange={(value) => setDates(old => ({ ...old, to: value }))}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={2}>\n                    <Button\n                        size='large'\n                        sx={{\n                            height: '100%',\n                            width: '100%'\n                        }}\n                        variant='outlined'\n                        onClick={handleAddDate}\n                    >\n                        Dodaj\n                    </Button>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Stack\n                        spacing={1}\n                        sx={{\n                            border: '1px solid',\n                            borderColor: 'divider',\n                            borderRadius: 1,\n                            padding: 0.5,\n                            bgcolor: 'background.default',\n                            maxHeight: '200px',\n                            overflow: 'auto',\n                        }}>\n                        {copyDates.length === 0 && <Typography textAlign='center' component='p'>\n                            Brak dat\n                        </Typography>}\n                        {\n                            copyDates.map(({ color, from, to }, index) =>\n                                <Box\n                                    key={index}\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'space-between',\n                                        pl: '3px'\n                                    }}>\n                                    <Typography component='p' sx={{ color: color }}>\n                                        {displayDate(from.toString())}&nbsp;-&nbsp;{displayDate(to.toString())}\n                                    </Typography>\n                                    <IconButton\n                                        onClick={() => handleDeleteCopyDate(index)}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Box>\n                            )\n                        }\n                    </Stack>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                        <Select\n                            required\n                            labelId=\"wybierz-salę\"\n                            name=\"roomId\"\n                            value={data.roomId ?? props.reservation.room.id}\n                            label=\"Sala\"\n                            onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                        >\n                            {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </FormGridContainer>\n\n        </GenericModal >\n    );\n}","import { Box, Button, Stack, Typography } from \"@mui/material\";\nimport NfcIcon from '@mui/icons-material/Nfc';\nimport { styled } from \"@mui/system\";\nimport React from \"react\";\nimport CancelIcon from '@mui/icons-material/Cancel';\n\n\ninterface RfidFormProps {\n    headline: string,\n    bodyText: string,\n    onScan: (keyText: string) => Promise<boolean>,\n    onClose: () => void,\n}\n\nconst HiddenInput = styled('input')({\n    position: \"absolute\",\n    left: \"-1000px\",\n    color: \"transparent\"\n});\n\n\nexport default function RfidForm(props: RfidFormProps) {\n    const [text, setText] = React.useState<string>('');\n    const [color, setColor] = React.useState<string>('primary');\n    const input = React.useRef<HTMLInputElement | null>(null);\n\n    const handleSubmit = async (evt: React.FormEvent) => {\n        evt.preventDefault();\n        const success = await props.onScan(text);\n        if (success) {\n            setColor('success');\n            setTimeout(handleDecline, 2000);\n        } else {\n            setColor('error');\n        }\n        setText('');\n    }\n\n    const handleDecline = () => {\n        props.onClose();\n        setText('');\n        setColor('primary');\n    }\n\n    const focusOnInput = () => {\n        input.current && console.log(input.current.focus())\n    }\n\n    return (\n        <Stack\n            onClick={focusOnInput}\n            component=\"form\"\n            direction=\"column\"\n            spacing={4}\n            onSubmit={handleSubmit}\n        >\n            <NfcIcon\n                sx={{ fontSize: 140, alignSelf: \"center\" }}\n                color={color as any}\n            />\n            <HiddenInput\n                ref={input}\n                autoFocus\n                type=\"text\"\n                value={text}\n                onChange={(evt: any) => setText(evt.target.value)}\n            />\n            <Box component=\"span\" textAlign='center'>\n                <Typography variant=\"h5\" color='primary.dark'>\n                    {props.headline}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" mt='5px'>\n                    {props.bodyText}\n                </Typography>\n            </Box>\n\n            <Button startIcon={<CancelIcon />}\n                onClick={handleDecline}\n                color=\"error\"\n            >\n                Zamknij\n            </Button>\n\n        </Stack>\n    );\n}","import { useReservations } from \"../../GenericReservationsTab/ReservationsContext\";\nimport React from \"react\";\nimport GenericModal from \"../../GenericModal\";\nimport RfidForm from \"../../RfidForm\";\n\n\ninterface PingKeyModalFormProps {\n    reservationId: number,\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport default function PingKeyModalForm(props: PingKeyModalFormProps) {\n    const { pingKeyForReservation } = useReservations();\n\n    const handleKeyScan = React.useCallback(\n        async (key: string) => pingKeyForReservation(props.reservationId, key)\n        , [props, pingKeyForReservation]);\n\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={props.onClose}\n            aria-label=\"Okno do edycji rezerwacji\"\n            sx={{ maxWidth: '400px' }}\n        >\n            <RfidForm\n                headline=\"Wczytaj klucz z tagiem NFC\"\n                bodyText='Przy pomocy czytnika, wczytaj wydawany klucz. Aby opuścić to okno, naciśnij \"Zamknij\"'\n                onScan={handleKeyScan}\n                onClose={props.onClose}\n            />\n        </GenericModal>\n    );\n}","import React from \"react\";\nimport { ListItemIcon, Menu, MenuItem, Typography } from \"@mui/material\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport IconButton from '@mui/material/IconButton';\n\n\ninterface MoreVertMenuProps {\n    options: { action: () => void, icon?: React.ReactNode, label: string }[]\n}\n\nexport default function MoreVertMenu(props: MoreVertMenuProps) {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n\n    const handleClick = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    },[]);\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <IconButton\n                aria-label='card-more-button'\n                aria-controls=\"card-menu\"\n                aria-expanded={open ? 'true' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Menu\n                MenuListProps={{\n                    'aria-labelledby': 'card-more-button',\n                }}\n                anchorEl={anchorEl}\n                id=\"card-menu\"\n                open={open}\n                onClose={handleClose}\n                PaperProps={{\n                    style: {\n                        width: '20ch',\n                    },\n                }}\n            >\n                {\n                    props.options.map((opt, id) => <MenuItem\n                        key={id}\n                        onClick={handleClose}\n                    >\n                        <ListItemIcon>\n                            {opt.icon}\n                        </ListItemIcon>\n                        <Typography onClick={opt.action}>{opt.label}</Typography>\n                    </MenuItem>)\n                }\n            </Menu>\n        </div>\n    );\n}\n\n","import Reservation from \"../../../../../models/Reservation\";\nimport GenericModal from \"../../components/GenericModal\";\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { Grid, IconButton, Typography } from '@mui/material';\nimport { displayDate } from '../../../../../shared/utils';\nimport React from 'react';\nimport ReservationUserCard from './ReservationUserCard';\nimport ReservationRoomCard from './ReservationRoomCard';\nimport DeleteModal from '../DeleteModal';\nimport { CopyForm, EditForm, PingNFCForm } from \"./ModalForms\";\nimport { useReservations } from \"../GenericReservationsTab/ReservationsContext\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CopyIcon from '@mui/icons-material/CopyAll';\nimport NFCIcon from '@mui/icons-material/Nfc';\nimport { Edit } from \"@mui/icons-material\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\n\n\n\ninterface ReservationViewModalProps {\n    reservation: Reservation,\n    open: boolean,\n    onClose: () => void\n}\n\n\nfunction TextSection(props: {\n    title: string, children: React.ReactNode | React.ReactNode[]\n}) {\n    return (\n        <span>\n            <Typography component=\"h3\" variant=\"subtitle1\">{props.title}</Typography>\n            <Typography\n                variant=\"body1\"\n                color='text.secondary'\n                textAlign='justify'\n            >\n                {props.children}\n            </Typography>\n        </span>\n    );\n}\n\n\nexport default function ReservationViewModal(props: ReservationViewModalProps) {\n    const { deleteReservation } = useReservations();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n    const [nfcModalOpen, setNFCModalOpen] = React.useState<boolean>(false);\n    const [copyModalOpen, setCopyModalOpen] = React.useState<boolean>(false);\n\n\n    const onDelete = React.useCallback(async () => {\n        if (await deleteReservation(props.reservation.id)) {\n            setDeleteModalOpen(false);\n        }\n    }, [\n        props.reservation.id,\n        deleteReservation,\n    ]);\n\n\n    const menuOptions = React.useMemo(() => {\n        const opt = [\n            {\n                icon: <NFCIcon color='primary' />,\n                label: 'Odbij klucz',\n                action: () => setNFCModalOpen(true)\n            }, {\n                icon: <CopyIcon color='primary' />,\n                label: 'Kopiuj',\n                action: () => setCopyModalOpen(true)\n            }, {\n                icon: <Edit color='primary' />,\n                label: 'Edytuj',\n                action: () => setEditModalOpen(true)\n            }, {\n                icon: <DeleteIcon color='error' />,\n                label: 'Usuń',\n                action: () => setDeleteModalOpen(true)\n            },\n        ]\n        return opt;\n    }, []);\n\n\n    return (\n        <>\n            <DeleteModal\n                open={deleteModalOpen}\n                onClose={() => setDeleteModalOpen(false)}\n                objectName={props.reservation.title}\n                onSuccess={onDelete}\n            />\n\n            <EditForm\n                open={editModalOpen}\n                onClose={() => setEditModalOpen(false)}\n                reservation={props.reservation}\n            />\n\n            <CopyForm\n                open={copyModalOpen}\n                onClose={() => setCopyModalOpen(false)}\n                reservation={props.reservation}\n            />\n\n            <PingNFCForm\n                open={nfcModalOpen}\n                onClose={() => setNFCModalOpen(false)}\n                reservationId={props.reservation.id}\n            />\n\n\n            <GenericModal\n                open={props.open}\n                onClose={props.onClose}\n                aria-label=\"Widok Rezerwacji\"\n                sx={{\n                    maxWidth: '800px',\n                    mt: '4vw'\n                }}\n            >\n                <Stack spacing={4} alignItems='stretch'>\n\n                    <Stack direction='row' justifyContent='space-between'>\n                        <Typography component=\"h2\" variant=\"h4\">\n                            {props.reservation.title}\n                        </Typography>\n                        <IconButton onClick={props.onClose}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Stack>\n\n                    <Stack direction='row' justifyContent='space-between'>\n                        <Button\n                            color='success'\n                            startIcon={<NFCIcon />}\n                            onClick={() => setNFCModalOpen(true)}\n                            title=\"Odbij klucz\"\n                            aria-label=\"Odbij klucz\"\n                        >\n                            Odbij klucz\n                        </Button>\n\n                        <MoreVertMenu options={menuOptions} />\n                    </Stack>\n\n                    <TextSection title='Planowany czas:'>\n                        {`${displayDate(props.reservation.plannedStart)} - ${displayDate(props.reservation.plannedEnd)}`}\n                    </TextSection>\n\n                    <TextSection title='Faktyczny czas:'>\n                        Rozpoczęto: {props.reservation.actualStart ?\n                            displayDate(props.reservation.actualStart)\n                            : 'NIE'\n                        }<br />\n                        Zakończono: {props.reservation.actualEnd ?\n                            displayDate(props.reservation.actualEnd)\n                            : 'NIE'\n                        }\n                    </TextSection>\n\n                    <TextSection title='Opis:'>\n                        {props.reservation.description}\n                    </TextSection>\n\n                    <Grid container>\n                        {\n                            [\n                                { title: 'Użytkownik:', component: <ReservationUserCard user={props.reservation.user} /> },\n                                { title: 'Zarezerwowana sala:', component: <ReservationRoomCard room={props.reservation.room} /> },\n                            ].map(({ title, component }, index) =>\n                                <Grid key={index} item xs={12} lg={6} pr='10px'>\n                                    <Typography sx={{ p: '25px 0px 10px 0px', color: 'text.secondary' }} variant='subtitle2'>{title}</Typography>\n                                    {component}\n                                </Grid>)\n                        }\n                    </Grid>\n\n                </Stack>\n            </GenericModal>\n        </>\n    );\n}\n\n\n","import React from \"react\";\nimport ReservationViewModal from \"../../../ReservationViewModal\";\nimport { useReservations } from \"..\";\nimport ModalContextValue from \"./ModalContextValue\";\n\n\nexport const ReservationModalViewContext = React.createContext<ModalContextValue>({\n    showReservation: (id: number) => { },\n    reservation: null\n});\n\n\ninterface ModalContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\nexport default function ModalContextProvider(props: ModalContextProviderProps) {\n    const { reservations } = useReservations();\n\n    const [modalOpen, setModalOpen] = React.useState<boolean>(true);\n    const [reservationId, setReservationId] = React.useState<number | null>(null);\n\n\n    const reservation = React.useMemo(() => {\n        if (reservationId) {\n            return reservations.find(({ id }) => id === reservationId);\n        }\n    }, [reservations, reservationId]) ?? null;\n\n\n    const showReservation = React.useCallback((id: number) => {\n        setReservationId(id);\n        setModalOpen(true);\n    }, []);\n\n\n    return (\n        <ReservationModalViewContext.Provider value={{ reservation, showReservation }}>\n            {props.children}\n\n            {reservation &&\n                <ReservationViewModal\n                    reservation={reservation}\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                />}\n        </ReservationModalViewContext.Provider>\n    );\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../../auth/useSession\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { AppURLParams } from \"../../../../../../services/interfaces\";\nimport ReservationService, { CreateReservationData, ReservationsQueryParams, UpdateReservationData } from \"../../../../../../services/ReservationService\";\nimport { useRoomContext } from \"../../../RoomPage/RoomContext\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport ReservationModalContext from \"./ModalContext\";\nimport useResourceMap from \"../../../../../../contexts/ResourceMapContext/useResourceMap\";\nimport ReservationsContextValue from \"./ReservationsContextValue\";\nimport paths from \"../../../../../../shared/path\";\nimport { UserViewParams } from \"../../../../../../services/UserService\";\nimport useTrigger from \"../../../hooks/useTrigger\";\n\n\nexport const reservationsContext: any = React.createContext(null);\n\n\ninterface ReservationsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\n\nexport default function ReservationsContextProvider(props: ReservationsContextProviderProps) {\n    const { queryParams, setQueryParams } = useQueryParams<ReservationsQueryParams>();\n    const notify = useNotification();\n    const { getRoomLink } = useResourceMap();\n    const roomContext = useRoomContext();\n    const { user } = useSession();\n    const urlParams = useParams<AppURLParams>();\n    const refresh = useTrigger(30_000);\n\n    const [reservations, setReservations] = React.useState<Reservation[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            let params = urlParams;\n            if (Object.keys(urlParams).length === 0 && window.location.pathname === paths.HOME) {\n                params = { userId: 'me' } as UserViewParams;\n            }\n            const resp = await ReservationService.getReservations(params, queryParams);\n\n            resp.pagination && setQueryParams((old) => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount,\n            }));\n            setReservations(resp.data as Reservation[]);\n        } catch (err: any) {\n            notify(err.description ?? err.message, 'error');\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        queryParams.currentPage,\n        queryParams.itemsOnPage,\n        queryParams.from,\n        queryParams.search,\n        setQueryParams,\n        urlParams,\n        notify,\n        user\n    ]);\n\n\n    // when loading function is recalculated - trigger the loading\n    React.useEffect(() => {\n        load();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        load,\n        refresh\n    ]);\n\n\n    const triggerReload = React.useCallback(() => setQueryParams(old => Object.assign({}, old)), [\n        setQueryParams\n    ]);\n\n\n    const pingKeyForReservation = React.useCallback(async (id: number, key: string) => {\n        if (!reservations) return;\n        try {\n            const reservation = reservations.find(item => item.id === id);\n            if (!reservation) return false;\n\n            const resp = await ReservationService.pingKey(id, key);\n\n            setReservations(old => {\n                old && old.forEach(item => {\n                    if (item.id !== id) return;\n\n                    if (item.actualStart) {\n                        item.actualEnd = new Date().toString();\n                    } else {\n                        item.actualStart = new Date().toString();\n                    }\n\n                });\n                return Object.assign([], old);\n            });\n\n            roomContext && roomContext.setOccupied(!reservation.room.occupied);\n            resp?.data && notify(resp.data.toString(), 'success');\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [\n        reservations,\n        roomContext,\n        notify,\n    ]);\n\n\n    const createReservation = React.useCallback(async (data: CreateReservationData) => {\n        try {\n            await ReservationService.createOne(data);\n\n            triggerReload();\n            notify(\"Rezerwacja utworzona prawidłowo!\", 'success');\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true\n    }, [\n        notify,\n        triggerReload,\n    ]);\n\n\n    const deleteReservation = React.useCallback(async (reservationId: number) => {\n        try {\n            await ReservationService.remove(reservationId);\n            setReservations(old => old && old.filter(({ id }) => id !== reservationId));\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [notify]);\n\n\n    const updateReservation = React.useCallback(async (id: number, data: UpdateReservationData) => {\n        try {\n            await ReservationService.update(id, data); //call to API\n\n            //update state\n            setReservations((old) => {\n                return old && old.map(item => {\n                    if (item.id === id)\n                        ['plannedStart', 'plannedEnd', 'description', 'title']\n                            .forEach(field => {\n                                if (field in data) {\n                                    item[field] = data[field];\n                                }\n                            });\n                    return item;\n                });\n            });\n\n            // when reservation room is changing\n            if ('roomId' in data) {\n                data.roomId && notify(\n                    'Rezerwacja zaktualizowana i przeniesiona!',\n                    'success',\n                    () => <Redirect to={getRoomLink(Number(data.roomId))} />\n                )\n            } else {\n                notify('Rezerwacja zaktualizowana!', 'success');\n            }\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n            return false;\n        }\n        return true;\n    }, [getRoomLink, notify]);\n\n\n    if (!reservations) return null;\n\n    return (\n        <reservationsContext.Provider value={{\n            reservations,\n            updateReservation,\n            deleteReservation,\n            createReservation,\n            pingKeyForReservation,\n        } as ReservationsContextValue}>\n            <ReservationModalContext>\n                {props.children}\n            </ReservationModalContext>\n        </reservationsContext.Provider>\n    );\n}","import Avatar from \"@mui/material/Avatar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport AppLink from \"../../../../../../shared/components/AppLink\";\nimport Reservation from \"../../../../../../models/Reservation\";\nimport { dynamicPaths } from \"../../../../../../shared/path\";\nimport ImageService from \"../../../../../../services/ImageService\";\nimport { displayDate } from \"../../../../../../shared/utils\";\nimport ReservationService from \"../../../../../../services/ReservationService\";\n\n\ninterface ReservationListItemProps {\n    data: Reservation,\n    onClick: () => void\n}\n\n\nexport default function ReservationListItem({\n    data, onClick\n}: ReservationListItemProps) {\n    const { message, color } = ReservationService.resolveStatus(data);\n\n    return (\n        <ListItem\n            component='li'\n            button\n            sx={{\n                mb:'2px',\n                bgcolor: color,\n                '&:hover, &:focus': {\n                    bgcolor: color,\n                    filter: 'brightness(97%)',\n                }\n            }}\n            onClick={onClick}\n        >\n            <ListItemAvatar>\n                <AppLink to={dynamicPaths.toUser(data.user.id)}>\n                    <Avatar src={ImageService.getLink(data.user.image)} />\n                </AppLink>\n            </ListItemAvatar>\n\n            <ListItemText\n                primary={data.title}\n                secondary={displayDate(data.actualStart ?? data.plannedStart) + ' - ' + message}\n            />\n        </ListItem>\n    )\n}","import { List, ListItem, ListItemText } from \"@mui/material\";\nimport useReservationModalContext from \"../ReservationsContext/ModalContext/useReservationModalContext\";\nimport { useReservations } from \"../ReservationsContext\";\nimport ReservationListItem from \"./ReservationsListItem\";\n\n\n\nexport default function ReservationsList() {\n    const { showReservation } = useReservationModalContext();\n    const { reservations } = useReservations();\n\n\n    return (\n        <List aria-label='lista rezerwacji'>\n            {reservations.length === 0 ?\n                <ListItem>\n                    <ListItemText primary='Brak rezerwacji spełniających kryteria.' />\n                </ListItem> :\n                reservations.map((item, index) => <ReservationListItem\n                    key={index}\n                    data={item}\n                    onClick={() => showReservation(item.id)}\n                />)}\n        </List>\n    );\n}\n\n\n","import React from \"react\";\nimport { ReservationModalViewContext } from \"./ModalContextProvider\";\nimport ModalContextValue from \"./ModalContextValue\";\n\n\nexport default function useReservationModalContext() {\n    return React.useContext(ReservationModalViewContext) as ModalContextValue;\n}","import { FormControl, FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\nimport React from \"react\";\n\nexport interface SelectButtonInterface {\n    name: string, value: string\n}\n\nexport interface SelectButtonGroupProps {\n    onChange: (value: string) => void,\n    buttons: SelectButtonInterface[],\n    value: string\n}\n\nexport default function SelectButtonGroup({\n    onChange, buttons, value\n}: SelectButtonGroupProps) {\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).value);\n    }, [onChange]);\n\n\n    const renderedButtons = React.useMemo(() => {\n        return buttons.map(({ value, name }) =>\n            <FormControlLabel\n                key={name}\n                value={value}\n                control={<Radio />}\n                label={name}\n                aria-label={name}\n                title={name}\n            />\n        )\n    }, [buttons]);\n\n\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup\n                row\n                aria-label=\"wybór opcji\"\n                name=\"wybór zdefiniowanej opcji\"\n                value={value}\n                onChange={handleChange}\n            >\n                {renderedButtons}\n            </RadioGroup>\n        </FormControl>\n    );\n}","import MobileDatePicker from \"@mui/lab/MobileDatePicker\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { ReservationsQueryParams } from \"../../../../../services/ReservationService\";\nimport SelectButtonGroup from \"../../components/SelectButtonGroup\";\nimport LazyInput from \"../../components/LazyInput\";\nimport { isDate } from \"../../../../../shared/utils\";\n\n\nconst buttons = [\n    { name: 'Dziś', value: 'today' },\n    { name: 'Ten tydzień', value: 'this week' },\n    { name: 'Od wczoraj', value: 'yesterday' },\n];\n\n\nexport default function ReservationTabBar() {\n    const { setQueryParams, queryParams } = useQueryParams<ReservationsQueryParams>();\n\n    const [customDate, setCustomDate] = React.useState(new Date(isDate(queryParams.from) ? queryParams.from ?? 'xxx' : Date.now()));\n\n    const handleButtonChange = React.useCallback((value: string) => {\n        setQueryParams((old: ReservationsQueryParams) => ({ ...old, from: value }));\n    }, [setQueryParams]);\n\n\n    const handleSubmitCustomDate = React.useCallback((evt: React.FormEvent) => {\n        evt.preventDefault();\n        setQueryParams((old: ReservationsQueryParams) => ({ ...old, from: customDate.toISOString() }))\n    }, [customDate, setQueryParams])\n\n\n    const handleSearchFieldChange = React.useCallback((evt) => {\n        setQueryParams(old => ({ ...old, search: evt.target.value }));\n    }, [setQueryParams]);\n\n\n    return (\n        <>\n            <Grid container\n                component='form'\n                onSubmit={handleSubmitCustomDate}\n                spacing={2}\n                alignItems='center'\n            >\n                <Grid item xs={12} md={12}>\n                    <SelectButtonGroup\n                        onChange={handleButtonChange}\n                        buttons={buttons}\n                        value={isDate(queryParams.from) ? '' : queryParams?.from ?? buttons[0].value}\n                    />\n                    <Box display='inline-flex' >\n                        <MobileDatePicker\n                            label=\"Od daty\"\n                            inputFormat=\"yyyy-MM-dd\"\n                            value={customDate}\n                            onChange={(value: Date | null) => value && setCustomDate(value)}\n                            renderInput={(params) => <TextField {...params} size='small' />}\n                        />\n                        <Button\n                            variant={queryParams?.from === customDate.toISOString() ? 'contained' : 'outlined'}\n                            type='submit'\n                            sx={{ ml: 1 }}\n                        >\n                            OK\n                        </Button>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <LazyInput\n                        name=\"search\"\n                        label='wyszukaj'\n                        value={queryParams.search ?? ''}\n                        onChange={handleSearchFieldChange}\n                    />\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import { Stack } from \"@mui/material\";\nimport { QueryParamsContext } from \"../../../../../contexts/QueryParamsContext\";\nimport ReservationsContext from \"./ReservationsContext\";\nimport { ReservationsQueryParams } from \"../../../../../services/ReservationService\";\nimport ListPagination from \"../../components/ListPagination\";\nimport ReservationsList from \"./ReservationsList\";\nimport ReservationTabBar from \"./ReservationTabBar\";\n\n\n\nexport default function GenericReservationsTab() {\n    return (\n        <QueryParamsContext name='reservations-query-params' default={{\n            itemsOnPage: 5,\n            currentPage: 1,\n            from: 'today'\n        } as ReservationsQueryParams}>\n            <ReservationsContext>\n                <Stack rowGap={5}>\n                    <ReservationTabBar />\n                    <ReservationsList />\n                    <ListPagination />\n                </Stack>\n            </ReservationsContext>\n        </QueryParamsContext>\n    );\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport paths from \"../../../../../shared/path\";\nimport AddressService, { AddressViewParams, UpdateAddressParams } from \"../../../../../services/AddressService\";\nimport AddressContextValue from \"./AddressContextValue\";\nimport Address from \"../../../../../models/Address\";\nimport Building from \"../../../../../models/Building\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\n\n\n\ninterface AddressContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport const addressContext: any = React.createContext(null);\n\n\nexport default function AddressContextProvider(props: AddressContextProviderProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n\n    const urlParams = useParams<AddressViewParams>();\n\n    const [address, setAddress] = React.useState<Address>();\n\n\n    React.useLayoutEffect(() => {\n        AddressService.setPath(urlParams);\n    }, [urlParams])\n\n\n    const getAddress = React.useCallback(async () => {\n        const resp = await AddressService.getCurrentOne();\n        setAddress(resp.data as Address);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        getAddress();\n    }, [getAddress]);\n\n\n    const getBuildingsInAddress = React.useCallback(async () => {\n        try {\n            const resp = await AddressService.getBuildings();\n            return resp.data as Building[];\n        } catch (err: any) {\n            return [];\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    const updateAddress = React.useCallback(async (data: UpdateAddressParams) => {\n        try {\n            await AddressService.update(data)\n\n            setAddress(old => {\n                return {\n                    ...old,\n                    ...data as Address\n                }\n            });\n\n            reloadMap()\n\n            notify('Adres zaktualizowany', 'success');\n            return true;\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n    ])\n\n\n\n    const deleteAddress = React.useCallback(async () => {\n        try {\n            await AddressService.remove();\n            reloadMap();\n            notify(\"Adres został usunięty\", 'success', () => <Redirect to={paths.HOME} />);\n        } catch (err: any) {\n            address &&\n                notify(err.description, 'error');\n        }\n    }, [\n        notify,\n        address,\n        reloadMap,\n    ]);\n\n\n    if (!Boolean(address)) return null;\n\n    return (\n        <addressContext.Provider value={{\n            address,\n            deleteAddress,\n            getBuildingsInAddress,\n            updateAddress\n        } as AddressContextValue}>\n\n            {props.children}\n\n        </addressContext.Provider>\n    );\n}","import React from \"react\";\nimport { addressContext } from \"./AddressContextProvider\";\nimport AddressContextValue from \"./AddressContextValue\";\n\n\nexport default function useAddress() {\n    return React.useContext(addressContext) as AddressContextValue;\n}","import { styled, SxProps } from \"@mui/system\";\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Address from \"../../../../../models/Address\";\n\n\n\ninterface MapProps {\n    address: Address,\n    sx?: SxProps\n}\n\nconst StyledIframe = styled('iframe')({\n    width: '100%',\n    height: '50vh',\n    maxHeight: '400px',\n    minHeight: '300px'\n});\n\n\nexport default function Map({ address, sx }: MapProps) {\n\n    const url = React.useMemo(() => {\n        const { street, number, town, country } = address;\n\n        const base = new URL('https://maps.google.com/maps');\n        const params = new URLSearchParams({\n            q: `${street + \" \" + number + \" \" + town + \" \" + country}`,\n            ie: 'UTF8',\n            z: '14',\n            iwloc: '',\n            output: 'embed'\n        });\n        base.search = params.toString();\n\n        return base.toString();\n    }, [address]);\n\n    return (\n        <Box>\n            <StyledIframe\n                src={url}\n                frameBorder=\"0\"\n                sx={{ ...sx }}\n            />\n        </Box>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport { useAddress } from \"../AddressContext\";\nimport { UpdateAddressParams } from \"../../../../../services/AddressService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\n\ninterface AddressEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\n\nexport default function AddressEditForm({\n    open,\n    onClose\n}: AddressEditFormProps) {\n    const { address, updateAddress } = useAddress();\n\n    const [data, setData] = React.useState<UpdateAddressParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old: UpdateAddressParams) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateAddress(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateAddress,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do edycji budynku\"\n        >\n            <FormGridContainer\n                title='Edycja adresu'\n                subtitle=\"Zmień właściwości adresu i zatwierdź zmiany.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"country\"\n                        label=\"Kraj\"\n                        name=\"country\"\n                        value={data.country ?? address.country}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        autoFocus\n                        required\n                        fullWidth\n                        id=\"town\"\n                        label=\"Miasto\"\n                        name=\"town\"\n                        value={data.town ?? address.town}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"postalCode\"\n                        label=\"Kod pocztowy\"\n                        name=\"postalCode\"\n                        value={data.postalCode ?? address.postalCode}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={8}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"street\"\n                        label=\"Ulica\"\n                        name=\"street\"\n                        value={data.street ?? address.street}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"number\"\n                        label=\"Number\"\n                        name=\"number\"\n                        value={data.number ?? address.number}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport { BuildingCreateParams } from \"../../../../../services/BuildingService\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport { timeFormat } from \"../../../../../shared/utils\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateBuildingFormProps {\n    open: boolean,\n    onClose: () => void,\n    handleCreateBuilding: (data: BuildingCreateParams) => Promise<boolean>\n}\n\n\nexport default function CreateBuildingForm({\n    open,\n    onClose,\n    handleCreateBuilding,\n}: CreateBuildingFormProps) {\n    const [data, setData] = React.useState<BuildingCreateParams>({\n        name: '',\n        openTime: (new Date(0, 0, 0, 7, 0)).toString(),\n        closeTime: (new Date(0, 0, 0, 21, 0)).toString()\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        const success = await handleCreateBuilding({\n            ...data,\n            closeTime: timeFormat.format(new Date(data.closeTime)),\n            openTime: timeFormat.format(new Date(data.openTime))\n        });\n\n        if (success) {\n            onClose();\n        }\n\n    }, [\n        data,\n        onClose,\n        handleCreateBuilding,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do tworzenia budynku\"\n        >\n            <FormGridContainer\n                title='Dodaj nowy budynek!'\n                subtitle=\"Wypełnij dane nowego budynku i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nazwa\"\n                        name=\"name\"\n                        autoFocus\n                        value={data.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6} >\n                    <MobileTimePicker\n                        label=\"Godzina otwarcia\"\n                        inputFormat=\"HH:mm\"\n                        value={data.openTime}\n                        onChange={(value: any) => setData(old => ({ ...old, openTime: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <MobileTimePicker\n                        label=\"Godzina zamknięcia\"\n                        inputFormat=\"HH:mm\"\n                        value={data.closeTime}\n                        onChange={(value: any) => setData(old => ({ ...old, closeTime: value }))}\n                        renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport AddressService, { CreateAddressParams } from \"../../../../../services/AddressService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateAddressFormProps {\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport default function CreateAddressForm({\n    open,\n    onClose,\n}: CreateAddressFormProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n\n    const [data, setData] = React.useState<CreateAddressParams>({\n        country: 'Polska',\n        town: '',\n        street: '',\n        number: '',\n        postalCode: '',\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old: CreateAddressParams) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        try {\n            await AddressService.create(data);\n            reloadMap();\n            notify('Adres został dodany', 'success');\n            onClose();\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n        onClose,\n        reloadMap,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno do tworzenia adresu\"\n        >\n            <FormGridContainer\n                title='Dodaj nowy adres!'\n                subtitle=\"Wypełnij dane nowego adresu i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"country\"\n                        label=\"Kraj\"\n                        name=\"country\"\n                        value={data.country}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"town\"\n                        label=\"Miasto\"\n                        name=\"town\"\n                        autoFocus\n                        value={data.town}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"postalCode\"\n                        label=\"Kod pocztowy\"\n                        name=\"postalCode\"\n                        value={data.postalCode}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={8}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"street\"\n                        label=\"Ulica\"\n                        name=\"street\"\n                        value={data.street}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"number\"\n                        label=\"Number\"\n                        name=\"number\"\n                        value={data.number}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal>\n    );\n}","import { Card, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport Map from \"./Map\";\nimport { useAddress } from \"../AddressContext\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { AddressEditForm } from \"../Forms\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport DatesFooter from \"../../components/DatesFooter\";\n\n\n\n\nexport default function AddressCard() {\n    const { address, deleteAddress } = useAddress();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);\n    const [editModalOpen, setEditModalOpen] = React.useState(false);\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n    return (\n        <>\n            <DeleteModal\n                objectName={`${address.street} ${address.number}`}\n                open={deleteModalOpen}\n                onClose={() => setDeleteModalOpen(false)}\n                onSuccess={deleteAddress}\n            />\n\n            <AddressEditForm\n                open={editModalOpen}\n                onClose={() => setEditModalOpen(false)}\n            />\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={<MoreVertMenu options={options} />}\n                    title={<>{address.country}, {address.town}</>}\n                    subheader={<>{address.street} {address.number}</>}\n                />\n                <CardMedia component=\"div\">\n                    <Map address={address}  />\n                </CardMedia>\n                <CardContent>\n                    <Typography component='p'>\n                        ul. {address.street} {address.number}<br />\n                        {address.postalCode} {address.town}, <br />\n                        {address.country}\n                    </Typography>\n                    <br />\n                    <DatesFooter model={address} />\n                </CardContent>\n            </Card>\n        </>\n    )\n}","import { Box, Button, Stack, TextField, Typography } from \"@mui/material\";\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport React from \"react\";\nimport SelectButtonGroup, { SelectButtonInterface } from \"../../components/SelectButtonGroup\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport { ChartsQueryData } from \"../../../../../services/ChartService\";\n\n\nconst predefinedButtons: SelectButtonInterface[] = [\n    { name: \"tydzień\", value: \"1 week ago\" },\n    { name: \"miesiąc\", value: \"1 month ago\" },\n    { name: \"6 miesięcy\", value: \"6 month ago\" },\n    { name: \"rok\", value: \"1 year ago\" },\n];\n\n\n\nexport default function ChartOptionsBar() {\n    const { queryParams, setQueryParams } = useQueryParams<ChartsQueryData>();\n\n    const [customDates, setCustomDates] = React.useState<{ from: Date, to: Date }>({\n        from: new Date(),\n        to: new Date()\n    });\n\n    const handleButtonChange = React.useCallback(async (buttonValue: string) => {\n        setQueryParams({\n            from: buttonValue,\n            to: \"now\"\n        });\n    }, [\n        setQueryParams\n    ]);\n\n\n    const handleSubmitCustomDate = React.useCallback(async (evt: any) => {\n        evt.preventDefault();\n        setQueryParams({\n            from: customDates.from?.toISOString(),\n            to: customDates.to?.toISOString()\n        });\n    }, [\n        customDates.from,\n        customDates.to,\n        setQueryParams\n    ]);\n\n\n    return (\n        <Stack direction=\"column\" spacing={2}>\n            <Box>\n                <Typography variant=\"subtitle2\">\n                    Zakres czasu:\n                </Typography>\n                <SelectButtonGroup\n                    onChange={handleButtonChange}\n                    buttons={predefinedButtons}\n                    value={queryParams.from}\n                />\n\n            </Box>\n            <Box component=\"form\" onSubmit={handleSubmitCustomDate}>\n                <Typography variant=\"subtitle2\">\n                    Zakres niestandardowy:&nbsp;\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                    <MobileDatePicker\n                        label=\"od\"\n                        inputFormat=\"yyyy-MM-dd\"\n                        value={customDates.from}\n                        onChange={(value) => setCustomDates({ ...customDates, from: value ?? new Date() })}\n                        renderInput={(params) => <TextField {...params} size='small' />}\n                    />\n                    <MobileDatePicker\n                        label=\"do\"\n                        inputFormat=\"yyyy-MM-dd\"\n                        value={customDates.to}\n                        onChange={(value) => setCustomDates({ ...customDates, to: value ?? new Date() })}\n                        renderInput={(params) => <TextField {...params} size='small' />}\n                    />\n                    <Button type=\"submit\" variant=\"outlined\"> OK</Button>\n                </Stack>\n            </Box>\n        </Stack>\n    );\n}\n","import { BuildingOrRoomChartsData, BuildingsOrRoomsChartsData, LogsChartsData, UserChartsData } from \"../models/Stats\";\nimport { AppURLParams } from \"./interfaces\";\nimport Service from \"./Service\";\n\n\nexport interface ChartsQueryData {\n    from: string,\n    to: string\n}\n\n\n\nexport type ChartsData = (\n    BuildingOrRoomChartsData |\n    BuildingsOrRoomsChartsData |\n    LogsChartsData |\n    UserChartsData\n);\n\n\nclass ChartService extends Service {\n\n    protected preparePath(urlParams: AppURLParams): string {\n        let endp = '';\n        let url = window.location.pathname;\n\n        const map = {\n            '/settings': '/requests',\n            '/users': '/users'\n        }\n\n        if (Object.keys(urlParams).length === 0) {\n            for (const [path, newPath] of Object.entries(map)) {\n                if (url.includes(path)) {\n                    endp = newPath;\n                }\n            }\n        } else if ('addressId' in urlParams) {\n            endp += `/addresses/${urlParams.addressId}/buildings`;\n\n            if ('buildingId' in urlParams) {\n                endp += `/${urlParams.buildingId}`;\n\n                if ('roomId' in urlParams) endp += `/rooms/${urlParams.roomId}`;\n            }\n        } else if ('userId' in urlParams) {\n            endp += `/users/${urlParams.userId}`\n        }\n        return endp;\n    }\n\n    public fetchData(urlParams: AppURLParams, queryParams: ChartsQueryData) {\n        return this.get(this.preparePath(urlParams) + '/stats', queryParams);\n    }\n\n\n\n}\n\nexport default new ChartService();","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../../auth/useSession\";\nimport useNotification from \"../../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport ChartService, { ChartsData, ChartsQueryData } from \"../../../../../../services/ChartService\";\nimport { AppURLParams } from \"../../../../../../services/interfaces\";\nimport useTrigger from \"../../../hooks/useTrigger\";\n\n\nexport const chartsContext: any = React.createContext(null);\n\n\n\ninterface ChartsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\n\nexport default function ChartsContextProvider(props: ChartsContextProviderProps) {\n    const notify = useNotification();\n    const urlParams = useParams<AppURLParams>();\n    const refresh = useTrigger(60_000);\n\n    const { user } = useSession();\n    const { queryParams } = useQueryParams<ChartsQueryData>();\n\n    const [chartsData, setData] = React.useState<ChartsData | {}>({});\n\n\n    const load = React.useCallback(async () => {\n        let params = urlParams;\n        if ('userId' in urlParams && urlParams.userId === 'me') {\n            params = { userId: `${user?.id}` }\n        }\n\n        try {\n            const resp = await ChartService.fetchData(params, queryParams);\n            setData(resp.data as ChartsData);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setData({});\n        }\n    }, [\n        notify,\n        queryParams,\n        urlParams,\n        user?.id,\n    ]);\n\n    React.useEffect(() => {\n        load();\n    }, [\n        load,\n        refresh\n    ]);\n\n\n    if (Object.keys(chartsData).length === 0) return null;\n\n    return (\n        <chartsContext.Provider value={{\n            chartsData\n        }}>\n            {props.children}\n        </chartsContext.Provider>\n    );\n}","import React from \"react\";\nimport { chartsContext } from \"./ChartsContextProvider\";\nimport ChartsContextValue from \"./ChartsContextValue\";\n\n\nexport default function useCharts<T>() {\n    return React.useContext(chartsContext) as ChartsContextValue<T>;\n}","import Stack from \"@mui/material/Stack\";\nimport React from \"react\";\nimport { QueryParamsContext } from \"../../../../../contexts/QueryParamsContext\";\nimport { ChartsQueryData } from \"../../../../../services/ChartService\";\nimport ChartOptionsBar from \"./ChartOptionsBar\";\nimport { ChartsContext } from \"./ChartsContext\";\n\n\ninterface GenericChartsTabProps {\n    children: React.ReactNode[] | React.ReactNode\n}\n\nexport default function ChartsTab(props: GenericChartsTabProps) {\n    return (\n        <QueryParamsContext\n            name=\"charts-query-params\"\n            default={{ from: '1 month ago', to: 'now' } as ChartsQueryData}\n        >\n            <ChartsContext>\n                <Stack spacing={4}>\n                    <ChartOptionsBar />\n                    {props.children}\n                </Stack>\n            </ChartsContext>\n        </QueryParamsContext>\n    )\n}","import Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport IconButton from \"@mui/material/IconButton\";\nimport { Divider } from \"@mui/material\";\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\n\n\ninterface ChartSectionProps {\n    title: string,\n    children: React.ReactNode[] | React.ReactNode,\n    defaultOpen?: boolean,\n    onClick?: () => void\n}\n\n\nexport default function ChartSection(props: ChartSectionProps) {\n    const [open, setOpen] = React.useState<boolean>(props?.defaultOpen ? true : false);\n\n    return (\n        <Box>\n            <Box sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n            }}>\n                <Typography variant='h6' component='h5' id={props.title.replace(' ', '_')}>\n                    {props.title}\n                    <IconButton onClick={() => setOpen(old => !old)}>\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </Typography>\n                <IconButton\n                    onClick={props.onClick}\n                >\n                    <PictureAsPdfIcon />\n                </IconButton>\n            </Box>\n            <Collapse in={open} timeout=\"auto\" >\n                <Grid container spacing={2}>\n                    {props.children}\n                </Grid>\n                <br />\n                <Divider />\n            </Collapse>\n        </Box>\n    );\n}","import Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { AxisOptions } from \"react-charts\";\nimport { Chart as ReactChart } from 'react-charts'\nimport BarChartIcon from '@mui/icons-material/BarChart';\n\n\n\nexport const weekDays = [\n    'Niedziela',\n    'Poniedziałek',\n    'Wtorek',\n    'Środa',\n    'Czwartek',\n    'Piątek',\n    'Sobota',\n];\n\n\ninterface ChartSeries {\n    x: any\n    y: number,\n}\n\n\ninterface ChartProps<T> {\n    data: T[],\n    title: string,\n    fullWidth?: boolean,\n    resolveDay?: boolean\n    xKey: keyof T,\n    y: { label: string, key: keyof T }[]\n}\n\n\nexport default function Chart<DataType>(props: ChartProps<DataType>) {\n\n    const primaryAxis = React.useMemo((): AxisOptions<ChartSeries> => ({\n        getValue: item => props.resolveDay ? weekDays[Number(item.x)] : item.x,\n        min: 0\n    }), [props.resolveDay]);\n\n\n    const secondaryAxes = React.useMemo((): AxisOptions<ChartSeries>[] => [\n        {\n            getValue: item => item.y,\n            position: 'left',\n            elementType: 'bar',\n            minDomainLength: 15,\n            hardMin: 0,\n            scaleType: 'linear',\n            showDatumElements: true\n        }\n    ], []);\n\n\n    const data = React.useMemo(() => {\n        const obj: { label: string, data: ChartSeries[] }[] = props.y.map(({ label }) => ({ label: label, data: [] }))\n\n        props.data.forEach((item) => {\n            props.y.forEach(({ key }, index) => {\n                obj[index].data.push({\n                    x: item[props.xKey],\n                    y: Number(item[key]),\n                });\n            })\n        })\n        return obj;\n    }, [\n        props.y,\n        props.xKey,\n        props.data,\n    ]);\n\n\n    return (\n        <Grid item\n            xs={12}\n            lg={props.fullWidth ? 12 : 6}\n        >\n            <Stack direction='row' spacing={1} alignItems='center'>\n                <Typography variant=\"body2\" component='h4' color='text.secondary'>\n                    {props.title}\n                </Typography>\n                <BarChartIcon color='primary' />\n\n            </Stack>\n            {props.data.length === 0 ?\n                <Typography component='p' color='text.secondary'>\n                    Brak danych do nakreślenia wykresu\n                </Typography>\n                : <Box\n                    sx={{\n                        maxHeight: '400px',\n                        height: '40vh',\n                        minHeight: '300px',\n                        width: '100%',\n                    }}>\n\n                    <ReactChart\n                        options={{\n                            data,\n                            primaryAxis,\n                            secondaryAxes,\n                        }}\n                    />\n                </Box>}\n        </Grid>\n    )\n}","import { BuildingsOrRoomsChartsData } from \"../../../../../models/Stats\";\nimport { Chart, ChartSection, ChartsTab, useCharts } from \"../../components/Charts\";\n\n\n\nexport default function AddressCharts() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\nfunction ActualLoader() {\n    const { chartsData } = useCharts<BuildingsOrRoomsChartsData>();\n\n    return (\n        <ChartSection defaultOpen title='Statystyki budynków'>\n            <Chart\n                fullWidth\n                title='Ilość rezerwacji'\n                data={chartsData.allReservations}\n                xKey='name'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Czas wszystkich reserwacji\"\n                data={chartsData.allReservations}\n                xKey='name'\n                y={[\n                    { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Średnie czasy rezerwacji\"\n                data={chartsData.allReservations}\n                xKey='name'\n                y={[\n                    { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n};","import Service from \"./Service\";\nimport { AddressViewParams } from \"./AddressService\";\n\n\n\nexport interface BuildingViewParams {\n    addressId: string,\n    buildingId: string,\n}\n\n\nexport interface BuildingUpdateParams {\n    [index: string]: string | number | undefined,\n    name?: string,\n    closeTime?: string,\n    openTime?: string,\n    addressId?: number\n}\n\nexport interface BuildingCreateParams {\n    name: string,\n    closeTime: string,\n    openTime: string,\n}\n\n\nclass BuildingService extends Service {\n    _path = '';\n\n    get path(): string {\n        return this._path;\n    }\n\n    public setPath({ addressId, buildingId }: BuildingViewParams) {\n        this._path = `/addresses/${addressId}/buildings/${buildingId}`;\n    }\n\n    public getCurrentOne() {\n        return this.get(this.path);\n    }\n\n    public remove() {\n        return this.delete(this.path);\n    }\n\n    public update(data: BuildingUpdateParams) {\n        return this.patch(this.path, data);\n    }\n\n    public create({ addressId }: AddressViewParams, data: BuildingCreateParams) {\n        return this.post(`/addresses/${addressId}/buildings`, data)\n    }\n\n    public getRoomsInBuilding() {\n        return this.get(`${this.path}/rooms`);\n    }\n}\n\nexport default new BuildingService()","import { List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\n\ninterface ScrollableListProps {\n    onAddItem: () => void,\n    children: React.ReactNode[] | React.ReactNode,\n}\n\n\nexport default function ScrollableList(props: ScrollableListProps) {\n    return (\n        <Box>\n            <List sx={{\n                minHeight: '160px',\n                maxHeight: '400px'\n            }}>\n                <ListItem button onClick={props.onAddItem}>\n                    <ListItemIcon >\n                        <AddCircleIcon color='primary' />\n                    </ListItemIcon>\n                    <ListItemText primary='Dodaj element' />\n                </ListItem>\n                {props.children}\n            </List>\n        </Box>\n    )\n}\n\n\n","import { ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport AppLink from \"../../../../../shared/components/AppLink\";\n\n\ninterface ScrollableListItemProps {\n    primary: string | React.ReactNode,\n    link: string,\n}\n\n\nexport default function ScrollableListItem(props: ScrollableListItemProps) {\n    return (\n        <ListItem sx={{ py: '2px' }}>\n            <ListItemIcon>\n                <ArrowRightIcon />\n            </ListItemIcon>\n            <ListItemText primary={<AppLink withIcon to={props.link}>{props.primary}</AppLink>} />\n        </ListItem>\n    );\n}","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport Building from \"../../../../../models/Building\";\nimport { AddressViewParams } from \"../../../../../services/AddressService\";\nimport BuildingService, { BuildingCreateParams } from \"../../../../../services/BuildingService\";\nimport ScrollableList, { ScrollableListItem } from \"../../components/ScrollableList\";\nimport SmallCard from \"../../components/SmallCard\";\nimport { useAddress } from \"../AddressContext\";\nimport { CreateBuildingForm } from \"../Forms\";\n\n\nexport default function BuildingsList() {\n    const { getBuildingsInAddress } = useAddress();\n    const { reloadMap } = useResourceMap();\n    const notify = useNotification();\n\n    const urlParams = useParams() as AddressViewParams;\n\n    const [createBuildingModalOpen, setCreateBuildingModalOpen] = React.useState<boolean>(false);\n    const [buildings, setBuildings] = React.useState<Building[]>();\n\n\n    const load = React.useCallback(async () => {\n        const buildings = await getBuildingsInAddress();\n        setBuildings(buildings);\n    }, [getBuildingsInAddress])\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const createBuilding = React.useCallback(async (data: BuildingCreateParams) => {\n        try {\n            await BuildingService.create(urlParams, data);\n            load();\n            reloadMap();\n            notify('Nowa sala utworzona!', 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        load,\n        urlParams,\n    ]);\n\n\n    const renderedBuildings = React.useMemo(() => {\n        return buildings?.map(item => <ScrollableListItem key={item.id}\n            primary={`Budynek ${item.name}`}\n            link={`./${item.address}/buildings/${item.id}`}\n        />)\n    }, [buildings]);\n\n\n    return (\n        <>\n            <CreateBuildingForm\n                open={createBuildingModalOpen}\n                onClose={() => setCreateBuildingModalOpen(false)}\n                handleCreateBuilding={createBuilding}\n            />\n\n            <SmallCard title='Budynki pod adresem'>\n                <ScrollableList\n                    onAddItem={() => setCreateBuildingModalOpen(true)}\n                >\n                    {renderedBuildings}\n                </ScrollableList>\n            </SmallCard>\n            <br />\n        </>\n    );\n}\n","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport AddressContext from \"./AddressContext\";\nimport AddressCard from \"./components/AddressCard\";\nimport AddressCharts from \"./components/AddressCharts\";\nimport BuildingsList from \"./components/BuildingsList\";\n\n\nexport default function AddressPage() {\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        arr.push({ name: 'Statystyki', component: <AddressCharts /> });\n        arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <AddressContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item container spacing={2} alignContent='flex-start' xs={12} md={5} lg={4}>\n                    <Grid item xs={12}>\n                        <AddressCard />\n                    </Grid>\n                    <Grid item xs={12} >\n                        <BuildingsList />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </AddressContext>\n    );\n}","import { DayStatsItem } from \"../../../../models/Stats\";\nimport { Chart, ChartSection } from \"./Charts\";\n\n\ninterface MonthlyChartsSectionProps {\n    data: DayStatsItem[]\n}\n\n\nexport default function MonthlyChartsSection(props: MonthlyChartsSectionProps) {\n    return (\n        <ChartSection title='Statystyki miesięczne'>\n            <Chart\n                fullWidth\n                title='Ilość rezerwacji na dzień miesiąca'\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Faktyczny czas wszystkich rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Czas całkowity [m]', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Średni czas rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Średni planowany czas [m]', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas [m]', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}","import { DayStatsItem } from \"../../../../models/Stats\";\nimport { Chart, ChartSection } from \"./Charts\";\n\n\ninterface WeeklyChartsSectionProps {\n    data: DayStatsItem[]\n}\n\n\nexport default function WeeklyChartsSection(props: WeeklyChartsSectionProps) {\n    return (\n        <ChartSection title='Statystyki tygodniowe'>\n            <Chart\n                fullWidth\n                resolveDay\n                title='Ilość rezerwacji na dzień tygodnia'\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth\n                resolveDay\n                title=\"Faktyczny czas wszystkich rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Czas całkowity [m]', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                resolveDay\n                title=\"Średni czas rezerwacji\"\n                data={props.data}\n                xKey='day'\n                y={[\n                    { label: 'Średni planowany czas [m]', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas [m]', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}","import { BuildingOrRoomChartsData } from \"../../../../models/Stats\";\nimport { ChartsTab, Chart, ChartSection, useCharts } from \"./Charts\";\nimport MonthlyChartsSection from \"./MonthlyChartsSection\";\nimport WeeklyChartsSection from \"./WeeklyChartsSection\";\n\n\n\nexport default function RoomOrBuildingChartTab() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n// need to use actual loading component to access charts context in ChartsTab\nfunction ActualLoader() {\n    const { chartsData } = useCharts<BuildingOrRoomChartsData>();\n\n    return (\n        <>\n            <WeeklyChartsSection data={chartsData.weekly} />\n\n            <MonthlyChartsSection data={chartsData.monthly} />\n\n            <ChartSection defaultOpen title='Wykresy odnośnie użytkowników'>\n                <Chart\n                    fullWidth\n                    title=\"Średnie czasy rezerwacji\"\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                        { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title='Ilość rezerwacji użytkowników'\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title=\"Czas wszystkich reserwacji danego użytkownika\"\n                    data={chartsData.users}\n                    xKey='email'\n                    y={[\n                        { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                    ]}\n                />\n            </ChartSection>\n        </>\n    )\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { DetailedBuilding } from \"../../../../../models/Building\";\nimport BuildingService, { BuildingUpdateParams, BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport BuildingContextValue from \"./BuildingContextValue\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\nimport Room from \"../../../../../models/Room\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\n\n\ninterface BuildingContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport const buildingContext: any = React.createContext(null);\n\n\nexport default function BuildingContextProvider(props: BuildingContextProviderProps) {\n    const notify = useNotification();\n    const { reloadMap } = useResourceMap();\n    const urlParams = useParams<BuildingViewParams>();\n\n    const [building, setBuilding] = React.useState<DetailedBuilding>();\n\n\n    React.useLayoutEffect(() => {\n        BuildingService.setPath(urlParams);\n    }, [urlParams])\n\n\n    const getBuilding = React.useCallback(async () => {\n        const resp = await BuildingService.getCurrentOne();\n        setBuilding(resp.data as DetailedBuilding);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        getBuilding();\n    }, [getBuilding]);\n\n\n    const getRoomsInBuilding = React.useCallback(async () => {\n        try {\n            const resp = await BuildingService.getRoomsInBuilding();\n            return resp.data as Room[];\n        } catch (err: any) {\n            return [];\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams])\n\n\n    const updateBuilding = React.useCallback(async (data: BuildingUpdateParams) => {\n        try {\n            if (await BuildingService.update(data)) {\n\n                if (\n                    building &&\n                    (\n                        ('addressId' in data && building.address.id !== data.addressId)\n                        || ('name' in data)\n                    )\n                ) {\n                    reloadMap();\n                }\n\n                setBuilding((old) => {\n                    old && Object.keys(data).forEach((key) => {\n                        switch (key) {\n                            case 'addressId':\n                                old.address.id = Number(data[key]);\n                                break;\n                            default:\n                                old[key] = data[key];\n                                break;\n                        }\n                    });\n                    return Object.assign({}, old);\n                })\n                notify('Bydynek zaktualizowany', 'success');\n                return true;\n            }\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify, building, reloadMap]);\n\n\n    const deleteBuilding = React.useCallback(async () => {\n        try {\n            await BuildingService.remove();\n            building && notify(\"Budynek usunięty\", 'success', () => <Redirect to={dynamicPaths.toAddress(building.address.id)} />);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify, building]);\n\n\n    if (!Boolean(building)) return null;\n\n    return (\n        <buildingContext.Provider value={{\n            building,\n            deleteBuilding,\n            getRoomsInBuilding,\n            updateBuilding,\n        } as BuildingContextValue}>\n\n            {props.children}\n\n        </buildingContext.Provider>\n    );\n}","import React from \"react\";\nimport { buildingContext } from \"./BuildingContextProvider\";\nimport BuildingContextValue from \"./BuildingContextValue\";\n\n\nexport default function useBuilding() {\n    return React.useContext(buildingContext) as BuildingContextValue;\n}","import Model from './Model';\nimport Image from './Image';\nimport Building from './Building';\n\nexport enum RoomTypes {\n    LABORATORY = \"Sala laboratoryjna\",\n    CONFERENCE = \"Sala konferencyjna\",\n    LECTURE = \"Sala wykładowa\"\n}\n\nexport type RoomType = RoomTypes.LABORATORY | RoomTypes.CONFERENCE | RoomTypes.LECTURE;\n\ninterface BaseRoom extends Model {\n    name: string,\n    image: Image,\n    roomType: RoomType,\n    seatsCount: number,\n    floor: number,\n    blocked: boolean,\n    occupied: boolean,\n    RFIDTag: null | string\n}\n\nexport default interface Room extends BaseRoom {\n    building: number\n}\n\nexport interface DetailedRoom extends BaseRoom {\n    building: Building\n}","import { Button, Grid } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\nimport React from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { Redirect, useLocation, useParams } from \"react-router-dom\";\nimport Image from \"../../../../models/Image\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport { UserViewParams } from \"../../../../services/UserService\";\nimport { BuildingViewParams } from \"../../../../services/BuildingService\";\nimport { RoomViewParams } from \"../../../../services/RoomService\";\nimport ImageService from \"../../../../services/ImageService\";\n\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst StyledImage = styled('img')({\n    width: \"fill-available\",\n    maxHeight: '350px'\n});\n\ninterface ImageUploadFieldProps {\n    image?: Image,\n    onUpload?: () => void;\n    onDelete?: () => void;\n}\n\nexport default function ImageUploadField(props: ImageUploadFieldProps) {\n    const notify = useNotification();\n    const location = useLocation();\n    const urlParams = useParams<UserViewParams | BuildingViewParams | RoomViewParams>();\n    const [uploadedImage, setUploadedImage] = React.useState<Blob>();\n\n\n    const handleSubmit = React.useCallback(async (evt: React.FormEvent) => {\n        evt.preventDefault();\n        if (!uploadedImage) {\n            notify(\"Najpierw załaduj nowy obraz\", \"warning\");\n            return;\n        }\n        try {\n            await ImageService.upload(urlParams, uploadedImage);\n            props.onUpload && props.onUpload();\n            notify(\"Obraz został zmieniony\", 'success',\n                () => <Redirect to={location.pathname} /> // rerender the current page\n            );\n\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        uploadedImage,\n        props,\n        notify,\n        location,\n        urlParams,\n    ]);\n\n\n    const handleImageUpload = React.useCallback((evt: any) => {\n        if (evt.target.files && evt.target.files[0]) {\n            const img = evt.target.files[0];\n            setUploadedImage(img);\n        }\n    }, []);\n\n\n    const handleRemoveImgae = React.useCallback(async () => {\n        try {\n            await ImageService.remove(urlParams);\n            props.onDelete && props.onDelete();\n            notify(\"Przywrócono domyślny obraz, załaduj ponownie aby zobaczyć rezultat.\", \"success\",\n                () => <Redirect to={location.pathname} /> // rerender the current page\n            );\n\n        } catch (err: any) {\n            notify(err.description, \"error\");\n        }\n    }, [\n        props,\n        notify,\n        location,\n        urlParams,\n    ]);\n\n\n    return (\n        <Grid container component=\"form\"\n            onSubmit={handleSubmit}\n            direction=\"row\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <Grid item xs={12} sm={9}>\n                <StyledImage\n                    src={uploadedImage ? URL.createObjectURL(uploadedImage) : ImageService.getLink(props.image)}\n                    alt='nowy obraz'\n                />\n            </Grid>\n            <Grid item xs={12} sm={3} sx={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n            }}>\n                <label htmlFor=\"upload-obrazu\">\n                    <Input\n                        accept=\"*.(jpg|png)\"\n                        id=\"upload-obrazu\"\n                        type=\"file\"\n                        onChange={handleImageUpload}\n                    />\n                    <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        component=\"span\">\n                        Wybierz zdjęcie\n                    </Button>\n                </label>\n\n                <Button color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={handleRemoveImgae}\n                >\n                    Usuń\n                </Button>\n\n                <Button\n                    type=\"submit\"\n                    color=\"success\"\n                    startIcon={<SaveIcon />}\n                >\n                    Zapisz\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}","import Grid from \"@mui/material/Grid\";\nimport { SelectChangeEvent } from \"@mui/material/Select/SelectInput\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport GenericModal from \"../../components/GenericModal\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { BuildingUpdateParams } from \"../../../../../services/BuildingService\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useBuilding } from \"../BuildingContext\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport { timeFormat } from \"../../../../../shared/utils\";\nimport ImageUploadField from \"../../components/ImageUploadField\";\nimport Divider from \"@mui/material/Divider\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\n\ninterface BuildingEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\n\nfunction timeToDate(value: string) {\n    const [h, m] = value.split(':');\n    return new Date(0, 0, 0, Number(h), Number(m));\n}\n\n\nexport default function BuildingEditForm({\n    open,\n    onClose,\n}: BuildingEditFormProps) {\n    const { allAddresses } = useResourceMap();\n    const { updateBuilding, building } = useBuilding();\n\n    const [data, setData] = React.useState<BuildingUpdateParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n\n        setData((old: BuildingUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleTime = React.useCallback((field: 'closeTime' | 'openTime', value: Date) => {\n        setData(old => {\n            old[field] = timeFormat.format(value);\n            return Object.assign({}, old);\n        });\n    }, [])\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateBuilding(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateBuilding,\n    ]);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<string | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'addressId') value = Number(value);\n\n        event.target && setData((old: BuildingUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno edycji budynku\"\n        >\n            <Stack spacing={3}>\n\n                <ImageUploadField image={building.image} />\n                <Divider />\n\n                <FormGridContainer\n                    title='Edycja budynku'\n                    subtitle=\"Zmień właściwości budynku i zatwierdź zmiany.\"\n                    onSubmit={handleSubmit}\n                    onCancel={onClose}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nazwa\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? building.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6} >\n                        <MobileTimePicker\n                            label=\"Godzina otwarcia\"\n                            inputFormat=\"HH:mm\"\n                            value={timeToDate(data.openTime ?? building.openTime)}\n                            onChange={(value: any) => handleTime('openTime', value)}\n                            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <MobileTimePicker\n                            label=\"Godzina zamknięcia\"\n                            inputFormat=\"HH:mm\"\n                            value={timeToDate(data.closeTime ?? building.closeTime)}\n                            onChange={(value: any) => handleTime('closeTime', value)}\n                            renderInput={(params: any) => <TextField sx={{ width: '100%' }} {...params} />}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"wybierz-adres\">Adres</InputLabel>\n                            <Select\n                                labelId=\"wybierz-adres\"\n                                name=\"addressId\"\n                                value={data.addressId ?? building.address.id}\n                                label=\"Adres\"\n                                onChange={handleSelectChange}\n                            >\n                                {allAddresses.map(({ name, id }) => <MenuItem key={name} value={id} >{name} </MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    );\n}","import FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { RoomType, RoomTypes } from \"../../../../../models/Room\";\nimport { CreateRoomParams } from \"../../../../../services/RoomService\";\nimport GenericModal from \"../../components/GenericModal\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\n\n\ninterface CreateRoomFormProps {\n    open: boolean,\n    onClose: () => void,\n    handleCreateRoom: (data: CreateRoomParams) => Promise<boolean>\n}\n\n\nexport default function CreateRoomForm({\n    open,\n    onClose,\n    handleCreateRoom,\n}: CreateRoomFormProps) {\n\n    const [data, setData] = React.useState<CreateRoomParams>({\n        name: '',\n        roomType: RoomTypes.LECTURE,\n        seatsCount: 50,\n        floor: 0\n    });\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n        setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<RoomType | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'buildingId') value = Number(value);\n\n        event.target && setData((old) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await handleCreateRoom(data)) {\n            onClose();\n        }\n\n    }, [\n        data,\n        handleCreateRoom,\n        onClose,\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno edycji budynku\"\n        >\n            <FormGridContainer\n                title='Dodaj nową salę'\n                subtitle=\"Wypełnij dane nowej sali i kliknij zatwierdź.\"\n                onSubmit={handleSubmit}\n                onCancel={onClose}\n            >\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nazwa\"\n                        name=\"name\"\n                        autoFocus\n                        value={data.name}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"room-type\">Typ Sali</InputLabel>\n                        <Select\n                            required\n                            labelId=\"room-type\"\n                            id=\"roomType\"\n                            value={data.roomType}\n                            name=\"roomType\"\n                            label=\"Typ Sali\"\n                            onChange={handleSelectChange}\n                        >\n                            {Object.values(RoomTypes).map(val => <MenuItem key={val} value={val}>{val}</MenuItem>)}\n\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={6} >\n                    <TextField\n                        required\n                        name=\"seatsCount\"\n                        label=\"Ilość miejsc\"\n                        type=\"number\"\n                        id=\"seatsCount\"\n                        value={data.seatsCount}\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        name=\"floor\"\n                        label=\"Piętro\"\n                        type=\"number\"\n                        id=\"floor\"\n                        value={data.floor}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </FormGridContainer>\n        </GenericModal >\n    );\n}","\n\n\nexport enum FavType {\n    Building = 'building-item',\n    Room = 'room-item'\n}\n\n\ninterface FavouriteItem {\n    id: number,\n    name: string,\n    type: FavType,\n}\n\nexport interface FavouriteBuilding extends FavouriteItem {\n    addressId: number,\n}\n\nexport interface FavouriteRoom extends FavouriteBuilding {\n    buildingId: number,\n}\n\n\nexport default interface Metadata {\n    notes?: string,\n    favourites?: (FavouriteBuilding | FavouriteRoom)[]\n}\n","import StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport IconButton from '@mui/material/IconButton';\nimport React from 'react';\nimport { FavouriteBuilding, FavouriteRoom } from '../../../../models/Metadata';\nimport MetadataService from '../../../../services/MetadataService';\n\n\n\ninterface FavouriteButtonProps {\n    data: FavouriteBuilding | FavouriteRoom\n}\n\n\nexport default function FavouriteButton(props: FavouriteButtonProps) {\n    const [marked, setMarked] = React.useState(false);\n\n    React.useEffect(() => {\n        setMarked(MetadataService.isFavourite(props.data));\n    }, [props.data]);\n\n\n    const addToFavourites = React.useCallback(() => {\n        if (marked) {\n            MetadataService.removeFavourite(props.data);\n        } else {\n            MetadataService.addFavourite(props.data);\n        }\n\n        setMarked(old => !old);\n    }, [\n        marked,\n        props.data,\n    ]);\n\n\n    return (\n        <IconButton sx={{display:'inline'}} onClick={addToFavourites} color='warning'>\n            {marked ? <StarIcon /> : <StarBorderIcon />}\n        </IconButton>\n    );\n}","import { Card, CardContent, CardHeader, CardMedia } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport React from \"react\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport { useBuilding } from \"../BuildingContext\";\nimport { BuildingEditForm } from \"../Forms\";\nimport FavouriteButton from \"../../components/FavouriteButton\";\nimport { FavType } from \"../../../../../models/Metadata\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport AppLink from \"../../../../../shared/components/AppLink\";\nimport { dynamicPaths } from \"../../../../../shared/path\";\nimport DatesFooter from \"../../components/DatesFooter\";\n\n\n\n\nexport default function BuildingView() {\n    const { building, deleteBuilding } = useBuilding();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    if (!Boolean(building)) return null;\n\n    return (\n        <>\n            <DeleteModal\n                objectName={building.name}\n                open={deleteModalOpen}\n                onClose={() => setDeleteModalOpen(false)}\n                onSuccess={deleteBuilding}\n            />\n\n            <BuildingEditForm\n                open={editModalOpen}\n                onClose={() => setEditModalOpen(false)}\n            />\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={<MoreVertMenu options={options} />}\n                    title={\n                        <>\n                            Budynek {building.name}\n                            <FavouriteButton data={{\n                                id: building.id,\n                                name: building.name,\n                                type: FavType.Building,\n                                addressId: building.address.id,\n                            }} />\n                        </>\n                    }\n                    subheader={<>{building.openTime} - {building.closeTime}</>}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"350\"\n                    image={ImageService.getLink(building.image)}\n                    alt={building.name}\n                />\n                <CardContent>\n                    <AppLink withIcon to={dynamicPaths.toAddress(building.address.id)}>\n                        {building.address.town},&nbsp;{building.address.street}&nbsp;{building.address.number}\n                    </AppLink>\n                    <br />\n                    <DatesFooter model={building} />\n                </CardContent>\n            </Card>\n        </>\n    );\n}","import React from \"react\";\nimport Room from \"../../../../../models/Room\";\nimport ScrollableList, { ScrollableListItem } from \"../../components/ScrollableList\";\nimport { useBuilding } from \"../BuildingContext\";\nimport { CreateRoomForm } from \"../Forms\";\nimport RoomService, { CreateRoomParams } from \"../../../../../services/RoomService\";\nimport { useParams } from \"react-router-dom\";\nimport { BuildingViewParams } from \"../../../../../services/BuildingService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport SmallCard from \"../../components/SmallCard\";\n\n\n\nexport default function RoomsList() {\n    const { getRoomsInBuilding } = useBuilding();\n    const { reloadMap } = useResourceMap();\n\n    const urlParams = useParams() as BuildingViewParams;\n    const notify = useNotification();\n\n    const [createRoomModalOpen, setCreateRoomModalOpen] = React.useState<boolean>(false);\n    const [rooms, setRooms] = React.useState<Room[]>();\n\n\n    const load = React.useCallback(async () => {\n        const rooms = await getRoomsInBuilding();\n        setRooms(rooms);\n    }, [\n        getRoomsInBuilding\n    ]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const createRoom = React.useCallback(async (data: CreateRoomParams) => {\n        try {\n            await RoomService.create(urlParams, data);\n            notify('Nowa sala utworzona!', 'success');\n            load();\n            reloadMap();\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        reloadMap,\n        load,\n        urlParams,\n    ]);\n\n\n    const renderedRooms = React.useMemo(() => {\n        return rooms?.map(item => <ScrollableListItem\n            key={item.id}\n            primary={`Sala ${item.name}`}\n            link={`./${item.building}/rooms/${item.id}`}\n        />)\n    }, [rooms])\n\n\n    return (\n        <>\n            <CreateRoomForm\n                handleCreateRoom={createRoom}\n                open={createRoomModalOpen}\n                onClose={() => setCreateRoomModalOpen(false)}\n            />\n\n            <SmallCard title=\"Sale w budynku\">\n                <ScrollableList onAddItem={() => setCreateRoomModalOpen(true)}>\n                    {renderedRooms}\n                </ScrollableList>\n            </SmallCard>\n            <br />\n        </>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport RoomOrBuildingChartTab from \"../components/RoomOrBuildingChartTab\";\nimport BuildingContext from \"./BuildingContext\";\nimport BuildingCard from \"./components/BuildingCard\";\nimport RoomsList from \"./components/RoomsList\";\n\n\nexport default function BuildingPage() {\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        arr.push({ name: 'Statystyki', component: <RoomOrBuildingChartTab /> });\n        arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <BuildingContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item container spacing={2} alignContent='flex-start' xs={12} md={5} lg={4}>\n                    <Grid item xs={12}>\n                        <BuildingCard />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <RoomsList />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </BuildingContext>\n    );\n}","import { List, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport useSession from \"../../../../auth/useSession\";\nimport { FavouriteBuilding, FavouriteRoom, FavType } from \"../../../../models/Metadata\";\nimport MetadataService from \"../../../../services/MetadataService\";\nimport AppLink from \"../../../../shared/components/AppLink\";\nimport SmallCard from \"../components/SmallCard\";\nimport { dynamicPaths } from \"../../../../shared/path\";\n\n\n\n\nfunction getCorrectListItem(data: FavouriteBuilding | FavouriteRoom): React.ReactNode {\n    switch (data.type) {\n        case FavType.Building: {\n            const { addressId, id, name } = data as FavouriteBuilding;\n            return <ListItemText key={name + id} primary={<AppLink withIcon to={dynamicPaths.toBuilding(addressId, id)}>Budynek {name}</AppLink>} />\n        }\n        case FavType.Room: {\n            const { addressId, buildingId, id, name } = data as FavouriteRoom;\n            return <ListItemText key={name + id} primary={<AppLink withIcon to={dynamicPaths.toRoom(addressId, buildingId, id)}>Sala {name}</AppLink>} />\n        }\n        default: return null;\n    }\n}\n\n\nexport default function Favourites() {\n    const { user } = useSession();\n\n    const [data, setData] = React.useState<(FavouriteBuilding | FavouriteRoom)[]>()\n\n\n    React.useEffect(() => {\n        setData(MetadataService.favourites);\n    }, [user])\n\n\n    return (\n        <SmallCard title='Ulubione'>\n            <List>\n                {\n                    data?.map(item => getCorrectListItem(item))\n                }\n                {\n                    data?.length === 0 &&\n                    <ListItemText color='text.secondary' primary='Brak ulubionych' />\n                }\n            </List>\n        </SmallCard>\n    )\n}\n\n\n","import { Button, InputBase } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport React from \"react\";\nimport SaveIcon from '@mui/icons-material/Save';\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport SmallCard from \"../components/SmallCard\";\nimport MetadataService from \"../../../../services/MetadataService\";\n\n\n\nexport default function Notebook() {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<string>();\n\n\n    React.useEffect(() => {\n        setData(MetadataService.notes)\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (!data) return;\n\n        try {\n            MetadataService.notes = data;\n\n            notify('Notatki zostały zapisane', 'success');\n            setData(undefined);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [\n        data,\n        notify,\n    ]);\n\n\n    const handleChange = React.useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n        setData(event.target.value)\n    }, []);\n\n\n    return (\n        <SmallCard title='Notatnik'>\n            <Box component='form' onSubmit={handleSubmit} sx={{ display: 'flex', justifyContent: 'flex-end', flexDirection: 'column' }}>\n                <InputBase\n                    aria-label=\"twoje notatki\"\n                    title='twoje notatki'\n\n                    multiline\n                    minRows={3}\n                    maxRows={10}\n                    name='search'\n                    value={data ?? MetadataService.notes ?? ''}\n                    onChange={handleChange}\n                    placeholder=\"Twoje notatki\"\n                    sx={{ width: '100%', height: '100%', p: 1, bgcolor: 'background.default' }}\n                    inputProps={{ 'aria-label': 'Twoje notatki' }}\n                />\n                <Button\n                    title='Zapisz notatki'\n                    aria-label='Zapisz notatki'\n                    sx={{ mr: '0px', ml: 'auto' }}\n                    startIcon={<SaveIcon />}\n                    type=\"submit\">\n                    Zapisz\n                </Button>\n            </Box>\n        </SmallCard >\n    );\n}\n","import GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SmallCard from \"../components/SmallCard\";\n\n\n\nexport default function HomeReservations() {\n    return (\n        <SmallCard title='Rezerwacje'>\n            <GenericReservationsTab />\n        </SmallCard>\n    );\n}\n","import { Grid } from \"@mui/material\";\nimport Favourites from \"./Favourites\";\nimport Notebook from \"./Notebook\";\nimport HomeReservations from \"./HomeReservations\";\n\n\n\nexport default function HomePage() {\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12} lg={8}>\n                <HomeReservations />\n            </Grid>\n            <Grid item container spacing={2} xs={12} lg={4}\n                alignContent='flex-start'\n            >\n                <Grid item xs={12}>\n                    <Notebook />\n                </Grid>\n                <Grid item xs={12} >\n                    <Favourites />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Divider, FormControl, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack } from '@mui/material';\nimport { RoomUpdateParams } from '../../../../../services/RoomService';\nimport { RoomType, RoomTypes } from '../../../../../models/Room';\nimport { useRoomContext } from '../RoomContext';\nimport ImageUploadField from '../../components/ImageUploadField';\nimport { useResourceMap } from '../../../../../contexts/ResourceMapContext';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport GenericModal from '../../components/GenericModal';\nimport FormGridContainer from '../../../../../shared/components/FormGridContainer';\n\n\n\ninterface RoomEditFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\n\nexport default function RoomEditForm({\n    open,\n    onClose,\n}: RoomEditFormProps) {\n    const { room, updateRoom } = useRoomContext();\n    const { allBuildings } = useResourceMap();\n\n    const [data, setData] = React.useState<RoomUpdateParams>({});\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        let value: string | number | boolean = event.target.value;\n\n        switch (event.target.name) {\n            case \"name\":\n                value = String(value);\n                break;\n            case \"blocked\":\n                value = !event.target.checked;\n                break;\n            default:\n                value = Number(value);\n                break;\n        }\n\n        setData((old: RoomUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSelectChange = React.useCallback((event: SelectChangeEvent<RoomType | number>): void => {\n        let value: string | number = event.target.value;\n        if (event.target.name === 'buildingId') value = Number(value);\n\n        event.target && setData((old: RoomUpdateParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        if (await updateRoom(data)) {\n            onClose();\n        }\n    }, [\n        data,\n        updateRoom,\n        onClose\n    ]);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={onClose}\n            aria-label=\"Okno usuwania obiektu\"\n            sx={{\n                maxWidth: \"450px\",\n            }}\n        >\n            <Stack spacing={2}>\n                <ImageUploadField image={room.image} />\n                <Divider />\n\n                <FormGridContainer\n                    title='Edycja sali'\n                    subtitle=\"Zmień właściwości pokoju i zatwierdź zmiany.\"\n                    onSubmit={handleSubmit}\n                    onCancel={onClose}\n                >\n\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nazwa\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? room.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"room-type\">Typ Sali</InputLabel>\n                            <Select\n                                labelId=\"room-type\"\n                                id=\"roomType\"\n                                value={data.roomType ?? room.roomType}\n                                name=\"roomType\"\n                                label=\"Typ Sali\"\n                                onChange={handleSelectChange}\n                            >\n                                {Object.values(RoomTypes).map(val => <MenuItem key={val} value={val}>{val}</MenuItem>)}\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={6} >\n                        <TextField\n                            required\n                            name=\"seatsCount\"\n                            label=\"Ilość miejsc\"\n                            type=\"number\"\n                            id=\"seatsCount\"\n                            value={data.seatsCount ?? room.seatsCount}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <TextField\n                            required\n                            name=\"floor\"\n                            label=\"Piętro\"\n                            type=\"number\"\n                            id=\"floor\"\n                            value={data.floor ?? room.floor}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"wybierz-budynek\">Budynek</InputLabel>\n                            <Select\n                                labelId=\"wybierz-budynek\"\n                                name=\"buildingId\"\n                                value={data.buildingId ?? room.building.id}\n                                label=\"Budynek\"\n                                onChange={handleSelectChange}\n                            >\n                                {allBuildings.map(({ name, id }) => <MenuItem key={name} value={id} >Budynek &nbsp;{name} </MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            labelPlacement=\"start\"\n                            control={<Switch id=\"room-blocked\" name=\"blocked\"\n                                inputProps={{ 'aria-label': 'controlled' }}\n                                onChange={handleChange}\n                                checked={!(data.blocked ?? room.blocked)}\n                            />}\n                            label=\"Dostępność Sali\"\n                        />\n                    </Grid>\n\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    );\n}","import GenericModal from \"../../components/GenericModal\";\nimport RfidForm from \"../../components/RfidForm\";\nimport { useRoomContext } from \"../RoomContext\";\n\n\ninterface RfidModalRormProps {\n    open: boolean,\n    onClose: () => void,\n}\n\nexport default function RfidModalRorm(props: RfidModalRormProps) {\n    const { updateRFIDTag } = useRoomContext();\n\n    return (\n        <GenericModal\n            open={props.open}\n            onClose={props.onClose}\n            aria-label=\"Okno przypisania tagu RFID\"\n            sx={{\n                maxWidth: \"400px\"\n            }}\n        >\n            <RfidForm\n                headline=\"Użyj czytnika, aby wprowadzić tag.\"\n                bodyText='Jeśli nie chcesz wprowadzać zmian, naciśnij \"Zamknij\"'\n                onScan={updateRFIDTag}\n                onClose={props.onClose}\n            />\n        </GenericModal>\n    );\n}\n","import CancelIcon, { } from '@mui/icons-material/Cancel';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\n\n\ninterface YesNoIconProps {\n    value: boolean,\n    title?: string,\n    fontSize?: 'small' | 'medium' | 'large',\n}\n\n\nexport default function YesNoIcon(props: YesNoIconProps) {\n    const { value, ...rest } = props;\n\n    return (\n        value ?\n            <CheckCircleOutlineIcon color=\"success\" {...rest} />\n            : <CancelIcon sx={{ color: \"red\" }} {...rest} />\n    )\n}","import { Chip, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport { DetailedRoom } from \"../../../../../models/Room\";\nimport AppLink from \"../../../../../shared/components/AppLink\";\nimport { RfidForm } from \"../Forms\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport YesNoIcon from \"./YesNoIcon\";\n\n\ninterface RoomTableInfoProps {\n    room: DetailedRoom,\n    deleteTag: () => Promise<void>\n}\n\n\nexport default function RoomTableInfo({\n    room, deleteTag\n}: RoomTableInfoProps) {\n    const { getBuildingLink } = useResourceMap();\n    const [rfidTagModalOpen, setRfidTagModalOpen] = React.useState<boolean>(false);\n\n    const tableRows = React.useMemo(() => {\n        return [\n            {\n                label: \"Ilość miejsc\",\n                value: room.seatsCount\n            }, {\n                label: \"Piętro\",\n                value: room.floor === 0 ? \"parter\" : room.floor\n            }, {\n                label: \"Ilość miejsc\",\n                value: room.seatsCount\n            }, {\n                label: \"Budynek\",\n                value: <AppLink withIcon to={getBuildingLink(room.building.id)}> {room.building.name} </AppLink>\n            }, {\n                label: \"Aktualnie wolny\",\n                value: <YesNoIcon value={!room.occupied} />\n            }, {\n                label: \"Tag RFID\",\n                value: room.RFIDTag ?\n                    <Chip label={room.RFIDTag} onDelete={deleteTag} />\n                    : <IconButton size=\"small\"\n                        onClick={() => setRfidTagModalOpen(true)}\n                        sx={{ p: '0px' }}\n                    >\n                        <AddCircleIcon />\n                    </IconButton>\n            }, {\n                label: \"Dostępny do rezerwacji\",\n                value: <YesNoIcon value={!room.blocked} />\n            },\n        ];\n    }, [\n        room,\n        deleteTag,\n        getBuildingLink,\n    ]);\n\n\n    const RenderedRows = React.useMemo(() => {\n        return tableRows.map(({ label, value }, index) =>\n            <TableRow hover key={index}>\n                <TableCell sx={{ color: \"text.secondary\" }} align=\"left\">{label}</TableCell>\n                <TableCell sx={{ color: \"primary.main\", fontWeight: \"bold\" }} align=\"left\">{value}</TableCell>\n            </TableRow>\n        )\n    }, [tableRows])\n\n\n    return (\n        <>\n            <RfidForm\n                open={rfidTagModalOpen}\n                onClose={() => setRfidTagModalOpen(false)}\n            />\n\n            <TableContainer >\n                <Table aria-label=\"room-info-table\" size=\"small\">\n                    <TableHead sx={{ display: 'none' }}>\n                        <TableRow>\n                            <TableCell align=\"left\">Właściwość</TableCell>\n                            <TableCell align=\"left\">stan</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {RenderedRows}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n}\n","import * as React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\n\nexport default function Loading() {\n  return (\n    <Box sx={{\n      display: 'flex'\n    }}>\n      <CircularProgress />\n    </Box>\n  );\n}","import FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { useResourceMap } from \"../../../../../contexts/ResourceMapContext\";\nimport ReservationService, { CreateReservationData } from \"../../../../../services/ReservationService\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport DateTimePicker from \"../DateTimePicker\";\n\n\n\ninterface CreateReservationFormProps {\n    roomId?: number\n    onCancel: () => void\n}\n\n\nexport default function CreateReservationForm(props: CreateReservationFormProps) {\n    const notify = useNotification();\n    const { allRooms } = useResourceMap();\n    const [data, setData] = React.useState<CreateReservationData>({\n        title: '',\n        description: '',\n        plannedStart: (new Date()).toString(),\n        plannedEnd: (new Date(Date.now() + 3600_000)).toString(),\n        roomId: props.roomId ?? 0\n    });\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async () => {\n        try {\n            await ReservationService.createOne(data);\n            notify(\"Rezerwacja utworzona prawidłowo!\", 'success');\n            props.onCancel()\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [data, notify, props]);\n\n\n    return (\n        <FormGridContainer\n            title='Tworzenie rezerwacji'\n            subtitle=\"Stwórz rezerwację w wybranym przez siebie pokoju. Aby zobaczyć zmiany, przeładu.\"\n            onSubmit={handleSubmit}\n            onCancel={props.onCancel}\n        >\n            <Grid item xs={12}>\n                <TextField\n                    title=\"Tytuł rezerwacji\"\n                    inputProps={{ title: \"Tytuł rezerwacji\" }}\n                    autoFocus\n                    required\n                    fullWidth\n                    // multiline\n                    maxRows={4}\n                    label=\"Tytuł\"\n                    id=\"outlined-multiline-flexible\"\n                    name='title'\n                    value={data.title}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    required\n                    fullWidth\n                    multiline\n                    maxRows={20}\n                    label=\"Opis\"\n                    id=\"outlined-multiline-flexible\"\n                    name='description'\n                    value={data.description}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <DateTimePicker\n                    label=\"Początek\"\n                    value={data.plannedStart}\n                    onChange={(value: any) => setData(old => ({ ...old, plannedStart: value }))}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <DateTimePicker\n                    label=\"Koniec\"\n                    value={data.plannedEnd}\n                    onChange={(value: any) => setData(old => ({ ...old, plannedEnd: value }))}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"wybierz-salę\">Sala</InputLabel>\n                    <Select\n                        required\n                        labelId=\"wybierz-budynek\"\n                        name=\"buildingId\"\n                        value={data.roomId}\n                        label=\"Budynek\"\n                        onChange={(evt: any) => setData(old => ({ ...old, roomId: Number(evt.target.value) }))}\n                    >\n                        {allRooms.map(({ name, id }) => <MenuItem key={name} value={id} >Sala &nbsp;{name} </MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n        </FormGridContainer>\n    );\n}","import GenericModal from \"../../components/GenericModal\";\nimport CreateReservationForm from \"./CreateReservationForm\";\n\n\ninterface CreateReservationModalProps {\n    open: boolean,\n    onClose: () => void,\n    roomId?: number\n}\n\nexport default function CreateReservationModal(props: CreateReservationModalProps) {\n    return (\n        <GenericModal\n            open={props.open}\n            aria-label='Okno do tworzenia rezerwacji'\n            onClose={props.onClose}\n        >\n            <CreateReservationForm\n                roomId={props.roomId}\n                onCancel={props.onClose}\n            />\n\n        </GenericModal>\n    );\n}","import { Card, CardContent, CardHeader, CardMedia } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport RoomTableInfo from \"./RoomTableInfo\";\nimport React from \"react\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport { useRoomContext } from \"../RoomContext\";\nimport Loading from \"../../../../../shared/components/Loading\";\nimport CreateReservationModal from \"../../components/CreateReservationModal/CreateReservationModal\";\nimport { RoomEditForm } from \"../Forms\";\nimport FavouriteButton from \"../../components/FavouriteButton\";\nimport { FavType } from \"../../../../../models/Metadata\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport DatesFooter from \"../../components/DatesFooter\";\n\n\n\nexport default function RoomCard() {\n    const { room, deleteRoom, deleteRFIDTag } = useRoomContext();\n\n    const [deleteModalOpen, setDeleteModalOpen] = React.useState<boolean>(false);\n    const [editModalOpen, setEditModalOpen] = React.useState<boolean>(false);\n    const [createReservationModalOpen, setCreateReservationModalOpen] = React.useState<boolean>(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Zarezerwuj',\n            icon: <AddCircleIcon color='primary' />,\n            action: () => setCreateReservationModalOpen(true)\n        }, {\n            label: 'Edytuj',\n            action: () => setEditModalOpen(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Usuń',\n            action: () => setDeleteModalOpen(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    return (\n        !Boolean(room) ? <Loading /> :\n            <>\n                <DeleteModal\n                    objectName={room.name}\n                    open={deleteModalOpen}\n                    onClose={() => setDeleteModalOpen(false)}\n                    onSuccess={deleteRoom}\n                />\n\n                <RoomEditForm\n                    open={editModalOpen}\n                    onClose={() => setEditModalOpen(false)}\n                />\n\n                <CreateReservationModal\n                    roomId={room && room.id}\n                    open={createReservationModalOpen}\n                    onClose={() => setCreateReservationModalOpen(false)}\n                />\n\n                <Card elevation={0}>\n                    <CardHeader\n                        action={<MoreVertMenu options={options} />}\n                        title={\n                            <>\n                                {room.name}\n                                <FavouriteButton data={{\n                                    id: room.id,\n                                    name: room.name,\n                                    type: FavType.Room,\n                                    addressId: room.building.address,\n                                    buildingId: room.building.id\n                                }} />\n                            </>\n                        }\n                        subheader={<>\n                            {room.roomType}\n                        </>}\n                    />\n                    <CardMedia\n                        component=\"img\"\n                        height=\"350\"\n                        image={ImageService.getLink(room.image)}\n                        alt={room.name}\n                    />\n                    <CardContent>\n                        <RoomTableInfo room={room} deleteTag={deleteRFIDTag} />\n                        <br />\n                        <DatesFooter model={room} />\n                    </CardContent>\n                </Card>\n            </>\n    );\n}\n","import { RoomContextProvider } from \"./RoomContext\";\nimport React from \"react\";\nimport RoomOrBuildingChartTab from \"../components/RoomOrBuildingChartTab\";\nimport Grid from \"@mui/material/Grid\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport RoomCard from \"./components/RoomCard\";\n\n\n\nexport default function RoomPage() {\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        arr.push({ name: 'Statystyki', component: <RoomOrBuildingChartTab /> });\n        arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <RoomContextProvider>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item xs={12} md={5} lg={4}>\n                    <RoomCard />\n                </Grid>\n            </Grid>\n        </RoomContextProvider>\n    );\n}\n","import Service from \"./Service\";\n\n\nexport interface SettingsUpdateParams {\n    maxImageSize?: number,\n    defaultUserAccess?: number,\n    maxReservationTime?: number,\n    minReservationTime?: number,\n    reservationHistory?: number,\n    requestHistory?: number\n}\n\n\nclass SettingsService extends Service {\n\n    public getAll() {\n        return this.get('/configurations');\n    }\n\n    public update(data: SettingsUpdateParams) {\n        return this.patch('/configurations', data);\n    }\n}\n\nexport default new SettingsService();","import React from \"react\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport Settings from \"../../../../../models/Settings\";\nimport SettingsService, { SettingsUpdateParams } from \"../../../../../services/SettingsService\";\nimport SettingsContextValue from \"./SettingsContextValue\";\n\n\n\nexport const settingsContext: any = React.createContext(null);\n\n\ninterface SettingsContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function SettingsContextProvider(props: SettingsContextProviderProps) {\n    const notify = useNotification();\n\n    const [settings, setSettings] = React.useState<Settings>();\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await SettingsService.getAll();\n            setSettings(resp.data as Settings);\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n    }, [notify]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    const updateSettings = React.useCallback(async (data: SettingsUpdateParams) => {\n        try {\n            await SettingsService.update(data);\n            setSettings(old => ({\n                ...old,\n                ...data as Settings\n            }))\n            notify(\"Ustawienia zostały zaktualizowane\", 'success');\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false\n    }, [notify]);\n\n\n    if (!settings) return null;\n\n    return (\n        <settingsContext.Provider value={{\n            settings,\n            updateSettings\n        } as SettingsContextValue}>\n            {props.children}\n        </settingsContext.Provider>\n    );\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport { visuallyHidden } from '@mui/utils';\nimport { EndpointStatItem } from '../../../../../../models/Stats';\n\n\n\n\n\ninterface HeadCell {\n    disablePadding: boolean;\n    id: keyof EndpointStatItem;\n    label: string;\n    numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n    {\n        id: 'method',\n        numeric: false,\n        disablePadding: true,\n        label: 'Metoda',\n    },\n    {\n        id: 'generalEndpoint',\n        numeric: false,\n        disablePadding: false,\n        label: 'Ścieżka',\n    },\n    {\n        id: 'calls',\n        numeric: true,\n        disablePadding: false,\n        label: 'Liczba zapytań',\n    },\n    {\n        id: 'timeForEndpoint',\n        numeric: true,\n        disablePadding: false,\n        label: 'Całkowity czas',\n    },\n    {\n        id: 'avgTime',\n        numeric: true,\n        disablePadding: false,\n        label: 'Śr. czas wykonania',\n    },\n];\n\nexport type Order = 'asc' | 'desc';\n\n\ninterface EnhancedTableProps {\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof EndpointStatItem) => void;\n    order: Order;\n    orderBy: string;\n}\n\n\nexport default function EnhancedTableHead(props: EnhancedTableProps) {\n    const { order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property: keyof EndpointStatItem) => (event: React.MouseEvent<unknown>) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        padding={'normal'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport TablePagination from '@mui/material/TablePagination';\nimport { useCharts } from '../../../components/Charts';\nimport { EndpointChartsData, EndpointStatItem } from '../../../../../../models/Stats';\nimport EnhancedTableHead, { Order } from './EnhancedTableHead';\n\n\n\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (\n        a: { [key in Key]: number | string },\n        b: { [key in Key]: number | string },\n    ) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n\n\nexport default function SortableTable() {\n    const { chartsData } = useCharts<EndpointChartsData>();\n\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [page, setPage] = React.useState(0);\n\n    const [order, setOrder] = React.useState<Order>('asc');\n    const [orderBy, setOrderBy] = React.useState<keyof EndpointStatItem>('generalEndpoint');\n\n\n    const handleRequestSort = (\n        event: React.MouseEvent<unknown>,\n        property: keyof EndpointStatItem,\n    ) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n\n    return (\n        <>\n            <TableContainer>\n                <Table\n                    sx={{ minWidth: 550 }}\n                    aria-labelledby=\"Endpointy aplikacji\"\n                    size='medium'\n                >\n                    <EnhancedTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={handleRequestSort}\n\n                    />\n                    <TableBody>\n                        {chartsData.endpoints.slice().sort(getComparator(order, orderBy))\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, index) =>\n                                <TableRow\n                                    hover\n                                    key={index}\n                                >\n                                    <TableCell >{row.method}</TableCell>\n                                    <TableCell>{row.generalEndpoint}</TableCell>\n                                    <TableCell >{row.calls}</TableCell>\n                                    <TableCell >{Math.round(row.timeForEndpoint * 1000) / 1000}</TableCell>\n                                    <TableCell >{Math.round(row.avgTime * 1000) / 1000}</TableCell>\n                                </TableRow>\n                            )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={chartsData.endpoints.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </>\n    );\n}\n","import Box from '@mui/material/Box';\nimport TabHeadLine from '../../../../../../shared/components/TabHeadLine';\nimport { ChartsContext } from '../../../components/Charts/ChartsContext';\nimport SortableTable from './SortableTable';\n\n\n\nexport default function EndpointsStats() {\n\treturn (\n\t\t<Box sx={{ width: '100%' }}>\n\t\t\t<ChartsContext>\n\t\t\t\t<TabHeadLine\n\t\t\t\t\ttitle='Parametry endpointów'\n\t\t\t\t\tsubtitle=\"Wylistowane są wszystkie ścieżki na jakie aplikacja serwerowa dostaje zapytania od wszystkich aplikacji klienckich.\n\t\t\t\tParametry wydajnościowe dla każdej z nich mogą być pomocne w konfigurowaniu oraz planowaniu rozwoju aplikacji.\"\n\t\t\t\t/>\n\n\t\t\t\t<SortableTable />\n\t\t\t</ChartsContext>\n\t\t</Box>\n\t);\n}\n","import { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { SettingsUpdateParams } from \"../../../../../services/SettingsService\";\nimport AppLink from \"../../../../../shared/components/AppLink\";\nimport paths from \"../../../../../shared/path\";\nimport { useSettings } from \"../SettingsContext\";\n\n\ninterface FormFieldProps {\n    text: string | React.ReactNode,\n    name: string,\n    label: string,\n    onChange: (evt: React.ChangeEvent<HTMLInputElement>) => void,\n    value: string | number | boolean\n}\n\n\nfunction FormField(props: FormFieldProps) {\n    return (\n        <Box mr={1}>\n            <Typography variant='body2' >\n                {props.text}\n            </Typography>\n            <TextField\n                required\n                type='number'\n                margin='dense'\n                name={props.name}\n                id={`${props.label}-name`}\n                label={props.label}\n                value={props.value}\n                onChange={props.onChange}\n            />\n        </Box>\n    );\n}\n\n\n\nexport default function SettingsForm() {\n    const { settings, updateSettings } = useSettings();\n\n    const [data, setData] = React.useState<SettingsUpdateParams>({});\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        await updateSettings(data);\n        setData({});\n    }, [\n        data,\n        updateSettings,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: Number(event.target.value)\n        }));\n    }, []);\n\n\n    return (\n        <span>\n            <Stack spacing={3} component='form' onSubmit={handleSubmit}>\n                <Typography component='h2' variant='h5'>\n                    Formularz:\n                </Typography>\n\n                <span>\n                    <Typography component='h3' variant='h6' mb={1}>\n                        Ustawienia zdjęć\n                    </Typography>\n                    <FormField\n                        text={<>Maksymalny rozmiar zdjecia (podawany <b>w bajtach</b>) ładowanego przez użytkownika do aplikacji.</>}\n                        name='maxImageSize'\n                        label='max. rozmiar'\n                        value={data.maxImageSize ?? settings.maxImageSize}\n                        onChange={handleChange}\n                    />\n                </span>\n\n                <span>\n                    <Typography component='h3' variant='h6' mb={1}>\n                        Użytkownicy\n                    </Typography>\n                    <FormField\n                        text={<>Domyślny numer identyfikacyjny klasy deostępowej przypisywany dla każdego nowego użytkownika.\n                            <AppLink withIcon to={paths.ACCESS}>klasy dostępu</AppLink></>}\n                        name='defaultUserAccess'\n                        label='numer ID'\n                        value={data.defaultUserAccess ?? settings.defaultUserAccess}\n                        onChange={handleChange}\n                    />\n                </span>\n\n                <Grid container rowSpacing={2}>\n                    <Grid item xs={12}>\n                        <Typography component='h3' variant='h6'>\n                            Czas trwania rezerwacji:\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Maksymalny czas trwania rezerwacji <b>w minutach</b>.\n                                Stworzone wcześniej rezerwacje pozostaną niezmienione.</>}\n                            name='maxReservationTime'\n                            label='max. czas'\n                            value={data.maxReservationTime ?? settings.maxReservationTime}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Minimalny czas trwania rezerwacji <b>w minutach</b>.\n                                Stworzone wcześniej rezerwacje pozostaną niezmienione.</>}\n                            name='minReservationTime'\n                            label='min. czas'\n                            value={data.minReservationTime ?? settings.minReservationTime}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid container rowSpacing={2}>\n                    <Grid item xs={12}>\n                        <Typography component='h3' variant='h6'>\n                            Czas przechowywania danych:\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Ilość czasu <b>w dniach</b> po którym historia rezerwacji ma zostać usunięta.\n                                Zmiana tego parametru wpływa bezpośrednio na statystyki.</>}\n                            name='reservationHistory'\n                            label='Ilość dni'\n                            value={data.reservationHistory ?? settings.reservationHistory}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormField\n                            text={<>Ilość czasu <b>w dniach</b> po którym logi zostaną usunięte.</>}\n                            name='requestHistory'\n                            label='Ilość dni'\n                            value={data.requestHistory ?? settings.requestHistory}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n                <Stack direction='row' justifyContent=\"space-around\" mt={1.5}>\n                    <Button\n                        color='error'\n                    >\n                        Przywróć\n                    </Button>\n                    <Button\n                        color='success'\n                        type='submit'\n                    >\n                        Zatwierdź\n                    </Button>\n                </Stack>\n            </Stack>\n        </span>\n    );\n}","import React from \"react\";\nimport { settingsContext } from \"./SettingsContextProvider\";\nimport SettingsContextValue from \"./SettingsContextValue\";\n\nexport default function useSettings() {\n    return React.useContext(settingsContext) as SettingsContextValue;\n}","import { Stack, Typography } from \"@mui/material\";\nimport SettingsForm from \"./SettingsForm\";\n\n\n\nexport default function SettingsMain() {\n    return (\n        <Stack spacing={3}>\n            <span>\n                <Typography component='h1' variant='h3' color='primary.dark'>\n                    Ustawienia platformy\n                </Typography>\n                <Typography variant='body1' color=\"text.secondary\" mt=\"5px\">\n                    Dostępne tutaj opcje wpływają znacząco na funkcjonowanie całej platformy. <br />\n                    Postępuj racjonalnie podczas modyfikacji znajdujących się tutaj parametrów.\n                </Typography>\n            </span>\n\n            <SettingsForm />\n\n        </Stack>\n    );\n}","import React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport { SettingsContext } from \"./SettingsContext\";\nimport EndpointsStats from \"./components/EndpointsStats\";\nimport SettingsMain from \"./components/SettingsMain\";\n\n\n\nexport default function SettingsPage() {\n\n\n    const pages = React.useMemo(() => {\n        return [\n            { name: 'Ustawienia', component: < SettingsMain/> },\n            { name: 'Logi', component: <GenericLogsTab /> },\n            { name: 'Endpointy', component: <EndpointsStats /> }\n        ];\n    }, []);\n\n\n    return (\n        <SettingsContext>\n            <SwipeableTabs tabs={pages} />\n        </SettingsContext>\n    );\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useSession from \"../../../../../auth/useSession\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { DetailedUser } from \"../../../../../models/User\";\nimport UserService, { UpdateUserParams, UserViewParams } from \"../../../../../services/UserService\";\nimport paths from \"../../../../../shared/path\";\n\n\n\nexport const userContext: any = React.createContext(null);\n\n\ninterface UserContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\n\nexport default function UserContextProvider(props: UserContextProviderProps) {\n    const urlParams = useParams<UserViewParams>();\n    const notify = useNotification();\n    const session = useSession();\n\n    const [user, setUser] = React.useState<DetailedUser>();\n\n\n    React.useLayoutEffect(() => {\n        let params = (urlParams.userId === 'me' && session.user) ? { userId: session.user.id.toString() } : urlParams;\n        UserService.setPath(params);\n    }, [\n        urlParams,\n        session\n    ]);\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await UserService.getCurrentOne();\n            setUser(resp.data as DetailedUser);\n        } catch (err: any) {\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urlParams]);\n\n\n    React.useEffect(() => {\n        load()\n    }, [\n        load\n    ]);\n\n\n    const deleteUser = React.useCallback(async () => {\n        try {\n            await UserService.remove();\n\n            let action = (): React.ReactNode => null\n\n            if (session && session.user?.id === user?.id) {\n                session.logout();\n            } else {\n                action = () => <Redirect to={paths.USERS} />\n            }\n\n            notify('Użytkownik został usunięty', 'success', action);\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [\n        notify,\n        session,\n        user?.id,\n    ]);\n\n\n    const updateUser = React.useCallback(async (data: UpdateUserParams) => {\n        try {\n            if (await UserService.update(data)) {\n                setUser(old => {\n                    return { ...old, ...data as DetailedUser };\n                });\n\n                notify('Użytkownik został zaktualizowany', 'success');\n            }\n            return true;\n        } catch (err: any) {\n            notify(err.description, 'error');\n        }\n        return false;\n    }, [notify]);\n\n\n    if (!user) return null;\n\n    return (\n        <userContext.Provider value={{\n            user,\n            deleteUser,\n            updateUser,\n        }}>\n            {props.children}\n        </userContext.Provider>\n    );\n}","import React from \"react\";\nimport { userContext } from \"./UserContextProvider\";\nimport UserContextValue from \"./UserContextValue\";\n\n\n\nexport default function useUser() {\n    return React.useContext(userContext) as UserContextValue;\n}\n","\n\nexport interface ButtonStatus {\n    success: boolean | null,\n    message: string,\n}\n\ninterface Action {\n    statusCode: number | string,\n    payload?: any\n}\n\nexport const initialResult = {\n    success: null,\n    message: ''\n}\n\nexport function statusReducer(state: ButtonStatus, action: Action): ButtonStatus {\n    switch (action.statusCode) {\n        case 200:\n        case 201:\n            return {\n                success: true,\n                message: \"Kod został wysłany na podany email\"\n            };\n        case 403:\n        case 401:\n        case 400:\n            return {\n                success: false,\n                message: action.payload\n            };\n        case 404:\n            return {\n                success: false,\n                message: \"Taki użytkownik nie istnieje.\"\n            };\n        case 422:\n            return {\n                success: false,\n                message: \"Adres email jest niepoprawny\"\n            };\n        case \"NO_ADDRESS\":\n            return {\n                success: false,\n                message: \"Musisz podać adres email\"\n            };\n        default:\n            return {\n                success: false,\n                message: action.payload\n            };\n            // throw new Error();\n    }\n}","import { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport SyncIcon from '@mui/icons-material/Sync';\nimport React from \"react\";\nimport UserService from \"../../../services/UserService\";\nimport { statusReducer } from \"./statusReducer\";\n\n\ninterface UniqueCodeButtonProps {\n    email: string,\n    text: string\n}\n\n\nfunction resolveColor(value: null | boolean): string {\n    if (value === null) return \"inherit\";\n    if (value === true) return \"green\";\n    return \"error\";\n}\n\n\nexport default function UniqueCodeButton(props: UniqueCodeButtonProps) {\n    const [result, dispatchResult] = React.useReducer(statusReducer, {\n        success: null,\n        message: props.text\n    });\n\n    const handleSubmit = async () => {\n        if (!props.email) {\n            dispatchResult({ statusCode: \"NO_ADDRESS\" });\n        }\n        try {\n            const resp = await UserService.generateKey(props.email);\n            dispatchResult(resp);\n\n        } catch (err: any) {\n            dispatchResult({\n                statusCode: err.code,\n                payload: err.description\n            });\n        }\n    };\n\n    return (\n        <Box\n            component=\"div\"\n            display=\"flex\"\n        >\n            <Button sx={{\n                bgcolor: \"primary.50\",\n                \"&:hover\": {\n                    bgcolor: \"primary.100\",\n                }\n            }}\n                onClick={handleSubmit} >\n                <SyncIcon fontSize=\"large\" />\n            </Button>\n\n            <Box\n                sx={{\n                    display: \"flex\",\n                    alignItems: 'center',\n                    ml: 1\n                }}\n            >\n                <Typography\n                    variant=\"body2\"\n                    component=\"p\"\n                    color={resolveColor(result.success)}\n                >\n                    {result.message}\n                </Typography>\n            </Box>\n\n        </Box>\n    );\n}","import { Typography } from \"@mui/material\";\n\n\ninterface StepProps {\n    title: string,\n    text?:string,\n    children: React.ReactNode | React.ReactNodeArray\n}\n\nexport default function FormStep(props: StepProps) {\n    return (\n        <>\n            <Typography variant=\"h5\" sx={{ mt: 3 }}>\n                {props.title}\n            </Typography>\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                {props.text}\n            </Typography>\n            {props.children}\n        </>\n    );\n}","import { Button, Grid, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport UniqueCodeButton from \"../../../../shared/components/UniqueCodeButton\";\nimport React from \"react\";\nimport FormStep from \"./FormStep\";\nimport UserService, { ChangePasswordData } from \"../../../../services/UserService\";\nimport { Redirect } from 'react-router-dom';\nimport paths from \"../../../../shared/path\";\nimport useNotification from \"../../../../contexts/NotificationContext/useNotification\";\nimport AppLink from \"../../../../shared/components/AppLink\";\n\n\ninterface FormProps {\n    onSuccess?: () => void\n}\n\nexport default function Form(props: FormProps) {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<ChangePasswordData>({\n        email: localStorage.getItem('email')?.toString() ?? '',\n        newPassword: '',\n        code: ''\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        try {\n            await UserService.changePassword(data);\n\n            notify(\"Hasło zostało zmienione\", 'success',\n                () => setTimeout(() => {\n                    if (props.onSuccess) props.onSuccess();\n                    return <Redirect to={paths.LOGIN} />\n                }, 2000)\n            );\n        } catch (err: any) {\n            let message = err.description;\n            if (err.code === 404) message = \"Taki użytkownik nie istnieje\";\n\n            notify(message, 'error');\n        }\n    }, [\n        data,\n        notify,\n        props\n    ]);\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <FormStep\n                title=\"1. Wygeneruj Kod\"\n                text=\"Podaj swój aders email i naciśnij przycisk by otrzymać email i kodem.\"\n            >\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Adres email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    value={data.email}\n                    onChange={onChange}\n                />\n                <UniqueCodeButton\n                    text=\"Kliknij przycisk by otrzymać kod.\"\n                    email={data.email}\n                />\n            </FormStep>\n            <FormStep\n                title=\"2. Podaj nowe hasło i kod\"\n                text=\"Podaj nowe hasło i kod który otrzymałeś (jeśli nie, powtórz krok nr 1)\"\n            >\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"newPassword\"\n                    label=\"Hasło\"\n                    type=\"password\"\n                    id=\"password\"\n                    value={data.newPassword}\n                    onChange={onChange}\n                    autoComplete=\"current-password\"\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"code\"\n                    label=\"Kod\"\n                    type=\"text\"\n                    id=\"code\"\n                    value={data.code}\n                    onChange={onChange}\n                    autoComplete=\"email-code\"\n                />\n            </FormStep>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                3. Zmień Hasło\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <AppLink to={paths.LOGIN}>\n                        Hasło zmienione? Zaloguj się!\n                    </AppLink>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import React from \"react\";\nimport useSession from \"../../../../../auth/useSession\";\nimport GenericModal from \"../../components/GenericModal\";\nimport PasswordChangeForm from '../../../public/ChangePassword/Form';\n\ninterface EditUserFormProps {\n    open: boolean,\n    onClose: () => void\n}\n\nexport default function PasswordChangeModal({\n    open,\n    onClose\n}: EditUserFormProps) {\n    const { logout } = useSession();\n\n    const close = React.useCallback(() => {\n        onClose();\n\n    }, [onClose]);\n\n    const onSuccess = React.useCallback(() => {\n        logout();\n    }, [logout]);\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            sx={{\n                maxWidth: '450px'\n            }}\n        >\n            <PasswordChangeForm onSuccess={onSuccess} />\n        </GenericModal>\n    )\n}","import Divider from \"@mui/material/Divider\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\nimport { DetailedUser } from \"../../../../../models/User\";\nimport { UpdateUserParams } from \"../../../../../services/UserService\";\nimport FormGridContainer from \"../../../../../shared/components/FormGridContainer\";\nimport GenericModal from \"../../components/GenericModal\";\nimport ImageUploadField from \"../../components/ImageUploadField\";\nimport { useUser } from \"../UserContext\";\n\n\n\ninterface EditUserFormProps {\n    open: boolean,\n    onClose: () => void,\n    user: DetailedUser,\n}\n\n\nexport default function EditUserForm({\n    open,\n    onClose,\n    user,\n}: EditUserFormProps) {\n    const { updateUser } = useUser();\n\n    const [data, setData] = React.useState<UpdateUserParams>({});\n\n\n    const close = React.useCallback(() => {\n        onClose();\n        setData({});\n    }, [\n        onClose\n    ]);\n\n\n    const onSubmit = React.useCallback(async () => {\n        if (await updateUser(data)) {\n            close();\n        }\n    }, [\n        data,\n        close,\n        updateUser,\n    ]);\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setData((old) => ({\n            ...old,\n            [event.target.name]: event.target.value\n        }));\n    }, []);\n\n\n    return (\n        <GenericModal\n            open={open}\n            onClose={close}\n            sx={{\n                maxWidth: '450px'\n            }}\n        >\n            <Stack spacing={3}>\n\n                <ImageUploadField image={user.image} />\n\n                <Divider />\n\n                <FormGridContainer\n                    title=\"Edycja użytkownika\"\n                    subtitle=\"Zmień dane użytkownika. Zmiany w całej aplikacji będą widoczne po ponownym przeładowaniu aplikacji.\"\n                    onSubmit={onSubmit}\n                    onCancel={close}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Imię\"\n                            name=\"name\"\n                            autoFocus\n                            value={data.name ?? user.name}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"surname\"\n                            label=\"Nazwisko\"\n                            name=\"surname\"\n                            value={data.surname ?? user.surname}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                </FormGridContainer>\n            </Stack>\n        </GenericModal>\n    )\n}","import React from \"react\";\nimport MoreVertMenu from \"../../components/MoreVertMenu\";\nimport { useUser } from \"../UserContext\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ChangePasswordForm, UserEditForm } from \"../Forms\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport ImageService from \"../../../../../services/ImageService\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { displayDate } from \"../../../../../shared/utils\";\nimport { Link, Typography } from \"@mui/material\";\nimport paths from \"../../../../../shared/path\";\nimport AppLink from \"../../../../../shared/components/AppLink\";\nimport DatesFooter from \"../../components/DatesFooter\";\n\n\n\nexport default function UserCard() {\n    const { user, deleteUser } = useUser();\n\n    const [editModal, setEditModal] = React.useState(false);\n    const [passModal, setPassModal] = React.useState(false);\n    const [deleteModal, setDeleteModal] = React.useState(false);\n\n\n    const options = React.useMemo(() => [\n        {\n            label: 'Edytuj',\n            action: () => setEditModal(true),\n            icon: <EditIcon color='success' />\n        }, {\n            label: 'Zmień hasło',\n            action: () => setPassModal(true),\n            icon: <PasswordIcon color='warning' />\n        }, {\n            label: 'Usuń konto',\n            action: () => setDeleteModal(true),\n            icon: <DeleteIcon color='error' />\n        }\n    ], []);\n\n\n    return (\n        <>\n\n            <DeleteModal\n                objectName={`${user.email}`}\n                open={deleteModal}\n                onClose={() => setDeleteModal(false)}\n                onSuccess={deleteUser}\n            />\n\n            <UserEditForm\n                user={user}\n                open={editModal}\n                onClose={() => setEditModal(false)}\n            />\n\n            <ChangePasswordForm\n                open={passModal}\n                onClose={() => setPassModal(false)}\n            />\n\n\n            <Card elevation={0}>\n                <CardHeader\n                    action={<MoreVertMenu options={options} />}\n                    title={<>{user.name} {user.surname}</>}\n                    subheader={<Link href={`mailto:${user.email}`}>\n                        {user.email}\n                    </Link>}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"350\"\n                    image={ImageService.getLink(user.image)}\n                    alt={user.email}\n                />\n                <CardContent>\n                    <Typography color='text.secondary' variant=\"subtitle1\">\n                        Ostatnio aktywny: {displayDate(user.lastActivity)}<br />\n                        Klasa dostępu: {<AppLink to={paths.ACCESS}>{user.access.name}</AppLink>}\n                    </Typography>\n                    <br />\n                    <DatesFooter model={user} />\n                </CardContent>\n            </Card>\n        </>\n    );\n}","import { UserChartsData } from \"../../../../../models/Stats\";\nimport { Chart, ChartSection, ChartsTab, useCharts } from \"../../components/Charts\";\nimport MonthlyChartsSection from \"../../components/MonthlyChartsSection\";\nimport WeeklyChartsSection from \"../../components/WeeklyChartsSection\";\n\n\nexport default function UserCharts() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n\nfunction ActualLoader() {\n    const { chartsData } = useCharts<UserChartsData>();\n\n    return (\n        <>\n            <ChartSection defaultOpen title='Rezerwowane Sale'>\n                <Chart\n                    fullWidth\n                    title='Ilość rezerwacji w rezerwowanych salach'\n                    data={chartsData.reservedRooms}\n                    xKey='roomName'\n                    y={[\n                        { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title=\"Średnie czasy rezerwacji\"\n                    data={chartsData.reservedRooms}\n                    xKey='roomName'\n                    y={[\n                        { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                        { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                    ]}\n                />\n                <Chart\n                    fullWidth\n                    title=\"Czas wszystkich rezerwacji w danej sali\"\n                    data={chartsData.reservedRooms}\n                    xKey='roomName'\n                    y={[\n                        { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                    ]}\n                />\n            </ChartSection>\n\n            <WeeklyChartsSection data={chartsData.weekly} />\n\n            <MonthlyChartsSection data={chartsData.monthly} />\n        </>\n    );\n}","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\nimport GenericLogsTab from \"../components/GenericLogsTab\";\nimport GenericReservationsTab from \"../components/GenericReservationsTab\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport UserCard from \"./components/UserCard\";\nimport UserCharts from \"./components/UserCharts\";\n\n\nimport { UserContext } from \"./UserContext\";\n\n\n\nexport default function UserPage() {\n\n\n    const pages = React.useMemo(() => {\n        let arr: any = [];\n        arr.push({ name: 'Rezerwacje', component: <GenericReservationsTab /> });\n        arr.push({ name: 'Statystyki', component: <UserCharts /> });\n        arr.push({ name: 'Logi', component: <GenericLogsTab /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <UserContext>\n            <Grid container spacing={2} flexWrap='wrap-reverse'>\n                <Grid item xs={12} md={7} lg={8}>\n                    <SwipeableTabs tabs={pages} />\n                </Grid>\n                <Grid item xs={12} md={5} lg={4}>\n                    <UserCard />\n                </Grid>\n            </Grid>\n        </UserContext>\n    );\n}","import React from \"react\";\nimport useNotification from \"../../../../../contexts/NotificationContext/useNotification\";\nimport { useQueryParams } from \"../../../../../contexts/QueryParamsContext\";\nimport User from \"../../../../../models/User\";\nimport UserService, { UserQueryParams } from \"../../../../../services/UserService\";\nimport UsersContextValue from \"./UsersContextValue\";\n\n\n\nexport const usersContext: any = React.createContext(null);\n\n\ninterface UsersContextProviderProps {\n    children: React.ReactNode | React.ReactNode[]\n}\n\nexport default function UsersContextProvider(props: UsersContextProviderProps) {\n    const notify = useNotification();\n    const { queryParams, setQueryParams } = useQueryParams<UserQueryParams>();\n\n    const [users, setUsers] = React.useState<User[]>();\n\n\n    const load = React.useCallback(async () => {\n        try {\n            const resp = await UserService.getUsers(queryParams);\n            setQueryParams(old => ({\n                ...old,\n                pagesCount: resp.pagination?.pagesCount\n            }));\n            setUsers(resp.data as User[]);\n        } catch (err: any) {\n            notify(err.description, 'error');\n            setUsers([]);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        notify,\n        queryParams.itemsOnPage,\n        queryParams.currentPage,\n        queryParams.search,\n        queryParams.deleted,\n        queryParams.activated\n    ]);\n\n\n    React.useEffect(() => {\n        load();\n    }, [load]);\n\n\n    if (!users) return null;\n\n    return (\n        <usersContext.Provider value={{\n            users,\n        } as UsersContextValue}>\n            {props.children}\n        </usersContext.Provider>\n    )\n}","import { FormControlLabel, Grid, Switch } from \"@mui/material\";\nimport { useQueryParams } from \"../../../../../../contexts/QueryParamsContext\";\nimport { UserQueryParams } from \"../../../../../../services/UserService\";\nimport React from \"react\";\nimport LazyInput from \"../../../components/LazyInput\";\n\n\nexport default function SearchBar() {\n    const { setQueryParams, queryParams } = useQueryParams<UserQueryParams>();\n\n\n    const handleChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        let value: string | number | boolean = event.target.value;\n\n        switch (event.target.name) {\n            case \"deleted\":\n            case \"activated\":\n                value = Boolean(event.target.checked);\n                break;\n            case 'search':\n                break;\n            default:\n                break;\n        }\n\n        setQueryParams((old: UserQueryParams) => ({\n            ...old,\n            [event.target.name]: value\n        }));\n    }, [setQueryParams]);\n\n\n    return (\n        <Grid container>\n            <Grid item xs={12} md={8}>\n                <LazyInput\n                    label='wyszukaj'\n                    name='search'\n                    value={queryParams.search ?? ''}\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} md={4} display='flex' justifyContent='start' flexWrap='wrap' color='text.secondary'>\n                <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch id=\"aktywni-użytkownicy\" name=\"activated\"\n                        inputProps={{ 'aria-label': 'aktywni-użytkownicy' }}\n                        onChange={handleChange}\n                        checked={queryParams.activated}\n                    />}\n                    label=\"Aktywne konta\"\n                />\n                <FormControlLabel\n                    labelPlacement=\"start\"\n                    control={<Switch id=\"unsunięci-użytkownicy\" name=\"deleted\"\n                        inputProps={{ 'aria-label': 'unsunięci-użytkownicy' }}\n                        onChange={handleChange}\n                        checked={queryParams.deleted}\n                    />}\n                    label=\"Usunięte konta\"\n                />\n            </Grid>\n        </Grid>\n    );\n}","import Avatar from \"@mui/material/Avatar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport User from \"../../../../../../../models/User\";\nimport ImageService from \"../../../../../../../services/ImageService\";\nimport AppLink from \"../../../../../../../shared/components/AppLink\";\nimport { dynamicPaths } from \"../../../../../../../shared/path\";\nimport { displayDate } from \"../../../../../../../shared/utils\";\n\n\n\ninterface UserListItemProps {\n    user: User\n}\n\nexport default function UserListItem({ user }: UserListItemProps) {\n    return (\n        <TableRow >\n            <TableCell align=\"left\">\n                <ListItem component='div'>\n                    <ListItemAvatar\n                        title={user.email}\n                        aria-label={user.email}\n                    >\n                        <AppLink to={dynamicPaths.toUser(user.id)}>\n                            <Avatar src={ImageService.getLink(user.image)} />\n                        </AppLink>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={<AppLink to={dynamicPaths.toUser(user.id)}>\n                            {user.name} {user.surname}\n                        </AppLink>\n                        }\n                        secondary={user.email}\n                    />\n                </ListItem>\n            </TableCell>\n            <TableCell sx={{\n                width: 'fit-content'\n            }}>\n                {displayDate(user.lastActivity)}\n            </TableCell>\n        </TableRow>\n    );\n}","import Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport { useUsers } from \"../../../UsersContext\";\nimport UserListItem from \"./UserListItem\";\n\n\n\nexport default function UsersList() {\n    const { users } = useUsers();\n\n    return (\n        <TableContainer component={Box}>\n            <Table aria-label=\"Tabela rezerwacji\" size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Użytkownicy</TableCell>\n                        <TableCell>Aktywność</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        users.length === 0 && <TableRow>\n                            <TableCell colSpan={12}>\n                                <Typography textAlign='center'>\n                                    Brak użytkowników spełniających kryteria\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    }\n                    {\n                        users.map((item, index) => <UserListItem key={index} user={item} />)\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\n","import React from \"react\";\nimport { UsersContextValue } from \".\";\nimport { usersContext } from \"./UsersContextProvider\";\n\n\n\nexport default function useUsers(){\n    return React.useContext(usersContext) as UsersContextValue\n}","import { Stack } from \"@mui/material\";\nimport TabHeadLine from \"../../../../../../shared/components/TabHeadLine\";\nimport ListPagination from \"../../../components/ListPagination\";\nimport SearchBar from \"./SearchBar\";\nimport UsersList from \"./UsersList\";\n\n\n\nexport default function UsersView() {\n    return (\n        <Stack spacing={3}>\n            <TabHeadLine\n                title='Lista użytkowników'\n                subtitle='Wyszukuj użytkowników według podanych kryteriów.'\n            />\n\n            <SearchBar />\n\n            <UsersList />\n\n            <ListPagination />\n        </Stack>\n    );\n}","import { AllUsersChartsData } from \"../../../../../models/Stats\";\nimport { Chart, ChartSection, ChartsTab, useCharts } from \"../../components/Charts\";\n\n\n\nexport default function UsersCharts() {\n    return (\n        <ChartsTab>\n            <ActualLoader />\n        </ChartsTab>\n    );\n}\n\n\nfunction ActualLoader() {\n    const { chartsData } = useCharts<AllUsersChartsData>();\n\n    return (\n        <ChartSection defaultOpen title='Statystyki użytkowników'>\n            <Chart\n                fullWidth={chartsData.users.length >= 6}\n                title='Ilość rezerwacji na użytkownika'\n                data={chartsData.users}\n                xKey='email'\n                y={[\n                    { label: 'Ilość rezerwacji', key: 'reservationsCount' }\n                ]}\n            />\n            <Chart\n                fullWidth={chartsData.users.length >= 6}\n                title=\"Czas wszystkich reserwacji w dany dzień\"\n                data={chartsData.users}\n                xKey='email'\n                y={[\n                    { label: 'Czas całkowity', key: 'allTimeMinutes' },\n                ]}\n            />\n            <Chart\n                fullWidth\n                title=\"Średnie czasy rezerwacji\"\n                data={chartsData.users}\n                xKey='email'\n                y={[\n                    { label: 'Średni planowany czas', key: 'avgPlannedTimeMinutes' },\n                    { label: 'Średni faktyczny czas', key: 'avgActualTimeMinutes' },\n                ]}\n            />\n        </ChartSection>\n    );\n}","import { QueryParamsContext } from \"../../../../contexts/QueryParamsContext\";\nimport { UserQueryParams } from \"../../../../services/UserService\";\nimport { UsersContext } from \"./UsersContext\";\nimport React from \"react\";\nimport SwipeableTabs from \"../components/SwipeableTabs/SwipeableTabs\";\nimport UsersView from \"./components/UsersView\";\nimport UsersCharts from \"./components/UsersCharts\";\n\n\n\nexport default function UsersPage() {\n\n    const pages = React.useMemo(() => {\n        let arr = [];\n        arr.push({ name: 'Użytkownicy', component: <UsersView /> });\n        arr.push({ name: 'Statystyki', component: <UsersCharts /> });\n\n        return arr;\n    }, []);\n\n\n    return (\n        <QueryParamsContext\n            name=\"users-query-params\"\n            default={{\n                deleted: false,\n                activated: true,\n                search: '',\n                itemsOnPage: 10,\n                currentPage: 1\n            } as UserQueryParams}\n        >\n            <UsersContext>\n                <SwipeableTabs tabs={pages} />\n            </UsersContext>\n        </QueryParamsContext>\n    );\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport paths from \"../../../shared/path\";\nimport AccessPage from \"./AccessPage\";\nimport AddressPage from \"./AddressPage\";\nimport BuildingPage from \"./BuildingPage\";\nimport HomePage from \"./HomePage\";\nimport RoomPage from \"./RoomPage\";\nimport SettingsPage from \"./SettingsPage\";\nimport UserPage from \"./UserPage\";\nimport UsersPage from \"./UsersPage\";\n\n\n\nexport default function ProtectedPages() {\n\n    return (\n        <Switch>\n            <Route path={paths.ROOM} component={RoomPage} />\n            <Route path={paths.BUILDING} component={BuildingPage} />\n            <Route path={paths.ADDRESS} component={AddressPage} />\n\n            <Route path={paths.SETTINGS} component={SettingsPage} />\n            <Route path={paths.ACCESS} component={AccessPage} />\n            <Route path={paths.USER} component={UserPage} />\n            <Route path={paths.USERS} component={UsersPage} />\n            <Route path={paths.HOME} component={HomePage}/>\n\n            <Route path={paths.INFRASTRUCTURE}>\n                Zasoby\n            </Route>\n            <Route path={paths.HOME + '/*'}>\n                <Redirect to={paths.HOME} />\n            </Route>\n        </Switch>\n    );\n}","import { Avatar, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\n\ninterface FormPageProps {\n    children: React.ReactNode | React.ReactNodeArray,\n    title: string,\n    icon: React.ReactNode\n}\n\n\nexport default function FormPage(props: FormPageProps) {\n    return (\n        <Container component=\"div\" maxWidth=\"xs\">\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    backgroundColor: 'background.paper',\n                    padding: '35px',\n                    borderRadius: '10px'\n                }}\n            >\n                <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n                    {props.icon}\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {props.title}\n                </Typography>\n                {props.children}\n            </Box>\n        </Container>\n    );\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { Link as ReactRouterLink, Redirect } from 'react-router-dom';\nimport paths from '../../../../shared/path';\nimport UserService, { ActivationData } from '../../../../services/UserService';\nimport UniqueCodeButton from '../../../../shared/components/UniqueCodeButton';\nimport useNotification from '../../../../contexts/NotificationContext/useNotification';\n\n\n\nexport default function Form() {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<ActivationData>({\n        email: localStorage.getItem('email')?.toString() ?? '',\n        password: '',\n        code: ''\n    })\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        try {\n            await UserService.activate(data);\n            notify(\"Twoje konto zostało aktywowane\", 'success',\n                () => setTimeout(() => <Redirect to={paths.LOGIN} />, 2000)\n            );\n        } catch (err: any) {\n            let message = err.description;\n            if (err.code === 404) message = \"Taki użytkownik nie istnieje\";\n\n            notify(message, 'error');\n        }\n    }, [notify, data]);\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }))\n    }, []);\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Adress Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={data.email}\n                onChange={onChange}\n            />\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Hasło\"\n                type=\"password\"\n                id=\"password\"\n                value={data.password}\n                onChange={onChange}\n                autoComplete=\"current-password\"\n            />\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"code\"\n                label=\"Kod\"\n                type=\"text\"\n                id=\"code\"\n                value={data.code}\n                onChange={onChange}\n                autoComplete=\"email-code\"\n            />\n            <UniqueCodeButton\n                email={data.email}\n                text=\"Jeżeli nie otrzymałeś kodu mailem, naciśnij przycisk.\"\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                Aktywuj\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <Link component={ReactRouterLink} to={paths.LOGIN} variant=\"body2\" >\n                        Masz już konto? Zaloguj się!\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import FormPage from \"../FormPage\";\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport Form from \"./Form\";\n\n\nexport default function ActivationPage(){ \n    return(\n        <FormPage\n        title='Aktywacja konta'\n        icon={<LockOpenIcon />}\n    >\n        <Form/>\n    </FormPage>\n    );\n}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport useSession from '../../../../auth/useSession';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { LoginFormData } from '../../../../services/AuthService';\nimport paths from '../../../../shared/path';\n\n\n\nexport default function Form() {\n    const { login } = useSession();\n\n    const [remember, setRemember] = React.useState<boolean>(true);\n    const [data, setData] = React.useState<LoginFormData>({\n        email: localStorage.getItem('email')?.toString() ?? '',\n        password: '',\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback((event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        if (remember) localStorage.setItem('email', data.email);\n        login(data);\n    }, [data, login, remember]);\n\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Adres Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={data.email}\n                onChange={onChange}\n            />\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Hasło\"\n                type=\"password\"\n                id=\"password\"\n                value={data.password}\n                onChange={onChange}\n                autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n                control={<Checkbox\n                    onChange={() => setRemember(!remember)}\n                    name=\"remember\"\n                    checked={remember}\n                    color=\"primary\"\n                />}\n                label=\"Zapamiętaj mnie\"\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                Zaloguj\n            </Button>\n            <Grid container>\n                <Grid item xs>\n                    <Link component={ReactRouterLink} to={paths.REMIND_PASSWORD} variant=\"body2\">\n                        Zapomniałeś hasła?\n                    </Link>\n                </Grid>\n                <Grid item >\n                    <Link component={ReactRouterLink} to={paths.REGISTER} variant=\"body2\">\n                        Zarejestruj się!\n                    </Link>\n                </Grid>\n                <Grid item xs={12}>\n                    <Link component={ReactRouterLink} to={paths.ACTIVATE} variant=\"body2\">\n                        Aktywuj konto\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import FormPage from \"../FormPage\";\nimport Form from \"./Form\";\nimport LoginIcon from '@mui/icons-material/Login';\n\n\n\nexport default function Login() {\n    return (\n        <FormPage\n            title='Logowanie'\n            icon={<LoginIcon />}\n        >\n            <Form />\n        </FormPage>\n    );\n}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { Link as ReactRouterLink, Redirect } from 'react-router-dom';\nimport useNotification from '../../../../contexts/NotificationContext/useNotification';\nimport UserService, { RegisterUserData } from '../../../../services/UserService';\nimport paths from '../../../../shared/path';\n\n\nexport default function Form() {\n    const notify = useNotification();\n\n    const [data, setData] = React.useState<RegisterUserData>({\n        email: \"\",\n        password: \"\",\n        name: \"\",\n        surname: \"\"\n    });\n\n\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setData(old => ({ ...old, [e.target.name]: e.target.value }));\n    }, []);\n\n\n    const handleSubmit = React.useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        try {\n            await UserService.register(data);\n            notify(\"Zarejestrowano\", 'success', () => <Redirect to={paths.ACTIVATE} />);\n        } catch (err: any) {\n            let message = err.description;\n            // if (err.code === 422) message = \"Wprowadzono nieprawidłowe dane\";\n\n            notify(message, 'error');\n        }\n    }, [data, notify]);\n\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        autoComplete=\"given-name\"\n                        name=\"name\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Imię\"\n                        autoFocus\n                        value={data.name}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"surname\"\n                        label=\"Nazwisko\"\n                        name=\"surname\"\n                        autoComplete=\"family-name\"\n                        value={data.surname}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Adres Email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        value={data.email}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Hasło\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"new-password\"\n                        value={data.password}\n                        onChange={onChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <FormControlLabel\n                        control={<Checkbox required value=\"allowExtraEmails\" color=\"primary\" />}\n                        label=\"Akceptuję warunki\"\n                    />\n                </Grid>\n            </Grid>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                Załóż konto!\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <Link component={ReactRouterLink} to={paths.LOGIN} variant=\"body2\" >\n                        Masz już konto? Zaloguj się!\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}","import FormPage from \"../FormPage\";\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport Form from \"./Form\";\n\n\nexport default function Register() {\n    return (\n        <FormPage\n            title='Rejestracja'\n            icon={<AccountCircleIcon />}\n        >\n            <Form />\n        </FormPage>\n    );\n}","import FormPage from \"../FormPage\";\nimport RemindPassowordForm from \"./Form\";\nimport AppRegistrationIcon from '@mui/icons-material/AppRegistration';\n\n\n\nexport default function ChangePassword() {\n    return (\n        <FormPage\n            title=\"Zmiana Hasła\"\n            icon={<AppRegistrationIcon />}\n        >\n            <RemindPassowordForm />\n        </FormPage>\n    );\n}","\n\nexport default function Welcome(){\n    return(\n        <>\n            Welcome page\n        </>\n    );\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport paths from \"../../../shared/path\";\n\nimport Activation from \"./Activation\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ChangePassword from \"./ChangePassword\";\nimport Welcome from \"./Welcome\";\n\n\nexport default function PublicPages() {\n\n    return (\n        <Switch>\n            <Route path={paths.LOGIN} component={Login} />\n            <Route path={paths.REGISTER} component={Register} />\n            <Route path={paths.ACTIVATE} component={Activation} />\n            <Route path={paths.REMIND_PASSWORD} component={ChangePassword} />\n            <Route path={paths.PUBLIC} component={Welcome} />\n\n            <Route path=\"*\">\n                <Redirect to={paths.PUBLIC} />\n            </Route>\n        </Switch>\n    );\n}","import { Box } from '@mui/system';\n\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport paths from '../../shared/path';\n\nimport ProtectedPages from './protected';\nimport PublicPages from './public';\n\n\nconst tabStyle = {\n    minHeight: \"80vh\",\n    padding: \"1.5vh 0px\"\n}\n\n\nexport default function Tabs() {\n    return (\n        <Box sx={tabStyle}>\n            <Switch>\n                <Route path={paths.HOME} component={ProtectedPages} />\n                <Route path={paths.PUBLIC} component={PublicPages} />\n                <Route path={paths.FAQ}>\n                    Częste pytania i odpowiedzi FAQ\n                </Route>\n                <Route path='*'> \n                    <Redirect to={paths.PUBLIC} />\n                </Route>\n            </Switch>\n        </Box>\n    );\n}","import { Typography } from \"@mui/material\";\n\n\nexport default function Copyright() {\n    return (\n        <Typography\n            align=\"center\"\n            sx={{\n                backgroundColor: \"primary.dark\",\n                padding: 2,\n                color: \"primary.light\"\n            }}\n        >\n            &copy; Szymon Rykała 2021\n        </Typography>\n    );\n}","import { Grid, List, ListItem } from \"@mui/material\";\nimport React from \"react\";\nimport paths from \"../../shared/path\";\nimport AppLink from \"../../shared/components/AppLink\";\n\n\ninterface LinkListItem {\n    name: string,\n    link: string\n}\n\n\nconst linksList: LinkListItem[][] = [\n    [\n        { name: 'FAQ', link: paths.FAQ },\n        { name: 'Logowanie', link: paths.LOGIN },\n        { name: 'Rejestracja', link: paths.REGISTER },\n        { name: 'Aktywacja Konta', link: paths.ACTIVATE },\n\n    ],\n    [\n        { name: 'Home', link: paths.HOME },\n        { name: 'Profil', link: paths.MY_PROFILE },\n        { name: 'Zasoby', link: paths.INFRASTRUCTURE },\n    ]\n];\n\n\n\nexport default function Links() {\n\n    const links = React.useMemo(() =>\n        linksList.map((list, index) => <Grid key={index} item>\n            <List>\n                {list.map(({ name, link }) => <ListItem key={name}>\n                    <AppLink\n                        to={link}\n                        withIcon\n                        sx={{ color: 'background.default' }}\n                    >\n                        {name}\n                    </AppLink>\n                </ListItem>)}\n            </List>\n        </Grid>), []);\n\n    return (\n        <Grid\n            sx={{\n                backgroundColor: \"primary.main\",\n            }}\n\n            container\n            direction=\"row\"\n            justifyContent=\"space-evenly\"\n            alignItems=\"flex-start\"\n        >\n            {links}\n        </Grid>\n    );\n}\n","import {\n    Grid,\n} from \"@mui/material\";\n\nimport { Box } from \"@mui/system\";\n\nimport Copyright from \"./Copyrights\";\nimport Links from \"./Links\";\n\n\n\n\nexport default function Footer() {\n\n    return (\n        <Box >\n            <Grid container\n                direction=\"column\"\n                alignItems=\"stretch\"\n            >\n                <Grid item>\n                    <Links />\n                </Grid>\n                <Grid item>\n                    <Copyright />\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\n\n\n\n","import { List, ListItemButton, ListItemIcon, ListItemText, SvgIconTypeMap } from \"@mui/material\";\nimport HomeIcon from '@mui/icons-material/Home';\nimport AccountIcon from '@mui/icons-material/AccountCircle';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\nimport PeopleIcon from '@mui/icons-material/People';\n\nimport React from \"react\";\nimport Access from \"../../../models/Access\";\nimport paths from \"../../../shared/path\";\nimport AppLink from \"../../../shared/components/AppLink\";\nimport { OverridableComponent } from \"@mui/material/OverridableComponent\";\n\n\n\ninterface NavListItem {\n  label: string,\n  href: string,\n  icon: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>\n}\n\n\nconst navListItems: NavListItem[] = [\n  {\n    label: \"Panel Główny\",\n    href: paths.HOME,\n    icon: HomeIcon\n  }, {\n    label: \"Moje Konto\",\n    href: paths.MY_PROFILE,\n    icon: AccountIcon\n  }\n];\n\n\nconst settingsItem: NavListItem = {\n  label: 'Ustawienia Platformy',\n  href: paths.SETTINGS,\n  icon: SettingsIcon\n};\n\n\nconst accessLinkItem: NavListItem = {\n  label: 'Klasy dostępu',\n  href: paths.ACCESS,\n  icon: VerifiedUserIcon\n};\n\n\nconst usersLinkItem: NavListItem = {\n  label: 'Użytkownicy',\n  href: paths.USERS,\n  icon: PeopleIcon\n};\n\n\nexport default function MainDrawerList(props: { access?: Access }) {\n\n  const result = React.useMemo(() => {\n    let list = Object.assign([], navListItems) as NavListItem[];\n\n    list.push(usersLinkItem);\n    list.push(accessLinkItem);\n    list.push(settingsItem);\n\n    return list;\n  }, []);\n\n\n  return (\n    <List>\n      {\n        result.map((item, key) => (\n          <ListItemButton key={key} component=\"li\">\n            <ListItemIcon color=\"primary\">\n              {<item.icon color='primary' />}\n            </ListItemIcon>\n            <ListItemText primary={<AppLink color='text.primary' to={item.href}>{item.label}</AppLink>} />\n          </ListItemButton>\n        ))\n      }\n    </List>\n  );\n}","import { Box } from \"@mui/material\";\n\n\ninterface DrawerPanelProps {\n    children: React.ReactNode,\n    toggleOpen: any,\n}\n\n\nexport default function DrawerPanel({\n    children,\n    toggleOpen\n}: DrawerPanelProps) {\n    return (\n        <Box\n            sx={{ width: 320 }}\n            role=\"presentation\"\n            onClick={toggleOpen}\n            onKeyDown={toggleOpen}\n        >\n            {children}\n        </Box>\n    );\n}","import { Avatar, Link, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { SessionUser } from \"../../../models/User\";\nimport ImageService from \"../../../services/ImageService\";\n\n\ninterface AvatarViewProps {\n    user: SessionUser | null,\n}\n\n\nexport default function AvatarView({\n    user\n}: AvatarViewProps) {\n    return (\n        <Box\n            onClick={(ev) => ev.stopPropagation()}\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                padding: 2,\n                color: 'primary.dark'\n            }}\n        >\n            <Avatar\n                alt={`${user?.name} ${user?.surname}`}\n                src={ImageService.getLink(user?.image)}\n                sx={{\n                    width: '120px',\n                    height: '120px',\n                    fontSize: '36px',\n                    mt: 2,\n                    mb: 2,\n                }}\n            />\n            <Typography>\n                {user?.name}&nbsp;{user?.surname}\n            </Typography>\n            <Typography>\n                <Link href={`mailto:${user?.email}`}>\n                    {user?.email}\n                </Link>\n            </Typography>\n        </Box>\n    );\n}","import { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport { Box, Collapse, List, ListItem, ListItemButton, ListItemIcon, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport StorageService from \"../../../../services/StorageService\";\nimport AppLink from \"../../../../shared/components/AppLink\";\n\n\n\ninterface CallapsableListItemProps {\n    name: string,\n    href?: string\n    children: React.ReactNode,\n    icon?: React.ReactNode,\n    sx?: any\n}\n\n\nexport default function CollapseableListItem(props: CallapsableListItemProps) {\n    const [open, setOpen] = React.useState<boolean>(false);\n\n    const OPENED_NAME = React.useMemo(() => `${props.name}-nav-item`, [props.name]);\n\n    React.useEffect(() => {\n        setOpen(StorageService.read(OPENED_NAME));\n    }, [OPENED_NAME]);\n\n    const handleOpen = (ev: React.MouseEvent) => {\n        ev.stopPropagation()\n        StorageService.save(OPENED_NAME, !open);\n        setOpen(old => !old);\n    };\n\n    const label = props.href ? <AppLink to={props.href} sx={{ color: \"text.primary\" }}>{props.name}</AppLink> : props.name;\n\n    return (\n        <ListItem disablePadding component=\"li\" sx={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n            <ListItemButton sx={props.sx}>\n                {props.icon &&\n                    <ListItemIcon>\n                        {props.icon}\n                    </ListItemIcon>}\n                <ListItemText primary={label} />\n                <Box component=\"span\" onClick={handleOpen}>\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                </Box >\n            </ListItemButton>\n\n            <Collapse in={open} timeout=\"auto\" sx={props.sx}>\n                <List disablePadding>\n                    {props.children}\n                </List>\n            </Collapse>\n        </ListItem>\n    );\n}\n","import { Box, ListItemButton, ListItemIcon } from \"@mui/material\";\nimport { MapItem } from \"../../../../models/AddressMap\";\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport paths from \"../../../../shared/path\";\nimport AppLink from \"../../../../shared/components/AppLink\";\n\n\n\nexport default function RoomListItem(props: MapItem) {\n    return (\n        <ListItemButton component='li' >\n            <Box sx={{ width: '100%' }} component={AppLink} to={`${paths.HOME}${props.href}`}>\n                <ListItemIcon >\n                    <ArrowRightIcon />\n                </ListItemIcon>\n                {props.name}\n            </Box>\n        </ListItemButton>\n    );\n}\n","import BungalowIcon from '@mui/icons-material/Bungalow';\nimport MapIcon from '@mui/icons-material/Map';\nimport { List } from \"@mui/material\";\nimport { useResourceMap } from '../../../../contexts/ResourceMapContext';\nimport paths from '../../../../shared/path';\nimport CollapseableListItem from \"./CollapseableListItem\";\nimport RoomListItem from \"./RoomListItem\";\nimport React from 'react';\n\n\nexport default function ResourcesList() {\n    const { resourceMap } = useResourceMap();\n\n    const rendered = React.useMemo(() => {\n        return resourceMap?.map(({ id, name, href, buildings }) =>\n            <CollapseableListItem\n                key={id}\n                name={name}\n                href={`${paths.HOME}${href}`}\n                icon={<MapIcon color=\"primary\" />}\n                sx={{ width: '100%' }}\n            >\n                {buildings.map(({ id, name, href, rooms }) =>\n                    <CollapseableListItem\n                        key={id}\n                        name={name}\n                        href={`${paths.HOME}${href}`}\n                        icon={<BungalowIcon color=\"primary\" />}\n                        sx={{\n                            pl: 6,\n                            width: 'inherit',\n                            backgroundColor: 'background.default'\n                        }}\n                    >\n                        {rooms.map((roomEntry, key) => <RoomListItem key={key} {...roomEntry} />)}\n\n                    </CollapseableListItem>)}\n            </CollapseableListItem>)\n    }, [resourceMap]);\n\n    return (\n        <List>\n            {rendered}\n        </List>\n    );\n}\n\n\n","import ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport React from \"react\";\nimport { CreateAddressForm } from \"../../pages/protected/AddressPage/Forms\";\nimport AddIcon from '@mui/icons-material/Add';\n\n\n\nexport default function CreateAddressButton() {\n    const [formOpen, setFormOpen] = React.useState<boolean>(false);\n\n    const handleClick = React.useCallback((ev) => {\n        ev.stopPropagation();\n        setFormOpen(true);\n    }, []);\n\n    return (\n        <>\n            <CreateAddressForm\n                open={formOpen}\n                onClose={() => setFormOpen(false)}\n            />\n            <ListItem\n                component='div'\n                disablePadding\n                onClick={handleClick}\n                sx={{ color: 'primary.dark' }}>\n                <ListItemButton>\n                    <ListItemIcon>\n                        <AddIcon color='primary' />\n                    </ListItemIcon>\n                    Dodaj adres\n                </ListItemButton>\n            </ListItem>\n        </>\n    );\n}","import { Divider, Drawer, ListItem, ListItemText } from \"@mui/material\";\nimport React from \"react\";\nimport MainDrawerList from \"./MainDrawerList\";\nimport DrawerPanel from \"./DrawerPanel\";\nimport AvatarView from './AvatarView';\nimport useSession from \"../../../auth/useSession\";\nimport ResourcesList from \"./ResourcesList\";\nimport CreateAddressButton from \"./CreateAddressButton\";\n\n\ninterface AppDrawerProps {\n    open: boolean,\n    toggleOpen: any,\n}\n\nexport default function AppDrawer({ toggleOpen, open }: AppDrawerProps) {\n    const { user } = useSession();\n\n    return (\n        <Drawer\n            variant=\"temporary\"\n            ModalProps={{\n                keepMounted: true\n            }}\n            anchor=\"left\"\n            open={open}\n            onClose={toggleOpen}\n        >\n            <DrawerPanel toggleOpen={(toggleOpen)}>\n                <AvatarView user={user} />\n\n                <Divider />\n                <MainDrawerList access={user?.access} />\n\n                <Divider />\n                <ListItem\n                    onClick={(ev: React.MouseEvent) => ev.stopPropagation()}\n                    component=\"div\"\n                    sx={{ pb: 0, color: 'text.disabled' }}\n                >\n                    <ListItemText>\n                        Zasoby:\n                    </ListItemText>\n                </ListItem>\n                <ResourcesList />\n\n            </DrawerPanel>\n            <CreateAddressButton />\n        </Drawer>\n    );\n}\n","import { Menu, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport useSession from \"../../../auth/useSession\";\nimport paths from \"../../../shared/path\";\nimport AppLink from \"../../../shared/components/AppLink\";\n\n\n\ninterface AccountMenuProps {\n    trigger: null | HTMLElement,\n    handleClose: () => void\n}\n\nconst links = [\n    { name: \"Mój Profil\", link: paths.MY_PROFILE },\n    { name: \"Panel Główny\", link: paths.HOME },\n]\n\n\nexport default function AccountMenu({ trigger, handleClose }: AccountMenuProps) {\n    const { logout } = useSession();\n\n    const linksComp = React.useMemo(() => {\n        return links.map(({ name, link }, i) =>\n            <MenuItem key={i} onClick={handleClose}>\n                <AppLink to={link}>\n                    {name}\n                </AppLink>\n            </MenuItem>)\n    }, [handleClose]);\n\n\n    return (\n        <Menu\n            id=\"menu-appbar\"\n            anchorEl={trigger}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={Boolean(trigger)}\n            onClose={handleClose}\n        >\n            {linksComp}\n\n            <MenuItem onClick={() => {\n                handleClose();\n                logout();\n            }}>\n                Wyloguj\n            </MenuItem>\n        </Menu>\n    );\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\n\nimport AccountMenu from './AccountMenu';\nimport useSession from '../../../auth/useSession';\nimport { Avatar } from '@mui/material';\nimport paths from '../../../shared/path';\nimport ImageService from '../../../services/ImageService';\nimport AppLink from '../../../shared/components/AppLink';\n\n\ninterface NavigationBarProps {\n\ttoggleDrawer: any\n}\n\n\nexport default function NavigationBar(props: NavigationBarProps) {\n\tconst { user } = useSession();\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleMenu = React.useCallback((event: React.MouseEvent<HTMLElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t}, []);\n\n\tconst handleClose = React.useCallback(() => {\n\t\tsetAnchorEl(null);\n\t}, []);\n\n\treturn (\n\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={props.toggleDrawer}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\t\tsx={{ mr: 2, color: \"background.default\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuIcon color='inherit' />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\t\t\t\t\t<Typography variant=\"h4\" component=\"span\" sx={{\n\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\tfontFamily: \"Dancing Script, cursive\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<AppLink\n\t\t\t\t\t\t\tto={user ? paths.HOME : paths.PUBLIC}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\twidth: 'fit-content',\n\t\t\t\t\t\t\t\tcolor: 'background.default',\n\t\t\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\t\t\ttextDecoration: 'none'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRav System\n\t\t\t\t\t\t</AppLink>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\talt={user.name}\n\t\t\t\t\t\t\t\t\tsrc={ImageService.getLink(user.image)}\n\t\t\t\t\t\t\t\t\tsx={{ width: 42, height: 42 }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<AccountMenu\n\t\t\t\t\t\t\t\ttrigger={anchorEl}\n\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n}\n","import React from \"react\";\nimport AppDrawer from \"./Drawer\";\nimport NavigationBar from \"./NavigationBar\";\n\n\nexport default function Navigation() {\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst toggleDrawer = React.useCallback((\n\t\tevent: React.KeyboardEvent | React.MouseEvent,\n\t\tshouldWork: boolean = true\n\t) => {\n\t\tevent.stopPropagation();\n\t\tif (\n\t\t\tshouldWork &&\n\t\t\tevent.type === 'keydown' &&\n\t\t\t((event as React.KeyboardEvent).key === 'Tab' ||\n\t\t\t\t(event as React.KeyboardEvent).key === 'Shift')\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(old => !old);\n\t}, []);\n\n\treturn <>\n\t\t<NavigationBar toggleDrawer={toggleDrawer} />\n\t\t<AppDrawer\n\t\t\topen={open}\n\t\t\ttoggleOpen={toggleDrawer}\n\t\t/>\n\t</>\n}","import { Box, Container, CssBaseline } from '@mui/material';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n\nimport Theme from './shared/Theme';\nimport SessionProvider from './auth/sessionProvider'\nimport Tabs from './components/pages';\nimport Footer from './components/Footer';\nimport { BrowserRouter } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport NotificationContextProvider from './contexts/NotificationContext/NotificationContextProvider';\nimport { ResourceMapContextProvider } from './contexts/ResourceMapContext';\nimport Navigation from './components/Navigation';\n\n\n\nfunction App() {\n\treturn (\n\t\t<Theme>\n\t\t\t<LocalizationProvider dateAdapter={AdapterDateFns}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Box component=\"div\" className=\"App\" sx={{ backgroundColor: 'background.default' }}>\n\t\t\t\t\t<BrowserRouter basename={process.env.REACT_APP_BASE_URL}>\n\t\t\t\t\t\t<NotificationContextProvider>\n\t\t\t\t\t\t\t<SessionProvider >\n\t\t\t\t\t\t\t\t<ResourceMapContextProvider>\n\t\t\t\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t<Tabs />\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t\t\t</ResourceMapContextProvider>\n\t\t\t\t\t\t\t</SessionProvider>\n\t\t\t\t\t\t</NotificationContextProvider>\n\t\t\t\t\t</BrowserRouter>\n\t\t\t\t</Box>\n\t\t\t</LocalizationProvider>\n\t\t</Theme>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}